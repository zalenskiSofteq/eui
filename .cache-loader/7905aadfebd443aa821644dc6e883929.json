{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\modal\\confirm_modal.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\modal\\confirm_modal.tsx","mtime":1649070093707},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/modal/confirm_modal.tsx"],"names":["React","useEffect","useState","classnames","EuiModal","EuiModalFooter","EuiModalHeader","EuiModalHeaderTitle","EuiModalBody","EuiButton","EuiButtonEmpty","EuiText","CONFIRM_BUTTON","CANCEL_BUTTON","EuiConfirmModal","children","title","onCancel","onConfirm","cancelButtonText","confirmButtonText","confirmButtonDisabled","className","buttonColor","defaultFocusedButton","isLoading","rest","cancelButton","setCancelButton","confirmButton","setConfirmButton","requestAnimationFrame","focus","confirmRef","node","cancelRef","classes","modalTitle","message","length"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from \"prop-types\";\nimport classnames from 'classnames';\nimport { EuiModal } from './modal';\nimport { EuiModalFooter } from './modal_footer';\nimport { EuiModalHeader } from './modal_header';\nimport { EuiModalHeaderTitle } from './modal_header_title';\nimport { EuiModalBody } from './modal_body';\nimport { EuiButton, EuiButtonEmpty } from '../button';\nimport { EuiText } from '../text';\nexport var CONFIRM_BUTTON = 'confirm';\nexport var CANCEL_BUTTON = 'cancel';\nexport var EuiConfirmModal = ({\n  children,\n  title,\n  onCancel,\n  onConfirm,\n  cancelButtonText,\n  confirmButtonText,\n  confirmButtonDisabled,\n  className,\n  buttonColor = 'primary',\n  defaultFocusedButton,\n  isLoading,\n  ...rest\n}) => {\n  const [cancelButton, setCancelButton] = useState(null);\n  const [confirmButton, setConfirmButton] = useState(null);\n  useEffect(() => {\n    // We have to do this instead of using `autoFocus` because React's polyfill for auto-focusing\n    // elements conflicts with the focus-trap logic we have on EuiModal.\n    // Wait a beat for the focus-trap to complete, and then set focus to the right button. Check that\n    // the buttons exist first, because it's possible the modal has been closed already.\n    requestAnimationFrame(() => {\n      if (defaultFocusedButton === CANCEL_BUTTON && cancelButton) {\n        cancelButton.focus();\n      } else if (defaultFocusedButton === CONFIRM_BUTTON && confirmButton) {\n        confirmButton.focus();\n      }\n    });\n  });\n\n  const confirmRef = node => setConfirmButton(node);\n\n  const cancelRef = node => setCancelButton(node);\n\n  const classes = classnames('euiModal--confirmation', className);\n  let modalTitle;\n\n  if (title) {\n    modalTitle = <EuiModalHeader>\n        <EuiModalHeaderTitle data-test-subj=\"confirmModalTitleText\">\n          {title}\n        </EuiModalHeaderTitle>\n      </EuiModalHeader>;\n  }\n\n  let message;\n\n  if (typeof children === 'string' && children.length > 0) {\n    message = <p>{children}</p>;\n  } else {\n    message = children;\n  }\n\n  return <EuiModal className={classes} onClose={onCancel} {...rest}>\n      {modalTitle}\n\n      {message && <EuiModalBody>\n          <EuiText data-test-subj=\"confirmModalBodyText\">{message}</EuiText>\n        </EuiModalBody>}\n\n      <EuiModalFooter>\n        <EuiButtonEmpty data-test-subj=\"confirmModalCancelButton\" onClick={onCancel} buttonRef={cancelRef}>\n          {cancelButtonText}\n        </EuiButtonEmpty>\n\n        <EuiButton data-test-subj=\"confirmModalConfirmButton\" onClick={onConfirm} isLoading={isLoading} fill buttonRef={confirmRef} color={buttonColor} isDisabled={confirmButtonDisabled}>\n          {confirmButtonText}\n        </EuiButton>\n      </EuiModalFooter>\n    </EuiModal>;\n};\nEuiConfirmModal.propTypes = {\n  /**\n     * ReactNode to render as this component's content\n     */\n  children: PropTypes.node,\n  title: PropTypes.node,\n  cancelButtonText: PropTypes.node,\n  confirmButtonText: PropTypes.node,\n  onCancel: PropTypes.func.isRequired,\n  onConfirm: PropTypes.func,\n  confirmButtonDisabled: PropTypes.bool,\n  className: PropTypes.string,\n  defaultFocusedButton: PropTypes.oneOfType([PropTypes.any.isRequired, PropTypes.any.isRequired]),\n  buttonColor: PropTypes.oneOf([\"primary\", \"accent\", \"secondary\", \"success\", \"warning\", \"danger\", \"ghost\", \"text\"]),\n  // For docs only, will get passed with ...rest\n\n  /**\n     * Sets the max-width of the modal.\n     * Set to `true` to use the default (`euiBreakpoints 'm'`),\n     * set to `false` to not restrict the width,\n     * set to a number for a custom width in px,\n     * set to a string for a custom width in custom measurement.\n     */\n  maxWidth: PropTypes.oneOfType([PropTypes.bool.isRequired, PropTypes.number.isRequired, PropTypes.string.isRequired]),\n\n  /**\n     * Passes `isLoading` prop to the confirm button\n     */\n  isLoading: PropTypes.bool\n};\n\ntry {\n  EuiConfirmModal.__docgenInfo = {\n    description: '',\n    displayName: 'EuiConfirmModal',\n    methods: [],\n    props: {\n      children: {\n        defaultValue: null,\n        description: \"ReactNode to render as this component's content\",\n        name: 'children',\n        parent: {\n          fileName: 'eui/src/components/modal/confirm_modal.tsx',\n          name: 'EuiConfirmModalProps'\n        },\n        required: false,\n        type: {\n          name: 'ReactNode'\n        }\n      },\n      title: {\n        defaultValue: null,\n        description: '',\n        name: 'title',\n        parent: {\n          fileName: 'eui/src/components/modal/confirm_modal.tsx',\n          name: 'EuiConfirmModalProps'\n        },\n        required: false,\n        type: {\n          name: 'ReactNode'\n        }\n      },\n      cancelButtonText: {\n        defaultValue: null,\n        description: '',\n        name: 'cancelButtonText',\n        parent: {\n          fileName: 'eui/src/components/modal/confirm_modal.tsx',\n          name: 'EuiConfirmModalProps'\n        },\n        required: false,\n        type: {\n          name: 'ReactNode'\n        }\n      },\n      confirmButtonText: {\n        defaultValue: null,\n        description: '',\n        name: 'confirmButtonText',\n        parent: {\n          fileName: 'eui/src/components/modal/confirm_modal.tsx',\n          name: 'EuiConfirmModalProps'\n        },\n        required: false,\n        type: {\n          name: 'ReactNode'\n        }\n      },\n      onCancel: {\n        defaultValue: null,\n        description: '',\n        name: 'onCancel',\n        parent: {\n          fileName: 'eui/src/components/modal/confirm_modal.tsx',\n          name: 'EuiConfirmModalProps'\n        },\n        required: true,\n        type: {\n          name: '(event?: any) => void'\n        }\n      },\n      onConfirm: {\n        defaultValue: null,\n        description: '',\n        name: 'onConfirm',\n        parent: {\n          fileName: 'eui/src/components/modal/confirm_modal.tsx',\n          name: 'EuiConfirmModalProps'\n        },\n        required: false,\n        type: {\n          name: '(event: any) => void'\n        }\n      },\n      confirmButtonDisabled: {\n        defaultValue: null,\n        description: '',\n        name: 'confirmButtonDisabled',\n        parent: {\n          fileName: 'eui/src/components/modal/confirm_modal.tsx',\n          name: 'EuiConfirmModalProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/src/components/modal/confirm_modal.tsx',\n          name: 'EuiConfirmModalProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      defaultFocusedButton: {\n        defaultValue: null,\n        description: '',\n        name: 'defaultFocusedButton',\n        parent: {\n          fileName: 'eui/src/components/modal/confirm_modal.tsx',\n          name: 'EuiConfirmModalProps'\n        },\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"confirm\" | \"cancel\"',\n          value: [{\n            value: '\"confirm\"'\n          }, {\n            value: '\"cancel\"'\n          }]\n        }\n      },\n      buttonColor: {\n        defaultValue: {\n          value: 'primary'\n        },\n        description: '',\n        name: 'buttonColor',\n        parent: {\n          fileName: 'eui/src/components/modal/confirm_modal.tsx',\n          name: 'EuiConfirmModalProps'\n        },\n        required: false,\n        type: {\n          name: 'enum',\n          raw: 'ButtonColor',\n          value: [{\n            value: '\"text\"'\n          }, {\n            value: '\"accent\"'\n          }, {\n            value: '\"primary\"'\n          }, {\n            value: '\"success\"'\n          }, {\n            value: '\"warning\"'\n          }, {\n            value: '\"danger\"'\n          }, {\n            value: '\"secondary\"'\n          }, {\n            value: '\"ghost\"'\n          }]\n        }\n      },\n      maxWidth: {\n        defaultValue: null,\n        description: 'Sets the max-width of the modal.\\n' + \"Set to `true` to use the default (`euiBreakpoints 'm'`),\\n\" + 'set to `false` to not restrict the width,\\n' + 'set to a number for a custom width in px,\\n' + 'set to a string for a custom width in custom measurement.',\n        name: 'maxWidth',\n        parent: {\n          fileName: 'eui/src/components/modal/confirm_modal.tsx',\n          name: 'EuiConfirmModalProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean | number | string'\n        }\n      },\n      isLoading: {\n        defaultValue: null,\n        description: 'Passes `isLoading` prop to the confirm button',\n        name: 'isLoading',\n        parent: {\n          fileName: 'eui/src/components/modal/confirm_modal.tsx',\n          name: 'EuiConfirmModalProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: 'Defines a string value that labels the current element.\\n' + '@see aria-labelledby.',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/node_modules/@types/react/index.d.ts',\n          name: 'AriaAttributes'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      }\n    },\n    extendedInterfaces: ['EuiConfirmModalProps', 'HTMLAttributes', 'AriaAttributes', 'DOMAttributes']\n  };\n} catch (e) {}"]}]}