{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\markdown_editor\\plugins\\markdown_checkbox.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\markdown_editor\\plugins\\markdown_checkbox.tsx","mtime":1649070093703},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/markdown_editor/plugins/markdown_checkbox.tsx"],"names":["React","useContext","EuiCheckbox","EuiMarkdownContext","htmlIdGenerator","CheckboxParser","Parser","tokenizers","prototype","blockTokenizers","methods","blockMethods","tokenizeCheckbox","eat","value","silent","checkboxMatch","match","lead","checkboxStatus","text","isChecked","indexOf","now","offset","length","column","children","tokenizeInline","type","label","checkbox","splice","CheckboxMarkdownRenderer","position","replaceNode","parser","renderer"],"mappings":"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","sourcesContent":["function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nimport PropTypes from \"prop-types\";\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nimport React, { useContext } from 'react';\nimport { EuiCheckbox } from '../../form/checkbox';\nimport { EuiMarkdownContext } from '../markdown_context';\nimport { htmlIdGenerator } from '../../../services/accessibility';\n\nvar CheckboxParser = function CheckboxParser() {\n  var Parser = this.Parser;\n  var tokenizers = Parser.prototype.blockTokenizers;\n  var methods = Parser.prototype.blockMethods;\n\n  var tokenizeCheckbox = function tokenizeCheckbox(eat, value, silent) {\n    /**\n     * optional leading whitespace & single (dash or asterisk) mix\n     * square brackets, optionally containing whitespace and `x`\n     * optional whitespace\n     * remainder of the line is consumed as the textbox label\n     */\n    var checkboxMatch = value.match(/^(\\s*[-*]\\s*)?\\[([\\sx]*)\\](.+)/);\n    if (checkboxMatch == null) return false;\n\n    if (silent) {\n      return true;\n    }\n\n    var _checkboxMatch = _slicedToArray(checkboxMatch, 4),\n        match = _checkboxMatch[0],\n        _checkboxMatch$ = _checkboxMatch[1],\n        lead = _checkboxMatch$ === void 0 ? '' : _checkboxMatch$,\n        checkboxStatus = _checkboxMatch[2],\n        text = _checkboxMatch[3];\n\n    var isChecked = checkboxStatus.indexOf('x') !== -1;\n    var now = eat.now();\n    var offset = match.length - text.length;\n    now.column += offset;\n    now.offset += offset;\n    var children = this.tokenizeInline(text, now);\n    return eat(match)({\n      type: 'checkboxPlugin',\n      lead: lead,\n      label: text,\n      isChecked: isChecked,\n      children: children\n    });\n  };\n\n  tokenizers.checkbox = tokenizeCheckbox;\n  methods.splice(methods.indexOf('list'), 0, 'checkbox'); // Run it just before default `list` plugin to inject our own idea of checkboxes.\n};\n\nvar CheckboxMarkdownRenderer = ({\n  position,\n  lead,\n  label,\n  isChecked,\n  children\n}) => {\n  const {\n    replaceNode\n  } = useContext(EuiMarkdownContext);\n  return <EuiCheckbox id={htmlIdGenerator()()} checked={isChecked} label={children} onChange={() => {\n    replaceNode(position, `${lead}[${isChecked ? ' ' : 'x'}]${label}`);\n  }} />;\n};\n\nCheckboxMarkdownRenderer.propTypes = {\n  type: PropTypes.oneOf([\"checkboxPlugin\"]).isRequired,\n  lead: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  isChecked: PropTypes.bool.isRequired,\n  position: PropTypes.shape({\n    start: PropTypes.shape({\n      line: PropTypes.number.isRequired,\n      column: PropTypes.number.isRequired,\n      offset: PropTypes.number.isRequired\n    }).isRequired,\n    end: PropTypes.shape({\n      line: PropTypes.number.isRequired,\n      column: PropTypes.number.isRequired,\n      offset: PropTypes.number.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport { CheckboxParser as parser, CheckboxMarkdownRenderer as renderer };\n\ntry {\n  CheckboxMarkdownRenderer.__docgenInfo = {\n    description: '',\n    displayName: 'CheckboxMarkdownRenderer',\n    methods: [],\n    props: {\n      type: {\n        defaultValue: null,\n        description: '',\n        name: 'type',\n        parent: {\n          fileName: 'eui/src/components/markdown_editor/plugins/markdown_checkbox.tsx',\n          name: 'CheckboxNodeDetails'\n        },\n        required: true,\n        type: {\n          name: '\"checkboxPlugin\"'\n        }\n      },\n      lead: {\n        defaultValue: null,\n        description: '',\n        name: 'lead',\n        parent: {\n          fileName: 'eui/src/components/markdown_editor/plugins/markdown_checkbox.tsx',\n          name: 'CheckboxNodeDetails'\n        },\n        required: true,\n        type: {\n          name: 'string'\n        }\n      },\n      label: {\n        defaultValue: null,\n        description: '',\n        name: 'label',\n        parent: {\n          fileName: 'eui/src/components/markdown_editor/plugins/markdown_checkbox.tsx',\n          name: 'CheckboxNodeDetails'\n        },\n        required: true,\n        type: {\n          name: 'string'\n        }\n      },\n      isChecked: {\n        defaultValue: null,\n        description: '',\n        name: 'isChecked',\n        parent: {\n          fileName: 'eui/src/components/markdown_editor/plugins/markdown_checkbox.tsx',\n          name: 'CheckboxNodeDetails'\n        },\n        required: true,\n        type: {\n          name: 'boolean'\n        }\n      },\n      position: {\n        defaultValue: null,\n        description: '',\n        name: 'position',\n        parent: undefined,\n        required: true,\n        type: {\n          name: 'EuiMarkdownAstNodePosition'\n        }\n      }\n    },\n    extendedInterfaces: ['CheckboxNodeDetails']\n  };\n} catch (e) {}"]}]}