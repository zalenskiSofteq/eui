{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\page\\page_body\\page_body.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\page\\page_body\\page_body.tsx","mtime":1649070093721},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/page/page_body/page_body.tsx"],"names":["React","classNames","keysOf","setPropsForRestrictedPageWidth","EuiPanel","paddingSizeToClassNameMap","none","s","m","l","PADDING_SIZES","EuiPageBody","children","restrictWidth","style","className","component","Component","panelled","panelProps","paddingSize","borderRadius","rest","widthClassName","newStyle","nonBreakingDefaultPadding","borderRadiusClass","classes"],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAwE,OAAxE;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAAsBC,MAAtB,QAAoC,cAApC;AACA,SAEEC,8BAFF,QAGO,oBAHP;AAIA,SAASC,QAAT,QAAwC,aAAxC;AAEA,IAAMC,yBAAyB,GAAG;AAChCC,EAAAA,IAAI,EAAE,IAD0B;AAEhCC,EAAAA,CAAC,EAAE,2BAF6B;AAGhCC,EAAAA,CAAC,EAAE,4BAH6B;AAIhCC,EAAAA,CAAC,EAAE;AAJ6B,CAAlC;AAOA,OAAO,IAAMC,aAAa,GAAGR,MAAM,CAACG,yBAAD,CAA5B;AAyBP,OAAO,IAAMM,WAAW,GAAG,SAAdA,WAAc,OAWmB;AAAA,MAV5CC,QAU4C,QAV5CA,QAU4C;AAAA,gCAT5CC,aAS4C;AAAA,MAT5CA,aAS4C,mCAT5B,KAS4B;AAAA,MAR5CC,KAQ4C,QAR5CA,KAQ4C;AAAA,MAP5CC,SAO4C,QAP5CA,SAO4C;AAAA,4BAN5CC,SAM4C;AAAA,MANjCC,SAMiC,+BANrB,KAMqB;AAAA,MAL5CC,QAK4C,QAL5CA,QAK4C;AAAA,MAJ5CC,UAI4C,QAJ5CA,UAI4C;AAAA,MAH5CC,WAG4C,QAH5CA,WAG4C;AAAA,+BAF5CC,YAE4C;AAAA,MAF5CA,YAE4C,kCAF7B,MAE6B;AAAA,MADzCC,IACyC;;AAAA,8BACPnB,8BAA8B,CACjEU,aADiE,EAEjEC,KAFiE,CADvB;AAAA,MACpCS,cADoC,yBACpCA,cADoC;AAAA,MACpBC,QADoB,yBACpBA,QADoB;;AAM5C,MAAMC,yBAAyB,GAAGP,QAAQ,GAAG,GAAH,GAAS,MAAnD;AACAE,EAAAA,WAAW,GAAGA,WAAW,IAAIK,yBAA7B;AAEA,MAAMC,iBAAiB,GACrBL,YAAY,KAAK,MAAjB,GAA0B,+BAA1B,GAA4D,EAD9D;AAGA,MAAMM,OAAO,GAAG1B,UAAU,CACxB,aADwB,EAExByB,iBAFwB,EAGxB;AACArB,EAAAA,yBAAyB,CAACe,WAAD,CAJD,6CAMLG,cANK,GAMcA,cANd,GAQxBR,SARwB,CAA1B;AAWA,SAAOG,QAAQ,gBACb,oBAAC,QAAD;AACE,IAAA,SAAS,EAAES,OADb;AAEE,IAAA,KAAK,EAAEH,QAAQ,IAAIV,KAFrB;AAGE,IAAA,YAAY,EAAEO,YAHhB;AAIE,IAAA,WAAW,EAAED;AAJf,KAKMD,UALN,EAMMG,IANN,GAOGV,QAPH,CADa,gBAWb,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEe,OAAtB;AAA+B,IAAA,KAAK,EAAEH,QAAQ,IAAIV;AAAlD,KAA6DQ,IAA7D,GACGV,QADH,CAXF;AAeD,CAjDM","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { PropsWithChildren, ComponentType, ComponentProps } from 'react';\nimport classNames from 'classnames';\nimport { CommonProps, keysOf } from '../../common';\nimport {\n  _EuiPageRestrictWidth,\n  setPropsForRestrictedPageWidth,\n} from '../_restrict_width';\nimport { EuiPanel, EuiPanelProps } from '../../panel';\n\nconst paddingSizeToClassNameMap = {\n  none: null,\n  s: 'euiPageBody--paddingSmall',\n  m: 'euiPageBody--paddingMedium',\n  l: 'euiPageBody--paddingLarge',\n};\n\nexport const PADDING_SIZES = keysOf(paddingSizeToClassNameMap);\n\ntype ComponentTypes = keyof JSX.IntrinsicElements | ComponentType<any>;\n\nexport type EuiPageBodyProps<T extends ComponentTypes = 'main'> = CommonProps &\n  ComponentProps<T> &\n  _EuiPageRestrictWidth & {\n    /**\n     * Sets the HTML element for `EuiPageBody`.\n     */\n    component?: T;\n    /**\n     * Uses an EuiPanel as the main component instead of a plain div\n     */\n    panelled?: boolean;\n    /**\n     * Extends any extra EuiPanel props if `panelled=true`\n     */\n    panelProps?: Omit<EuiPanelProps, 'paddingSize'>;\n    /**\n     * Adjusts the padding\n     */\n    paddingSize?: typeof PADDING_SIZES[number];\n  };\n\nexport const EuiPageBody = <T extends ComponentTypes>({\n  children,\n  restrictWidth = false,\n  style,\n  className,\n  component: Component = 'div' as T,\n  panelled,\n  panelProps,\n  paddingSize,\n  borderRadius = 'none',\n  ...rest\n}: PropsWithChildren<EuiPageBodyProps<T>>) => {\n  const { widthClassName, newStyle } = setPropsForRestrictedPageWidth(\n    restrictWidth,\n    style\n  );\n\n  const nonBreakingDefaultPadding = panelled ? 'l' : 'none';\n  paddingSize = paddingSize || nonBreakingDefaultPadding;\n\n  const borderRadiusClass =\n    borderRadius === 'none' ? 'euiPageBody--borderRadiusNone' : '';\n\n  const classes = classNames(\n    'euiPageBody',\n    borderRadiusClass,\n    // This may duplicate the padding styles from EuiPanel, but allows for some nested configurations in the CSS\n    paddingSizeToClassNameMap[paddingSize as typeof PADDING_SIZES[number]],\n    {\n      [`euiPageBody--${widthClassName}`]: widthClassName,\n    },\n    className\n  );\n\n  return panelled ? (\n    <EuiPanel\n      className={classes}\n      style={newStyle || style}\n      borderRadius={borderRadius}\n      paddingSize={paddingSize}\n      {...panelProps}\n      {...rest}>\n      {children}\n    </EuiPanel>\n  ) : (\n    <Component className={classes} style={newStyle || style} {...rest}>\n      {children}\n    </Component>\n  );\n};\n"]}]}