{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src-docs\\src\\views\\tables\\expanding_rows\\expanding_rows_section.js","dependencies":[{"path":"D:\\work\\eui\\src-docs\\src\\views\\tables\\expanding_rows\\expanding_rows_section.js","mtime":1649070093253},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0IHsgRXVpQmFzaWNUYWJsZSwgRXVpQ29kZSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzJzsKaW1wb3J0IHsgR3VpZGVTZWN0aW9uVHlwZXMgfSBmcm9tICcuLi8uLi8uLi9jb21wb25lbnRzJzsKaW1wb3J0IHsgcmVuZGVyVG9IdG1sIH0gZnJvbSAnLi4vLi4vLi4vc2VydmljZXMnOwppbXBvcnQgeyBUYWJsZSB9IGZyb20gJy4vZXhwYW5kaW5nX3Jvd3MnOwoKdmFyIHNvdXJjZSA9IHJlcXVpcmUoJyEhcmF3LWxvYWRlciEuL2V4cGFuZGluZ19yb3dzJyk7Cgp2YXIgaHRtbCA9IHJlbmRlclRvSHRtbChUYWJsZSk7CmV4cG9ydCB2YXIgc2VjdGlvbiA9IHsKICB0aXRsZTogJ0V4cGFuZGluZyByb3dzJywKICBzb3VyY2U6IFt7CiAgICB0eXBlOiBHdWlkZVNlY3Rpb25UeXBlcy5KUywKICAgIGNvZGU6IHNvdXJjZQogIH0sIHsKICAgIHR5cGU6IEd1aWRlU2VjdGlvblR5cGVzLkhUTUwsCiAgICBjb2RlOiBodG1sCiAgfV0sCiAgdGV4dDogLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoInAiLCBudWxsLCAiWW91IGNhbiBleHBhbmQgcm93cyBieSBwYXNzaW5nIGluIGEiLCAnICcsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEV1aUNvZGUsIG51bGwsICJpdGVtSWRUb0V4cGFuZGVkUm93TWFwIiksICIgcHJvcCB3aGljaCB3aWxsIGNvbnRhaW4gdGhlIGNvbnRlbnQgeW91IHdhbnQgcmVuZGVyZWQgaW5zaWRlIHRoZSBleHBhbmRlZCByb3cuIFdoZW4gYnVpbGRpbmcgb3V0IHlvdXIgdGFibGUgbWFudWFsbHkgKG5vdCB1c2luZyBFdWlCYXNpY1RhYmxlKSwgeW91IHdpbGwgYWxzbyBuZWVkIHRvIGFkZCB0aGUgcHJvcCAiLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlDb2RlLCBudWxsLCAiaXNFeHBhbmRlZFJvdyIpLCAiIHRvIHRoZSByb3cgdGhhdCB3aWxsIGJlIHJldmVhbGVkLiIpLAogIGNvbXBvbmVudHM6IHsKICAgIEV1aUJhc2ljVGFibGU6IEV1aUJhc2ljVGFibGUKICB9LAogIGRlbW86IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFRhYmxlLCBudWxsKQp9Ow=="},{"version":3,"sources":["D:/work/eui/src-docs/src/views/tables/expanding_rows/expanding_rows_section.js"],"names":["React","EuiBasicTable","EuiCode","GuideSectionTypes","renderToHtml","Table","source","require","html","section","title","type","JS","code","HTML","text","components","demo"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,OAAxB,QAAuC,+BAAvC;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,YAAT,QAA6B,mBAA7B;AAEA,SAASC,KAAT,QAAsB,kBAAtB;;AACA,IAAMC,MAAM,GAAGC,OAAO,CAAC,+BAAD,CAAtB;;AACA,IAAMC,IAAI,GAAGJ,YAAY,CAACC,KAAD,CAAzB;AAEA,OAAO,IAAMI,OAAO,GAAG;AACrBC,EAAAA,KAAK,EAAE,gBADc;AAErBJ,EAAAA,MAAM,EAAE,CACN;AACEK,IAAAA,IAAI,EAAER,iBAAiB,CAACS,EAD1B;AAEEC,IAAAA,IAAI,EAAEP;AAFR,GADM,EAKN;AACEK,IAAAA,IAAI,EAAER,iBAAiB,CAACW,IAD1B;AAEED,IAAAA,IAAI,EAAEL;AAFR,GALM,CAFa;AAYrBO,EAAAA,IAAI,eACF,sEACsC,GADtC,eAEE,oBAAC,OAAD,iCAFF,uMAKO,oBAAC,OAAD,wBALP,uCAbmB;AAqBrBC,EAAAA,UAAU,EAAE;AAAEf,IAAAA,aAAa,EAAbA;AAAF,GArBS;AAsBrBgB,EAAAA,IAAI,eAAE,oBAAC,KAAD;AAtBe,CAAhB","sourcesContent":["import React from 'react';\nimport { EuiBasicTable, EuiCode } from '../../../../../src/components';\nimport { GuideSectionTypes } from '../../../components';\nimport { renderToHtml } from '../../../services';\n\nimport { Table } from './expanding_rows';\nconst source = require('!!raw-loader!./expanding_rows');\nconst html = renderToHtml(Table);\n\nexport const section = {\n  title: 'Expanding rows',\n  source: [\n    {\n      type: GuideSectionTypes.JS,\n      code: source,\n    },\n    {\n      type: GuideSectionTypes.HTML,\n      code: html,\n    },\n  ],\n  text: (\n    <p>\n      You can expand rows by passing in a{' '}\n      <EuiCode>itemIdToExpandedRowMap</EuiCode> prop which will contain the\n      content you want rendered inside the expanded row. When building out your\n      table manually (not using EuiBasicTable), you will also need to add the\n      prop <EuiCode>isExpandedRow</EuiCode> to the row that will be revealed.\n    </p>\n  ),\n  components: { EuiBasicTable },\n  demo: <Table />,\n};\n"]}]}