{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\modal\\modal.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\modal\\modal.tsx","mtime":1649070093708},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/modal/modal.tsx"],"names":["React","classnames","keys","EuiButtonIcon","EuiFocusTrap","EuiOverlayMask","EuiI18n","EuiModal","className","children","initialFocus","onClose","maxWidth","style","rest","onKeyDown","event","key","ESCAPE","preventDefault","stopPropagation","newStyle","widthClassName","value","classes","closeModal"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAoE,OAApE;;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,IAAT,QAAqB,gBAArB;AAEA,SAASC,aAAT,QAA8B,WAA9B;AAEA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SAASC,OAAT,QAAwB,SAAxB;AA4BA,OAAO,IAAMC,QAA0C,GAAG,SAA7CA,QAA6C,OAQpD;AAAA,MAPJC,SAOI,QAPJA,SAOI;AAAA,MANJC,QAMI,QANJA,QAMI;AAAA,MALJC,YAKI,QALJA,YAKI;AAAA,MAJJC,OAII,QAJJA,OAII;AAAA,2BAHJC,QAGI;AAAA,MAHJA,QAGI,8BAHO,IAGP;AAAA,MAFJC,KAEI,QAFJA,KAEI;AAAA,MADDC,IACC;;AACJ,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAgD;AAChE,QAAIA,KAAK,CAACC,GAAN,KAAcf,IAAI,CAACgB,MAAvB,EAA+B;AAC7BF,MAAAA,KAAK,CAACG,cAAN;AACAH,MAAAA,KAAK,CAACI,eAAN;AACAT,MAAAA,OAAO,CAACK,KAAD,CAAP;AACD;AACF,GAND;;AAQA,MAAIK,QAAJ;AACA,MAAIC,cAAJ;;AACA,MAAIV,QAAQ,KAAK,IAAjB,EAAuB;AACrBU,IAAAA,cAAc,GAAG,4BAAjB;AACD,GAFD,MAEO,IAAIV,QAAQ,KAAK,KAAjB,EAAwB;AAC7B,QAAMW,KAAK,GAAG,OAAOX,QAAP,KAAoB,QAApB,aAAkCA,QAAlC,UAAiDA,QAA/D;AACAS,IAAAA,QAAQ,mCAAQR,KAAR;AAAeD,MAAAA,QAAQ,EAAEW;AAAzB,MAAR;AACD;;AAED,MAAMC,OAAO,GAAGvB,UAAU,CAAC,UAAD,EAAaqB,cAAb,EAA6Bd,SAA7B,CAA1B;AAEA,sBACE,oBAAC,cAAD,qBACE,oBAAC,YAAD;AAAc,IAAA,YAAY,EAAEE;AAA5B,kBAKE;AACE,IAAA,SAAS,EAAEc,OADb;AAEE,IAAA,SAAS,EAAET,SAFb;AAGE,IAAA,QAAQ,EAAE,CAHZ;AAIE,IAAA,KAAK,EAAEM,QAAQ,IAAIR;AAJrB,KAKMC,IALN,gBAME,oBAAC,OAAD;AACE,IAAA,KAAK,EAAC,qBADR;AAEE,IAAA,OAAO,EAAC;AAFV,KAGG,UAACW,UAAD;AAAA,wBACC,oBAAC,aAAD;AACE,MAAA,QAAQ,EAAC,OADX;AAEE,MAAA,OAAO,EAAEd,OAFX;AAGE,MAAA,SAAS,EAAC,qBAHZ;AAIE,MAAA,KAAK,EAAC,MAJR;AAKE,oBAAYc;AALd,MADD;AAAA,GAHH,CANF,eAmBE;AAAK,IAAA,SAAS,EAAC;AAAf,KAAiChB,QAAjC,CAnBF,CALF,CADF,CADF;AA+BD,CA3DM;;;;;AAxDP;AACA;;;;;AADA;AACA;AACA;AACA;AACA;AACA;;;;AALA;AACA;AACA","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport classnames from 'classnames';\nimport { keys } from '../../services';\nimport { EuiButtonIcon } from '../button';\nimport { EuiFocusTrap } from '../focus_trap';\nimport { EuiOverlayMask } from '../overlay_mask';\nimport { EuiI18n } from '../i18n';\nexport var EuiModal = ({\n  className,\n  children,\n  initialFocus,\n  onClose,\n  maxWidth = true,\n  style,\n  ...rest\n}) => {\n  const onKeyDown = event => {\n    if (event.key === keys.ESCAPE) {\n      event.preventDefault();\n      event.stopPropagation();\n      onClose(event);\n    }\n  };\n\n  let newStyle;\n  let widthClassName;\n\n  if (maxWidth === true) {\n    widthClassName = 'euiModal--maxWidth-default';\n  } else if (maxWidth !== false) {\n    const value = typeof maxWidth === 'number' ? `${maxWidth}px` : maxWidth;\n    newStyle = { ...style,\n      maxWidth: value\n    };\n  }\n\n  const classes = classnames('euiModal', widthClassName, className);\n  return <EuiOverlayMask>\n      <EuiFocusTrap initialFocus={initialFocus}>\n        {// Create a child div instead of applying these props directly to FocusTrap, or else\n        // fallbackFocus won't work.\n      }\n        <div className={classes} onKeyDown={onKeyDown} tabIndex={0} style={newStyle || style} {...rest}>\n          <EuiI18n token=\"euiModal.closeModal\" default=\"Closes this modal window\">\n            {closeModal => <EuiButtonIcon iconType=\"cross\" onClick={onClose} className=\"euiModal__closeIcon\" color=\"text\" aria-label={closeModal} />}\n          </EuiI18n>\n          <div className=\"euiModal__flex\">{children}</div>\n        </div>\n      </EuiFocusTrap>\n    </EuiOverlayMask>;\n};\nEuiModal.propTypes = {\n  className: PropTypes.string,\n\n  /**\n     * ReactNode to render as this component's content\n     */\n  children: PropTypes.node.isRequired,\n  onClose: PropTypes.func.isRequired,\n\n  /**\n     * Sets the max-width of the modal.\n     * Set to `true` to use the default (`euiBreakpoints 'm'`),\n     * set to `false` to not restrict the width,\n     * set to a number for a custom width in px,\n     * set to a string for a custom width in custom measurement.\n     */\n  maxWidth: PropTypes.oneOfType([PropTypes.bool.isRequired, PropTypes.number.isRequired, PropTypes.string.isRequired]),\n\n  /**\n     * Specifies what element should initially have focus.\n     * Can be a DOM node, or a selector string (which will be passed to document.querySelector() to find the DOM node), or a function that returns a DOM node.\n     */\n  initialFocus: PropTypes.oneOfType([PropTypes.any.isRequired, PropTypes.func.isRequired, PropTypes.string.isRequired])\n};\n\ntry {\n  EuiModal.__docgenInfo = {\n    description: '',\n    displayName: 'EuiModal',\n    methods: [],\n    props: {\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/src/components/modal/modal.tsx',\n          name: 'EuiModalProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      children: {\n        defaultValue: null,\n        description: \"ReactNode to render as this component's content\",\n        name: 'children',\n        parent: {\n          fileName: 'eui/src/components/modal/modal.tsx',\n          name: 'EuiModalProps'\n        },\n        required: true,\n        type: {\n          name: 'ReactNode'\n        }\n      },\n      onClose: {\n        defaultValue: null,\n        description: '',\n        name: 'onClose',\n        parent: {\n          fileName: 'eui/src/components/modal/modal.tsx',\n          name: 'EuiModalProps'\n        },\n        required: true,\n        type: {\n          name: '(event?: any) => void'\n        }\n      },\n      maxWidth: {\n        defaultValue: {\n          value: 'true'\n        },\n        description: 'Sets the max-width of the modal.\\n' + \"Set to `true` to use the default (`euiBreakpoints 'm'`),\\n\" + 'set to `false` to not restrict the width,\\n' + 'set to a number for a custom width in px,\\n' + 'set to a string for a custom width in custom measurement.',\n        name: 'maxWidth',\n        parent: {\n          fileName: 'eui/src/components/modal/modal.tsx',\n          name: 'EuiModalProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean | number | string'\n        }\n      },\n      initialFocus: {\n        defaultValue: null,\n        description: 'Specifies what element should initially have focus.\\n' + 'Can be a DOM node, or a selector string (which will be passed to document.querySelector() to find the DOM node), or a function that returns a DOM node.',\n        name: 'initialFocus',\n        parent: {\n          fileName: 'eui/src/components/modal/modal.tsx',\n          name: 'EuiModalProps'\n        },\n        required: false,\n        type: {\n          name: 'string | HTMLElement | (() => HTMLElement)'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: 'Defines a string value that labels the current element.\\n' + '@see aria-labelledby.',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/node_modules/@types/react/index.d.ts',\n          name: 'AriaAttributes'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      }\n    },\n    extendedInterfaces: ['EuiModalProps', 'HTMLAttributes', 'AriaAttributes', 'DOMAttributes']\n  };\n} catch (e) {}"]}]}