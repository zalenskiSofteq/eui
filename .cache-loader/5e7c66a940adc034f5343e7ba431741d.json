{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\datagrid\\data_grid.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\datagrid\\data_grid.tsx","mtime":1649070093363},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/datagrid/data_grid.tsx"],"names":["React","useCallback","useState","useEffect","Fragment","useMemo","useRef","classNames","tabbable","EuiI18n","useEuiI18n","EuiButtonEmpty","keys","htmlIdGenerator","EuiDataGridBody","VIRTUALIZED_CONTAINER_CLASS","useDataGridColumnSelector","useDataGridStyleSelector","startingStyles","EuiTablePagination","EuiFocusTrap","useResizeObserver","EuiDataGridInMemoryRenderer","useMergedSchema","useDetectSchema","schemaDetectors","providedSchemaDetectors","DataGridFocusContext","DataGridSortingContext","useDataGridColumnSorting","RowHeightUtils","IS_JEST_ENVIRONMENT","global","hasOwnProperty","MINIMUM_WIDTH_FOR_GRID_CONTROLS","fontSizesToClassMap","s","m","l","headerToClassMap","shade","underline","footerToClassMap","overline","striped","rowHoverToClassMap","highlight","none","bordersToClassMap","all","horizontal","cellPaddingsToClassMap","computeVisibleRows","props","pagination","rowCount","startRow","pageIndex","pageSize","endRow","Math","min","renderPagination","controls","pageSizeOptions","onChangePage","onChangeItemsPerPage","pageCount","ceil","minSizeOption","sort","a","b","hidePerPageOptions","length","label","ariaLabelGridPagination","ariaLabelledByGridPagination","accessibleName","useVirtualizeContainerWidth","resizeRef","virtualizeContainerWidth","setVirtualizeContainerWidth","virtualizeContainer","getElementsByClassName","clientWidth","setTimeout","containerWidth","useDefaultColumnWidth","gridWidth","leadingControlColumns","trailingControlColumns","columns","computeDefaultWidth","controlColumnWidths","reduce","claimedWidth","controlColumn","width","columnsWithWidths","filter","doesColumnHaveAnInitialWidth","definedColumnsWidth","column","initialWidth","widthToFill","unsizedColumnCount","max","defaultColumnWidth","setDefaultColumnWidth","columnWidth","useColumnWidths","onColumnResize","hasMounted","computeColumnWidths","initialWidths","id","columnWidths","setColumnWidths","current","setColumnWidth","columnId","useInMemoryValues","inMemory","_inMemoryValues","inMemoryValuesVersion","setInMemoryValuesVersion","inMemoryValues","onCellRender","rowIndex","value","nextInMemoryValues","version","inMemoryLevel","level","resetRunCount","existingRowKeyCount","Object","i","createKeyDownHandler","contentElement","visibleColumns","focusedCell","headerIsInteractive","setFocusedCell","event","contains","document","activeElement","colCount","x","y","key","ctrlKey","ARROW_DOWN","preventDefault","renderFooterCellValue","ARROW_LEFT","ARROW_UP","minimumIndex","ARROW_RIGHT","PAGE_DOWN","PAGE_UP","END","HOME","useFocus","cellsUpdateFocus","undefined","previousCell","notifyCellOfFocusState","hasHadFocus","focusProps","tabIndex","onFocus","e","target","currentTarget","objectHasKey","object","checkOrDefaultToolBarDiplayOptions","arg","option","cell","isFocused","get","emptyArrayDefault","EuiDataGrid","columnVisibility","renderCellValue","className","gridStyle","toolbarVisibility","sorting","popoverContents","minSizeForControls","height","rowHeightsOptions","rest","isFullScreen","setIsFullScreen","setGridWidth","interactiveCellId","setHeaderIsInteractive","Map","wrappingDivFocusProps","focusedCellReference","handleHeaderChange","headerRow","tabbables","managed","querySelectorAll","hasInteractives","handleHeaderMutation","records","parentElement","getAttribute","split","indexOf","handleGridKeyDown","ESCAPE","setResizeRef","toolbarRef","setToolbarRef","gridDimensions","toolbarDemensions","hasRoomForGridControls","gridStyleWithDefaults","definedColumnSchemas","schema","allSchemaDetectors","detectedSchema","mergedSchema","displayValues","acc","displayAsText","columnSelector","orderedVisibleColumns","setVisibleColumns","switchColumnPos","columnSorting","styleSelector","gridStyles","contentRef","setContentRef","headerElement","querySelector","scrollTop","rowHeightUtils","computeStylesForGridCell","classes","fontSize","border","header","footer","rowHover","cellPadding","stripes","stickyFooter","controlBtnClasses","showToolbar","gridControls","additionalControls","body","classList","add","remove","fullScreenSelector","fullScreenButton","fullScreenButtonActive","onFocusUpdate","updateFocus","set","delete","datagridFocusContext","gridIds","gridId","ariaLabelledById","ariaLabel","page","ariaLabelledBy","gridAriaProps"],"mappings":"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;AACA;;;;AADA;AACA;AACA;;;;AAFA;AACA;;;;AADA;AACA;AACA;;;;;;;AAFA;AACA;AACA;;;;;;;AAFA;AACA;AACA;;;;AAFA;AACA;AACA;;;;AAFA;AACA;AACA;;;;AAFA;AACA;AACA;AACA;AACA;;;;;;;;;AAJA;AACA;AACA;;;;AAFA;AACA;;;;AADA;AACA;AACA;;;;;AAFA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADA;AACA;;;;;AADA;AACA;;;AADA;AACA;;;;AADA;AACA;;;;;AADA;AACA;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;;;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;AACA;AACA;;;;AAHA;AACA;AACA;AACA;;;;AAHA;AACA;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;;;;;AADA;AACA;;;AADA;AACA;;;AADA;AACA;;;;AADA;AACA;;;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;;;;;AADA;AACA;;;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AATA;AACA;;;;;AADA;AACA;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;AACA;;;;AAFA;AACA;;;;AADA;AACA;;;;;AADA;AACA;;;AADA;AACA;;;;AADA;AACA;;;;;;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;;;AADA;AACA;;;;;;;AADA;AACA","sourcesContent":["function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nimport PropTypes from \"prop-types\";\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nimport React, { useCallback, useState, useEffect, Fragment, useMemo, useRef } from 'react';\nimport classNames from 'classnames';\nimport tabbable from 'tabbable';\nimport { EuiI18n, useEuiI18n } from '../i18n';\nimport { EuiButtonEmpty } from '../button';\nimport { keys, htmlIdGenerator } from '../../services';\nimport { EuiDataGridBody, VIRTUALIZED_CONTAINER_CLASS } from './data_grid_body';\nimport { useDataGridColumnSelector } from './column_selector';\nimport { useDataGridStyleSelector, startingStyles } from './style_selector';\nimport { EuiTablePagination } from '../table/table_pagination';\nimport { EuiFocusTrap } from '../focus_trap';\nimport { useResizeObserver } from '../observer/resize_observer';\nimport { EuiDataGridInMemoryRenderer } from './data_grid_inmemory_renderer';\nimport { useMergedSchema, useDetectSchema, schemaDetectors as providedSchemaDetectors } from './data_grid_schema';\nimport { DataGridFocusContext, DataGridSortingContext } from './data_grid_context';\nimport { useDataGridColumnSorting } from './column_sorting';\nimport { RowHeightUtils } from './row_height_utils'; // Used to short-circuit some async browser behaviour that is difficult to account for in tests\n\nvar IS_JEST_ENVIRONMENT = global.hasOwnProperty('_isJest'); // When below this number the grid only shows the full screen button\n\nvar MINIMUM_WIDTH_FOR_GRID_CONTROLS = 479; // Each gridStyle object above sets a specific CSS select to .euiGrid\n\nvar fontSizesToClassMap = {\n  s: 'euiDataGrid--fontSizeSmall',\n  m: '',\n  l: 'euiDataGrid--fontSizeLarge'\n};\nvar headerToClassMap = {\n  shade: 'euiDataGrid--headerShade',\n  underline: 'euiDataGrid--headerUnderline'\n};\nvar footerToClassMap = {\n  shade: 'euiDataGrid--footerShade',\n  overline: 'euiDataGrid--footerOverline',\n  striped: ''\n};\nvar rowHoverToClassMap = {\n  highlight: 'euiDataGrid--rowHoverHighlight',\n  none: ''\n};\nvar bordersToClassMap = {\n  all: 'euiDataGrid--bordersAll',\n  horizontal: 'euiDataGrid--bordersHorizontal',\n  none: 'euiDataGrid--bordersNone'\n};\nvar cellPaddingsToClassMap = {\n  s: 'euiDataGrid--paddingSmall',\n  m: '',\n  l: 'euiDataGrid--paddingLarge'\n};\n\nfunction computeVisibleRows(props) {\n  var pagination = props.pagination,\n      rowCount = props.rowCount;\n  var startRow = pagination ? pagination.pageIndex * pagination.pageSize : 0;\n  var endRow = pagination ? (pagination.pageIndex + 1) * pagination.pageSize : rowCount;\n  endRow = Math.min(endRow, rowCount);\n  return endRow - startRow;\n}\n\nfunction renderPagination(props, controls) {\n  var pagination = props.pagination;\n\n  if (pagination == null) {\n    return null;\n  }\n\n  var pageIndex = pagination.pageIndex,\n      pageSize = pagination.pageSize,\n      pageSizeOptions = pagination.pageSizeOptions,\n      onChangePage = pagination.onChangePage,\n      onChangeItemsPerPage = pagination.onChangeItemsPerPage;\n  var pageCount = Math.ceil(props.rowCount / pageSize);\n\n  var minSizeOption = pageSizeOptions && _toConsumableArray(pageSizeOptions).sort(function (a, b) {\n    return a - b;\n  })[0];\n\n  if (props.rowCount < (minSizeOption || pageSize)) {\n    /**\n     * Do not render the pagination when:\n     * 1. Rows count is less than min pagination option (rows per page)\n     * 2. Rows count is less than pageSize (the case when there are no pageSizeOptions provided)\n     */\n    return null;\n  } // hide select rows per page if pageSizeOptions is undefined or an empty array\n\n\n  var hidePerPageOptions = !pageSizeOptions || pageSizeOptions.length === 0;\n  return /*#__PURE__*/React.createElement(EuiI18n, {\n    token: \"euiDataGrid.ariaLabelGridPagination\",\n    default: \"Pagination for preceding grid: {label}\",\n    values: {\n      label: props['aria-label']\n    }\n  }, function (ariaLabelGridPagination) {\n    return /*#__PURE__*/React.createElement(EuiI18n, {\n      token: \"euiDataGrid.ariaLabelledByGridPagination\",\n      default: \"Pagination for preceding grid\"\n    }, function (ariaLabelledByGridPagination) {\n      var accessibleName = _objectSpread(_objectSpread({}, props['aria-label'] && {\n        'aria-label': ariaLabelGridPagination\n      }), props['aria-labelledby'] && {\n        'aria-labelledby': ariaLabelledByGridPagination\n      });\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"euiDataGrid__pagination\"\n      }, /*#__PURE__*/React.createElement(EuiTablePagination, _extends({\n        \"aria-controls\": controls,\n        activePage: pageIndex,\n        hidePerPageOptions: hidePerPageOptions,\n        itemsPerPage: pageSize,\n        itemsPerPageOptions: pageSizeOptions,\n        pageCount: pageCount,\n        onChangePage: onChangePage,\n        onChangeItemsPerPage: onChangeItemsPerPage\n      }, accessibleName)));\n    });\n  });\n}\n/**\n * Returns the size of the cell container minus the scroll bar width.\n * To do so, this hook is listening for size changes of the container itself,\n * as well as pagination changes to make sure every update is caught.\n *\n * This is necessary because there is no callback/event fired by the browser\n * indicating the scroll bar state has changed.\n * @param resizeRef the wrapper element containging the data grid\n * @param pageSize the currently applied page size\n */\n\n\nfunction useVirtualizeContainerWidth(resizeRef, pageSize) {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      virtualizeContainerWidth = _useState2[0],\n      setVirtualizeContainerWidth = _useState2[1];\n\n  var virtualizeContainer = resizeRef === null || resizeRef === void 0 ? void 0 : resizeRef.getElementsByClassName(VIRTUALIZED_CONTAINER_CLASS)[0]; // re-render data grid on size changes\n\n  useResizeObserver(virtualizeContainer);\n  useEffect(function () {\n    if (virtualizeContainer === null || virtualizeContainer === void 0 ? void 0 : virtualizeContainer.clientWidth) {\n      setVirtualizeContainerWidth(virtualizeContainer.clientWidth);\n    }\n  }, [virtualizeContainer === null || virtualizeContainer === void 0 ? void 0 : virtualizeContainer.clientWidth]);\n  useEffect(function () {\n    // wait for layout to settle, then measure virtualize container\n    setTimeout(function () {\n      if (virtualizeContainer === null || virtualizeContainer === void 0 ? void 0 : virtualizeContainer.clientWidth) {\n        var containerWidth = virtualizeContainer.clientWidth;\n        setVirtualizeContainerWidth(containerWidth);\n      }\n    }, 100);\n  }, [pageSize, virtualizeContainer]);\n  return virtualizeContainerWidth;\n}\n\nfunction useDefaultColumnWidth(gridWidth, leadingControlColumns, trailingControlColumns, columns) {\n  var computeDefaultWidth = useCallback(function () {\n    if (IS_JEST_ENVIRONMENT) return 100;\n    if (gridWidth === 0) return null; // we can't tell what size to compute yet\n\n    var controlColumnWidths = [].concat(_toConsumableArray(leadingControlColumns), _toConsumableArray(trailingControlColumns)).reduce(function (claimedWidth, controlColumn) {\n      return claimedWidth + controlColumn.width;\n    }, 0);\n    var columnsWithWidths = columns.filter(doesColumnHaveAnInitialWidth);\n    var definedColumnsWidth = columnsWithWidths.reduce(function (claimedWidth, column) {\n      return claimedWidth + column.initialWidth;\n    }, 0);\n    var claimedWidth = controlColumnWidths + definedColumnsWidth;\n    var widthToFill = gridWidth - claimedWidth;\n    var unsizedColumnCount = columns.length - columnsWithWidths.length;\n\n    if (unsizedColumnCount === 0) {\n      return 100;\n    }\n\n    return Math.max(widthToFill / unsizedColumnCount, 100);\n  }, [gridWidth, columns, leadingControlColumns, trailingControlColumns]);\n\n  var _useState3 = useState(computeDefaultWidth),\n      _useState4 = _slicedToArray(_useState3, 2),\n      defaultColumnWidth = _useState4[0],\n      setDefaultColumnWidth = _useState4[1];\n\n  useEffect(function () {\n    var columnWidth = computeDefaultWidth();\n    setDefaultColumnWidth(columnWidth);\n  }, [computeDefaultWidth]);\n  return defaultColumnWidth;\n}\n\nfunction doesColumnHaveAnInitialWidth(column) {\n  return column.hasOwnProperty('initialWidth');\n}\n\nfunction useColumnWidths(columns, onColumnResize) {\n  var hasMounted = useRef(false);\n  var computeColumnWidths = useCallback(function () {\n    return columns.filter(doesColumnHaveAnInitialWidth).reduce(function (initialWidths, column) {\n      initialWidths[column.id] = column.initialWidth;\n      return initialWidths;\n    }, {});\n  }, [columns]);\n\n  var _useState5 = useState(computeColumnWidths),\n      _useState6 = _slicedToArray(_useState5, 2),\n      columnWidths = _useState6[0],\n      setColumnWidths = _useState6[1];\n\n  useEffect(function () {\n    if (!hasMounted.current) {\n      hasMounted.current = true;\n      return;\n    }\n\n    setColumnWidths(computeColumnWidths());\n  }, [computeColumnWidths]);\n  var setColumnWidth = useCallback(function (columnId, width) {\n    setColumnWidths(_objectSpread(_objectSpread({}, columnWidths), {}, _defineProperty({}, columnId, width)));\n\n    if (onColumnResize) {\n      onColumnResize({\n        columnId: columnId,\n        width: width\n      });\n    }\n  }, [columnWidths, onColumnResize]);\n  return [columnWidths, setColumnWidth];\n}\n\nfunction useInMemoryValues(inMemory, rowCount) {\n  /**\n   * For performance, `onCellRender` below mutates the inMemoryValues object\n   * instead of cloning. If this operation were done in a setState call\n   * React would ignore the update as the object itself has not changed.\n   * So, we keep a dual record: the in-memory values themselves and a \"version\" counter.\n   * When the object is mutated, the version is incremented triggering a re-render, and\n   * the returned `inMemoryValues` object is re-created (cloned) from the mutated version.\n   * The version updates are batched, so only one clone happens per batch.\n   **/\n  var _inMemoryValues = useRef({});\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      inMemoryValuesVersion = _useState8[0],\n      setInMemoryValuesVersion = _useState8[1]; // eslint-disable-next-line react-hooks/exhaustive-deps\n\n\n  var inMemoryValues = useMemo(function () {\n    return _objectSpread({}, _inMemoryValues.current);\n  }, [inMemoryValuesVersion]);\n  var onCellRender = useCallback(function (rowIndex, columnId, value) {\n    var nextInMemoryValues = _inMemoryValues.current;\n    nextInMemoryValues[rowIndex] = nextInMemoryValues[rowIndex] || {};\n\n    if (nextInMemoryValues[rowIndex][columnId] !== value) {\n      nextInMemoryValues[rowIndex][columnId] = value;\n      setInMemoryValuesVersion(function (version) {\n        return version + 1;\n      });\n    }\n  }, []); // if `inMemory.level` or `rowCount` changes reset the values\n\n  var inMemoryLevel = inMemory && inMemory.level;\n  var resetRunCount = useRef(0);\n  useEffect(function () {\n    if (resetRunCount.current++ > 0) {\n      // this has to delete \"overflow\" keys from the object instead of resetting to an empty one,\n      // as the internal inmemoryrenderer component's useEffect which sets the values\n      // executes before this outer, wrapping useEffect\n      var existingRowKeyCount = Object.keys(_inMemoryValues.current).length;\n\n      for (var i = rowCount; i < existingRowKeyCount; i++) {\n        delete _inMemoryValues.current[i];\n      }\n\n      setInMemoryValuesVersion(function (version) {\n        return version + 1;\n      });\n    }\n  }, [inMemoryLevel, rowCount]);\n  return [inMemoryValues, onCellRender];\n}\n\nfunction createKeyDownHandler(props, contentElement, visibleColumns, leadingControlColumns, trailingControlColumns, focusedCell, headerIsInteractive, setFocusedCell) {\n  return function (event) {\n    if (focusedCell == null) return;\n\n    if (contentElement == null || !contentElement.contains(document.activeElement)) {\n      // if the `contentElement` does not contain the focused element, don't handle the event\n      // this happens when React bubbles the key event through a portal\n      return;\n    }\n\n    var colCount = visibleColumns.length + leadingControlColumns.length + trailingControlColumns.length - 1;\n\n    var _focusedCell = _slicedToArray(focusedCell, 2),\n        x = _focusedCell[0],\n        y = _focusedCell[1];\n\n    var rowCount = computeVisibleRows(props);\n    var key = event.key,\n        ctrlKey = event.ctrlKey;\n\n    if (key === keys.ARROW_DOWN) {\n      event.preventDefault();\n\n      if (props.renderFooterCellValue ? y < rowCount : y < rowCount - 1) {\n        setFocusedCell([x, y + 1]);\n      }\n    } else if (key === keys.ARROW_LEFT) {\n      event.preventDefault();\n\n      if (x > 0) {\n        setFocusedCell([x - 1, y]);\n      }\n    } else if (key === keys.ARROW_UP) {\n      event.preventDefault();\n      var minimumIndex = headerIsInteractive ? -1 : 0;\n\n      if (y > minimumIndex) {\n        setFocusedCell([x, y - 1]);\n      }\n    } else if (key === keys.ARROW_RIGHT) {\n      event.preventDefault();\n\n      if (x < colCount) {\n        setFocusedCell([x + 1, y]);\n      }\n    } else if (key === keys.PAGE_DOWN) {\n      if (props.pagination) {\n        event.preventDefault();\n        var _rowCount = props.rowCount;\n        var pageIndex = props.pagination.pageIndex;\n        var pageSize = props.pagination.pageSize;\n        var pageCount = Math.ceil(_rowCount / pageSize);\n\n        if (pageIndex < pageCount - 1) {\n          props.pagination.onChangePage(pageIndex + 1);\n        }\n\n        setFocusedCell([focusedCell[0], 0]);\n      }\n    } else if (key === keys.PAGE_UP) {\n      if (props.pagination) {\n        event.preventDefault();\n        var _pageIndex = props.pagination.pageIndex;\n\n        if (_pageIndex > 0) {\n          props.pagination.onChangePage(_pageIndex - 1);\n        }\n\n        setFocusedCell([focusedCell[0], props.pagination.pageSize - 1]);\n      }\n    } else if (key === (ctrlKey && keys.END)) {\n      event.preventDefault();\n      setFocusedCell([colCount, rowCount - 1]);\n    } else if (key === (ctrlKey && keys.HOME)) {\n      event.preventDefault();\n      setFocusedCell([0, 0]);\n    } else if (key === keys.END) {\n      event.preventDefault();\n      setFocusedCell([colCount, y]);\n    } else if (key === keys.HOME) {\n      event.preventDefault();\n      setFocusedCell([0, y]);\n    }\n  };\n}\n\nvar useFocus = function useFocus(headerIsInteractive, cellsUpdateFocus) {\n  var _useState9 = useState(undefined),\n      _useState10 = _slicedToArray(_useState9, 2),\n      focusedCell = _useState10[0],\n      setFocusedCell = _useState10[1];\n\n  var previousCell = useRef(undefined);\n  useEffect(function () {\n    if (previousCell.current) {\n      notifyCellOfFocusState(cellsUpdateFocus.current, previousCell.current, false);\n    }\n\n    previousCell.current = focusedCell;\n\n    if (focusedCell) {\n      notifyCellOfFocusState(cellsUpdateFocus.current, focusedCell, true);\n    }\n  }, [cellsUpdateFocus, focusedCell]);\n  var hasHadFocus = useMemo(function () {\n    return focusedCell != null;\n  }, [focusedCell]);\n  var focusProps = useMemo(function () {\n    return hasHadFocus ? {\n      // FireFox allows tabbing to a div that is scrollable, while Chrome does not\n      tabIndex: -1\n    } : {\n      tabIndex: 0,\n      onFocus: function onFocus(e) {\n        // if e.target (the source element of the `focus event`\n        // matches e.currentTarget (always the div with this onFocus listener)\n        // then the user has focused directly on the data grid wrapper (almost definitely by tabbing)\n        // so shift focus to the first interactive cell within the grid\n        if (e.target === e.currentTarget) {\n          setFocusedCell(headerIsInteractive ? [0, -1] : [0, 0]);\n        }\n      }\n    };\n  }, [hasHadFocus, setFocusedCell, headerIsInteractive]);\n  return [focusProps, focusedCell, setFocusedCell];\n}; // Typeguards to see if toolbarVisibility has a certain boolean property assigned\n// If not, just set it to true and assume it's OK to show\n\n\nfunction objectHasKey(object, key) {\n  return object.hasOwnProperty(key);\n}\n\nfunction checkOrDefaultToolBarDiplayOptions(arg, option) {\n  if (arg === undefined) {\n    return true;\n  } else if (typeof arg === 'boolean') {\n    return arg;\n  } else if (objectHasKey(arg, option)) {\n    return arg[option];\n  } else {\n    return true;\n  }\n}\n\nfunction notifyCellOfFocusState(cellsUpdateFocus, cell, isFocused) {\n  var key = \"\".concat(cell[0], \"-\").concat(cell[1]);\n  var onFocus = cellsUpdateFocus.get(key);\n\n  if (onFocus) {\n    onFocus(isFocused);\n  }\n}\n\nvar emptyArrayDefault = [];\nexport var EuiDataGrid = props => {\n  const {\n    leadingControlColumns = emptyArrayDefault,\n    trailingControlColumns = emptyArrayDefault,\n    columns,\n    columnVisibility,\n    schemaDetectors,\n    rowCount,\n    renderCellValue,\n    renderFooterCellValue,\n    className,\n    gridStyle,\n    toolbarVisibility = true,\n    pagination,\n    sorting,\n    inMemory,\n    popoverContents,\n    onColumnResize,\n    minSizeForControls = MINIMUM_WIDTH_FOR_GRID_CONTROLS,\n    height,\n    width,\n    rowHeightsOptions,\n    ...rest\n  } = props;\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  const [gridWidth, setGridWidth] = useState(0);\n  const [interactiveCellId] = useState(htmlIdGenerator()());\n  const [headerIsInteractive, setHeaderIsInteractive] = useState(false);\n  const cellsUpdateFocus = useRef(new Map());\n  const [wrappingDivFocusProps, focusedCell, setFocusedCell] = useFocus(headerIsInteractive, cellsUpdateFocus); // maintain a statically-referenced copy of `focusedCell`\n  // so it can be looked up when needed without causing a re-render\n\n  const focusedCellReference = useRef(focusedCell);\n  useEffect(() => {\n    focusedCellReference.current = focusedCell;\n  }, [focusedCell]);\n  const handleHeaderChange = useCallback(headerRow => {\n    const tabbables = tabbable(headerRow);\n    const managed = headerRow.querySelectorAll('[data-euigrid-tab-managed]');\n    const hasInteractives = tabbables.length > 0 || managed.length > 0;\n\n    if (hasInteractives !== headerIsInteractive) {\n      setHeaderIsInteractive(hasInteractives); // if the focus is on the header, and the header is no longer interactive\n      // move the focus down to the first row\n\n      const focusedCell = focusedCellReference.current;\n\n      if (hasInteractives === false && focusedCell && focusedCell[1] === -1) {\n        setFocusedCell([focusedCell[0], 0]);\n      }\n    }\n  }, [headerIsInteractive, setHeaderIsInteractive, setFocusedCell]);\n  const handleHeaderMutation = useCallback(records => {\n    const [{\n      target\n    }] = records; // find the wrapping header div\n\n    let headerRow = target.parentElement;\n\n    while (headerRow && (headerRow.getAttribute('data-test-subj') || '').split(/\\s+/).indexOf('dataGridHeader') === -1) {\n      headerRow = headerRow.parentElement;\n    }\n\n    if (headerRow) handleHeaderChange(headerRow);\n  }, [handleHeaderChange]);\n\n  const handleGridKeyDown = event => {\n    switch (event.key) {\n      case keys.ESCAPE:\n        if (isFullScreen) {\n          event.preventDefault();\n          setIsFullScreen(false);\n        }\n\n        break;\n    }\n  }; // enables/disables grid controls based on available width\n\n\n  const [resizeRef, setResizeRef] = useState(null);\n  const [toolbarRef, setToolbarRef] = useState(null);\n  const gridDimensions = useResizeObserver(resizeRef, 'width');\n  const toolbarDemensions = useResizeObserver(toolbarRef, 'height');\n  useEffect(() => {\n    if (resizeRef) {\n      const {\n        width\n      } = gridDimensions;\n      setGridWidth(width);\n    } else {\n      setGridWidth(0);\n    }\n  }, [resizeRef, gridDimensions]);\n  const virtualizeContainerWidth = useVirtualizeContainerWidth(resizeRef, pagination?.pageSize);\n  const hasRoomForGridControls = IS_JEST_ENVIRONMENT ? true : gridWidth > minSizeForControls || isFullScreen;\n  const [columnWidths, setColumnWidth] = useColumnWidths(columns, onColumnResize); // apply style props on top of defaults\n\n  const gridStyleWithDefaults = { ...startingStyles,\n    ...gridStyle\n  };\n  const [inMemoryValues, onCellRender] = useInMemoryValues(inMemory, rowCount);\n  const definedColumnSchemas = useMemo(() => {\n    return columns.reduce((definedColumnSchemas, {\n      id,\n      schema\n    }) => {\n      if (schema != null) {\n        definedColumnSchemas[id] = schema;\n      }\n\n      return definedColumnSchemas;\n    }, {});\n  }, [columns]);\n  const allSchemaDetectors = useMemo(() => [...providedSchemaDetectors, ...(schemaDetectors || [])], [schemaDetectors]);\n  const detectedSchema = useDetectSchema(inMemory, inMemoryValues, allSchemaDetectors, definedColumnSchemas, inMemory != null);\n  const mergedSchema = useMergedSchema(detectedSchema, columns);\n  const displayValues = columns.reduce((acc, column) => ({ ...acc,\n    [column.id]: column.displayAsText || column.id\n  }), {});\n  const [columnSelector, orderedVisibleColumns, setVisibleColumns, switchColumnPos] = useDataGridColumnSelector(columns, columnVisibility, checkOrDefaultToolBarDiplayOptions(toolbarVisibility, 'showColumnSelector'), displayValues);\n  const columnSorting = useDataGridColumnSorting(orderedVisibleColumns, sorting, mergedSchema, allSchemaDetectors, displayValues);\n  const [styleSelector, gridStyles] = useDataGridStyleSelector(gridStyleWithDefaults); // compute the default column width from the container's clientWidth and count of visible columns\n\n  const defaultColumnWidth = useDefaultColumnWidth( // use clientWidth of the virtualization container to take scroll bar into account\n  // if that's not possible fall back to the size of the wrapper element\n  virtualizeContainerWidth || gridDimensions.width, leadingControlColumns, trailingControlColumns, orderedVisibleColumns);\n  const [contentRef, setContentRef] = useState(null);\n  useEffect(() => {\n    if (contentRef) {\n      const headerElement = contentRef.querySelector('[data-test-subj~=dataGridHeader]');\n\n      if (headerElement) {\n        handleHeaderChange(headerElement);\n      }\n    }\n  }, [contentRef, handleHeaderChange]); // Because of a weird Chrome bug with position:sticky css items and focus, we force scrolling to the top\n  // if the item is in the first row. This prevents the cell from ever being under the sticky header.\n\n  useEffect(() => {\n    if (focusedCell !== undefined && focusedCell[1] === 0) {\n      if (contentRef != null) {\n        contentRef.scrollTop = 0;\n      }\n    }\n  }, [focusedCell, contentRef]);\n  const [rowHeightUtils] = useState(new RowHeightUtils());\n  useEffect(() => {\n    rowHeightUtils.computeStylesForGridCell(gridStyles);\n  }, [gridStyles, rowHeightUtils]);\n  const classes = classNames('euiDataGrid', fontSizesToClassMap[gridStyles.fontSize], bordersToClassMap[gridStyles.border], headerToClassMap[gridStyles.header], footerToClassMap[gridStyles.footer], rowHoverToClassMap[gridStyles.rowHover], cellPaddingsToClassMap[gridStyles.cellPadding], {\n    'euiDataGrid--stripes': gridStyles.stripes\n  }, {\n    'euiDataGrid--stickyFooter': gridStyles.footer && gridStyles.stickyFooter\n  }, {\n    'euiDataGrid--fullScreen': isFullScreen\n  }, {\n    'euiDataGrid--noControls': !toolbarVisibility\n  }, className);\n  const controlBtnClasses = classNames('euiDataGrid__controlBtn', {\n    'euiDataGrid__controlBtn--active': isFullScreen\n  }, className); // By default the toolbar appears\n\n  const showToolbar = !!toolbarVisibility; // These grid controls will only show when there is room. Check the resize observer callback\n  // They can also be optionally turned off individually by using toolbarVisibility\n\n  const gridControls = <Fragment>\n      {checkOrDefaultToolBarDiplayOptions(toolbarVisibility, 'additionalControls') && typeof toolbarVisibility !== 'boolean' ? toolbarVisibility.additionalControls : null}\n      {checkOrDefaultToolBarDiplayOptions(toolbarVisibility, 'showColumnSelector') ? columnSelector : null}\n      {checkOrDefaultToolBarDiplayOptions(toolbarVisibility, 'showStyleSelector') ? styleSelector : null}\n      {checkOrDefaultToolBarDiplayOptions(toolbarVisibility, 'showSortSelector') ? columnSorting : null}\n    </Fragment>; // need to safely access those Web APIs\n\n  if (typeof document !== 'undefined') {\n    // When data grid is full screen, we add a class to the body to remove the extra scrollbar\n    if (isFullScreen) {\n      document.body.classList.add('euiDataGrid__restrictBody');\n    } else {\n      document.body.classList.remove('euiDataGrid__restrictBody');\n    }\n  }\n\n  const fullScreenSelector = <EuiI18n tokens={['euiDataGrid.fullScreenButton', 'euiDataGrid.fullScreenButtonActive']} defaults={['Full screen', 'Exit full screen']}>\n      {([fullScreenButton, fullScreenButtonActive]) => <EuiButtonEmpty size=\"xs\" iconType=\"fullScreen\" color=\"text\" className={controlBtnClasses} data-test-subj=\"dataGridFullScrenButton\" onClick={() => setIsFullScreen(!isFullScreen)}>\n          {isFullScreen ? fullScreenButtonActive : fullScreenButton}\n        </EuiButtonEmpty>}\n    </EuiI18n>;\n  const onFocusUpdate = useCallback((cell, updateFocus) => {\n    const key = `${cell[0]}-${cell[1]}`;\n    cellsUpdateFocus.current.set(key, updateFocus);\n    return () => {\n      cellsUpdateFocus.current.delete(key);\n    };\n  }, []);\n  const datagridFocusContext = useMemo(() => {\n    return {\n      setFocusedCell,\n      onFocusUpdate\n    };\n  }, [setFocusedCell, onFocusUpdate]);\n  const gridIds = htmlIdGenerator();\n  const gridId = gridIds();\n  const ariaLabelledById = gridIds();\n  const ariaLabel = useEuiI18n('euiDataGrid.ariaLabel', '{label}; Page {page} of {pageCount}.', {\n    label: rest['aria-label'],\n    page: pagination ? pagination.pageIndex + 1 : 0,\n    pageCount: pagination ? Math.ceil(props.rowCount / pagination.pageSize) : 0\n  });\n  const ariaLabelledBy = useEuiI18n('euiDataGrid.ariaLabelledBy', 'Page {page} of {pageCount}.', {\n    page: pagination ? pagination.pageIndex + 1 : 0,\n    pageCount: pagination ? Math.ceil(props.rowCount / pagination.pageSize) : 0\n  }); // extract aria-label and/or aria-labelledby from `rest`\n\n  const gridAriaProps = {};\n\n  if ('aria-label' in rest) {\n    gridAriaProps['aria-label'] = pagination ? ariaLabel : rest['aria-label'];\n    delete rest['aria-label'];\n  }\n\n  if ('aria-labelledby' in rest) {\n    gridAriaProps['aria-labelledby'] = `${rest['aria-labelledby']} ${pagination ? ariaLabelledById : ''}`;\n    delete rest['aria-labelledby'];\n  }\n\n  return <DataGridFocusContext.Provider value={datagridFocusContext}>\n      <DataGridSortingContext.Provider value={sorting}>\n        <EuiFocusTrap disabled={!isFullScreen} className=\"euiDataGrid__focusWrap\">\n          <div className={classes} onKeyDown={handleGridKeyDown} style={isFullScreen ? undefined : {\n          width,\n          height\n        }} ref={setResizeRef} {...rest}>\n            {(IS_JEST_ENVIRONMENT || defaultColumnWidth) && <>\n                {showToolbar ? <div ref={setToolbarRef} className=\"euiDataGrid__controls\" data-test-sub=\"dataGridControls\">\n                    {hasRoomForGridControls ? gridControls : null}\n                    {checkOrDefaultToolBarDiplayOptions(toolbarVisibility, 'showFullScreenSelector') ? fullScreenSelector : null}\n                  </div> : null}\n                <div onKeyDown={createKeyDownHandler(props, contentRef, orderedVisibleColumns, leadingControlColumns, trailingControlColumns, focusedCell, headerIsInteractive, setFocusedCell)} className=\"euiDataGrid__verticalScroll\">\n                  <div className=\"euiDataGrid__overflow\">\n                    {inMemory ? <EuiDataGridInMemoryRenderer inMemory={inMemory} renderCellValue={renderCellValue} columns={columns} rowCount={inMemory.level === 'enhancements' ? // if `inMemory.level === enhancements` then we can only be sure the pagination's pageSize is available in memory\n                pagination?.pageSize || rowCount : // otherwise, all of the data is present and usable\n                rowCount} onCellRender={onCellRender} /> : null}\n                    <div ref={setContentRef} data-test-subj=\"dataGridWrapper\" className=\"euiDataGrid__content\" role=\"grid\" id={gridId} {...wrappingDivFocusProps} {...gridAriaProps}>\n                      <EuiDataGridBody isFullScreen={isFullScreen} columns={orderedVisibleColumns} columnWidths={columnWidths} defaultColumnWidth={defaultColumnWidth} toolbarHeight={toolbarDemensions.height} leadingControlColumns={leadingControlColumns} schema={mergedSchema} trailingControlColumns={trailingControlColumns} setVisibleColumns={setVisibleColumns} switchColumnPos={switchColumnPos} setColumnWidth={setColumnWidth} headerIsInteractive={headerIsInteractive} handleHeaderMutation={handleHeaderMutation} inMemoryValues={inMemoryValues} inMemory={inMemory} schemaDetectors={allSchemaDetectors} popoverContents={popoverContents} pagination={pagination} renderCellValue={renderCellValue} renderFooterCellValue={renderFooterCellValue} rowCount={rowCount} interactiveCellId={interactiveCellId} rowHeightsOptions={rowHeightsOptions} rowHeightUtils={rowHeightUtils} gridStyles={gridStyles} />\n                    </div>\n                  </div>\n                </div>\n                {props.pagination && props['aria-labelledby'] && <p id={ariaLabelledBy} hidden>\n                    {ariaLabelledBy}\n                  </p>}\n                {renderPagination(props, gridId)}\n                <p id={interactiveCellId} hidden>\n                  <EuiI18n token=\"euiDataGrid.screenReaderNotice\" default=\"Cell contains interactive content.\" />\n                  {\n                /* TODO: if no keyboard shortcuts panel gets built, add keyboard shortcut info here */\n              }\n                </p>\n              </>}\n          </div>\n        </EuiFocusTrap>\n      </DataGridSortingContext.Provider>\n    </DataGridFocusContext.Provider>;\n};\nEuiDataGrid.propTypes = {\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n\n  /**\n       * An array of #EuiDataGridControlColumn objects. Used to define ancillary columns on the left side of the data grid.\n       */\n  leadingControlColumns: PropTypes.arrayOf(PropTypes.shape({\n    /**\n       * Used as the React `key` when rendering content\n       */\n    id: PropTypes.string.isRequired,\n\n    /**\n       * Component to render in the column header\n       */\n    headerCellRender: PropTypes.elementType.isRequired,\n\n    /**\n       * Component to render for each row in the column\n       */\n    rowCellRender: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.func.isRequired]).isRequired,\n\n    /**\n       * Width of the column, uses are unable to change this\n       */\n    width: PropTypes.number.isRequired\n  }).isRequired),\n\n  /**\n       * An array of #EuiDataGridControlColumn objects. Used to define ancillary columns on the right side of the data grid.\n       */\n  trailingControlColumns: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    headerCellRender: PropTypes.elementType.isRequired,\n    rowCellRender: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.func.isRequired]).isRequired,\n    width: PropTypes.number.isRequired\n  }).isRequired),\n\n  /**\n       * An array of #EuiDataGridColumn objects. Lists the columns available and the schema and settings tied to it.\n       */\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    /**\n       * The unique identifier for this column\n       */\n    id: PropTypes.string.isRequired,\n\n    /**\n       * A `ReactNode` used when rendering the column header. When providing complicated content, please make sure to utilize CSS to respect truncation as space allows. Check the docs example.\n       */\n    display: PropTypes.node,\n\n    /**\n       * A Schema to use for the column. Built-in values are ['boolean', 'currency', 'datetime', 'numeric', 'json'] but can be expanded by defining your own #EuiDataGrid `schemaDetectors` (for in-memory detection). In general, it is advised to pass in a value here when you are sure of the schema ahead of time, so that you don't need to rely on the automatic detection.\n       */\n    schema: PropTypes.string,\n\n    /**\n       * Defaults to true, always true if cellActions are defined. Defines whether or not the column's cells can be expanded with a popup onClick / keydown.\n       */\n    isExpandable: PropTypes.bool,\n\n    /**\n       * Whether this column's width can be changed by the user, defaults to true\n       */\n    isResizable: PropTypes.bool,\n\n    /**\n       * Initial width (in pixels) of the column\n       */\n    initialWidth: PropTypes.number,\n\n    /**\n       * Whether this column is sortable\n       */\n    isSortable: PropTypes.bool,\n\n    /**\n       * Default sort direction of the column\n       */\n    defaultSortDirection: PropTypes.oneOf([\"asc\", \"desc\"]),\n\n    /**\n       * Display name as text for column. This can be used to display column name in column selector and column sorting where `display` won't be used. If not used `id` will be shown as column name in column selector and column sorting.\n       */\n    displayAsText: PropTypes.string,\n\n    /**\n       * Configuration of column actions. Set to false to disable or use #EuiDataGridColumnActions to configure the actions displayed in the header cell of the column.\n       */\n    actions: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.shape({\n      /**\n         * Show/hide/configure the action to hide a column, provided EuiListGroupItemProps are merged\n         */\n      showHide: PropTypes.oneOfType([PropTypes.bool.isRequired, PropTypes.shape({\n        className: PropTypes.string,\n        \"aria-label\": PropTypes.string,\n        \"data-test-subj\": PropTypes.string,\n\n        /**\n             * Size of the label text\n             */\n        size: PropTypes.oneOf([\"xs\", \"s\", \"m\", \"l\"]),\n\n        /**\n             * By default the item will inherit the color of its wrapper (button/link/span),\n             * otherwise pass one of the acceptable options\n             */\n        color: PropTypes.oneOf([\"inherit\", \"primary\", \"text\", \"subdued\", \"ghost\"]),\n\n        /**\n             * Content to be displayed in the list item\n             */\n        label: PropTypes.node.isRequired,\n\n        /**\n             * Apply styles indicating an item is active\n             */\n        isActive: PropTypes.bool,\n\n        /**\n             * Apply styles indicating an item is disabled\n             */\n        isDisabled: PropTypes.bool,\n\n        /**\n             * Make the list item label a link.\n             * While permitted, `href` and `onClick` should not be used together in most cases and may create problems.\n             */\n        href: PropTypes.string,\n        target: PropTypes.string,\n        rel: PropTypes.string,\n\n        /**\n             * Adds `EuiIcon` of `EuiIcon.type`\n             */\n        iconType: PropTypes.oneOfType([PropTypes.oneOf([\"accessibility\", \"addDataApp\", \"advancedSettingsApp\", \"aggregate\", \"alert\", \"analyzeEvent\", \"annotation\", \"apmApp\", \"apmTrace\", \"apps\", \"appSearchApp\", \"arrowDown\", \"arrowLeft\", \"arrowRight\", \"arrowUp\", \"asterisk\", \"auditbeatApp\", \"beaker\", \"bell\", \"bellSlash\", \"bolt\", \"boxesHorizontal\", \"boxesVertical\", \"branch\", \"broom\", \"brush\", \"bug\", \"bullseye\", \"calendar\", \"canvasApp\", \"codeApp\", \"check\", \"checkInCircleFilled\", \"cheer\", \"classificationJob\", \"clock\", \"cloudDrizzle\", \"cloudStormy\", \"cloudSunny\", \"color\", \"compute\", \"console\", \"consoleApp\", \"continuityAbove\", \"continuityAboveBelow\", \"continuityBelow\", \"continuityWithin\", \"controlsHorizontal\", \"controlsVertical\", \"copy\", \"copyClipboard\", \"createAdvancedJob\", \"createMultiMetricJob\", \"createPopulationJob\", \"createSingleMetricJob\", \"cross\", \"crossClusterReplicationApp\", \"crosshairs\", \"crossInACircleFilled\", \"currency\", \"cut\", \"dashboardApp\", \"database\", \"dataVisualizer\", \"devToolsApp\", \"discoverApp\", \"document\", \"documentation\", \"documentEdit\", \"documents\", \"dot\", \"download\", \"editorAlignCenter\", \"editorAlignLeft\", \"editorAlignRight\", \"editorBold\", \"editorCodeBlock\", \"editorComment\", \"editorDistributeHorizontal\", \"editorDistributeVertical\", \"editorHeading\", \"editorItalic\", \"editorItemAlignLeft\", \"editorItemAlignBottom\", \"editorItemAlignCenter\", \"editorItemAlignMiddle\", \"editorItemAlignRight\", \"editorItemAlignTop\", \"editorLink\", \"editorOrderedList\", \"editorPositionBottomLeft\", \"editorPositionBottomRight\", \"editorPositionTopLeft\", \"editorPositionTopRight\", \"editorRedo\", \"editorStrike\", \"editorTable\", \"editorUnderline\", \"editorUndo\", \"editorUnorderedList\", \"email\", \"empty\", \"emsApp\", \"eql\", \"eraser\", \"exit\", \"expand\", \"expandMini\", \"exportAction\", \"eye\", \"eyeClosed\", \"faceHappy\", \"faceNeutral\", \"faceSad\", \"filebeatApp\", \"filter\", \"flag\", \"fold\", \"folderCheck\", \"folderClosed\", \"folderExclamation\", \"folderOpen\", \"frameNext\", \"framePrevious\", \"fullScreen\", \"fullScreenExit\", \"function\", \"gear\", \"gisApp\", \"glasses\", \"globe\", \"grab\", \"grabHorizontal\", \"graphApp\", \"grid\", \"grokApp\", \"heart\", \"heartbeatApp\", \"heatmap\", \"help\", \"home\", \"iInCircle\", \"image\", \"importAction\", \"indexClose\", \"indexEdit\", \"indexFlush\", \"indexManagementApp\", \"indexMapping\", \"indexOpen\", \"indexPatternApp\", \"indexRollupApp\", \"indexRuntime\", \"indexSettings\", \"inputOutput\", \"inspect\", \"invert\", \"ip\", \"keyboardShortcut\", \"kqlField\", \"kqlFunction\", \"kqlOperand\", \"kqlSelector\", \"kqlValue\", \"layers\", \"lensApp\", \"link\", \"list\", \"listAdd\", \"lock\", \"lockOpen\", \"logsApp\", \"logoAerospike\", \"logoApache\", \"logoAppSearch\", \"logoAWS\", \"logoAWSMono\", \"logoAzure\", \"logoAzureMono\", \"logoBeats\", \"logoBusinessAnalytics\", \"logoCeph\", \"logoCloud\", \"logoCloudEnterprise\", \"logoCode\", \"logoCodesandbox\", \"logoCouchbase\", \"logoDocker\", \"logoDropwizard\", \"logoElastic\", \"logoElasticsearch\", \"logoElasticStack\", \"logoEnterpriseSearch\", \"logoEtcd\", \"logoGCP\", \"logoGCPMono\", \"logoGithub\", \"logoGmail\", \"logoGolang\", \"logoGoogleG\", \"logoHAproxy\", \"logoIBM\", \"logoIBMMono\", \"logoKafka\", \"logoKibana\", \"logoKubernetes\", \"logoLogging\", \"logoLogstash\", \"logoMaps\", \"logoMemcached\", \"logoMetrics\", \"logoMongodb\", \"logoMySQL\", \"logoNginx\", \"logoObservability\", \"logoOsquery\", \"logoPhp\", \"logoPostgres\", \"logoPrometheus\", \"logoRabbitmq\", \"logoRedis\", \"logoSecurity\", \"logoSiteSearch\", \"logoSketch\", \"logoSlack\", \"logoUptime\", \"logoWebhook\", \"logoWindows\", \"logoWorkplaceSearch\", \"logstashFilter\", \"logstashIf\", \"logstashInput\", \"logstashOutput\", \"logstashQueue\", \"machineLearningApp\", \"magnet\", \"magnifyWithMinus\", \"magnifyWithPlus\", \"managementApp\", \"mapMarker\", \"memory\", \"menu\", \"menuDown\", \"menuLeft\", \"menuRight\", \"menuUp\", \"merge\", \"metricbeatApp\", \"metricsApp\", \"minimize\", \"minus\", \"minusInCircle\", \"minusInCircleFilled\", \"mobile\", \"monitoringApp\", \"moon\", \"nested\", \"node\", \"notebookApp\", \"number\", \"offline\", \"online\", \"outlierDetectionJob\", \"package\", \"packetbeatApp\", \"pageSelect\", \"pagesSelect\", \"partial\", \"paperClip\", \"pause\", \"pencil\", \"percent\", \"pin\", \"pinFilled\", \"pipelineApp\", \"play\", \"playFilled\", \"plus\", \"plusInCircle\", \"plusInCircleFilled\", \"popout\", \"push\", \"questionInCircle\", \"quote\", \"recentlyViewedApp\", \"refresh\", \"regressionJob\", \"reporter\", \"reportingApp\", \"returnKey\", \"save\", \"savedObjectsApp\", \"scale\", \"search\", \"searchProfilerApp\", \"securityAnalyticsApp\", \"securityApp\", \"securitySignal\", \"securitySignalDetected\", \"securitySignalResolved\", \"shard\", \"share\", \"snowflake\", \"sortable\", \"sortDown\", \"sortLeft\", \"sortRight\", \"sortUp\", \"spacesApp\", \"sqlApp\", \"starEmpty\", \"starEmptySpace\", \"starFilled\", \"starFilledSpace\", \"starMinusEmpty\", \"starMinusFilled\", \"starPlusEmpty\", \"starPlusFilled\", \"stats\", \"stop\", \"stopFilled\", \"stopSlash\", \"storage\", \"string\", \"submodule\", \"swatchInput\", \"symlink\", \"tableOfContents\", \"tableDensityExpanded\", \"tableDensityCompact\", \"tableDensityNormal\", \"tag\", \"tear\", \"temperature\", \"timeline\", \"timelionApp\", \"timeslider\", \"training\", \"trash\", \"upgradeAssistantApp\", \"uptimeApp\", \"unfold\", \"unlink\", \"user\", \"users\", \"usersRolesApp\", \"vector\", \"videoPlayer\", \"visArea\", \"visAreaStacked\", \"visBarHorizontal\", \"visBarHorizontalStacked\", \"visBarVertical\", \"visBarVerticalStacked\", \"visGauge\", \"visGoal\", \"visLine\", \"visMapCoordinate\", \"visMapRegion\", \"visMetric\", \"visPie\", \"visTable\", \"visTagCloud\", \"visText\", \"visTimelion\", \"visualizeApp\", \"visVega\", \"visVisualBuilder\", \"watchesApp\", \"wordWrap\", \"wordWrapDisabled\", \"workplaceSearchApp\", \"wrench\", \"tokenClass\", \"tokenProperty\", \"tokenEnum\", \"tokenVariable\", \"tokenMethod\", \"tokenAnnotation\", \"tokenException\", \"tokenInterface\", \"tokenParameter\", \"tokenField\", \"tokenElement\", \"tokenFunction\", \"tokenBoolean\", \"tokenString\", \"tokenArray\", \"tokenNumber\", \"tokenConstant\", \"tokenObject\", \"tokenEvent\", \"tokenKey\", \"tokenNull\", \"tokenStruct\", \"tokenPackage\", \"tokenOperator\", \"tokenEnumMember\", \"tokenRepo\", \"tokenSymbol\", \"tokenFile\", \"tokenModule\", \"tokenNamespace\", \"tokenDate\", \"tokenIP\", \"tokenNested\", \"tokenAlias\", \"tokenShape\", \"tokenGeo\", \"tokenRange\", \"tokenBinary\", \"tokenJoin\", \"tokenPercolator\", \"tokenFlattened\", \"tokenRankFeature\", \"tokenRankFeatures\", \"tokenKeyword\", \"tokenCompletionSuggester\", \"tokenDenseVector\", \"tokenText\", \"tokenTokenCount\", \"tokenSearchType\", \"tokenHistogram\"]).isRequired, PropTypes.string.isRequired, PropTypes.elementType.isRequired]),\n\n        /**\n             * Further extend the props applied to EuiIcon\n             */\n        iconProps: PropTypes.any,\n\n        /**\n             * Custom node to pass as the icon. Cannot be used in conjunction\n             * with `iconType` and `iconProps`.\n             */\n        icon: PropTypes.element,\n\n        /**\n             * Display tooltip on list item\n             */\n        showToolTip: PropTypes.bool,\n\n        /**\n             * Adds an `EuiButtonIcon` to the right side of the item; `iconType` is required;\n             * pass `alwaysShow` if you don't want the default behavior of only showing on hover\n             */\n        extraAction: PropTypes.shape({\n          type: PropTypes.oneOf([\"submit\", \"reset\", \"button\"]),\n          onClick: PropTypes.func,\n          iconType: PropTypes.oneOfType([PropTypes.oneOf([\"accessibility\", \"addDataApp\", \"advancedSettingsApp\", \"aggregate\", \"alert\", \"analyzeEvent\", \"annotation\", \"apmApp\", \"apmTrace\", \"apps\", \"appSearchApp\", \"arrowDown\", \"arrowLeft\", \"arrowRight\", \"arrowUp\", \"asterisk\", \"auditbeatApp\", \"beaker\", \"bell\", \"bellSlash\", \"bolt\", \"boxesHorizontal\", \"boxesVertical\", \"branch\", \"broom\", \"brush\", \"bug\", \"bullseye\", \"calendar\", \"canvasApp\", \"codeApp\", \"check\", \"checkInCircleFilled\", \"cheer\", \"classificationJob\", \"clock\", \"cloudDrizzle\", \"cloudStormy\", \"cloudSunny\", \"color\", \"compute\", \"console\", \"consoleApp\", \"continuityAbove\", \"continuityAboveBelow\", \"continuityBelow\", \"continuityWithin\", \"controlsHorizontal\", \"controlsVertical\", \"copy\", \"copyClipboard\", \"createAdvancedJob\", \"createMultiMetricJob\", \"createPopulationJob\", \"createSingleMetricJob\", \"cross\", \"crossClusterReplicationApp\", \"crosshairs\", \"crossInACircleFilled\", \"currency\", \"cut\", \"dashboardApp\", \"database\", \"dataVisualizer\", \"devToolsApp\", \"discoverApp\", \"document\", \"documentation\", \"documentEdit\", \"documents\", \"dot\", \"download\", \"editorAlignCenter\", \"editorAlignLeft\", \"editorAlignRight\", \"editorBold\", \"editorCodeBlock\", \"editorComment\", \"editorDistributeHorizontal\", \"editorDistributeVertical\", \"editorHeading\", \"editorItalic\", \"editorItemAlignLeft\", \"editorItemAlignBottom\", \"editorItemAlignCenter\", \"editorItemAlignMiddle\", \"editorItemAlignRight\", \"editorItemAlignTop\", \"editorLink\", \"editorOrderedList\", \"editorPositionBottomLeft\", \"editorPositionBottomRight\", \"editorPositionTopLeft\", \"editorPositionTopRight\", \"editorRedo\", \"editorStrike\", \"editorTable\", \"editorUnderline\", \"editorUndo\", \"editorUnorderedList\", \"email\", \"empty\", \"emsApp\", \"eql\", \"eraser\", \"exit\", \"expand\", \"expandMini\", \"exportAction\", \"eye\", \"eyeClosed\", \"faceHappy\", \"faceNeutral\", \"faceSad\", \"filebeatApp\", \"filter\", \"flag\", \"fold\", \"folderCheck\", \"folderClosed\", \"folderExclamation\", \"folderOpen\", \"frameNext\", \"framePrevious\", \"fullScreen\", \"fullScreenExit\", \"function\", \"gear\", \"gisApp\", \"glasses\", \"globe\", \"grab\", \"grabHorizontal\", \"graphApp\", \"grid\", \"grokApp\", \"heart\", \"heartbeatApp\", \"heatmap\", \"help\", \"home\", \"iInCircle\", \"image\", \"importAction\", \"indexClose\", \"indexEdit\", \"indexFlush\", \"indexManagementApp\", \"indexMapping\", \"indexOpen\", \"indexPatternApp\", \"indexRollupApp\", \"indexRuntime\", \"indexSettings\", \"inputOutput\", \"inspect\", \"invert\", \"ip\", \"keyboardShortcut\", \"kqlField\", \"kqlFunction\", \"kqlOperand\", \"kqlSelector\", \"kqlValue\", \"layers\", \"lensApp\", \"link\", \"list\", \"listAdd\", \"lock\", \"lockOpen\", \"logsApp\", \"logoAerospike\", \"logoApache\", \"logoAppSearch\", \"logoAWS\", \"logoAWSMono\", \"logoAzure\", \"logoAzureMono\", \"logoBeats\", \"logoBusinessAnalytics\", \"logoCeph\", \"logoCloud\", \"logoCloudEnterprise\", \"logoCode\", \"logoCodesandbox\", \"logoCouchbase\", \"logoDocker\", \"logoDropwizard\", \"logoElastic\", \"logoElasticsearch\", \"logoElasticStack\", \"logoEnterpriseSearch\", \"logoEtcd\", \"logoGCP\", \"logoGCPMono\", \"logoGithub\", \"logoGmail\", \"logoGolang\", \"logoGoogleG\", \"logoHAproxy\", \"logoIBM\", \"logoIBMMono\", \"logoKafka\", \"logoKibana\", \"logoKubernetes\", \"logoLogging\", \"logoLogstash\", \"logoMaps\", \"logoMemcached\", \"logoMetrics\", \"logoMongodb\", \"logoMySQL\", \"logoNginx\", \"logoObservability\", \"logoOsquery\", \"logoPhp\", \"logoPostgres\", \"logoPrometheus\", \"logoRabbitmq\", \"logoRedis\", \"logoSecurity\", \"logoSiteSearch\", \"logoSketch\", \"logoSlack\", \"logoUptime\", \"logoWebhook\", \"logoWindows\", \"logoWorkplaceSearch\", \"logstashFilter\", \"logstashIf\", \"logstashInput\", \"logstashOutput\", \"logstashQueue\", \"machineLearningApp\", \"magnet\", \"magnifyWithMinus\", \"magnifyWithPlus\", \"managementApp\", \"mapMarker\", \"memory\", \"menu\", \"menuDown\", \"menuLeft\", \"menuRight\", \"menuUp\", \"merge\", \"metricbeatApp\", \"metricsApp\", \"minimize\", \"minus\", \"minusInCircle\", \"minusInCircleFilled\", \"mobile\", \"monitoringApp\", \"moon\", \"nested\", \"node\", \"notebookApp\", \"number\", \"offline\", \"online\", \"outlierDetectionJob\", \"package\", \"packetbeatApp\", \"pageSelect\", \"pagesSelect\", \"partial\", \"paperClip\", \"pause\", \"pencil\", \"percent\", \"pin\", \"pinFilled\", \"pipelineApp\", \"play\", \"playFilled\", \"plus\", \"plusInCircle\", \"plusInCircleFilled\", \"popout\", \"push\", \"questionInCircle\", \"quote\", \"recentlyViewedApp\", \"refresh\", \"regressionJob\", \"reporter\", \"reportingApp\", \"returnKey\", \"save\", \"savedObjectsApp\", \"scale\", \"search\", \"searchProfilerApp\", \"securityAnalyticsApp\", \"securityApp\", \"securitySignal\", \"securitySignalDetected\", \"securitySignalResolved\", \"shard\", \"share\", \"snowflake\", \"sortable\", \"sortDown\", \"sortLeft\", \"sortRight\", \"sortUp\", \"spacesApp\", \"sqlApp\", \"starEmpty\", \"starEmptySpace\", \"starFilled\", \"starFilledSpace\", \"starMinusEmpty\", \"starMinusFilled\", \"starPlusEmpty\", \"starPlusFilled\", \"stats\", \"stop\", \"stopFilled\", \"stopSlash\", \"storage\", \"string\", \"submodule\", \"swatchInput\", \"symlink\", \"tableOfContents\", \"tableDensityExpanded\", \"tableDensityCompact\", \"tableDensityNormal\", \"tag\", \"tear\", \"temperature\", \"timeline\", \"timelionApp\", \"timeslider\", \"training\", \"trash\", \"upgradeAssistantApp\", \"uptimeApp\", \"unfold\", \"unlink\", \"user\", \"users\", \"usersRolesApp\", \"vector\", \"videoPlayer\", \"visArea\", \"visAreaStacked\", \"visBarHorizontal\", \"visBarHorizontalStacked\", \"visBarVertical\", \"visBarVerticalStacked\", \"visGauge\", \"visGoal\", \"visLine\", \"visMapCoordinate\", \"visMapRegion\", \"visMetric\", \"visPie\", \"visTable\", \"visTagCloud\", \"visText\", \"visTimelion\", \"visualizeApp\", \"visVega\", \"visVisualBuilder\", \"watchesApp\", \"wordWrap\", \"wordWrapDisabled\", \"workplaceSearchApp\", \"wrench\", \"tokenClass\", \"tokenProperty\", \"tokenEnum\", \"tokenVariable\", \"tokenMethod\", \"tokenAnnotation\", \"tokenException\", \"tokenInterface\", \"tokenParameter\", \"tokenField\", \"tokenElement\", \"tokenFunction\", \"tokenBoolean\", \"tokenString\", \"tokenArray\", \"tokenNumber\", \"tokenConstant\", \"tokenObject\", \"tokenEvent\", \"tokenKey\", \"tokenNull\", \"tokenStruct\", \"tokenPackage\", \"tokenOperator\", \"tokenEnumMember\", \"tokenRepo\", \"tokenSymbol\", \"tokenFile\", \"tokenModule\", \"tokenNamespace\", \"tokenDate\", \"tokenIP\", \"tokenNested\", \"tokenAlias\", \"tokenShape\", \"tokenGeo\", \"tokenRange\", \"tokenBinary\", \"tokenJoin\", \"tokenPercolator\", \"tokenFlattened\", \"tokenRankFeature\", \"tokenRankFeatures\", \"tokenKeyword\", \"tokenCompletionSuggester\", \"tokenDenseVector\", \"tokenText\", \"tokenTokenCount\", \"tokenSearchType\", \"tokenHistogram\"]).isRequired, PropTypes.string.isRequired, PropTypes.elementType.isRequired]).isRequired,\n\n          /**\n             * Any of the named color palette options.\n             * **`subdued` set to be DEPRECATED, use `text` instead**\n             */\n          color: PropTypes.oneOf([\"accent\", \"danger\", \"ghost\", \"primary\", \"subdued\", \"success\", \"text\", \"warning\"]),\n          \"aria-label\": PropTypes.string,\n          \"aria-labelledby\": PropTypes.string,\n          isDisabled: PropTypes.bool,\n\n          /**\n             * Overall size of button.\n             * Matches the sizes of other EuiButtons\n             */\n          size: PropTypes.oneOf([\"xs\", \"s\", \"m\"]),\n\n          /**\n             * Size of the icon only.\n             * This will not affect the overall size of the button\n             */\n          iconSize: PropTypes.oneOf([\"original\", \"s\", \"m\", \"l\", \"xl\", \"xxl\"]),\n\n          /**\n             * Applies the boolean state as the `aria-pressed` property to create a toggle button.\n             * *Only use when the readable text does not change between states.*\n             */\n          isSelected: PropTypes.bool,\n\n          /**\n             * Sets the display style for matching other EuiButton types.\n             * `base` is equivelant to a typical EuiButton\n             * `fill` is equivelant to a filled EuiButton\n             * `empty` (default) is equivelant to an EuiButtonEmpty\n             */\n          display: PropTypes.oneOf([\"base\", \"empty\", \"fill\"]),\n          className: PropTypes.string,\n          \"data-test-subj\": PropTypes.string,\n          buttonRef: PropTypes.any,\n          alwaysShow: PropTypes.bool\n        }),\n\n        /**\n             * Make the list item label a button.\n             * While permitted, `href` and `onClick` should not be used together in most cases and may create problems.\n             */\n        onClick: PropTypes.func,\n\n        /**\n             * Allow link text to wrap\n             */\n        wrapText: PropTypes.bool,\n\n        /**\n             * Pass-through ref reference specifically for targeting\n             * instances where the item content is rendered as a `button`\n             */\n        buttonRef: PropTypes.any\n      }).isRequired]),\n\n      /**\n         * Show/hide/configure the action that switches the actual column with the column to the left side, provided EuiListGroupItemProps are merged\n         */\n      showMoveLeft: PropTypes.oneOfType([PropTypes.bool.isRequired, PropTypes.shape({\n        className: PropTypes.string,\n        \"aria-label\": PropTypes.string,\n        \"data-test-subj\": PropTypes.string,\n        size: PropTypes.oneOf([\"xs\", \"s\", \"m\", \"l\"]),\n        color: PropTypes.oneOf([\"inherit\", \"primary\", \"text\", \"subdued\", \"ghost\"]),\n        label: PropTypes.node.isRequired,\n        isActive: PropTypes.bool,\n        isDisabled: PropTypes.bool,\n        href: PropTypes.string,\n        target: PropTypes.string,\n        rel: PropTypes.string,\n        iconType: PropTypes.oneOfType([PropTypes.oneOf([\"accessibility\", \"addDataApp\", \"advancedSettingsApp\", \"aggregate\", \"alert\", \"analyzeEvent\", \"annotation\", \"apmApp\", \"apmTrace\", \"apps\", \"appSearchApp\", \"arrowDown\", \"arrowLeft\", \"arrowRight\", \"arrowUp\", \"asterisk\", \"auditbeatApp\", \"beaker\", \"bell\", \"bellSlash\", \"bolt\", \"boxesHorizontal\", \"boxesVertical\", \"branch\", \"broom\", \"brush\", \"bug\", \"bullseye\", \"calendar\", \"canvasApp\", \"codeApp\", \"check\", \"checkInCircleFilled\", \"cheer\", \"classificationJob\", \"clock\", \"cloudDrizzle\", \"cloudStormy\", \"cloudSunny\", \"color\", \"compute\", \"console\", \"consoleApp\", \"continuityAbove\", \"continuityAboveBelow\", \"continuityBelow\", \"continuityWithin\", \"controlsHorizontal\", \"controlsVertical\", \"copy\", \"copyClipboard\", \"createAdvancedJob\", \"createMultiMetricJob\", \"createPopulationJob\", \"createSingleMetricJob\", \"cross\", \"crossClusterReplicationApp\", \"crosshairs\", \"crossInACircleFilled\", \"currency\", \"cut\", \"dashboardApp\", \"database\", \"dataVisualizer\", \"devToolsApp\", \"discoverApp\", \"document\", \"documentation\", \"documentEdit\", \"documents\", \"dot\", \"download\", \"editorAlignCenter\", \"editorAlignLeft\", \"editorAlignRight\", \"editorBold\", \"editorCodeBlock\", \"editorComment\", \"editorDistributeHorizontal\", \"editorDistributeVertical\", \"editorHeading\", \"editorItalic\", \"editorItemAlignLeft\", \"editorItemAlignBottom\", \"editorItemAlignCenter\", \"editorItemAlignMiddle\", \"editorItemAlignRight\", \"editorItemAlignTop\", \"editorLink\", \"editorOrderedList\", \"editorPositionBottomLeft\", \"editorPositionBottomRight\", \"editorPositionTopLeft\", \"editorPositionTopRight\", \"editorRedo\", \"editorStrike\", \"editorTable\", \"editorUnderline\", \"editorUndo\", \"editorUnorderedList\", \"email\", \"empty\", \"emsApp\", \"eql\", \"eraser\", \"exit\", \"expand\", \"expandMini\", \"exportAction\", \"eye\", \"eyeClosed\", \"faceHappy\", \"faceNeutral\", \"faceSad\", \"filebeatApp\", \"filter\", \"flag\", \"fold\", \"folderCheck\", \"folderClosed\", \"folderExclamation\", \"folderOpen\", \"frameNext\", \"framePrevious\", \"fullScreen\", \"fullScreenExit\", \"function\", \"gear\", \"gisApp\", \"glasses\", \"globe\", \"grab\", \"grabHorizontal\", \"graphApp\", \"grid\", \"grokApp\", \"heart\", \"heartbeatApp\", \"heatmap\", \"help\", \"home\", \"iInCircle\", \"image\", \"importAction\", \"indexClose\", \"indexEdit\", \"indexFlush\", \"indexManagementApp\", \"indexMapping\", \"indexOpen\", \"indexPatternApp\", \"indexRollupApp\", \"indexRuntime\", \"indexSettings\", \"inputOutput\", \"inspect\", \"invert\", \"ip\", \"keyboardShortcut\", \"kqlField\", \"kqlFunction\", \"kqlOperand\", \"kqlSelector\", \"kqlValue\", \"layers\", \"lensApp\", \"link\", \"list\", \"listAdd\", \"lock\", \"lockOpen\", \"logsApp\", \"logoAerospike\", \"logoApache\", \"logoAppSearch\", \"logoAWS\", \"logoAWSMono\", \"logoAzure\", \"logoAzureMono\", \"logoBeats\", \"logoBusinessAnalytics\", \"logoCeph\", \"logoCloud\", \"logoCloudEnterprise\", \"logoCode\", \"logoCodesandbox\", \"logoCouchbase\", \"logoDocker\", \"logoDropwizard\", \"logoElastic\", \"logoElasticsearch\", \"logoElasticStack\", \"logoEnterpriseSearch\", \"logoEtcd\", \"logoGCP\", \"logoGCPMono\", \"logoGithub\", \"logoGmail\", \"logoGolang\", \"logoGoogleG\", \"logoHAproxy\", \"logoIBM\", \"logoIBMMono\", \"logoKafka\", \"logoKibana\", \"logoKubernetes\", \"logoLogging\", \"logoLogstash\", \"logoMaps\", \"logoMemcached\", \"logoMetrics\", \"logoMongodb\", \"logoMySQL\", \"logoNginx\", \"logoObservability\", \"logoOsquery\", \"logoPhp\", \"logoPostgres\", \"logoPrometheus\", \"logoRabbitmq\", \"logoRedis\", \"logoSecurity\", \"logoSiteSearch\", \"logoSketch\", \"logoSlack\", \"logoUptime\", \"logoWebhook\", \"logoWindows\", \"logoWorkplaceSearch\", \"logstashFilter\", \"logstashIf\", \"logstashInput\", \"logstashOutput\", \"logstashQueue\", \"machineLearningApp\", \"magnet\", \"magnifyWithMinus\", \"magnifyWithPlus\", \"managementApp\", \"mapMarker\", \"memory\", \"menu\", \"menuDown\", \"menuLeft\", \"menuRight\", \"menuUp\", \"merge\", \"metricbeatApp\", \"metricsApp\", \"minimize\", \"minus\", \"minusInCircle\", \"minusInCircleFilled\", \"mobile\", \"monitoringApp\", \"moon\", \"nested\", \"node\", \"notebookApp\", \"number\", \"offline\", \"online\", \"outlierDetectionJob\", \"package\", \"packetbeatApp\", \"pageSelect\", \"pagesSelect\", \"partial\", \"paperClip\", \"pause\", \"pencil\", \"percent\", \"pin\", \"pinFilled\", \"pipelineApp\", \"play\", \"playFilled\", \"plus\", \"plusInCircle\", \"plusInCircleFilled\", \"popout\", \"push\", \"questionInCircle\", \"quote\", \"recentlyViewedApp\", \"refresh\", \"regressionJob\", \"reporter\", \"reportingApp\", \"returnKey\", \"save\", \"savedObjectsApp\", \"scale\", \"search\", \"searchProfilerApp\", \"securityAnalyticsApp\", \"securityApp\", \"securitySignal\", \"securitySignalDetected\", \"securitySignalResolved\", \"shard\", \"share\", \"snowflake\", \"sortable\", \"sortDown\", \"sortLeft\", \"sortRight\", \"sortUp\", \"spacesApp\", \"sqlApp\", \"starEmpty\", \"starEmptySpace\", \"starFilled\", \"starFilledSpace\", \"starMinusEmpty\", \"starMinusFilled\", \"starPlusEmpty\", \"starPlusFilled\", \"stats\", \"stop\", \"stopFilled\", \"stopSlash\", \"storage\", \"string\", \"submodule\", \"swatchInput\", \"symlink\", \"tableOfContents\", \"tableDensityExpanded\", \"tableDensityCompact\", \"tableDensityNormal\", \"tag\", \"tear\", \"temperature\", \"timeline\", \"timelionApp\", \"timeslider\", \"training\", \"trash\", \"upgradeAssistantApp\", \"uptimeApp\", \"unfold\", \"unlink\", \"user\", \"users\", \"usersRolesApp\", \"vector\", \"videoPlayer\", \"visArea\", \"visAreaStacked\", \"visBarHorizontal\", \"visBarHorizontalStacked\", \"visBarVertical\", \"visBarVerticalStacked\", \"visGauge\", \"visGoal\", \"visLine\", \"visMapCoordinate\", \"visMapRegion\", \"visMetric\", \"visPie\", \"visTable\", \"visTagCloud\", \"visText\", \"visTimelion\", \"visualizeApp\", \"visVega\", \"visVisualBuilder\", \"watchesApp\", \"wordWrap\", \"wordWrapDisabled\", \"workplaceSearchApp\", \"wrench\", \"tokenClass\", \"tokenProperty\", \"tokenEnum\", \"tokenVariable\", \"tokenMethod\", \"tokenAnnotation\", \"tokenException\", \"tokenInterface\", \"tokenParameter\", \"tokenField\", \"tokenElement\", \"tokenFunction\", \"tokenBoolean\", \"tokenString\", \"tokenArray\", \"tokenNumber\", \"tokenConstant\", \"tokenObject\", \"tokenEvent\", \"tokenKey\", \"tokenNull\", \"tokenStruct\", \"tokenPackage\", \"tokenOperator\", \"tokenEnumMember\", \"tokenRepo\", \"tokenSymbol\", \"tokenFile\", \"tokenModule\", \"tokenNamespace\", \"tokenDate\", \"tokenIP\", \"tokenNested\", \"tokenAlias\", \"tokenShape\", \"tokenGeo\", \"tokenRange\", \"tokenBinary\", \"tokenJoin\", \"tokenPercolator\", \"tokenFlattened\", \"tokenRankFeature\", \"tokenRankFeatures\", \"tokenKeyword\", \"tokenCompletionSuggester\", \"tokenDenseVector\", \"tokenText\", \"tokenTokenCount\", \"tokenSearchType\", \"tokenHistogram\"]).isRequired, PropTypes.string.isRequired, PropTypes.elementType.isRequired]),\n        iconProps: PropTypes.any,\n        icon: PropTypes.element,\n        showToolTip: PropTypes.bool,\n        extraAction: PropTypes.shape({\n          type: PropTypes.oneOf([\"submit\", \"reset\", \"button\"]),\n          onClick: PropTypes.func,\n          iconType: PropTypes.oneOfType([PropTypes.oneOf([\"accessibility\", \"addDataApp\", \"advancedSettingsApp\", \"aggregate\", \"alert\", \"analyzeEvent\", \"annotation\", \"apmApp\", \"apmTrace\", \"apps\", \"appSearchApp\", \"arrowDown\", \"arrowLeft\", \"arrowRight\", \"arrowUp\", \"asterisk\", \"auditbeatApp\", \"beaker\", \"bell\", \"bellSlash\", \"bolt\", \"boxesHorizontal\", \"boxesVertical\", \"branch\", \"broom\", \"brush\", \"bug\", \"bullseye\", \"calendar\", \"canvasApp\", \"codeApp\", \"check\", \"checkInCircleFilled\", \"cheer\", \"classificationJob\", \"clock\", \"cloudDrizzle\", \"cloudStormy\", \"cloudSunny\", \"color\", \"compute\", \"console\", \"consoleApp\", \"continuityAbove\", \"continuityAboveBelow\", \"continuityBelow\", \"continuityWithin\", \"controlsHorizontal\", \"controlsVertical\", \"copy\", \"copyClipboard\", \"createAdvancedJob\", \"createMultiMetricJob\", \"createPopulationJob\", \"createSingleMetricJob\", \"cross\", \"crossClusterReplicationApp\", \"crosshairs\", \"crossInACircleFilled\", \"currency\", \"cut\", \"dashboardApp\", \"database\", \"dataVisualizer\", \"devToolsApp\", \"discoverApp\", \"document\", \"documentation\", \"documentEdit\", \"documents\", \"dot\", \"download\", \"editorAlignCenter\", \"editorAlignLeft\", \"editorAlignRight\", \"editorBold\", \"editorCodeBlock\", \"editorComment\", \"editorDistributeHorizontal\", \"editorDistributeVertical\", \"editorHeading\", \"editorItalic\", \"editorItemAlignLeft\", \"editorItemAlignBottom\", \"editorItemAlignCenter\", \"editorItemAlignMiddle\", \"editorItemAlignRight\", \"editorItemAlignTop\", \"editorLink\", \"editorOrderedList\", \"editorPositionBottomLeft\", \"editorPositionBottomRight\", \"editorPositionTopLeft\", \"editorPositionTopRight\", \"editorRedo\", \"editorStrike\", \"editorTable\", \"editorUnderline\", \"editorUndo\", \"editorUnorderedList\", \"email\", \"empty\", \"emsApp\", \"eql\", \"eraser\", \"exit\", \"expand\", \"expandMini\", \"exportAction\", \"eye\", \"eyeClosed\", \"faceHappy\", \"faceNeutral\", \"faceSad\", \"filebeatApp\", \"filter\", \"flag\", \"fold\", \"folderCheck\", \"folderClosed\", \"folderExclamation\", \"folderOpen\", \"frameNext\", \"framePrevious\", \"fullScreen\", \"fullScreenExit\", \"function\", \"gear\", \"gisApp\", \"glasses\", \"globe\", \"grab\", \"grabHorizontal\", \"graphApp\", \"grid\", \"grokApp\", \"heart\", \"heartbeatApp\", \"heatmap\", \"help\", \"home\", \"iInCircle\", \"image\", \"importAction\", \"indexClose\", \"indexEdit\", \"indexFlush\", \"indexManagementApp\", \"indexMapping\", \"indexOpen\", \"indexPatternApp\", \"indexRollupApp\", \"indexRuntime\", \"indexSettings\", \"inputOutput\", \"inspect\", \"invert\", \"ip\", \"keyboardShortcut\", \"kqlField\", \"kqlFunction\", \"kqlOperand\", \"kqlSelector\", \"kqlValue\", \"layers\", \"lensApp\", \"link\", \"list\", \"listAdd\", \"lock\", \"lockOpen\", \"logsApp\", \"logoAerospike\", \"logoApache\", \"logoAppSearch\", \"logoAWS\", \"logoAWSMono\", \"logoAzure\", \"logoAzureMono\", \"logoBeats\", \"logoBusinessAnalytics\", \"logoCeph\", \"logoCloud\", \"logoCloudEnterprise\", \"logoCode\", \"logoCodesandbox\", \"logoCouchbase\", \"logoDocker\", \"logoDropwizard\", \"logoElastic\", \"logoElasticsearch\", \"logoElasticStack\", \"logoEnterpriseSearch\", \"logoEtcd\", \"logoGCP\", \"logoGCPMono\", \"logoGithub\", \"logoGmail\", \"logoGolang\", \"logoGoogleG\", \"logoHAproxy\", \"logoIBM\", \"logoIBMMono\", \"logoKafka\", \"logoKibana\", \"logoKubernetes\", \"logoLogging\", \"logoLogstash\", \"logoMaps\", \"logoMemcached\", \"logoMetrics\", \"logoMongodb\", \"logoMySQL\", \"logoNginx\", \"logoObservability\", \"logoOsquery\", \"logoPhp\", \"logoPostgres\", \"logoPrometheus\", \"logoRabbitmq\", \"logoRedis\", \"logoSecurity\", \"logoSiteSearch\", \"logoSketch\", \"logoSlack\", \"logoUptime\", \"logoWebhook\", \"logoWindows\", \"logoWorkplaceSearch\", \"logstashFilter\", \"logstashIf\", \"logstashInput\", \"logstashOutput\", \"logstashQueue\", \"machineLearningApp\", \"magnet\", \"magnifyWithMinus\", \"magnifyWithPlus\", \"managementApp\", \"mapMarker\", \"memory\", \"menu\", \"menuDown\", \"menuLeft\", \"menuRight\", \"menuUp\", \"merge\", \"metricbeatApp\", \"metricsApp\", \"minimize\", \"minus\", \"minusInCircle\", \"minusInCircleFilled\", \"mobile\", \"monitoringApp\", \"moon\", \"nested\", \"node\", \"notebookApp\", \"number\", \"offline\", \"online\", \"outlierDetectionJob\", \"package\", \"packetbeatApp\", \"pageSelect\", \"pagesSelect\", \"partial\", \"paperClip\", \"pause\", \"pencil\", \"percent\", \"pin\", \"pinFilled\", \"pipelineApp\", \"play\", \"playFilled\", \"plus\", \"plusInCircle\", \"plusInCircleFilled\", \"popout\", \"push\", \"questionInCircle\", \"quote\", \"recentlyViewedApp\", \"refresh\", \"regressionJob\", \"reporter\", \"reportingApp\", \"returnKey\", \"save\", \"savedObjectsApp\", \"scale\", \"search\", \"searchProfilerApp\", \"securityAnalyticsApp\", \"securityApp\", \"securitySignal\", \"securitySignalDetected\", \"securitySignalResolved\", \"shard\", \"share\", \"snowflake\", \"sortable\", \"sortDown\", \"sortLeft\", \"sortRight\", \"sortUp\", \"spacesApp\", \"sqlApp\", \"starEmpty\", \"starEmptySpace\", \"starFilled\", \"starFilledSpace\", \"starMinusEmpty\", \"starMinusFilled\", \"starPlusEmpty\", \"starPlusFilled\", \"stats\", \"stop\", \"stopFilled\", \"stopSlash\", \"storage\", \"string\", \"submodule\", \"swatchInput\", \"symlink\", \"tableOfContents\", \"tableDensityExpanded\", \"tableDensityCompact\", \"tableDensityNormal\", \"tag\", \"tear\", \"temperature\", \"timeline\", \"timelionApp\", \"timeslider\", \"training\", \"trash\", \"upgradeAssistantApp\", \"uptimeApp\", \"unfold\", \"unlink\", \"user\", \"users\", \"usersRolesApp\", \"vector\", \"videoPlayer\", \"visArea\", \"visAreaStacked\", \"visBarHorizontal\", \"visBarHorizontalStacked\", \"visBarVertical\", \"visBarVerticalStacked\", \"visGauge\", \"visGoal\", \"visLine\", \"visMapCoordinate\", \"visMapRegion\", \"visMetric\", \"visPie\", \"visTable\", \"visTagCloud\", \"visText\", \"visTimelion\", \"visualizeApp\", \"visVega\", \"visVisualBuilder\", \"watchesApp\", \"wordWrap\", \"wordWrapDisabled\", \"workplaceSearchApp\", \"wrench\", \"tokenClass\", \"tokenProperty\", \"tokenEnum\", \"tokenVariable\", \"tokenMethod\", \"tokenAnnotation\", \"tokenException\", \"tokenInterface\", \"tokenParameter\", \"tokenField\", \"tokenElement\", \"tokenFunction\", \"tokenBoolean\", \"tokenString\", \"tokenArray\", \"tokenNumber\", \"tokenConstant\", \"tokenObject\", \"tokenEvent\", \"tokenKey\", \"tokenNull\", \"tokenStruct\", \"tokenPackage\", \"tokenOperator\", \"tokenEnumMember\", \"tokenRepo\", \"tokenSymbol\", \"tokenFile\", \"tokenModule\", \"tokenNamespace\", \"tokenDate\", \"tokenIP\", \"tokenNested\", \"tokenAlias\", \"tokenShape\", \"tokenGeo\", \"tokenRange\", \"tokenBinary\", \"tokenJoin\", \"tokenPercolator\", \"tokenFlattened\", \"tokenRankFeature\", \"tokenRankFeatures\", \"tokenKeyword\", \"tokenCompletionSuggester\", \"tokenDenseVector\", \"tokenText\", \"tokenTokenCount\", \"tokenSearchType\", \"tokenHistogram\"]).isRequired, PropTypes.string.isRequired, PropTypes.elementType.isRequired]).isRequired,\n          color: PropTypes.oneOf([\"accent\", \"danger\", \"ghost\", \"primary\", \"subdued\", \"success\", \"text\", \"warning\"]),\n          \"aria-label\": PropTypes.string,\n          \"aria-labelledby\": PropTypes.string,\n          isDisabled: PropTypes.bool,\n          size: PropTypes.oneOf([\"xs\", \"s\", \"m\"]),\n          iconSize: PropTypes.oneOf([\"original\", \"s\", \"m\", \"l\", \"xl\", \"xxl\"]),\n          isSelected: PropTypes.bool,\n          display: PropTypes.oneOf([\"base\", \"empty\", \"fill\"]),\n          className: PropTypes.string,\n          \"data-test-subj\": PropTypes.string,\n          buttonRef: PropTypes.any,\n          alwaysShow: PropTypes.bool\n        }),\n        onClick: PropTypes.func,\n        wrapText: PropTypes.bool,\n        buttonRef: PropTypes.any\n      }).isRequired]),\n\n      /**\n         * Show/hide/configure the action that switches the actual column with the column to the right side, provided EuiListGroupItemProps are merged\n         */\n      showMoveRight: PropTypes.oneOfType([PropTypes.bool.isRequired, PropTypes.shape({\n        className: PropTypes.string,\n        \"aria-label\": PropTypes.string,\n        \"data-test-subj\": PropTypes.string,\n        size: PropTypes.oneOf([\"xs\", \"s\", \"m\", \"l\"]),\n        color: PropTypes.oneOf([\"inherit\", \"primary\", \"text\", \"subdued\", \"ghost\"]),\n        label: PropTypes.node.isRequired,\n        isActive: PropTypes.bool,\n        isDisabled: PropTypes.bool,\n        href: PropTypes.string,\n        target: PropTypes.string,\n        rel: PropTypes.string,\n        iconType: PropTypes.oneOfType([PropTypes.oneOf([\"accessibility\", \"addDataApp\", \"advancedSettingsApp\", \"aggregate\", \"alert\", \"analyzeEvent\", \"annotation\", \"apmApp\", \"apmTrace\", \"apps\", \"appSearchApp\", \"arrowDown\", \"arrowLeft\", \"arrowRight\", \"arrowUp\", \"asterisk\", \"auditbeatApp\", \"beaker\", \"bell\", \"bellSlash\", \"bolt\", \"boxesHorizontal\", \"boxesVertical\", \"branch\", \"broom\", \"brush\", \"bug\", \"bullseye\", \"calendar\", \"canvasApp\", \"codeApp\", \"check\", \"checkInCircleFilled\", \"cheer\", \"classificationJob\", \"clock\", \"cloudDrizzle\", \"cloudStormy\", \"cloudSunny\", \"color\", \"compute\", \"console\", \"consoleApp\", \"continuityAbove\", \"continuityAboveBelow\", \"continuityBelow\", \"continuityWithin\", \"controlsHorizontal\", \"controlsVertical\", \"copy\", \"copyClipboard\", \"createAdvancedJob\", \"createMultiMetricJob\", \"createPopulationJob\", \"createSingleMetricJob\", \"cross\", \"crossClusterReplicationApp\", \"crosshairs\", \"crossInACircleFilled\", \"currency\", \"cut\", \"dashboardApp\", \"database\", \"dataVisualizer\", \"devToolsApp\", \"discoverApp\", \"document\", \"documentation\", \"documentEdit\", \"documents\", \"dot\", \"download\", \"editorAlignCenter\", \"editorAlignLeft\", \"editorAlignRight\", \"editorBold\", \"editorCodeBlock\", \"editorComment\", \"editorDistributeHorizontal\", \"editorDistributeVertical\", \"editorHeading\", \"editorItalic\", \"editorItemAlignLeft\", \"editorItemAlignBottom\", \"editorItemAlignCenter\", \"editorItemAlignMiddle\", \"editorItemAlignRight\", \"editorItemAlignTop\", \"editorLink\", \"editorOrderedList\", \"editorPositionBottomLeft\", \"editorPositionBottomRight\", \"editorPositionTopLeft\", \"editorPositionTopRight\", \"editorRedo\", \"editorStrike\", \"editorTable\", \"editorUnderline\", \"editorUndo\", \"editorUnorderedList\", \"email\", \"empty\", \"emsApp\", \"eql\", \"eraser\", \"exit\", \"expand\", \"expandMini\", \"exportAction\", \"eye\", \"eyeClosed\", \"faceHappy\", \"faceNeutral\", \"faceSad\", \"filebeatApp\", \"filter\", \"flag\", \"fold\", \"folderCheck\", \"folderClosed\", \"folderExclamation\", \"folderOpen\", \"frameNext\", \"framePrevious\", \"fullScreen\", \"fullScreenExit\", \"function\", \"gear\", \"gisApp\", \"glasses\", \"globe\", \"grab\", \"grabHorizontal\", \"graphApp\", \"grid\", \"grokApp\", \"heart\", \"heartbeatApp\", \"heatmap\", \"help\", \"home\", \"iInCircle\", \"image\", \"importAction\", \"indexClose\", \"indexEdit\", \"indexFlush\", \"indexManagementApp\", \"indexMapping\", \"indexOpen\", \"indexPatternApp\", \"indexRollupApp\", \"indexRuntime\", \"indexSettings\", \"inputOutput\", \"inspect\", \"invert\", \"ip\", \"keyboardShortcut\", \"kqlField\", \"kqlFunction\", \"kqlOperand\", \"kqlSelector\", \"kqlValue\", \"layers\", \"lensApp\", \"link\", \"list\", \"listAdd\", \"lock\", \"lockOpen\", \"logsApp\", \"logoAerospike\", \"logoApache\", \"logoAppSearch\", \"logoAWS\", \"logoAWSMono\", \"logoAzure\", \"logoAzureMono\", \"logoBeats\", \"logoBusinessAnalytics\", \"logoCeph\", \"logoCloud\", \"logoCloudEnterprise\", \"logoCode\", \"logoCodesandbox\", \"logoCouchbase\", \"logoDocker\", \"logoDropwizard\", \"logoElastic\", \"logoElasticsearch\", \"logoElasticStack\", \"logoEnterpriseSearch\", \"logoEtcd\", \"logoGCP\", \"logoGCPMono\", \"logoGithub\", \"logoGmail\", \"logoGolang\", \"logoGoogleG\", \"logoHAproxy\", \"logoIBM\", \"logoIBMMono\", \"logoKafka\", \"logoKibana\", \"logoKubernetes\", \"logoLogging\", \"logoLogstash\", \"logoMaps\", \"logoMemcached\", \"logoMetrics\", \"logoMongodb\", \"logoMySQL\", \"logoNginx\", \"logoObservability\", \"logoOsquery\", \"logoPhp\", \"logoPostgres\", \"logoPrometheus\", \"logoRabbitmq\", \"logoRedis\", \"logoSecurity\", \"logoSiteSearch\", \"logoSketch\", \"logoSlack\", \"logoUptime\", \"logoWebhook\", \"logoWindows\", \"logoWorkplaceSearch\", \"logstashFilter\", \"logstashIf\", \"logstashInput\", \"logstashOutput\", \"logstashQueue\", \"machineLearningApp\", \"magnet\", \"magnifyWithMinus\", \"magnifyWithPlus\", \"managementApp\", \"mapMarker\", \"memory\", \"menu\", \"menuDown\", \"menuLeft\", \"menuRight\", \"menuUp\", \"merge\", \"metricbeatApp\", \"metricsApp\", \"minimize\", \"minus\", \"minusInCircle\", \"minusInCircleFilled\", \"mobile\", \"monitoringApp\", \"moon\", \"nested\", \"node\", \"notebookApp\", \"number\", \"offline\", \"online\", \"outlierDetectionJob\", \"package\", \"packetbeatApp\", \"pageSelect\", \"pagesSelect\", \"partial\", \"paperClip\", \"pause\", \"pencil\", \"percent\", \"pin\", \"pinFilled\", \"pipelineApp\", \"play\", \"playFilled\", \"plus\", \"plusInCircle\", \"plusInCircleFilled\", \"popout\", \"push\", \"questionInCircle\", \"quote\", \"recentlyViewedApp\", \"refresh\", \"regressionJob\", \"reporter\", \"reportingApp\", \"returnKey\", \"save\", \"savedObjectsApp\", \"scale\", \"search\", \"searchProfilerApp\", \"securityAnalyticsApp\", \"securityApp\", \"securitySignal\", \"securitySignalDetected\", \"securitySignalResolved\", \"shard\", \"share\", \"snowflake\", \"sortable\", \"sortDown\", \"sortLeft\", \"sortRight\", \"sortUp\", \"spacesApp\", \"sqlApp\", \"starEmpty\", \"starEmptySpace\", \"starFilled\", \"starFilledSpace\", \"starMinusEmpty\", \"starMinusFilled\", \"starPlusEmpty\", \"starPlusFilled\", \"stats\", \"stop\", \"stopFilled\", \"stopSlash\", \"storage\", \"string\", \"submodule\", \"swatchInput\", \"symlink\", \"tableOfContents\", \"tableDensityExpanded\", \"tableDensityCompact\", \"tableDensityNormal\", \"tag\", \"tear\", \"temperature\", \"timeline\", \"timelionApp\", \"timeslider\", \"training\", \"trash\", \"upgradeAssistantApp\", \"uptimeApp\", \"unfold\", \"unlink\", \"user\", \"users\", \"usersRolesApp\", \"vector\", \"videoPlayer\", \"visArea\", \"visAreaStacked\", \"visBarHorizontal\", \"visBarHorizontalStacked\", \"visBarVertical\", \"visBarVerticalStacked\", \"visGauge\", \"visGoal\", \"visLine\", \"visMapCoordinate\", \"visMapRegion\", \"visMetric\", \"visPie\", \"visTable\", \"visTagCloud\", \"visText\", \"visTimelion\", \"visualizeApp\", \"visVega\", \"visVisualBuilder\", \"watchesApp\", \"wordWrap\", \"wordWrapDisabled\", \"workplaceSearchApp\", \"wrench\", \"tokenClass\", \"tokenProperty\", \"tokenEnum\", \"tokenVariable\", \"tokenMethod\", \"tokenAnnotation\", \"tokenException\", \"tokenInterface\", \"tokenParameter\", \"tokenField\", \"tokenElement\", \"tokenFunction\", \"tokenBoolean\", \"tokenString\", \"tokenArray\", \"tokenNumber\", \"tokenConstant\", \"tokenObject\", \"tokenEvent\", \"tokenKey\", \"tokenNull\", \"tokenStruct\", \"tokenPackage\", \"tokenOperator\", \"tokenEnumMember\", \"tokenRepo\", \"tokenSymbol\", \"tokenFile\", \"tokenModule\", \"tokenNamespace\", \"tokenDate\", \"tokenIP\", \"tokenNested\", \"tokenAlias\", \"tokenShape\", \"tokenGeo\", \"tokenRange\", \"tokenBinary\", \"tokenJoin\", \"tokenPercolator\", \"tokenFlattened\", \"tokenRankFeature\", \"tokenRankFeatures\", \"tokenKeyword\", \"tokenCompletionSuggester\", \"tokenDenseVector\", \"tokenText\", \"tokenTokenCount\", \"tokenSearchType\", \"tokenHistogram\"]).isRequired, PropTypes.string.isRequired, PropTypes.elementType.isRequired]),\n        iconProps: PropTypes.any,\n        icon: PropTypes.element,\n        showToolTip: PropTypes.bool,\n        extraAction: PropTypes.shape({\n          type: PropTypes.oneOf([\"submit\", \"reset\", \"button\"]),\n          onClick: PropTypes.func,\n          iconType: PropTypes.oneOfType([PropTypes.oneOf([\"accessibility\", \"addDataApp\", \"advancedSettingsApp\", \"aggregate\", \"alert\", \"analyzeEvent\", \"annotation\", \"apmApp\", \"apmTrace\", \"apps\", \"appSearchApp\", \"arrowDown\", \"arrowLeft\", \"arrowRight\", \"arrowUp\", \"asterisk\", \"auditbeatApp\", \"beaker\", \"bell\", \"bellSlash\", \"bolt\", \"boxesHorizontal\", \"boxesVertical\", \"branch\", \"broom\", \"brush\", \"bug\", \"bullseye\", \"calendar\", \"canvasApp\", \"codeApp\", \"check\", \"checkInCircleFilled\", \"cheer\", \"classificationJob\", \"clock\", \"cloudDrizzle\", \"cloudStormy\", \"cloudSunny\", \"color\", \"compute\", \"console\", \"consoleApp\", \"continuityAbove\", \"continuityAboveBelow\", \"continuityBelow\", \"continuityWithin\", \"controlsHorizontal\", \"controlsVertical\", \"copy\", \"copyClipboard\", \"createAdvancedJob\", \"createMultiMetricJob\", \"createPopulationJob\", \"createSingleMetricJob\", \"cross\", \"crossClusterReplicationApp\", \"crosshairs\", \"crossInACircleFilled\", \"currency\", \"cut\", \"dashboardApp\", \"database\", \"dataVisualizer\", \"devToolsApp\", \"discoverApp\", \"document\", \"documentation\", \"documentEdit\", \"documents\", \"dot\", \"download\", \"editorAlignCenter\", \"editorAlignLeft\", \"editorAlignRight\", \"editorBold\", \"editorCodeBlock\", \"editorComment\", \"editorDistributeHorizontal\", \"editorDistributeVertical\", \"editorHeading\", \"editorItalic\", \"editorItemAlignLeft\", \"editorItemAlignBottom\", \"editorItemAlignCenter\", \"editorItemAlignMiddle\", \"editorItemAlignRight\", \"editorItemAlignTop\", \"editorLink\", \"editorOrderedList\", \"editorPositionBottomLeft\", \"editorPositionBottomRight\", \"editorPositionTopLeft\", \"editorPositionTopRight\", \"editorRedo\", \"editorStrike\", \"editorTable\", \"editorUnderline\", \"editorUndo\", \"editorUnorderedList\", \"email\", \"empty\", \"emsApp\", \"eql\", \"eraser\", \"exit\", \"expand\", \"expandMini\", \"exportAction\", \"eye\", \"eyeClosed\", \"faceHappy\", \"faceNeutral\", \"faceSad\", \"filebeatApp\", \"filter\", \"flag\", \"fold\", \"folderCheck\", \"folderClosed\", \"folderExclamation\", \"folderOpen\", \"frameNext\", \"framePrevious\", \"fullScreen\", \"fullScreenExit\", \"function\", \"gear\", \"gisApp\", \"glasses\", \"globe\", \"grab\", \"grabHorizontal\", \"graphApp\", \"grid\", \"grokApp\", \"heart\", \"heartbeatApp\", \"heatmap\", \"help\", \"home\", \"iInCircle\", \"image\", \"importAction\", \"indexClose\", \"indexEdit\", \"indexFlush\", \"indexManagementApp\", \"indexMapping\", \"indexOpen\", \"indexPatternApp\", \"indexRollupApp\", \"indexRuntime\", \"indexSettings\", \"inputOutput\", \"inspect\", \"invert\", \"ip\", \"keyboardShortcut\", \"kqlField\", \"kqlFunction\", \"kqlOperand\", \"kqlSelector\", \"kqlValue\", \"layers\", \"lensApp\", \"link\", \"list\", \"listAdd\", \"lock\", \"lockOpen\", \"logsApp\", \"logoAerospike\", \"logoApache\", \"logoAppSearch\", \"logoAWS\", \"logoAWSMono\", \"logoAzure\", \"logoAzureMono\", \"logoBeats\", \"logoBusinessAnalytics\", \"logoCeph\", \"logoCloud\", \"logoCloudEnterprise\", \"logoCode\", \"logoCodesandbox\", \"logoCouchbase\", \"logoDocker\", \"logoDropwizard\", \"logoElastic\", \"logoElasticsearch\", \"logoElasticStack\", \"logoEnterpriseSearch\", \"logoEtcd\", \"logoGCP\", \"logoGCPMono\", \"logoGithub\", \"logoGmail\", \"logoGolang\", \"logoGoogleG\", \"logoHAproxy\", \"logoIBM\", \"logoIBMMono\", \"logoKafka\", \"logoKibana\", \"logoKubernetes\", \"logoLogging\", \"logoLogstash\", \"logoMaps\", \"logoMemcached\", \"logoMetrics\", \"logoMongodb\", \"logoMySQL\", \"logoNginx\", \"logoObservability\", \"logoOsquery\", \"logoPhp\", \"logoPostgres\", \"logoPrometheus\", \"logoRabbitmq\", \"logoRedis\", \"logoSecurity\", \"logoSiteSearch\", \"logoSketch\", \"logoSlack\", \"logoUptime\", \"logoWebhook\", \"logoWindows\", \"logoWorkplaceSearch\", \"logstashFilter\", \"logstashIf\", \"logstashInput\", \"logstashOutput\", \"logstashQueue\", \"machineLearningApp\", \"magnet\", \"magnifyWithMinus\", \"magnifyWithPlus\", \"managementApp\", \"mapMarker\", \"memory\", \"menu\", \"menuDown\", \"menuLeft\", \"menuRight\", \"menuUp\", \"merge\", \"metricbeatApp\", \"metricsApp\", \"minimize\", \"minus\", \"minusInCircle\", \"minusInCircleFilled\", \"mobile\", \"monitoringApp\", \"moon\", \"nested\", \"node\", \"notebookApp\", \"number\", \"offline\", \"online\", \"outlierDetectionJob\", \"package\", \"packetbeatApp\", \"pageSelect\", \"pagesSelect\", \"partial\", \"paperClip\", \"pause\", \"pencil\", \"percent\", \"pin\", \"pinFilled\", \"pipelineApp\", \"play\", \"playFilled\", \"plus\", \"plusInCircle\", \"plusInCircleFilled\", \"popout\", \"push\", \"questionInCircle\", \"quote\", \"recentlyViewedApp\", \"refresh\", \"regressionJob\", \"reporter\", \"reportingApp\", \"returnKey\", \"save\", \"savedObjectsApp\", \"scale\", \"search\", \"searchProfilerApp\", \"securityAnalyticsApp\", \"securityApp\", \"securitySignal\", \"securitySignalDetected\", \"securitySignalResolved\", \"shard\", \"share\", \"snowflake\", \"sortable\", \"sortDown\", \"sortLeft\", \"sortRight\", \"sortUp\", \"spacesApp\", \"sqlApp\", \"starEmpty\", \"starEmptySpace\", \"starFilled\", \"starFilledSpace\", \"starMinusEmpty\", \"starMinusFilled\", \"starPlusEmpty\", \"starPlusFilled\", \"stats\", \"stop\", \"stopFilled\", \"stopSlash\", \"storage\", \"string\", \"submodule\", \"swatchInput\", \"symlink\", \"tableOfContents\", \"tableDensityExpanded\", \"tableDensityCompact\", \"tableDensityNormal\", \"tag\", \"tear\", \"temperature\", \"timeline\", \"timelionApp\", \"timeslider\", \"training\", \"trash\", \"upgradeAssistantApp\", \"uptimeApp\", \"unfold\", \"unlink\", \"user\", \"users\", \"usersRolesApp\", \"vector\", \"videoPlayer\", \"visArea\", \"visAreaStacked\", \"visBarHorizontal\", \"visBarHorizontalStacked\", \"visBarVertical\", \"visBarVerticalStacked\", \"visGauge\", \"visGoal\", \"visLine\", \"visMapCoordinate\", \"visMapRegion\", \"visMetric\", \"visPie\", \"visTable\", \"visTagCloud\", \"visText\", \"visTimelion\", \"visualizeApp\", \"visVega\", \"visVisualBuilder\", \"watchesApp\", \"wordWrap\", \"wordWrapDisabled\", \"workplaceSearchApp\", \"wrench\", \"tokenClass\", \"tokenProperty\", \"tokenEnum\", \"tokenVariable\", \"tokenMethod\", \"tokenAnnotation\", \"tokenException\", \"tokenInterface\", \"tokenParameter\", \"tokenField\", \"tokenElement\", \"tokenFunction\", \"tokenBoolean\", \"tokenString\", \"tokenArray\", \"tokenNumber\", \"tokenConstant\", \"tokenObject\", \"tokenEvent\", \"tokenKey\", \"tokenNull\", \"tokenStruct\", \"tokenPackage\", \"tokenOperator\", \"tokenEnumMember\", \"tokenRepo\", \"tokenSymbol\", \"tokenFile\", \"tokenModule\", \"tokenNamespace\", \"tokenDate\", \"tokenIP\", \"tokenNested\", \"tokenAlias\", \"tokenShape\", \"tokenGeo\", \"tokenRange\", \"tokenBinary\", \"tokenJoin\", \"tokenPercolator\", \"tokenFlattened\", \"tokenRankFeature\", \"tokenRankFeatures\", \"tokenKeyword\", \"tokenCompletionSuggester\", \"tokenDenseVector\", \"tokenText\", \"tokenTokenCount\", \"tokenSearchType\", \"tokenHistogram\"]).isRequired, PropTypes.string.isRequired, PropTypes.elementType.isRequired]).isRequired,\n          color: PropTypes.oneOf([\"accent\", \"danger\", \"ghost\", \"primary\", \"subdued\", \"success\", \"text\", \"warning\"]),\n          \"aria-label\": PropTypes.string,\n          \"aria-labelledby\": PropTypes.string,\n          isDisabled: PropTypes.bool,\n          size: PropTypes.oneOf([\"xs\", \"s\", \"m\"]),\n          iconSize: PropTypes.oneOf([\"original\", \"s\", \"m\", \"l\", \"xl\", \"xxl\"]),\n          isSelected: PropTypes.bool,\n          display: PropTypes.oneOf([\"base\", \"empty\", \"fill\"]),\n          className: PropTypes.string,\n          \"data-test-subj\": PropTypes.string,\n          buttonRef: PropTypes.any,\n          alwaysShow: PropTypes.bool\n        }),\n        onClick: PropTypes.func,\n        wrapText: PropTypes.bool,\n        buttonRef: PropTypes.any\n      }).isRequired]),\n\n      /**\n         * Show/hide/configure the action to sort ascending by the actual column, provided EuiListGroupItemProps are merged\n         */\n      showSortAsc: PropTypes.oneOfType([PropTypes.bool.isRequired, PropTypes.shape({\n        className: PropTypes.string,\n        \"aria-label\": PropTypes.string,\n        \"data-test-subj\": PropTypes.string,\n        size: PropTypes.oneOf([\"xs\", \"s\", \"m\", \"l\"]),\n        color: PropTypes.oneOf([\"inherit\", \"primary\", \"text\", \"subdued\", \"ghost\"]),\n        label: PropTypes.node.isRequired,\n        isActive: PropTypes.bool,\n        isDisabled: PropTypes.bool,\n        href: PropTypes.string,\n        target: PropTypes.string,\n        rel: PropTypes.string,\n        iconType: PropTypes.oneOfType([PropTypes.oneOf([\"accessibility\", \"addDataApp\", \"advancedSettingsApp\", \"aggregate\", \"alert\", \"analyzeEvent\", \"annotation\", \"apmApp\", \"apmTrace\", \"apps\", \"appSearchApp\", \"arrowDown\", \"arrowLeft\", \"arrowRight\", \"arrowUp\", \"asterisk\", \"auditbeatApp\", \"beaker\", \"bell\", \"bellSlash\", \"bolt\", \"boxesHorizontal\", \"boxesVertical\", \"branch\", \"broom\", \"brush\", \"bug\", \"bullseye\", \"calendar\", \"canvasApp\", \"codeApp\", \"check\", \"checkInCircleFilled\", \"cheer\", \"classificationJob\", \"clock\", \"cloudDrizzle\", \"cloudStormy\", \"cloudSunny\", \"color\", \"compute\", \"console\", \"consoleApp\", \"continuityAbove\", \"continuityAboveBelow\", \"continuityBelow\", \"continuityWithin\", \"controlsHorizontal\", \"controlsVertical\", \"copy\", \"copyClipboard\", \"createAdvancedJob\", \"createMultiMetricJob\", \"createPopulationJob\", \"createSingleMetricJob\", \"cross\", \"crossClusterReplicationApp\", \"crosshairs\", \"crossInACircleFilled\", \"currency\", \"cut\", \"dashboardApp\", \"database\", \"dataVisualizer\", \"devToolsApp\", \"discoverApp\", \"document\", \"documentation\", \"documentEdit\", \"documents\", \"dot\", \"download\", \"editorAlignCenter\", \"editorAlignLeft\", \"editorAlignRight\", \"editorBold\", \"editorCodeBlock\", \"editorComment\", \"editorDistributeHorizontal\", \"editorDistributeVertical\", \"editorHeading\", \"editorItalic\", \"editorItemAlignLeft\", \"editorItemAlignBottom\", \"editorItemAlignCenter\", \"editorItemAlignMiddle\", \"editorItemAlignRight\", \"editorItemAlignTop\", \"editorLink\", \"editorOrderedList\", \"editorPositionBottomLeft\", \"editorPositionBottomRight\", \"editorPositionTopLeft\", \"editorPositionTopRight\", \"editorRedo\", \"editorStrike\", \"editorTable\", \"editorUnderline\", \"editorUndo\", \"editorUnorderedList\", \"email\", \"empty\", \"emsApp\", \"eql\", \"eraser\", \"exit\", \"expand\", \"expandMini\", \"exportAction\", \"eye\", \"eyeClosed\", \"faceHappy\", \"faceNeutral\", \"faceSad\", \"filebeatApp\", \"filter\", \"flag\", \"fold\", \"folderCheck\", \"folderClosed\", \"folderExclamation\", \"folderOpen\", \"frameNext\", \"framePrevious\", \"fullScreen\", \"fullScreenExit\", \"function\", \"gear\", \"gisApp\", \"glasses\", \"globe\", \"grab\", \"grabHorizontal\", \"graphApp\", \"grid\", \"grokApp\", \"heart\", \"heartbeatApp\", \"heatmap\", \"help\", \"home\", \"iInCircle\", \"image\", \"importAction\", \"indexClose\", \"indexEdit\", \"indexFlush\", \"indexManagementApp\", \"indexMapping\", \"indexOpen\", \"indexPatternApp\", \"indexRollupApp\", \"indexRuntime\", \"indexSettings\", \"inputOutput\", \"inspect\", \"invert\", \"ip\", \"keyboardShortcut\", \"kqlField\", \"kqlFunction\", \"kqlOperand\", \"kqlSelector\", \"kqlValue\", \"layers\", \"lensApp\", \"link\", \"list\", \"listAdd\", \"lock\", \"lockOpen\", \"logsApp\", \"logoAerospike\", \"logoApache\", \"logoAppSearch\", \"logoAWS\", \"logoAWSMono\", \"logoAzure\", \"logoAzureMono\", \"logoBeats\", \"logoBusinessAnalytics\", \"logoCeph\", \"logoCloud\", \"logoCloudEnterprise\", \"logoCode\", \"logoCodesandbox\", \"logoCouchbase\", \"logoDocker\", \"logoDropwizard\", \"logoElastic\", \"logoElasticsearch\", \"logoElasticStack\", \"logoEnterpriseSearch\", \"logoEtcd\", \"logoGCP\", \"logoGCPMono\", \"logoGithub\", \"logoGmail\", \"logoGolang\", \"logoGoogleG\", \"logoHAproxy\", \"logoIBM\", \"logoIBMMono\", \"logoKafka\", \"logoKibana\", \"logoKubernetes\", \"logoLogging\", \"logoLogstash\", \"logoMaps\", \"logoMemcached\", \"logoMetrics\", \"logoMongodb\", \"logoMySQL\", \"logoNginx\", \"logoObservability\", \"logoOsquery\", \"logoPhp\", \"logoPostgres\", \"logoPrometheus\", \"logoRabbitmq\", \"logoRedis\", \"logoSecurity\", \"logoSiteSearch\", \"logoSketch\", \"logoSlack\", \"logoUptime\", \"logoWebhook\", \"logoWindows\", \"logoWorkplaceSearch\", \"logstashFilter\", \"logstashIf\", \"logstashInput\", \"logstashOutput\", \"logstashQueue\", \"machineLearningApp\", \"magnet\", \"magnifyWithMinus\", \"magnifyWithPlus\", \"managementApp\", \"mapMarker\", \"memory\", \"menu\", \"menuDown\", \"menuLeft\", \"menuRight\", \"menuUp\", \"merge\", \"metricbeatApp\", \"metricsApp\", \"minimize\", \"minus\", \"minusInCircle\", \"minusInCircleFilled\", \"mobile\", \"monitoringApp\", \"moon\", \"nested\", \"node\", \"notebookApp\", \"number\", \"offline\", \"online\", \"outlierDetectionJob\", \"package\", \"packetbeatApp\", \"pageSelect\", \"pagesSelect\", \"partial\", \"paperClip\", \"pause\", \"pencil\", \"percent\", \"pin\", \"pinFilled\", \"pipelineApp\", \"play\", \"playFilled\", \"plus\", \"plusInCircle\", \"plusInCircleFilled\", \"popout\", \"push\", \"questionInCircle\", \"quote\", \"recentlyViewedApp\", \"refresh\", \"regressionJob\", \"reporter\", \"reportingApp\", \"returnKey\", \"save\", \"savedObjectsApp\", \"scale\", \"search\", \"searchProfilerApp\", \"securityAnalyticsApp\", \"securityApp\", \"securitySignal\", \"securitySignalDetected\", \"securitySignalResolved\", \"shard\", \"share\", \"snowflake\", \"sortable\", \"sortDown\", \"sortLeft\", \"sortRight\", \"sortUp\", \"spacesApp\", \"sqlApp\", \"starEmpty\", \"starEmptySpace\", \"starFilled\", \"starFilledSpace\", \"starMinusEmpty\", \"starMinusFilled\", \"starPlusEmpty\", \"starPlusFilled\", \"stats\", \"stop\", \"stopFilled\", \"stopSlash\", \"storage\", \"string\", \"submodule\", \"swatchInput\", \"symlink\", \"tableOfContents\", \"tableDensityExpanded\", \"tableDensityCompact\", \"tableDensityNormal\", \"tag\", \"tear\", \"temperature\", \"timeline\", \"timelionApp\", \"timeslider\", \"training\", \"trash\", \"upgradeAssistantApp\", \"uptimeApp\", \"unfold\", \"unlink\", \"user\", \"users\", \"usersRolesApp\", \"vector\", \"videoPlayer\", \"visArea\", \"visAreaStacked\", \"visBarHorizontal\", \"visBarHorizontalStacked\", \"visBarVertical\", \"visBarVerticalStacked\", \"visGauge\", \"visGoal\", \"visLine\", \"visMapCoordinate\", \"visMapRegion\", \"visMetric\", \"visPie\", \"visTable\", \"visTagCloud\", \"visText\", \"visTimelion\", \"visualizeApp\", \"visVega\", \"visVisualBuilder\", \"watchesApp\", \"wordWrap\", \"wordWrapDisabled\", \"workplaceSearchApp\", \"wrench\", \"tokenClass\", \"tokenProperty\", \"tokenEnum\", \"tokenVariable\", \"tokenMethod\", \"tokenAnnotation\", \"tokenException\", \"tokenInterface\", \"tokenParameter\", \"tokenField\", \"tokenElement\", \"tokenFunction\", \"tokenBoolean\", \"tokenString\", \"tokenArray\", \"tokenNumber\", \"tokenConstant\", \"tokenObject\", \"tokenEvent\", \"tokenKey\", \"tokenNull\", \"tokenStruct\", \"tokenPackage\", \"tokenOperator\", \"tokenEnumMember\", \"tokenRepo\", \"tokenSymbol\", \"tokenFile\", \"tokenModule\", \"tokenNamespace\", \"tokenDate\", \"tokenIP\", \"tokenNested\", \"tokenAlias\", \"tokenShape\", \"tokenGeo\", \"tokenRange\", \"tokenBinary\", \"tokenJoin\", \"tokenPercolator\", \"tokenFlattened\", \"tokenRankFeature\", \"tokenRankFeatures\", \"tokenKeyword\", \"tokenCompletionSuggester\", \"tokenDenseVector\", \"tokenText\", \"tokenTokenCount\", \"tokenSearchType\", \"tokenHistogram\"]).isRequired, PropTypes.string.isRequired, PropTypes.elementType.isRequired]),\n        iconProps: PropTypes.any,\n        icon: PropTypes.element,\n        showToolTip: PropTypes.bool,\n        extraAction: PropTypes.shape({\n          type: PropTypes.oneOf([\"submit\", \"reset\", \"button\"]),\n          onClick: PropTypes.func,\n          iconType: PropTypes.oneOfType([PropTypes.oneOf([\"accessibility\", \"addDataApp\", \"advancedSettingsApp\", \"aggregate\", \"alert\", \"analyzeEvent\", \"annotation\", \"apmApp\", \"apmTrace\", \"apps\", \"appSearchApp\", \"arrowDown\", \"arrowLeft\", \"arrowRight\", \"arrowUp\", \"asterisk\", \"auditbeatApp\", \"beaker\", \"bell\", \"bellSlash\", \"bolt\", \"boxesHorizontal\", \"boxesVertical\", \"branch\", \"broom\", \"brush\", \"bug\", \"bullseye\", \"calendar\", \"canvasApp\", \"codeApp\", \"check\", \"checkInCircleFilled\", \"cheer\", \"classificationJob\", \"clock\", \"cloudDrizzle\", \"cloudStormy\", \"cloudSunny\", \"color\", \"compute\", \"console\", \"consoleApp\", \"continuityAbove\", \"continuityAboveBelow\", \"continuityBelow\", \"continuityWithin\", \"controlsHorizontal\", \"controlsVertical\", \"copy\", \"copyClipboard\", \"createAdvancedJob\", \"createMultiMetricJob\", \"createPopulationJob\", \"createSingleMetricJob\", \"cross\", \"crossClusterReplicationApp\", \"crosshairs\", \"crossInACircleFilled\", \"currency\", \"cut\", \"dashboardApp\", \"database\", \"dataVisualizer\", \"devToolsApp\", \"discoverApp\", \"document\", \"documentation\", \"documentEdit\", \"documents\", \"dot\", \"download\", \"editorAlignCenter\", \"editorAlignLeft\", \"editorAlignRight\", \"editorBold\", \"editorCodeBlock\", \"editorComment\", \"editorDistributeHorizontal\", \"editorDistributeVertical\", \"editorHeading\", \"editorItalic\", \"editorItemAlignLeft\", \"editorItemAlignBottom\", \"editorItemAlignCenter\", \"editorItemAlignMiddle\", \"editorItemAlignRight\", \"editorItemAlignTop\", \"editorLink\", \"editorOrderedList\", \"editorPositionBottomLeft\", \"editorPositionBottomRight\", \"editorPositionTopLeft\", \"editorPositionTopRight\", \"editorRedo\", \"editorStrike\", \"editorTable\", \"editorUnderline\", \"editorUndo\", \"editorUnorderedList\", \"email\", \"empty\", \"emsApp\", \"eql\", \"eraser\", \"exit\", \"expand\", \"expandMini\", \"exportAction\", \"eye\", \"eyeClosed\", \"faceHappy\", \"faceNeutral\", \"faceSad\", \"filebeatApp\", \"filter\", \"flag\", \"fold\", \"folderCheck\", \"folderClosed\", \"folderExclamation\", \"folderOpen\", \"frameNext\", \"framePrevious\", \"fullScreen\", \"fullScreenExit\", \"function\", \"gear\", \"gisApp\", \"glasses\", \"globe\", \"grab\", \"grabHorizontal\", \"graphApp\", \"grid\", \"grokApp\", \"heart\", \"heartbeatApp\", \"heatmap\", \"help\", \"home\", \"iInCircle\", \"image\", \"importAction\", \"indexClose\", \"indexEdit\", \"indexFlush\", \"indexManagementApp\", \"indexMapping\", \"indexOpen\", \"indexPatternApp\", \"indexRollupApp\", \"indexRuntime\", \"indexSettings\", \"inputOutput\", \"inspect\", \"invert\", \"ip\", \"keyboardShortcut\", \"kqlField\", \"kqlFunction\", \"kqlOperand\", \"kqlSelector\", \"kqlValue\", \"layers\", \"lensApp\", \"link\", \"list\", \"listAdd\", \"lock\", \"lockOpen\", \"logsApp\", \"logoAerospike\", \"logoApache\", \"logoAppSearch\", \"logoAWS\", \"logoAWSMono\", \"logoAzure\", \"logoAzureMono\", \"logoBeats\", \"logoBusinessAnalytics\", \"logoCeph\", \"logoCloud\", \"logoCloudEnterprise\", \"logoCode\", \"logoCodesandbox\", \"logoCouchbase\", \"logoDocker\", \"logoDropwizard\", \"logoElastic\", \"logoElasticsearch\", \"logoElasticStack\", \"logoEnterpriseSearch\", \"logoEtcd\", \"logoGCP\", \"logoGCPMono\", \"logoGithub\", \"logoGmail\", \"logoGolang\", \"logoGoogleG\", \"logoHAproxy\", \"logoIBM\", \"logoIBMMono\", \"logoKafka\", \"logoKibana\", \"logoKubernetes\", \"logoLogging\", \"logoLogstash\", \"logoMaps\", \"logoMemcached\", \"logoMetrics\", \"logoMongodb\", \"logoMySQL\", \"logoNginx\", \"logoObservability\", \"logoOsquery\", \"logoPhp\", \"logoPostgres\", \"logoPrometheus\", \"logoRabbitmq\", \"logoRedis\", \"logoSecurity\", \"logoSiteSearch\", \"logoSketch\", \"logoSlack\", \"logoUptime\", \"logoWebhook\", \"logoWindows\", \"logoWorkplaceSearch\", \"logstashFilter\", \"logstashIf\", \"logstashInput\", \"logstashOutput\", \"logstashQueue\", \"machineLearningApp\", \"magnet\", \"magnifyWithMinus\", \"magnifyWithPlus\", \"managementApp\", \"mapMarker\", \"memory\", \"menu\", \"menuDown\", \"menuLeft\", \"menuRight\", \"menuUp\", \"merge\", \"metricbeatApp\", \"metricsApp\", \"minimize\", \"minus\", \"minusInCircle\", \"minusInCircleFilled\", \"mobile\", \"monitoringApp\", \"moon\", \"nested\", \"node\", \"notebookApp\", \"number\", \"offline\", \"online\", \"outlierDetectionJob\", \"package\", \"packetbeatApp\", \"pageSelect\", \"pagesSelect\", \"partial\", \"paperClip\", \"pause\", \"pencil\", \"percent\", \"pin\", \"pinFilled\", \"pipelineApp\", \"play\", \"playFilled\", \"plus\", \"plusInCircle\", \"plusInCircleFilled\", \"popout\", \"push\", \"questionInCircle\", \"quote\", \"recentlyViewedApp\", \"refresh\", \"regressionJob\", \"reporter\", \"reportingApp\", \"returnKey\", \"save\", \"savedObjectsApp\", \"scale\", \"search\", \"searchProfilerApp\", \"securityAnalyticsApp\", \"securityApp\", \"securitySignal\", \"securitySignalDetected\", \"securitySignalResolved\", \"shard\", \"share\", \"snowflake\", \"sortable\", \"sortDown\", \"sortLeft\", \"sortRight\", \"sortUp\", \"spacesApp\", \"sqlApp\", \"starEmpty\", \"starEmptySpace\", \"starFilled\", \"starFilledSpace\", \"starMinusEmpty\", \"starMinusFilled\", \"starPlusEmpty\", \"starPlusFilled\", \"stats\", \"stop\", \"stopFilled\", \"stopSlash\", \"storage\", \"string\", \"submodule\", \"swatchInput\", \"symlink\", \"tableOfContents\", \"tableDensityExpanded\", \"tableDensityCompact\", \"tableDensityNormal\", \"tag\", \"tear\", \"temperature\", \"timeline\", \"timelionApp\", \"timeslider\", \"training\", \"trash\", \"upgradeAssistantApp\", \"uptimeApp\", \"unfold\", \"unlink\", \"user\", \"users\", \"usersRolesApp\", \"vector\", \"videoPlayer\", \"visArea\", \"visAreaStacked\", \"visBarHorizontal\", \"visBarHorizontalStacked\", \"visBarVertical\", \"visBarVerticalStacked\", \"visGauge\", \"visGoal\", \"visLine\", \"visMapCoordinate\", \"visMapRegion\", \"visMetric\", \"visPie\", \"visTable\", \"visTagCloud\", \"visText\", \"visTimelion\", \"visualizeApp\", \"visVega\", \"visVisualBuilder\", \"watchesApp\", \"wordWrap\", \"wordWrapDisabled\", \"workplaceSearchApp\", \"wrench\", \"tokenClass\", \"tokenProperty\", \"tokenEnum\", \"tokenVariable\", \"tokenMethod\", \"tokenAnnotation\", \"tokenException\", \"tokenInterface\", \"tokenParameter\", \"tokenField\", \"tokenElement\", \"tokenFunction\", \"tokenBoolean\", \"tokenString\", \"tokenArray\", \"tokenNumber\", \"tokenConstant\", \"tokenObject\", \"tokenEvent\", \"tokenKey\", \"tokenNull\", \"tokenStruct\", \"tokenPackage\", \"tokenOperator\", \"tokenEnumMember\", \"tokenRepo\", \"tokenSymbol\", \"tokenFile\", \"tokenModule\", \"tokenNamespace\", \"tokenDate\", \"tokenIP\", \"tokenNested\", \"tokenAlias\", \"tokenShape\", \"tokenGeo\", \"tokenRange\", \"tokenBinary\", \"tokenJoin\", \"tokenPercolator\", \"tokenFlattened\", \"tokenRankFeature\", \"tokenRankFeatures\", \"tokenKeyword\", \"tokenCompletionSuggester\", \"tokenDenseVector\", \"tokenText\", \"tokenTokenCount\", \"tokenSearchType\", \"tokenHistogram\"]).isRequired, PropTypes.string.isRequired, PropTypes.elementType.isRequired]).isRequired,\n          color: PropTypes.oneOf([\"accent\", \"danger\", \"ghost\", \"primary\", \"subdued\", \"success\", \"text\", \"warning\"]),\n          \"aria-label\": PropTypes.string,\n          \"aria-labelledby\": PropTypes.string,\n          isDisabled: PropTypes.bool,\n          size: PropTypes.oneOf([\"xs\", \"s\", \"m\"]),\n          iconSize: PropTypes.oneOf([\"original\", \"s\", \"m\", \"l\", \"xl\", \"xxl\"]),\n          isSelected: PropTypes.bool,\n          display: PropTypes.oneOf([\"base\", \"empty\", \"fill\"]),\n          className: PropTypes.string,\n          \"data-test-subj\": PropTypes.string,\n          buttonRef: PropTypes.any,\n          alwaysShow: PropTypes.bool\n        }),\n        onClick: PropTypes.func,\n        wrapText: PropTypes.bool,\n        buttonRef: PropTypes.any\n      }).isRequired]),\n\n      /**\n         * Show/hide/configure the action to sort descending by the actual column, provided EuiListGroupItemProps are merged\n         */\n      showSortDesc: PropTypes.oneOfType([PropTypes.bool.isRequired, PropTypes.shape({\n        className: PropTypes.string,\n        \"aria-label\": PropTypes.string,\n        \"data-test-subj\": PropTypes.string,\n        size: PropTypes.oneOf([\"xs\", \"s\", \"m\", \"l\"]),\n        color: PropTypes.oneOf([\"inherit\", \"primary\", \"text\", \"subdued\", \"ghost\"]),\n        label: PropTypes.node.isRequired,\n        isActive: PropTypes.bool,\n        isDisabled: PropTypes.bool,\n        href: PropTypes.string,\n        target: PropTypes.string,\n        rel: PropTypes.string,\n        iconType: PropTypes.oneOfType([PropTypes.oneOf([\"accessibility\", \"addDataApp\", \"advancedSettingsApp\", \"aggregate\", \"alert\", \"analyzeEvent\", \"annotation\", \"apmApp\", \"apmTrace\", \"apps\", \"appSearchApp\", \"arrowDown\", \"arrowLeft\", \"arrowRight\", \"arrowUp\", \"asterisk\", \"auditbeatApp\", \"beaker\", \"bell\", \"bellSlash\", \"bolt\", \"boxesHorizontal\", \"boxesVertical\", \"branch\", \"broom\", \"brush\", \"bug\", \"bullseye\", \"calendar\", \"canvasApp\", \"codeApp\", \"check\", \"checkInCircleFilled\", \"cheer\", \"classificationJob\", \"clock\", \"cloudDrizzle\", \"cloudStormy\", \"cloudSunny\", \"color\", \"compute\", \"console\", \"consoleApp\", \"continuityAbove\", \"continuityAboveBelow\", \"continuityBelow\", \"continuityWithin\", \"controlsHorizontal\", \"controlsVertical\", \"copy\", \"copyClipboard\", \"createAdvancedJob\", \"createMultiMetricJob\", \"createPopulationJob\", \"createSingleMetricJob\", \"cross\", \"crossClusterReplicationApp\", \"crosshairs\", \"crossInACircleFilled\", \"currency\", \"cut\", \"dashboardApp\", \"database\", \"dataVisualizer\", \"devToolsApp\", \"discoverApp\", \"document\", \"documentation\", \"documentEdit\", \"documents\", \"dot\", \"download\", \"editorAlignCenter\", \"editorAlignLeft\", \"editorAlignRight\", \"editorBold\", \"editorCodeBlock\", \"editorComment\", \"editorDistributeHorizontal\", \"editorDistributeVertical\", \"editorHeading\", \"editorItalic\", \"editorItemAlignLeft\", \"editorItemAlignBottom\", \"editorItemAlignCenter\", \"editorItemAlignMiddle\", \"editorItemAlignRight\", \"editorItemAlignTop\", \"editorLink\", \"editorOrderedList\", \"editorPositionBottomLeft\", \"editorPositionBottomRight\", \"editorPositionTopLeft\", \"editorPositionTopRight\", \"editorRedo\", \"editorStrike\", \"editorTable\", \"editorUnderline\", \"editorUndo\", \"editorUnorderedList\", \"email\", \"empty\", \"emsApp\", \"eql\", \"eraser\", \"exit\", \"expand\", \"expandMini\", \"exportAction\", \"eye\", \"eyeClosed\", \"faceHappy\", \"faceNeutral\", \"faceSad\", \"filebeatApp\", \"filter\", \"flag\", \"fold\", \"folderCheck\", \"folderClosed\", \"folderExclamation\", \"folderOpen\", \"frameNext\", \"framePrevious\", \"fullScreen\", \"fullScreenExit\", \"function\", \"gear\", \"gisApp\", \"glasses\", \"globe\", \"grab\", \"grabHorizontal\", \"graphApp\", \"grid\", \"grokApp\", \"heart\", \"heartbeatApp\", \"heatmap\", \"help\", \"home\", \"iInCircle\", \"image\", \"importAction\", \"indexClose\", \"indexEdit\", \"indexFlush\", \"indexManagementApp\", \"indexMapping\", \"indexOpen\", \"indexPatternApp\", \"indexRollupApp\", \"indexRuntime\", \"indexSettings\", \"inputOutput\", \"inspect\", \"invert\", \"ip\", \"keyboardShortcut\", \"kqlField\", \"kqlFunction\", \"kqlOperand\", \"kqlSelector\", \"kqlValue\", \"layers\", \"lensApp\", \"link\", \"list\", \"listAdd\", \"lock\", \"lockOpen\", \"logsApp\", \"logoAerospike\", \"logoApache\", \"logoAppSearch\", \"logoAWS\", \"logoAWSMono\", \"logoAzure\", \"logoAzureMono\", \"logoBeats\", \"logoBusinessAnalytics\", \"logoCeph\", \"logoCloud\", \"logoCloudEnterprise\", \"logoCode\", \"logoCodesandbox\", \"logoCouchbase\", \"logoDocker\", \"logoDropwizard\", \"logoElastic\", \"logoElasticsearch\", \"logoElasticStack\", \"logoEnterpriseSearch\", \"logoEtcd\", \"logoGCP\", \"logoGCPMono\", \"logoGithub\", \"logoGmail\", \"logoGolang\", \"logoGoogleG\", \"logoHAproxy\", \"logoIBM\", \"logoIBMMono\", \"logoKafka\", \"logoKibana\", \"logoKubernetes\", \"logoLogging\", \"logoLogstash\", \"logoMaps\", \"logoMemcached\", \"logoMetrics\", \"logoMongodb\", \"logoMySQL\", \"logoNginx\", \"logoObservability\", \"logoOsquery\", \"logoPhp\", \"logoPostgres\", \"logoPrometheus\", \"logoRabbitmq\", \"logoRedis\", \"logoSecurity\", \"logoSiteSearch\", \"logoSketch\", \"logoSlack\", \"logoUptime\", \"logoWebhook\", \"logoWindows\", \"logoWorkplaceSearch\", \"logstashFilter\", \"logstashIf\", \"logstashInput\", \"logstashOutput\", \"logstashQueue\", \"machineLearningApp\", \"magnet\", \"magnifyWithMinus\", \"magnifyWithPlus\", \"managementApp\", \"mapMarker\", \"memory\", \"menu\", \"menuDown\", \"menuLeft\", \"menuRight\", \"menuUp\", \"merge\", \"metricbeatApp\", \"metricsApp\", \"minimize\", \"minus\", \"minusInCircle\", \"minusInCircleFilled\", \"mobile\", \"monitoringApp\", \"moon\", \"nested\", \"node\", \"notebookApp\", \"number\", \"offline\", \"online\", \"outlierDetectionJob\", \"package\", \"packetbeatApp\", \"pageSelect\", \"pagesSelect\", \"partial\", \"paperClip\", \"pause\", \"pencil\", \"percent\", \"pin\", \"pinFilled\", \"pipelineApp\", \"play\", \"playFilled\", \"plus\", \"plusInCircle\", \"plusInCircleFilled\", \"popout\", \"push\", \"questionInCircle\", \"quote\", \"recentlyViewedApp\", \"refresh\", \"regressionJob\", \"reporter\", \"reportingApp\", \"returnKey\", \"save\", \"savedObjectsApp\", \"scale\", \"search\", \"searchProfilerApp\", \"securityAnalyticsApp\", \"securityApp\", \"securitySignal\", \"securitySignalDetected\", \"securitySignalResolved\", \"shard\", \"share\", \"snowflake\", \"sortable\", \"sortDown\", \"sortLeft\", \"sortRight\", \"sortUp\", \"spacesApp\", \"sqlApp\", \"starEmpty\", \"starEmptySpace\", \"starFilled\", \"starFilledSpace\", \"starMinusEmpty\", \"starMinusFilled\", \"starPlusEmpty\", \"starPlusFilled\", \"stats\", \"stop\", \"stopFilled\", \"stopSlash\", \"storage\", \"string\", \"submodule\", \"swatchInput\", \"symlink\", \"tableOfContents\", \"tableDensityExpanded\", \"tableDensityCompact\", \"tableDensityNormal\", \"tag\", \"tear\", \"temperature\", \"timeline\", \"timelionApp\", \"timeslider\", \"training\", \"trash\", \"upgradeAssistantApp\", \"uptimeApp\", \"unfold\", \"unlink\", \"user\", \"users\", \"usersRolesApp\", \"vector\", \"videoPlayer\", \"visArea\", \"visAreaStacked\", \"visBarHorizontal\", \"visBarHorizontalStacked\", \"visBarVertical\", \"visBarVerticalStacked\", \"visGauge\", \"visGoal\", \"visLine\", \"visMapCoordinate\", \"visMapRegion\", \"visMetric\", \"visPie\", \"visTable\", \"visTagCloud\", \"visText\", \"visTimelion\", \"visualizeApp\", \"visVega\", \"visVisualBuilder\", \"watchesApp\", \"wordWrap\", \"wordWrapDisabled\", \"workplaceSearchApp\", \"wrench\", \"tokenClass\", \"tokenProperty\", \"tokenEnum\", \"tokenVariable\", \"tokenMethod\", \"tokenAnnotation\", \"tokenException\", \"tokenInterface\", \"tokenParameter\", \"tokenField\", \"tokenElement\", \"tokenFunction\", \"tokenBoolean\", \"tokenString\", \"tokenArray\", \"tokenNumber\", \"tokenConstant\", \"tokenObject\", \"tokenEvent\", \"tokenKey\", \"tokenNull\", \"tokenStruct\", \"tokenPackage\", \"tokenOperator\", \"tokenEnumMember\", \"tokenRepo\", \"tokenSymbol\", \"tokenFile\", \"tokenModule\", \"tokenNamespace\", \"tokenDate\", \"tokenIP\", \"tokenNested\", \"tokenAlias\", \"tokenShape\", \"tokenGeo\", \"tokenRange\", \"tokenBinary\", \"tokenJoin\", \"tokenPercolator\", \"tokenFlattened\", \"tokenRankFeature\", \"tokenRankFeatures\", \"tokenKeyword\", \"tokenCompletionSuggester\", \"tokenDenseVector\", \"tokenText\", \"tokenTokenCount\", \"tokenSearchType\", \"tokenHistogram\"]).isRequired, PropTypes.string.isRequired, PropTypes.elementType.isRequired]),\n        iconProps: PropTypes.any,\n        icon: PropTypes.element,\n        showToolTip: PropTypes.bool,\n        extraAction: PropTypes.shape({\n          type: PropTypes.oneOf([\"submit\", \"reset\", \"button\"]),\n          onClick: PropTypes.func,\n          iconType: PropTypes.oneOfType([PropTypes.oneOf([\"accessibility\", \"addDataApp\", \"advancedSettingsApp\", \"aggregate\", \"alert\", \"analyzeEvent\", \"annotation\", \"apmApp\", \"apmTrace\", \"apps\", \"appSearchApp\", \"arrowDown\", \"arrowLeft\", \"arrowRight\", \"arrowUp\", \"asterisk\", \"auditbeatApp\", \"beaker\", \"bell\", \"bellSlash\", \"bolt\", \"boxesHorizontal\", \"boxesVertical\", \"branch\", \"broom\", \"brush\", \"bug\", \"bullseye\", \"calendar\", \"canvasApp\", \"codeApp\", \"check\", \"checkInCircleFilled\", \"cheer\", \"classificationJob\", \"clock\", \"cloudDrizzle\", \"cloudStormy\", \"cloudSunny\", \"color\", \"compute\", \"console\", \"consoleApp\", \"continuityAbove\", \"continuityAboveBelow\", \"continuityBelow\", \"continuityWithin\", \"controlsHorizontal\", \"controlsVertical\", \"copy\", \"copyClipboard\", \"createAdvancedJob\", \"createMultiMetricJob\", \"createPopulationJob\", \"createSingleMetricJob\", \"cross\", \"crossClusterReplicationApp\", \"crosshairs\", \"crossInACircleFilled\", \"currency\", \"cut\", \"dashboardApp\", \"database\", \"dataVisualizer\", \"devToolsApp\", \"discoverApp\", \"document\", \"documentation\", \"documentEdit\", \"documents\", \"dot\", \"download\", \"editorAlignCenter\", \"editorAlignLeft\", \"editorAlignRight\", \"editorBold\", \"editorCodeBlock\", \"editorComment\", \"editorDistributeHorizontal\", \"editorDistributeVertical\", \"editorHeading\", \"editorItalic\", \"editorItemAlignLeft\", \"editorItemAlignBottom\", \"editorItemAlignCenter\", \"editorItemAlignMiddle\", \"editorItemAlignRight\", \"editorItemAlignTop\", \"editorLink\", \"editorOrderedList\", \"editorPositionBottomLeft\", \"editorPositionBottomRight\", \"editorPositionTopLeft\", \"editorPositionTopRight\", \"editorRedo\", \"editorStrike\", \"editorTable\", \"editorUnderline\", \"editorUndo\", \"editorUnorderedList\", \"email\", \"empty\", \"emsApp\", \"eql\", \"eraser\", \"exit\", \"expand\", \"expandMini\", \"exportAction\", \"eye\", \"eyeClosed\", \"faceHappy\", \"faceNeutral\", \"faceSad\", \"filebeatApp\", \"filter\", \"flag\", \"fold\", \"folderCheck\", \"folderClosed\", \"folderExclamation\", \"folderOpen\", \"frameNext\", \"framePrevious\", \"fullScreen\", \"fullScreenExit\", \"function\", \"gear\", \"gisApp\", \"glasses\", \"globe\", \"grab\", \"grabHorizontal\", \"graphApp\", \"grid\", \"grokApp\", \"heart\", \"heartbeatApp\", \"heatmap\", \"help\", \"home\", \"iInCircle\", \"image\", \"importAction\", \"indexClose\", \"indexEdit\", \"indexFlush\", \"indexManagementApp\", \"indexMapping\", \"indexOpen\", \"indexPatternApp\", \"indexRollupApp\", \"indexRuntime\", \"indexSettings\", \"inputOutput\", \"inspect\", \"invert\", \"ip\", \"keyboardShortcut\", \"kqlField\", \"kqlFunction\", \"kqlOperand\", \"kqlSelector\", \"kqlValue\", \"layers\", \"lensApp\", \"link\", \"list\", \"listAdd\", \"lock\", \"lockOpen\", \"logsApp\", \"logoAerospike\", \"logoApache\", \"logoAppSearch\", \"logoAWS\", \"logoAWSMono\", \"logoAzure\", \"logoAzureMono\", \"logoBeats\", \"logoBusinessAnalytics\", \"logoCeph\", \"logoCloud\", \"logoCloudEnterprise\", \"logoCode\", \"logoCodesandbox\", \"logoCouchbase\", \"logoDocker\", \"logoDropwizard\", \"logoElastic\", \"logoElasticsearch\", \"logoElasticStack\", \"logoEnterpriseSearch\", \"logoEtcd\", \"logoGCP\", \"logoGCPMono\", \"logoGithub\", \"logoGmail\", \"logoGolang\", \"logoGoogleG\", \"logoHAproxy\", \"logoIBM\", \"logoIBMMono\", \"logoKafka\", \"logoKibana\", \"logoKubernetes\", \"logoLogging\", \"logoLogstash\", \"logoMaps\", \"logoMemcached\", \"logoMetrics\", \"logoMongodb\", \"logoMySQL\", \"logoNginx\", \"logoObservability\", \"logoOsquery\", \"logoPhp\", \"logoPostgres\", \"logoPrometheus\", \"logoRabbitmq\", \"logoRedis\", \"logoSecurity\", \"logoSiteSearch\", \"logoSketch\", \"logoSlack\", \"logoUptime\", \"logoWebhook\", \"logoWindows\", \"logoWorkplaceSearch\", \"logstashFilter\", \"logstashIf\", \"logstashInput\", \"logstashOutput\", \"logstashQueue\", \"machineLearningApp\", \"magnet\", \"magnifyWithMinus\", \"magnifyWithPlus\", \"managementApp\", \"mapMarker\", \"memory\", \"menu\", \"menuDown\", \"menuLeft\", \"menuRight\", \"menuUp\", \"merge\", \"metricbeatApp\", \"metricsApp\", \"minimize\", \"minus\", \"minusInCircle\", \"minusInCircleFilled\", \"mobile\", \"monitoringApp\", \"moon\", \"nested\", \"node\", \"notebookApp\", \"number\", \"offline\", \"online\", \"outlierDetectionJob\", \"package\", \"packetbeatApp\", \"pageSelect\", \"pagesSelect\", \"partial\", \"paperClip\", \"pause\", \"pencil\", \"percent\", \"pin\", \"pinFilled\", \"pipelineApp\", \"play\", \"playFilled\", \"plus\", \"plusInCircle\", \"plusInCircleFilled\", \"popout\", \"push\", \"questionInCircle\", \"quote\", \"recentlyViewedApp\", \"refresh\", \"regressionJob\", \"reporter\", \"reportingApp\", \"returnKey\", \"save\", \"savedObjectsApp\", \"scale\", \"search\", \"searchProfilerApp\", \"securityAnalyticsApp\", \"securityApp\", \"securitySignal\", \"securitySignalDetected\", \"securitySignalResolved\", \"shard\", \"share\", \"snowflake\", \"sortable\", \"sortDown\", \"sortLeft\", \"sortRight\", \"sortUp\", \"spacesApp\", \"sqlApp\", \"starEmpty\", \"starEmptySpace\", \"starFilled\", \"starFilledSpace\", \"starMinusEmpty\", \"starMinusFilled\", \"starPlusEmpty\", \"starPlusFilled\", \"stats\", \"stop\", \"stopFilled\", \"stopSlash\", \"storage\", \"string\", \"submodule\", \"swatchInput\", \"symlink\", \"tableOfContents\", \"tableDensityExpanded\", \"tableDensityCompact\", \"tableDensityNormal\", \"tag\", \"tear\", \"temperature\", \"timeline\", \"timelionApp\", \"timeslider\", \"training\", \"trash\", \"upgradeAssistantApp\", \"uptimeApp\", \"unfold\", \"unlink\", \"user\", \"users\", \"usersRolesApp\", \"vector\", \"videoPlayer\", \"visArea\", \"visAreaStacked\", \"visBarHorizontal\", \"visBarHorizontalStacked\", \"visBarVertical\", \"visBarVerticalStacked\", \"visGauge\", \"visGoal\", \"visLine\", \"visMapCoordinate\", \"visMapRegion\", \"visMetric\", \"visPie\", \"visTable\", \"visTagCloud\", \"visText\", \"visTimelion\", \"visualizeApp\", \"visVega\", \"visVisualBuilder\", \"watchesApp\", \"wordWrap\", \"wordWrapDisabled\", \"workplaceSearchApp\", \"wrench\", \"tokenClass\", \"tokenProperty\", \"tokenEnum\", \"tokenVariable\", \"tokenMethod\", \"tokenAnnotation\", \"tokenException\", \"tokenInterface\", \"tokenParameter\", \"tokenField\", \"tokenElement\", \"tokenFunction\", \"tokenBoolean\", \"tokenString\", \"tokenArray\", \"tokenNumber\", \"tokenConstant\", \"tokenObject\", \"tokenEvent\", \"tokenKey\", \"tokenNull\", \"tokenStruct\", \"tokenPackage\", \"tokenOperator\", \"tokenEnumMember\", \"tokenRepo\", \"tokenSymbol\", \"tokenFile\", \"tokenModule\", \"tokenNamespace\", \"tokenDate\", \"tokenIP\", \"tokenNested\", \"tokenAlias\", \"tokenShape\", \"tokenGeo\", \"tokenRange\", \"tokenBinary\", \"tokenJoin\", \"tokenPercolator\", \"tokenFlattened\", \"tokenRankFeature\", \"tokenRankFeatures\", \"tokenKeyword\", \"tokenCompletionSuggester\", \"tokenDenseVector\", \"tokenText\", \"tokenTokenCount\", \"tokenSearchType\", \"tokenHistogram\"]).isRequired, PropTypes.string.isRequired, PropTypes.elementType.isRequired]).isRequired,\n          color: PropTypes.oneOf([\"accent\", \"danger\", \"ghost\", \"primary\", \"subdued\", \"success\", \"text\", \"warning\"]),\n          \"aria-label\": PropTypes.string,\n          \"aria-labelledby\": PropTypes.string,\n          isDisabled: PropTypes.bool,\n          size: PropTypes.oneOf([\"xs\", \"s\", \"m\"]),\n          iconSize: PropTypes.oneOf([\"original\", \"s\", \"m\", \"l\", \"xl\", \"xxl\"]),\n          isSelected: PropTypes.bool,\n          display: PropTypes.oneOf([\"base\", \"empty\", \"fill\"]),\n          className: PropTypes.string,\n          \"data-test-subj\": PropTypes.string,\n          buttonRef: PropTypes.any,\n          alwaysShow: PropTypes.bool\n        }),\n        onClick: PropTypes.func,\n        wrapText: PropTypes.bool,\n        buttonRef: PropTypes.any\n      }).isRequired]),\n\n      /**\n         * Append additional actions\n         */\n      additional: PropTypes.arrayOf(PropTypes.shape({\n        className: PropTypes.string,\n        \"aria-label\": PropTypes.string,\n        \"data-test-subj\": PropTypes.string,\n        size: PropTypes.oneOf([\"xs\", \"s\", \"m\", \"l\"]),\n        color: PropTypes.oneOf([\"inherit\", \"primary\", \"text\", \"subdued\", \"ghost\"]),\n        label: PropTypes.node.isRequired,\n        isActive: PropTypes.bool,\n        isDisabled: PropTypes.bool,\n        href: PropTypes.string,\n        target: PropTypes.string,\n        rel: PropTypes.string,\n        iconType: PropTypes.oneOfType([PropTypes.oneOf([\"accessibility\", \"addDataApp\", \"advancedSettingsApp\", \"aggregate\", \"alert\", \"analyzeEvent\", \"annotation\", \"apmApp\", \"apmTrace\", \"apps\", \"appSearchApp\", \"arrowDown\", \"arrowLeft\", \"arrowRight\", \"arrowUp\", \"asterisk\", \"auditbeatApp\", \"beaker\", \"bell\", \"bellSlash\", \"bolt\", \"boxesHorizontal\", \"boxesVertical\", \"branch\", \"broom\", \"brush\", \"bug\", \"bullseye\", \"calendar\", \"canvasApp\", \"codeApp\", \"check\", \"checkInCircleFilled\", \"cheer\", \"classificationJob\", \"clock\", \"cloudDrizzle\", \"cloudStormy\", \"cloudSunny\", \"color\", \"compute\", \"console\", \"consoleApp\", \"continuityAbove\", \"continuityAboveBelow\", \"continuityBelow\", \"continuityWithin\", \"controlsHorizontal\", \"controlsVertical\", \"copy\", \"copyClipboard\", \"createAdvancedJob\", \"createMultiMetricJob\", \"createPopulationJob\", \"createSingleMetricJob\", \"cross\", \"crossClusterReplicationApp\", \"crosshairs\", \"crossInACircleFilled\", \"currency\", \"cut\", \"dashboardApp\", \"database\", \"dataVisualizer\", \"devToolsApp\", \"discoverApp\", \"document\", \"documentation\", \"documentEdit\", \"documents\", \"dot\", \"download\", \"editorAlignCenter\", \"editorAlignLeft\", \"editorAlignRight\", \"editorBold\", \"editorCodeBlock\", \"editorComment\", \"editorDistributeHorizontal\", \"editorDistributeVertical\", \"editorHeading\", \"editorItalic\", \"editorItemAlignLeft\", \"editorItemAlignBottom\", \"editorItemAlignCenter\", \"editorItemAlignMiddle\", \"editorItemAlignRight\", \"editorItemAlignTop\", \"editorLink\", \"editorOrderedList\", \"editorPositionBottomLeft\", \"editorPositionBottomRight\", \"editorPositionTopLeft\", \"editorPositionTopRight\", \"editorRedo\", \"editorStrike\", \"editorTable\", \"editorUnderline\", \"editorUndo\", \"editorUnorderedList\", \"email\", \"empty\", \"emsApp\", \"eql\", \"eraser\", \"exit\", \"expand\", \"expandMini\", \"exportAction\", \"eye\", \"eyeClosed\", \"faceHappy\", \"faceNeutral\", \"faceSad\", \"filebeatApp\", \"filter\", \"flag\", \"fold\", \"folderCheck\", \"folderClosed\", \"folderExclamation\", \"folderOpen\", \"frameNext\", \"framePrevious\", \"fullScreen\", \"fullScreenExit\", \"function\", \"gear\", \"gisApp\", \"glasses\", \"globe\", \"grab\", \"grabHorizontal\", \"graphApp\", \"grid\", \"grokApp\", \"heart\", \"heartbeatApp\", \"heatmap\", \"help\", \"home\", \"iInCircle\", \"image\", \"importAction\", \"indexClose\", \"indexEdit\", \"indexFlush\", \"indexManagementApp\", \"indexMapping\", \"indexOpen\", \"indexPatternApp\", \"indexRollupApp\", \"indexRuntime\", \"indexSettings\", \"inputOutput\", \"inspect\", \"invert\", \"ip\", \"keyboardShortcut\", \"kqlField\", \"kqlFunction\", \"kqlOperand\", \"kqlSelector\", \"kqlValue\", \"layers\", \"lensApp\", \"link\", \"list\", \"listAdd\", \"lock\", \"lockOpen\", \"logsApp\", \"logoAerospike\", \"logoApache\", \"logoAppSearch\", \"logoAWS\", \"logoAWSMono\", \"logoAzure\", \"logoAzureMono\", \"logoBeats\", \"logoBusinessAnalytics\", \"logoCeph\", \"logoCloud\", \"logoCloudEnterprise\", \"logoCode\", \"logoCodesandbox\", \"logoCouchbase\", \"logoDocker\", \"logoDropwizard\", \"logoElastic\", \"logoElasticsearch\", \"logoElasticStack\", \"logoEnterpriseSearch\", \"logoEtcd\", \"logoGCP\", \"logoGCPMono\", \"logoGithub\", \"logoGmail\", \"logoGolang\", \"logoGoogleG\", \"logoHAproxy\", \"logoIBM\", \"logoIBMMono\", \"logoKafka\", \"logoKibana\", \"logoKubernetes\", \"logoLogging\", \"logoLogstash\", \"logoMaps\", \"logoMemcached\", \"logoMetrics\", \"logoMongodb\", \"logoMySQL\", \"logoNginx\", \"logoObservability\", \"logoOsquery\", \"logoPhp\", \"logoPostgres\", \"logoPrometheus\", \"logoRabbitmq\", \"logoRedis\", \"logoSecurity\", \"logoSiteSearch\", \"logoSketch\", \"logoSlack\", \"logoUptime\", \"logoWebhook\", \"logoWindows\", \"logoWorkplaceSearch\", \"logstashFilter\", \"logstashIf\", \"logstashInput\", \"logstashOutput\", \"logstashQueue\", \"machineLearningApp\", \"magnet\", \"magnifyWithMinus\", \"magnifyWithPlus\", \"managementApp\", \"mapMarker\", \"memory\", \"menu\", \"menuDown\", \"menuLeft\", \"menuRight\", \"menuUp\", \"merge\", \"metricbeatApp\", \"metricsApp\", \"minimize\", \"minus\", \"minusInCircle\", \"minusInCircleFilled\", \"mobile\", \"monitoringApp\", \"moon\", \"nested\", \"node\", \"notebookApp\", \"number\", \"offline\", \"online\", \"outlierDetectionJob\", \"package\", \"packetbeatApp\", \"pageSelect\", \"pagesSelect\", \"partial\", \"paperClip\", \"pause\", \"pencil\", \"percent\", \"pin\", \"pinFilled\", \"pipelineApp\", \"play\", \"playFilled\", \"plus\", \"plusInCircle\", \"plusInCircleFilled\", \"popout\", \"push\", \"questionInCircle\", \"quote\", \"recentlyViewedApp\", \"refresh\", \"regressionJob\", \"reporter\", \"reportingApp\", \"returnKey\", \"save\", \"savedObjectsApp\", \"scale\", \"search\", \"searchProfilerApp\", \"securityAnalyticsApp\", \"securityApp\", \"securitySignal\", \"securitySignalDetected\", \"securitySignalResolved\", \"shard\", \"share\", \"snowflake\", \"sortable\", \"sortDown\", \"sortLeft\", \"sortRight\", \"sortUp\", \"spacesApp\", \"sqlApp\", \"starEmpty\", \"starEmptySpace\", \"starFilled\", \"starFilledSpace\", \"starMinusEmpty\", \"starMinusFilled\", \"starPlusEmpty\", \"starPlusFilled\", \"stats\", \"stop\", \"stopFilled\", \"stopSlash\", \"storage\", \"string\", \"submodule\", \"swatchInput\", \"symlink\", \"tableOfContents\", \"tableDensityExpanded\", \"tableDensityCompact\", \"tableDensityNormal\", \"tag\", \"tear\", \"temperature\", \"timeline\", \"timelionApp\", \"timeslider\", \"training\", \"trash\", \"upgradeAssistantApp\", \"uptimeApp\", \"unfold\", \"unlink\", \"user\", \"users\", \"usersRolesApp\", \"vector\", \"videoPlayer\", \"visArea\", \"visAreaStacked\", \"visBarHorizontal\", \"visBarHorizontalStacked\", \"visBarVertical\", \"visBarVerticalStacked\", \"visGauge\", \"visGoal\", \"visLine\", \"visMapCoordinate\", \"visMapRegion\", \"visMetric\", \"visPie\", \"visTable\", \"visTagCloud\", \"visText\", \"visTimelion\", \"visualizeApp\", \"visVega\", \"visVisualBuilder\", \"watchesApp\", \"wordWrap\", \"wordWrapDisabled\", \"workplaceSearchApp\", \"wrench\", \"tokenClass\", \"tokenProperty\", \"tokenEnum\", \"tokenVariable\", \"tokenMethod\", \"tokenAnnotation\", \"tokenException\", \"tokenInterface\", \"tokenParameter\", \"tokenField\", \"tokenElement\", \"tokenFunction\", \"tokenBoolean\", \"tokenString\", \"tokenArray\", \"tokenNumber\", \"tokenConstant\", \"tokenObject\", \"tokenEvent\", \"tokenKey\", \"tokenNull\", \"tokenStruct\", \"tokenPackage\", \"tokenOperator\", \"tokenEnumMember\", \"tokenRepo\", \"tokenSymbol\", \"tokenFile\", \"tokenModule\", \"tokenNamespace\", \"tokenDate\", \"tokenIP\", \"tokenNested\", \"tokenAlias\", \"tokenShape\", \"tokenGeo\", \"tokenRange\", \"tokenBinary\", \"tokenJoin\", \"tokenPercolator\", \"tokenFlattened\", \"tokenRankFeature\", \"tokenRankFeatures\", \"tokenKeyword\", \"tokenCompletionSuggester\", \"tokenDenseVector\", \"tokenText\", \"tokenTokenCount\", \"tokenSearchType\", \"tokenHistogram\"]).isRequired, PropTypes.string.isRequired, PropTypes.elementType.isRequired]),\n        iconProps: PropTypes.any,\n        icon: PropTypes.element,\n        showToolTip: PropTypes.bool,\n        extraAction: PropTypes.shape({\n          type: PropTypes.oneOf([\"submit\", \"reset\", \"button\"]),\n          onClick: PropTypes.func,\n          iconType: PropTypes.oneOfType([PropTypes.oneOf([\"accessibility\", \"addDataApp\", \"advancedSettingsApp\", \"aggregate\", \"alert\", \"analyzeEvent\", \"annotation\", \"apmApp\", \"apmTrace\", \"apps\", \"appSearchApp\", \"arrowDown\", \"arrowLeft\", \"arrowRight\", \"arrowUp\", \"asterisk\", \"auditbeatApp\", \"beaker\", \"bell\", \"bellSlash\", \"bolt\", \"boxesHorizontal\", \"boxesVertical\", \"branch\", \"broom\", \"brush\", \"bug\", \"bullseye\", \"calendar\", \"canvasApp\", \"codeApp\", \"check\", \"checkInCircleFilled\", \"cheer\", \"classificationJob\", \"clock\", \"cloudDrizzle\", \"cloudStormy\", \"cloudSunny\", \"color\", \"compute\", \"console\", \"consoleApp\", \"continuityAbove\", \"continuityAboveBelow\", \"continuityBelow\", \"continuityWithin\", \"controlsHorizontal\", \"controlsVertical\", \"copy\", \"copyClipboard\", \"createAdvancedJob\", \"createMultiMetricJob\", \"createPopulationJob\", \"createSingleMetricJob\", \"cross\", \"crossClusterReplicationApp\", \"crosshairs\", \"crossInACircleFilled\", \"currency\", \"cut\", \"dashboardApp\", \"database\", \"dataVisualizer\", \"devToolsApp\", \"discoverApp\", \"document\", \"documentation\", \"documentEdit\", \"documents\", \"dot\", \"download\", \"editorAlignCenter\", \"editorAlignLeft\", \"editorAlignRight\", \"editorBold\", \"editorCodeBlock\", \"editorComment\", \"editorDistributeHorizontal\", \"editorDistributeVertical\", \"editorHeading\", \"editorItalic\", \"editorItemAlignLeft\", \"editorItemAlignBottom\", \"editorItemAlignCenter\", \"editorItemAlignMiddle\", \"editorItemAlignRight\", \"editorItemAlignTop\", \"editorLink\", \"editorOrderedList\", \"editorPositionBottomLeft\", \"editorPositionBottomRight\", \"editorPositionTopLeft\", \"editorPositionTopRight\", \"editorRedo\", \"editorStrike\", \"editorTable\", \"editorUnderline\", \"editorUndo\", \"editorUnorderedList\", \"email\", \"empty\", \"emsApp\", \"eql\", \"eraser\", \"exit\", \"expand\", \"expandMini\", \"exportAction\", \"eye\", \"eyeClosed\", \"faceHappy\", \"faceNeutral\", \"faceSad\", \"filebeatApp\", \"filter\", \"flag\", \"fold\", \"folderCheck\", \"folderClosed\", \"folderExclamation\", \"folderOpen\", \"frameNext\", \"framePrevious\", \"fullScreen\", \"fullScreenExit\", \"function\", \"gear\", \"gisApp\", \"glasses\", \"globe\", \"grab\", \"grabHorizontal\", \"graphApp\", \"grid\", \"grokApp\", \"heart\", \"heartbeatApp\", \"heatmap\", \"help\", \"home\", \"iInCircle\", \"image\", \"importAction\", \"indexClose\", \"indexEdit\", \"indexFlush\", \"indexManagementApp\", \"indexMapping\", \"indexOpen\", \"indexPatternApp\", \"indexRollupApp\", \"indexRuntime\", \"indexSettings\", \"inputOutput\", \"inspect\", \"invert\", \"ip\", \"keyboardShortcut\", \"kqlField\", \"kqlFunction\", \"kqlOperand\", \"kqlSelector\", \"kqlValue\", \"layers\", \"lensApp\", \"link\", \"list\", \"listAdd\", \"lock\", \"lockOpen\", \"logsApp\", \"logoAerospike\", \"logoApache\", \"logoAppSearch\", \"logoAWS\", \"logoAWSMono\", \"logoAzure\", \"logoAzureMono\", \"logoBeats\", \"logoBusinessAnalytics\", \"logoCeph\", \"logoCloud\", \"logoCloudEnterprise\", \"logoCode\", \"logoCodesandbox\", \"logoCouchbase\", \"logoDocker\", \"logoDropwizard\", \"logoElastic\", \"logoElasticsearch\", \"logoElasticStack\", \"logoEnterpriseSearch\", \"logoEtcd\", \"logoGCP\", \"logoGCPMono\", \"logoGithub\", \"logoGmail\", \"logoGolang\", \"logoGoogleG\", \"logoHAproxy\", \"logoIBM\", \"logoIBMMono\", \"logoKafka\", \"logoKibana\", \"logoKubernetes\", \"logoLogging\", \"logoLogstash\", \"logoMaps\", \"logoMemcached\", \"logoMetrics\", \"logoMongodb\", \"logoMySQL\", \"logoNginx\", \"logoObservability\", \"logoOsquery\", \"logoPhp\", \"logoPostgres\", \"logoPrometheus\", \"logoRabbitmq\", \"logoRedis\", \"logoSecurity\", \"logoSiteSearch\", \"logoSketch\", \"logoSlack\", \"logoUptime\", \"logoWebhook\", \"logoWindows\", \"logoWorkplaceSearch\", \"logstashFilter\", \"logstashIf\", \"logstashInput\", \"logstashOutput\", \"logstashQueue\", \"machineLearningApp\", \"magnet\", \"magnifyWithMinus\", \"magnifyWithPlus\", \"managementApp\", \"mapMarker\", \"memory\", \"menu\", \"menuDown\", \"menuLeft\", \"menuRight\", \"menuUp\", \"merge\", \"metricbeatApp\", \"metricsApp\", \"minimize\", \"minus\", \"minusInCircle\", \"minusInCircleFilled\", \"mobile\", \"monitoringApp\", \"moon\", \"nested\", \"node\", \"notebookApp\", \"number\", \"offline\", \"online\", \"outlierDetectionJob\", \"package\", \"packetbeatApp\", \"pageSelect\", \"pagesSelect\", \"partial\", \"paperClip\", \"pause\", \"pencil\", \"percent\", \"pin\", \"pinFilled\", \"pipelineApp\", \"play\", \"playFilled\", \"plus\", \"plusInCircle\", \"plusInCircleFilled\", \"popout\", \"push\", \"questionInCircle\", \"quote\", \"recentlyViewedApp\", \"refresh\", \"regressionJob\", \"reporter\", \"reportingApp\", \"returnKey\", \"save\", \"savedObjectsApp\", \"scale\", \"search\", \"searchProfilerApp\", \"securityAnalyticsApp\", \"securityApp\", \"securitySignal\", \"securitySignalDetected\", \"securitySignalResolved\", \"shard\", \"share\", \"snowflake\", \"sortable\", \"sortDown\", \"sortLeft\", \"sortRight\", \"sortUp\", \"spacesApp\", \"sqlApp\", \"starEmpty\", \"starEmptySpace\", \"starFilled\", \"starFilledSpace\", \"starMinusEmpty\", \"starMinusFilled\", \"starPlusEmpty\", \"starPlusFilled\", \"stats\", \"stop\", \"stopFilled\", \"stopSlash\", \"storage\", \"string\", \"submodule\", \"swatchInput\", \"symlink\", \"tableOfContents\", \"tableDensityExpanded\", \"tableDensityCompact\", \"tableDensityNormal\", \"tag\", \"tear\", \"temperature\", \"timeline\", \"timelionApp\", \"timeslider\", \"training\", \"trash\", \"upgradeAssistantApp\", \"uptimeApp\", \"unfold\", \"unlink\", \"user\", \"users\", \"usersRolesApp\", \"vector\", \"videoPlayer\", \"visArea\", \"visAreaStacked\", \"visBarHorizontal\", \"visBarHorizontalStacked\", \"visBarVertical\", \"visBarVerticalStacked\", \"visGauge\", \"visGoal\", \"visLine\", \"visMapCoordinate\", \"visMapRegion\", \"visMetric\", \"visPie\", \"visTable\", \"visTagCloud\", \"visText\", \"visTimelion\", \"visualizeApp\", \"visVega\", \"visVisualBuilder\", \"watchesApp\", \"wordWrap\", \"wordWrapDisabled\", \"workplaceSearchApp\", \"wrench\", \"tokenClass\", \"tokenProperty\", \"tokenEnum\", \"tokenVariable\", \"tokenMethod\", \"tokenAnnotation\", \"tokenException\", \"tokenInterface\", \"tokenParameter\", \"tokenField\", \"tokenElement\", \"tokenFunction\", \"tokenBoolean\", \"tokenString\", \"tokenArray\", \"tokenNumber\", \"tokenConstant\", \"tokenObject\", \"tokenEvent\", \"tokenKey\", \"tokenNull\", \"tokenStruct\", \"tokenPackage\", \"tokenOperator\", \"tokenEnumMember\", \"tokenRepo\", \"tokenSymbol\", \"tokenFile\", \"tokenModule\", \"tokenNamespace\", \"tokenDate\", \"tokenIP\", \"tokenNested\", \"tokenAlias\", \"tokenShape\", \"tokenGeo\", \"tokenRange\", \"tokenBinary\", \"tokenJoin\", \"tokenPercolator\", \"tokenFlattened\", \"tokenRankFeature\", \"tokenRankFeatures\", \"tokenKeyword\", \"tokenCompletionSuggester\", \"tokenDenseVector\", \"tokenText\", \"tokenTokenCount\", \"tokenSearchType\", \"tokenHistogram\"]).isRequired, PropTypes.string.isRequired, PropTypes.elementType.isRequired]).isRequired,\n          color: PropTypes.oneOf([\"accent\", \"danger\", \"ghost\", \"primary\", \"subdued\", \"success\", \"text\", \"warning\"]),\n          \"aria-label\": PropTypes.string,\n          \"aria-labelledby\": PropTypes.string,\n          isDisabled: PropTypes.bool,\n          size: PropTypes.oneOf([\"xs\", \"s\", \"m\"]),\n          iconSize: PropTypes.oneOf([\"original\", \"s\", \"m\", \"l\", \"xl\", \"xxl\"]),\n          isSelected: PropTypes.bool,\n          display: PropTypes.oneOf([\"base\", \"empty\", \"fill\"]),\n          className: PropTypes.string,\n          \"data-test-subj\": PropTypes.string,\n          buttonRef: PropTypes.any,\n          alwaysShow: PropTypes.bool\n        }),\n        onClick: PropTypes.func,\n        wrapText: PropTypes.bool,\n        buttonRef: PropTypes.any\n      }).isRequired)\n    }).isRequired]),\n\n    /**\n       * Additional actions displayed as icon on hover / focus, and in the expanded view of the cell containing the value\n       */\n    cellActions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.func.isRequired]).isRequired)\n  }).isRequired).isRequired,\n\n  /**\n       * An array of #EuiDataGridColumnVisibility objects. Defines which columns are visible in the grid and the order they are displayed.\n       */\n  columnVisibility: PropTypes.shape({\n    /**\n       * An array of #EuiDataGridColumn `id`s dictating the order and visibility of columns.\n       */\n    visibleColumns: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n\n    /**\n       * A callback for when a column's visibility or order is modified by the user.\n       */\n    setVisibleColumns: PropTypes.func.isRequired\n  }).isRequired,\n\n  /**\n       * An array of custom #EuiDataGridSchemaDetector objects. You can inject custom schemas to the grid to define the classnames applied\n       */\n  schemaDetectors: PropTypes.arrayOf(PropTypes.shape({\n    /**\n       * The name of this data type, matches #EuiDataGridColumn / schema `schema`\n       */\n    type: PropTypes.string.isRequired,\n\n    /**\n       * The function given the text value of a cell and returns a score of [0...1] of how well the value matches this data type\n       */\n    detector: PropTypes.func.isRequired,\n\n    /**\n       * A custom comparator function when performing in-memory sorting on this data type, takes `(a: string, b: string, direction: 'asc' | 'desc) => -1 | 0 | 1`\n       */\n    comparator: PropTypes.func,\n\n    /**\n       * The icon used to visually represent this data type. Accepts any `EuiIcon IconType`.\n       */\n    icon: PropTypes.oneOfType([PropTypes.oneOf([\"accessibility\", \"addDataApp\", \"advancedSettingsApp\", \"aggregate\", \"alert\", \"analyzeEvent\", \"annotation\", \"apmApp\", \"apmTrace\", \"apps\", \"appSearchApp\", \"arrowDown\", \"arrowLeft\", \"arrowRight\", \"arrowUp\", \"asterisk\", \"auditbeatApp\", \"beaker\", \"bell\", \"bellSlash\", \"bolt\", \"boxesHorizontal\", \"boxesVertical\", \"branch\", \"broom\", \"brush\", \"bug\", \"bullseye\", \"calendar\", \"canvasApp\", \"codeApp\", \"check\", \"checkInCircleFilled\", \"cheer\", \"classificationJob\", \"clock\", \"cloudDrizzle\", \"cloudStormy\", \"cloudSunny\", \"color\", \"compute\", \"console\", \"consoleApp\", \"continuityAbove\", \"continuityAboveBelow\", \"continuityBelow\", \"continuityWithin\", \"controlsHorizontal\", \"controlsVertical\", \"copy\", \"copyClipboard\", \"createAdvancedJob\", \"createMultiMetricJob\", \"createPopulationJob\", \"createSingleMetricJob\", \"cross\", \"crossClusterReplicationApp\", \"crosshairs\", \"crossInACircleFilled\", \"currency\", \"cut\", \"dashboardApp\", \"database\", \"dataVisualizer\", \"devToolsApp\", \"discoverApp\", \"document\", \"documentation\", \"documentEdit\", \"documents\", \"dot\", \"download\", \"editorAlignCenter\", \"editorAlignLeft\", \"editorAlignRight\", \"editorBold\", \"editorCodeBlock\", \"editorComment\", \"editorDistributeHorizontal\", \"editorDistributeVertical\", \"editorHeading\", \"editorItalic\", \"editorItemAlignLeft\", \"editorItemAlignBottom\", \"editorItemAlignCenter\", \"editorItemAlignMiddle\", \"editorItemAlignRight\", \"editorItemAlignTop\", \"editorLink\", \"editorOrderedList\", \"editorPositionBottomLeft\", \"editorPositionBottomRight\", \"editorPositionTopLeft\", \"editorPositionTopRight\", \"editorRedo\", \"editorStrike\", \"editorTable\", \"editorUnderline\", \"editorUndo\", \"editorUnorderedList\", \"email\", \"empty\", \"emsApp\", \"eql\", \"eraser\", \"exit\", \"expand\", \"expandMini\", \"exportAction\", \"eye\", \"eyeClosed\", \"faceHappy\", \"faceNeutral\", \"faceSad\", \"filebeatApp\", \"filter\", \"flag\", \"fold\", \"folderCheck\", \"folderClosed\", \"folderExclamation\", \"folderOpen\", \"frameNext\", \"framePrevious\", \"fullScreen\", \"fullScreenExit\", \"function\", \"gear\", \"gisApp\", \"glasses\", \"globe\", \"grab\", \"grabHorizontal\", \"graphApp\", \"grid\", \"grokApp\", \"heart\", \"heartbeatApp\", \"heatmap\", \"help\", \"home\", \"iInCircle\", \"image\", \"importAction\", \"indexClose\", \"indexEdit\", \"indexFlush\", \"indexManagementApp\", \"indexMapping\", \"indexOpen\", \"indexPatternApp\", \"indexRollupApp\", \"indexRuntime\", \"indexSettings\", \"inputOutput\", \"inspect\", \"invert\", \"ip\", \"keyboardShortcut\", \"kqlField\", \"kqlFunction\", \"kqlOperand\", \"kqlSelector\", \"kqlValue\", \"layers\", \"lensApp\", \"link\", \"list\", \"listAdd\", \"lock\", \"lockOpen\", \"logsApp\", \"logoAerospike\", \"logoApache\", \"logoAppSearch\", \"logoAWS\", \"logoAWSMono\", \"logoAzure\", \"logoAzureMono\", \"logoBeats\", \"logoBusinessAnalytics\", \"logoCeph\", \"logoCloud\", \"logoCloudEnterprise\", \"logoCode\", \"logoCodesandbox\", \"logoCouchbase\", \"logoDocker\", \"logoDropwizard\", \"logoElastic\", \"logoElasticsearch\", \"logoElasticStack\", \"logoEnterpriseSearch\", \"logoEtcd\", \"logoGCP\", \"logoGCPMono\", \"logoGithub\", \"logoGmail\", \"logoGolang\", \"logoGoogleG\", \"logoHAproxy\", \"logoIBM\", \"logoIBMMono\", \"logoKafka\", \"logoKibana\", \"logoKubernetes\", \"logoLogging\", \"logoLogstash\", \"logoMaps\", \"logoMemcached\", \"logoMetrics\", \"logoMongodb\", \"logoMySQL\", \"logoNginx\", \"logoObservability\", \"logoOsquery\", \"logoPhp\", \"logoPostgres\", \"logoPrometheus\", \"logoRabbitmq\", \"logoRedis\", \"logoSecurity\", \"logoSiteSearch\", \"logoSketch\", \"logoSlack\", \"logoUptime\", \"logoWebhook\", \"logoWindows\", \"logoWorkplaceSearch\", \"logstashFilter\", \"logstashIf\", \"logstashInput\", \"logstashOutput\", \"logstashQueue\", \"machineLearningApp\", \"magnet\", \"magnifyWithMinus\", \"magnifyWithPlus\", \"managementApp\", \"mapMarker\", \"memory\", \"menu\", \"menuDown\", \"menuLeft\", \"menuRight\", \"menuUp\", \"merge\", \"metricbeatApp\", \"metricsApp\", \"minimize\", \"minus\", \"minusInCircle\", \"minusInCircleFilled\", \"mobile\", \"monitoringApp\", \"moon\", \"nested\", \"node\", \"notebookApp\", \"number\", \"offline\", \"online\", \"outlierDetectionJob\", \"package\", \"packetbeatApp\", \"pageSelect\", \"pagesSelect\", \"partial\", \"paperClip\", \"pause\", \"pencil\", \"percent\", \"pin\", \"pinFilled\", \"pipelineApp\", \"play\", \"playFilled\", \"plus\", \"plusInCircle\", \"plusInCircleFilled\", \"popout\", \"push\", \"questionInCircle\", \"quote\", \"recentlyViewedApp\", \"refresh\", \"regressionJob\", \"reporter\", \"reportingApp\", \"returnKey\", \"save\", \"savedObjectsApp\", \"scale\", \"search\", \"searchProfilerApp\", \"securityAnalyticsApp\", \"securityApp\", \"securitySignal\", \"securitySignalDetected\", \"securitySignalResolved\", \"shard\", \"share\", \"snowflake\", \"sortable\", \"sortDown\", \"sortLeft\", \"sortRight\", \"sortUp\", \"spacesApp\", \"sqlApp\", \"starEmpty\", \"starEmptySpace\", \"starFilled\", \"starFilledSpace\", \"starMinusEmpty\", \"starMinusFilled\", \"starPlusEmpty\", \"starPlusFilled\", \"stats\", \"stop\", \"stopFilled\", \"stopSlash\", \"storage\", \"string\", \"submodule\", \"swatchInput\", \"symlink\", \"tableOfContents\", \"tableDensityExpanded\", \"tableDensityCompact\", \"tableDensityNormal\", \"tag\", \"tear\", \"temperature\", \"timeline\", \"timelionApp\", \"timeslider\", \"training\", \"trash\", \"upgradeAssistantApp\", \"uptimeApp\", \"unfold\", \"unlink\", \"user\", \"users\", \"usersRolesApp\", \"vector\", \"videoPlayer\", \"visArea\", \"visAreaStacked\", \"visBarHorizontal\", \"visBarHorizontalStacked\", \"visBarVertical\", \"visBarVerticalStacked\", \"visGauge\", \"visGoal\", \"visLine\", \"visMapCoordinate\", \"visMapRegion\", \"visMetric\", \"visPie\", \"visTable\", \"visTagCloud\", \"visText\", \"visTimelion\", \"visualizeApp\", \"visVega\", \"visVisualBuilder\", \"watchesApp\", \"wordWrap\", \"wordWrapDisabled\", \"workplaceSearchApp\", \"wrench\", \"tokenClass\", \"tokenProperty\", \"tokenEnum\", \"tokenVariable\", \"tokenMethod\", \"tokenAnnotation\", \"tokenException\", \"tokenInterface\", \"tokenParameter\", \"tokenField\", \"tokenElement\", \"tokenFunction\", \"tokenBoolean\", \"tokenString\", \"tokenArray\", \"tokenNumber\", \"tokenConstant\", \"tokenObject\", \"tokenEvent\", \"tokenKey\", \"tokenNull\", \"tokenStruct\", \"tokenPackage\", \"tokenOperator\", \"tokenEnumMember\", \"tokenRepo\", \"tokenSymbol\", \"tokenFile\", \"tokenModule\", \"tokenNamespace\", \"tokenDate\", \"tokenIP\", \"tokenNested\", \"tokenAlias\", \"tokenShape\", \"tokenGeo\", \"tokenRange\", \"tokenBinary\", \"tokenJoin\", \"tokenPercolator\", \"tokenFlattened\", \"tokenRankFeature\", \"tokenRankFeatures\", \"tokenKeyword\", \"tokenCompletionSuggester\", \"tokenDenseVector\", \"tokenText\", \"tokenTokenCount\", \"tokenSearchType\", \"tokenHistogram\"]).isRequired, PropTypes.string.isRequired, PropTypes.elementType.isRequired]).isRequired,\n\n    /**\n       * The color associated with this data type; it's used to color the icon token\n       */\n    color: PropTypes.oneOfType([PropTypes.oneOfType([PropTypes.oneOf([\"euiColorVis0\", \"euiColorVis1\", \"euiColorVis2\", \"euiColorVis3\", \"euiColorVis4\", \"euiColorVis5\", \"euiColorVis6\", \"euiColorVis7\", \"euiColorVis8\", \"euiColorVis9\", \"gray\"]).isRequired, PropTypes.string.isRequired]).isRequired, PropTypes.string.isRequired]),\n\n    /**\n       * Text for how to represent an ascending sort of this data type, e.g. 'A -> Z'\n       */\n    sortTextAsc: PropTypes.node.isRequired,\n\n    /**\n       * Text for how to represent a descending sort of this data type, e.g. 'Z -> A'\n       */\n    sortTextDesc: PropTypes.node.isRequired,\n\n    /**\n       * Whether this column is sortable (defaults to true)\n       */\n    isSortable: PropTypes.bool,\n\n    /**\n       *  This property controls the capitalization of text\n       */\n    textTransform: PropTypes.oneOf([\"uppercase\", \"lowercase\", \"capitalize\"]),\n\n    /**\n       * Default sort direction of the column\n       */\n    defaultSortDirection: PropTypes.oneOf([\"asc\", \"desc\"])\n  }).isRequired),\n\n  /**\n       * An object mapping #EuiDataGridColumn `schema`s to a custom popover formatting component which receives #EuiDataGridPopoverContent props\n       */\n  popoverContents: PropTypes.shape({}),\n\n  /**\n       * The total number of rows in the dataset (used by e.g. pagination to know how many pages to list)\n       */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n       * A function called to render a cell's value. Behind the scenes it is treated as a React component\n       * allowing hooks, context, and other React concepts to be used. The function receives a #CellValueElement\n       * as its only argument.\n       */\n  renderCellValue: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.func.isRequired]).isRequired,\n\n  /**\n       * A function called to render a cell's value. Behind the scenes it is treated as a React component\n       * allowing hooks, context, and other React concepts to be used. The function receives a #CellValueElement\n       * as its only argument.\n       */\n  renderFooterCellValue: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.func.isRequired]),\n\n  /**\n       * Defines the look and feel for the grid. Accepts a partial #EuiDataGridStyle object. Settings provided may be overwritten or merged with user defined preferences if toolbarVisibility density controls are available.\n       */\n  gridStyle: PropTypes.shape({\n    /**\n       * Size of fonts used within the row and column cells\n       */\n    fontSize: PropTypes.oneOf([\"s\", \"m\", \"l\"]),\n\n    /**\n       * Border uses for the row and column cells\n       */\n    border: PropTypes.oneOf([\"all\", \"horizontal\", \"none\"]),\n\n    /**\n       * If set to true, rows will alternate zebra striping for clarity\n       */\n    stripes: PropTypes.bool,\n\n    /**\n       * Visual style for the column headers. Recommendation is to use the `underline` style in times when #EuiDataGrid `toolbarVisibility` is set to `false`.\n       */\n    header: PropTypes.oneOf([\"shade\", \"underline\"]),\n\n    /**\n       * Visual style for the column footers.\n       */\n    footer: PropTypes.oneOf([\"shade\", \"overline\", \"striped\"]),\n\n    /**\n       * Will define what visual style to show on row hover\n       */\n    rowHover: PropTypes.oneOf([\"highlight\", \"none\"]),\n\n    /**\n       * Defines the padding with the row and column cells\n       */\n    cellPadding: PropTypes.oneOf([\"s\", \"m\", \"l\"]),\n\n    /**\n       * If set to true, the footer row will be sticky\n       */\n    stickyFooter: PropTypes.bool\n  }),\n\n  /**\n       * Accepts either a boolean or #EuiDataGridToolbarVisibilityOptions object. When used as a boolean, defines the display of the toolbar entire. WHen passed an object allows you to turn off individual controls within the toolbar as well as add additional buttons.\n       */\n  toolbarVisibility: PropTypes.oneOfType([PropTypes.bool.isRequired, PropTypes.shape({\n    /**\n       * Allows the ability for the user to hide fields and sort columns, boolean or a #EuiDataGridToolBarVisibilityColumnSelectorOptions\n       */\n    showColumnSelector: PropTypes.oneOfType([PropTypes.bool.isRequired, PropTypes.shape({\n      /**\n         * When `false`, removes the ability to show & hide columns through the UI\n         */\n      allowHide: PropTypes.bool,\n\n      /**\n         * When `false`, removes the ability to re-order columns through the UI\n         */\n      allowReorder: PropTypes.bool\n    }).isRequired]),\n\n    /**\n       * Allows the ability for the user to set the grid density. If on, this merges against what is provided in #EuiDataGridStyle\n       */\n    showStyleSelector: PropTypes.bool,\n\n    /**\n       * Allows the ability for the user to sort rows based upon column values\n       */\n    showSortSelector: PropTypes.bool,\n\n    /**\n       * Allows user to be able to full screen the data grid. If set to `false` make sure your grid fits within a large enough panel to still show the other controls.\n       */\n    showFullScreenSelector: PropTypes.bool,\n\n    /**\n       * Will place any passed node into the toolbar in front of the fullscreen button. Recommend using EuiButtonEmpty with the props shown in the examples.\n       */\n    additionalControls: PropTypes.node\n  }).isRequired]),\n\n  /**\n       * A #EuiDataGridInMemory object to definite the level of high order schema-detection and sorting logic to use on your data. *Try to set when possible*. When omitted, disables all enhancements and assumes content is flat strings.\n       */\n  inMemory: PropTypes.shape({\n    /**\n        Given the data flow Sorting->Pagination:\n        Each step can be performed by service calls or in-memory by the grid.\n        However, we cannot allow any service calls after an in-memory operation.\n        E.g. if Pagination requires a service call the grid cannot perform\n        in-memory Sorting. This means a single value representing the\n        service / in-memory boundary can be used. Thus there are four states for in-memory's level:\n        * \"enhancements\" - no in-memory operations, but use the available data to enhance the grid\n        * \"pagination\" - only pagination is performed in-memory\n        * \"sorting\" - sorting & pagination is performed in-memory\n     */\n    level: PropTypes.oneOf([\"enhancements\", \"pagination\", \"sorting\"]).isRequired,\n\n    /**\n       * An array of column ids for the in-memory processing to skip\n       */\n    skipColumns: PropTypes.arrayOf(PropTypes.string.isRequired)\n  }),\n\n  /**\n       * A #EuiDataGridPagination object. Omit to disable pagination completely.\n       */\n  pagination: PropTypes.shape({\n    /**\n       * The index of the current page, starts at 0 for the first page\n       */\n    pageIndex: PropTypes.number.isRequired,\n\n    /**\n       * How many rows should initially be shown per page\n       */\n    pageSize: PropTypes.number.isRequired,\n\n    /**\n       * An array of page sizes the user can select from.\n       * Leave this prop undefined or use an empty array to hide \"Rows per page\" select button\n       */\n    pageSizeOptions: PropTypes.arrayOf(PropTypes.number.isRequired),\n\n    /**\n       * A callback for when the user changes the page size selection\n       */\n    onChangeItemsPerPage: PropTypes.func.isRequired,\n\n    /**\n       * A callback for when the current page index changes\n       */\n    onChangePage: PropTypes.func.isRequired\n  }),\n\n  /**\n       * A #EuiDataGridSorting object that provides the sorted columns along with their direction. Omit to disable, but you'll likely want to also turn off the user sorting controls through the `toolbarVisibility` prop.\n       */\n  sorting: PropTypes.shape({\n    /**\n       * A function that receives updated column sort details in response to user interactions in the toolbar controls\n       */\n    onSort: PropTypes.func.isRequired,\n\n    /**\n       * An array of the column ids currently being sorted and their sort direction. The array order determines the sort order. `{ id: 'A'; direction: 'asc' }`\n       */\n    columns: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      direction: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired\n    }).isRequired).isRequired\n  }),\n\n  /**\n       * A callback for when a column's size changes. Callback receives `{ columnId: string, width: number }`.\n       */\n  onColumnResize: PropTypes.func,\n\n  /**\n       * Defines a minimum width for the grid to show all controls in its header.\n       */\n  minSizeForControls: PropTypes.number,\n\n  /**\n       * Sets the grid's height, forcing it to overflow in a scrollable container with cell virtualization\n       */\n  height: PropTypes.any,\n\n  /**\n       * Sets the grid's width, forcing it to overflow in a scrollable container with cell virtualization\n       */\n  width: PropTypes.any,\n\n  /**\n       * A #EuiDataGridRowHeightsOptions object that provides row heights options\n       */\n  rowHeightsOptions: PropTypes.shape({\n    /**\n       * Defines the default size for all rows. It can be line count or just height.\n       */\n    defaultHeight: PropTypes.oneOfType([PropTypes.number.isRequired, PropTypes.shape({\n      lineCount: PropTypes.number,\n      height: PropTypes.number\n    }).isRequired]),\n\n    /**\n       * Defines the height for a specific row. It can be line count or just height.\n       */\n    rowHeights: PropTypes.any\n  })\n};\n\ntry {\n  EuiDataGrid.__docgenInfo = {\n    description: '',\n    displayName: 'EuiDataGrid',\n    methods: [],\n    props: {\n      width: {\n        defaultValue: null,\n        description: \"Sets the grid's width, forcing it to overflow in a scrollable container with cell virtualization\",\n        name: 'width',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string | number'\n        }\n      },\n      height: {\n        defaultValue: null,\n        description: \"Sets the grid's height, forcing it to overflow in a scrollable container with cell virtualization\",\n        name: 'height',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string | number'\n        }\n      },\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'data-test-subj': {\n        defaultValue: null,\n        description: '',\n        name: 'data-test-subj',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      pagination: {\n        defaultValue: null,\n        description: 'A #EuiDataGridPagination object. Omit to disable pagination completely.',\n        name: 'pagination',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'EuiDataGridPaginationProps'\n        }\n      },\n      columns: {\n        defaultValue: null,\n        description: 'An array of #EuiDataGridColumn objects. Lists the columns available and the schema and settings tied to it.',\n        name: 'columns',\n        parent: undefined,\n        required: true,\n        type: {\n          name: 'EuiDataGridColumn[]'\n        }\n      },\n      sorting: {\n        defaultValue: null,\n        description: \"A #EuiDataGridSorting object that provides the sorted columns along with their direction. Omit to disable, but you'll likely want to also turn off the user sorting controls through the `toolbarVisibility` prop.\",\n        name: 'sorting',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'EuiDataGridSorting'\n        }\n      },\n      leadingControlColumns: {\n        defaultValue: null,\n        description: 'An array of #EuiDataGridControlColumn objects. Used to define ancillary columns on the left side of the data grid.',\n        name: 'leadingControlColumns',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'EuiDataGridControlColumn[]'\n        }\n      },\n      trailingControlColumns: {\n        defaultValue: null,\n        description: 'An array of #EuiDataGridControlColumn objects. Used to define ancillary columns on the right side of the data grid.',\n        name: 'trailingControlColumns',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'EuiDataGridControlColumn[]'\n        }\n      },\n      columnVisibility: {\n        defaultValue: null,\n        description: 'An array of #EuiDataGridColumnVisibility objects. Defines which columns are visible in the grid and the order they are displayed.',\n        name: 'columnVisibility',\n        parent: undefined,\n        required: true,\n        type: {\n          name: 'EuiDataGridColumnVisibility'\n        }\n      },\n      schemaDetectors: {\n        defaultValue: null,\n        description: 'An array of custom #EuiDataGridSchemaDetector objects. You can inject custom schemas to the grid to define the classnames applied',\n        name: 'schemaDetectors',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'EuiDataGridSchemaDetector[]'\n        }\n      },\n      popoverContents: {\n        defaultValue: null,\n        description: 'An object mapping #EuiDataGridColumn `schema`s to a custom popover formatting component which receives #EuiDataGridPopoverContent props',\n        name: 'popoverContents',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'EuiDataGridPopoverContents'\n        }\n      },\n      rowCount: {\n        defaultValue: null,\n        description: 'The total number of rows in the dataset (used by e.g. pagination to know how many pages to list)',\n        name: 'rowCount',\n        parent: undefined,\n        required: true,\n        type: {\n          name: 'number'\n        }\n      },\n      renderCellValue: {\n        defaultValue: null,\n        description: \"A function called to render a cell's value. Behind the scenes it is treated as a React component\\n\" + 'allowing hooks, context, and other React concepts to be used. The function receives a #CellValueElement\\n' + 'as its only argument.',\n        name: 'renderCellValue',\n        parent: undefined,\n        required: true,\n        type: {\n          name: '((props: EuiDataGridCellValueElementProps) => ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<...>)>) | (new (props: EuiDataGridCellValueElementProps) => Component<...>) | ((props: EuiDataGridCellValueEleme...'\n        }\n      },\n      renderFooterCellValue: {\n        defaultValue: null,\n        description: \"A function called to render a cell's value. Behind the scenes it is treated as a React component\\n\" + 'allowing hooks, context, and other React concepts to be used. The function receives a #CellValueElement\\n' + 'as its only argument.',\n        name: 'renderFooterCellValue',\n        parent: undefined,\n        required: false,\n        type: {\n          name: '((props: EuiDataGridCellValueElementProps) => ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<...>)>) | (new (props: EuiDataGridCellValueElementProps) => Component<...>) | ((props: EuiDataGridCellValueEleme...'\n        }\n      },\n      gridStyle: {\n        defaultValue: null,\n        description: 'Defines the look and feel for the grid. Accepts a partial #EuiDataGridStyle object. Settings provided may be overwritten or merged with user defined preferences if toolbarVisibility density controls are available.',\n        name: 'gridStyle',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'EuiDataGridStyle'\n        }\n      },\n      toolbarVisibility: {\n        defaultValue: null,\n        description: 'Accepts either a boolean or #EuiDataGridToolbarVisibilityOptions object. When used as a boolean, defines the display of the toolbar entire. WHen passed an object allows you to turn off individual controls within the toolbar as well as add additional buttons.',\n        name: 'toolbarVisibility',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean | EuiDataGridToolBarVisibilityOptions'\n        }\n      },\n      inMemory: {\n        defaultValue: null,\n        description: 'A #EuiDataGridInMemory object to definite the level of high order schema-detection and sorting logic to use on your data. *Try to set when possible*. When omitted, disables all enhancements and assumes content is flat strings.',\n        name: 'inMemory',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'EuiDataGridInMemory'\n        }\n      },\n      onColumnResize: {\n        defaultValue: null,\n        description: \"A callback for when a column's size changes. Callback receives `{ columnId: string, width: number }`.\",\n        name: 'onColumnResize',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'EuiDataGridOnColumnResizeHandler'\n        }\n      },\n      minSizeForControls: {\n        defaultValue: null,\n        description: 'Defines a minimum width for the grid to show all controls in its header.',\n        name: 'minSizeForControls',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'number'\n        }\n      },\n      rowHeightsOptions: {\n        defaultValue: null,\n        description: 'A #EuiDataGridRowHeightsOptions object that provides row heights options',\n        name: 'rowHeightsOptions',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'EuiDataGridRowHeightsOptions'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: 'Defines a string value that labels the current element.\\n' + '@see aria-labelledby.',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      }\n    },\n    extendedInterfaces: ['HTMLAttributes', 'AriaAttributes', 'DOMAttributes', 'CommonProps']\n  };\n} catch (e) {}"]}]}