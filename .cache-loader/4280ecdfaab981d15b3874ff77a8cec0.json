{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src-docs\\src\\views\\selectable\\selectable_messages.tsx","dependencies":[{"path":"D:\\work\\eui\\src-docs\\src\\views\\selectable\\selectable_messages.tsx","mtime":1649070093238},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7IHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7IH0KCmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuIik7IH0KCmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHsgaWYgKCFvKSByZXR1cm47IGlmICh0eXBlb2YgbyA9PT0gInN0cmluZyIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7IGlmIChuID09PSAiT2JqZWN0IiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lOyBpZiAobiA9PT0gIk1hcCIgfHwgbiA9PT0gIlNldCIpIHJldHVybiBBcnJheS5mcm9tKG8pOyBpZiAobiA9PT0gIkFyZ3VtZW50cyIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB9CgpmdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikgeyBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH0KCmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHsgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJ1bmRlZmluZWQiIHx8ICEoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChhcnIpKSkgcmV0dXJuOyB2YXIgX2FyciA9IFtdOyB2YXIgX24gPSB0cnVlOyB2YXIgX2QgPSBmYWxzZTsgdmFyIF9lID0gdW5kZWZpbmVkOyB0cnkgeyBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVsicmV0dXJuIl0gIT0gbnVsbCkgX2lbInJldHVybiJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfQoKZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOyB9CgppbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIEZyYWdtZW50IH0gZnJvbSAncmVhY3QnOwppbXBvcnQgeyBFdWlTZWxlY3RhYmxlIH0gZnJvbSAnLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvc2VsZWN0YWJsZSc7CmltcG9ydCB7IEV1aVN3aXRjaCB9IGZyb20gJy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2Zvcm0vc3dpdGNoJzsKaW1wb3J0IHsgRXVpU3BhY2VyIH0gZnJvbSAnLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvc3BhY2VyJzsKZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uICgpIHsKICB2YXIgX3VzZVN0YXRlID0gdXNlU3RhdGUoZmFsc2UpLAogICAgICBfdXNlU3RhdGUyID0gX3NsaWNlZFRvQXJyYXkoX3VzZVN0YXRlLCAyKSwKICAgICAgdXNlQ3VzdG9tTWVzc2FnZSA9IF91c2VTdGF0ZTJbMF0sCiAgICAgIHNldFVzZUN1c3RvbU1lc3NhZ2UgPSBfdXNlU3RhdGUyWzFdOwoKICB2YXIgX3VzZVN0YXRlMyA9IHVzZVN0YXRlKGZhbHNlKSwKICAgICAgX3VzZVN0YXRlNCA9IF9zbGljZWRUb0FycmF5KF91c2VTdGF0ZTMsIDIpLAogICAgICBpc0xvYWRpbmcgPSBfdXNlU3RhdGU0WzBdLAogICAgICBzZXRJc0xvYWRpbmcgPSBfdXNlU3RhdGU0WzFdOwoKICB2YXIgZW1wdHlNZXNzYWdlID0gJ1lvdSBoYXZlIG5vIHNwaWNlJzsKICB2YXIgbG9hZGluZ01lc3NhZ2UgPSAiSGV5LCBJJ20gbG9hZGluZyBoZXJlISI7CiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEZyYWdtZW50LCBudWxsLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlTd2l0Y2gsIHsKICAgIGxhYmVsOiAiQ3VzdG9tIG1lc3NhZ2UiLAogICAgb25DaGFuZ2U6IGZ1bmN0aW9uIG9uQ2hhbmdlKGUpIHsKICAgICAgcmV0dXJuIHNldFVzZUN1c3RvbU1lc3NhZ2UoZS50YXJnZXQuY2hlY2tlZCk7CiAgICB9LAogICAgY2hlY2tlZDogdXNlQ3VzdG9tTWVzc2FnZQogIH0pLCAiXHUyMDAzIiwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRXVpU3dpdGNoLCB7CiAgICBsYWJlbDogIlNob3cgbG9hZGluZyIsCiAgICBvbkNoYW5nZTogZnVuY3Rpb24gb25DaGFuZ2UoZSkgewogICAgICByZXR1cm4gc2V0SXNMb2FkaW5nKGUudGFyZ2V0LmNoZWNrZWQpOwogICAgfSwKICAgIGNoZWNrZWQ6IGlzTG9hZGluZwogIH0pLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlTcGFjZXIsIG51bGwpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlTZWxlY3RhYmxlLCB7CiAgICAiYXJpYS1sYWJlbCI6ICJNZXNzYWdpbmcgZXhhbXBsZSIsCiAgICBvcHRpb25zOiBbXSwKICAgIHN0eWxlOiB7CiAgICAgIHdpZHRoOiAzMDAKICAgIH0sCiAgICBsaXN0UHJvcHM6IHsKICAgICAgYm9yZGVyZWQ6IHRydWUKICAgIH0sCiAgICBpc0xvYWRpbmc6IGlzTG9hZGluZywKICAgIGxvYWRpbmdNZXNzYWdlOiB1c2VDdXN0b21NZXNzYWdlID8gbG9hZGluZ01lc3NhZ2UgOiB1bmRlZmluZWQsCiAgICBlbXB0eU1lc3NhZ2U6IHVzZUN1c3RvbU1lc3NhZ2UgPyBlbXB0eU1lc3NhZ2UgOiB1bmRlZmluZWQKICB9LCBmdW5jdGlvbiAobGlzdCkgewogICAgcmV0dXJuIGxpc3Q7CiAgfSkpOwp9KTs="},{"version":3,"sources":["D:/work/eui/src-docs/src/views/selectable/selectable_messages.tsx"],"names":["React","useState","Fragment","EuiSelectable","EuiSwitch","EuiSpacer","useCustomMessage","setUseCustomMessage","isLoading","setIsLoading","emptyMessage","loadingMessage","e","target","checked","width","bordered","undefined","list"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AAEA,SAASC,aAAT,QAA8B,uCAA9B;AACA,SAASC,SAAT,QAA0B,wCAA1B;AACA,SAASC,SAAT,QAA0B,mCAA1B;AAEA,gBAAe,YAAM;AAAA,kBAC6BJ,QAAQ,CAAC,KAAD,CADrC;AAAA;AAAA,MACZK,gBADY;AAAA,MACMC,mBADN;;AAAA,mBAEeN,QAAQ,CAAC,KAAD,CAFvB;AAAA;AAAA,MAEZO,SAFY;AAAA,MAEDC,YAFC;;AAInB,MAAMC,YAAY,GAAG,mBAArB;AACA,MAAMC,cAAc,GAAG,wBAAvB;AAEA,sBACE,oBAAC,QAAD,qBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,gBADR;AAEE,IAAA,QAAQ,EAAE,kBAACC,CAAD;AAAA,aAAOL,mBAAmB,CAACK,CAAC,CAACC,MAAF,CAASC,OAAV,CAA1B;AAAA,KAFZ;AAGE,IAAA,OAAO,EAAER;AAHX,IADF,yBAOE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,cADR;AAEE,IAAA,QAAQ,EAAE,kBAACM,CAAD;AAAA,aAAOH,YAAY,CAACG,CAAC,CAACC,MAAF,CAASC,OAAV,CAAnB;AAAA,KAFZ;AAGE,IAAA,OAAO,EAAEN;AAHX,IAPF,eAYE,oBAAC,SAAD,OAZF,eAaE,oBAAC,aAAD;AACE,kBAAW,mBADb;AAEE,IAAA,OAAO,EAAE,EAFX;AAGE,IAAA,KAAK,EAAE;AAAEO,MAAAA,KAAK,EAAE;AAAT,KAHT;AAIE,IAAA,SAAS,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAJb;AAKE,IAAA,SAAS,EAAER,SALb;AAME,IAAA,cAAc,EAAEF,gBAAgB,GAAGK,cAAH,GAAoBM,SANtD;AAOE,IAAA,YAAY,EAAEX,gBAAgB,GAAGI,YAAH,GAAkBO;AAPlD,KAQG,UAACC,IAAD;AAAA,WAAUA,IAAV;AAAA,GARH,CAbF,CADF;AA0BD,CAjCD","sourcesContent":["import React, { useState, Fragment } from 'react';\n\nimport { EuiSelectable } from '../../../../src/components/selectable';\nimport { EuiSwitch } from '../../../../src/components/form/switch';\nimport { EuiSpacer } from '../../../../src/components/spacer';\n\nexport default () => {\n  const [useCustomMessage, setUseCustomMessage] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const emptyMessage = 'You have no spice';\n  const loadingMessage = \"Hey, I'm loading here!\";\n\n  return (\n    <Fragment>\n      <EuiSwitch\n        label=\"Custom message\"\n        onChange={(e) => setUseCustomMessage(e.target.checked)}\n        checked={useCustomMessage}\n      />\n      &emsp;\n      <EuiSwitch\n        label=\"Show loading\"\n        onChange={(e) => setIsLoading(e.target.checked)}\n        checked={isLoading}\n      />\n      <EuiSpacer />\n      <EuiSelectable\n        aria-label=\"Messaging example\"\n        options={[]}\n        style={{ width: 300 }}\n        listProps={{ bordered: true }}\n        isLoading={isLoading}\n        loadingMessage={useCustomMessage ? loadingMessage : undefined}\n        emptyMessage={useCustomMessage ? emptyMessage : undefined}>\n        {(list) => list}\n      </EuiSelectable>\n    </Fragment>\n  );\n};\n"]}]}