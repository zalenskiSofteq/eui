{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\form\\file_picker\\file_picker.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\form\\file_picker\\file_picker.tsx","mtime":1649070093425},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mIjsgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gInN5bWJvbCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/ICJzeW1ib2wiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9CgppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdCI7CgpmdW5jdGlvbiBfZXh0ZW5kcygpIHsgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9OyByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfQoKZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKHNvdXJjZSwgZXhjbHVkZWQpIHsgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307IHZhciB0YXJnZXQgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKTsgdmFyIGtleSwgaTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHNvdXJjZVN5bWJvbEtleXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZSk7IGZvciAoaSA9IDA7IGkgPCBzb3VyY2VTeW1ib2xLZXlzLmxlbmd0aDsgaSsrKSB7IGtleSA9IHNvdXJjZVN5bWJvbEtleXNbaV07IGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7IGlmICghT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHNvdXJjZSwga2V5KSkgY29udGludWU7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSByZXR1cm4gdGFyZ2V0OyB9CgpmdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7IGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9OyB2YXIgdGFyZ2V0ID0ge307IHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTsgdmFyIGtleSwgaTsgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHsga2V5ID0gc291cmNlS2V5c1tpXTsgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSByZXR1cm4gdGFyZ2V0OyB9CgpmdW5jdGlvbiBfc2xpY2VkVG9BcnJheShhcnIsIGkpIHsgcmV0dXJuIF9hcnJheVdpdGhIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHx8IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIsIGkpIHx8IF9ub25JdGVyYWJsZVJlc3QoKTsgfQoKZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC4iKTsgfQoKZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikgeyBpZiAoIW8pIHJldHVybjsgaWYgKHR5cGVvZiBvID09PSAic3RyaW5nIikgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTsgaWYgKG4gPT09ICJPYmplY3QiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7IGlmIChuID09PSAiTWFwIiB8fCBuID09PSAiU2V0IikgcmV0dXJuIEFycmF5LmZyb20obyk7IGlmIChuID09PSAiQXJndW1lbnRzIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IH0KCmZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7IGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoOyBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspIHsgYXJyMltpXSA9IGFycltpXTsgfSByZXR1cm4gYXJyMjsgfQoKZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgeyBpZiAodHlwZW9mIFN5bWJvbCA9PT0gInVuZGVmaW5lZCIgfHwgIShTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGFycikpKSByZXR1cm47IHZhciBfYXJyID0gW107IHZhciBfbiA9IHRydWU7IHZhciBfZCA9IGZhbHNlOyB2YXIgX2UgPSB1bmRlZmluZWQ7IHRyeSB7IGZvciAodmFyIF9pID0gYXJyW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3M7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsgX2Fyci5wdXNoKF9zLnZhbHVlKTsgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOyB9IH0gY2F0Y2ggKGVycikgeyBfZCA9IHRydWU7IF9lID0gZXJyOyB9IGZpbmFsbHkgeyB0cnkgeyBpZiAoIV9uICYmIF9pWyJyZXR1cm4iXSAhPSBudWxsKSBfaVsicmV0dXJuIl0oKTsgfSBmaW5hbGx5IHsgaWYgKF9kKSB0aHJvdyBfZTsgfSB9IHJldHVybiBfYXJyOyB9CgpmdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7IH0KCmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uIik7IH0gfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoInZhbHVlIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0KCmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9CgpmdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSAiZnVuY3Rpb24iICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcigiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24iKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBfc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpOyB9CgpmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgby5fX3Byb3RvX18gPSBwOyByZXR1cm4gbzsgfTsgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTsgfQoKZnVuY3Rpb24gX2NyZWF0ZVN1cGVyKERlcml2ZWQpIHsgdmFyIGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCk7IHJldHVybiBmdW5jdGlvbiBfY3JlYXRlU3VwZXJJbnRlcm5hbCgpIHsgdmFyIFN1cGVyID0gX2dldFByb3RvdHlwZU9mKERlcml2ZWQpLCByZXN1bHQ7IGlmIChoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KSB7IHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7IHJlc3VsdCA9IFJlZmxlY3QuY29uc3RydWN0KFN1cGVyLCBhcmd1bWVudHMsIE5ld1RhcmdldCk7IH0gZWxzZSB7IHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH0gcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7IH07IH0KCmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKGNhbGwgJiYgKF90eXBlb2YoY2FsbCkgPT09ICJvYmplY3QiIHx8IHR5cGVvZiBjYWxsID09PSAiZnVuY3Rpb24iKSkgeyByZXR1cm4gY2FsbDsgfSByZXR1cm4gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKTsgfQoKZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7IGlmIChzZWxmID09PSB2b2lkIDApIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWQiKTsgfSByZXR1cm4gc2VsZjsgfQoKZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSAidW5kZWZpbmVkIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTsgaWYgKHR5cGVvZiBQcm94eSA9PT0gImZ1bmN0aW9uIikgcmV0dXJuIHRydWU7IHRyeSB7IERhdGUucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoRGF0ZSwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IHJldHVybiB0cnVlOyB9IGNhdGNoIChlKSB7IHJldHVybiBmYWxzZTsgfSB9CgpmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgeyBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgeyByZXR1cm4gby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG8pOyB9OyByZXR1cm4gX2dldFByb3RvdHlwZU9mKG8pOyB9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfQoKLyoKICogTGljZW5zZWQgdG8gRWxhc3RpY3NlYXJjaCBCLlYuIHVuZGVyIG9uZSBvciBtb3JlIGNvbnRyaWJ1dG9yCiAqIGxpY2Vuc2UgYWdyZWVtZW50cy4gU2VlIHRoZSBOT1RJQ0UgZmlsZSBkaXN0cmlidXRlZCB3aXRoCiAqIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiByZWdhcmRpbmcgY29weXJpZ2h0CiAqIG93bmVyc2hpcC4gRWxhc3RpY3NlYXJjaCBCLlYuIGxpY2Vuc2VzIHRoaXMgZmlsZSB0byB5b3UgdW5kZXIKICogdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7IHlvdSBtYXkKICogbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiAqCiAqICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsCiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuCiAqICJBUyBJUyIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWQogKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUKICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucwogKiB1bmRlciB0aGUgTGljZW5zZS4KICovCmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7CmltcG9ydCBQcm9wVHlwZXMgZnJvbSAicHJvcC10eXBlcyI7CmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnOwppbXBvcnQgeyBrZXlzT2YgfSBmcm9tICcuLi8uLi9jb21tb24nOwppbXBvcnQgeyBFdWlWYWxpZGF0YWJsZUNvbnRyb2wgfSBmcm9tICcuLi92YWxpZGF0YWJsZV9jb250cm9sJzsKaW1wb3J0IHsgRXVpQnV0dG9uRW1wdHkgfSBmcm9tICcuLi8uLi9idXR0b24nOwppbXBvcnQgeyBFdWlQcm9ncmVzcyB9IGZyb20gJy4uLy4uL3Byb2dyZXNzJzsKaW1wb3J0IHsgRXVpSWNvbiB9IGZyb20gJy4uLy4uL2ljb24nOwppbXBvcnQgeyBFdWlJMThuIH0gZnJvbSAnLi4vLi4vaTE4bic7CmltcG9ydCB7IEV1aUxvYWRpbmdTcGlubmVyIH0gZnJvbSAnLi4vLi4vbG9hZGluZyc7CmltcG9ydCB7IGh0bWxJZEdlbmVyYXRvciB9IGZyb20gJy4uLy4uLy4uL3NlcnZpY2VzL2FjY2Vzc2liaWxpdHknOwp2YXIgZGlzcGxheVRvQ2xhc3NOYW1lTWFwID0gewogIGRlZmF1bHQ6IG51bGwsCiAgbGFyZ2U6ICdldWlGaWxlUGlja2VyLS1sYXJnZScKfTsKZXhwb3J0IHZhciBESVNQTEFZUyA9IGtleXNPZihkaXNwbGF5VG9DbGFzc05hbWVNYXApOwpleHBvcnQgdmFyIEV1aUZpbGVQaWNrZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9Db21wb25lbnQpIHsKICBfaW5oZXJpdHMoRXVpRmlsZVBpY2tlciwgX0NvbXBvbmVudCk7CgogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoRXVpRmlsZVBpY2tlcik7CgogIGZ1bmN0aW9uIEV1aUZpbGVQaWNrZXIoKSB7CiAgICB2YXIgX3RoaXM7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEV1aUZpbGVQaWNrZXIpOwoKICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykgewogICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldOwogICAgfQoKICAgIF90aGlzID0gX3N1cGVyLmNhbGwuYXBwbHkoX3N1cGVyLCBbdGhpc10uY29uY2F0KGFyZ3MpKTsKCiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksICJzdGF0ZSIsIHsKICAgICAgcHJvbXB0VGV4dDogbnVsbCwKICAgICAgaXNIb3ZlcmluZ0Ryb3A6IGZhbHNlCiAgICB9KTsKCiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksICJmaWxlSW5wdXQiLCBudWxsKTsKCiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksICJoYW5kbGVDaGFuZ2UiLCBmdW5jdGlvbiAoZmlsZXNTZWxlY3RlZCkgewogICAgICBpZiAoIV90aGlzLmZpbGVJbnB1dCkgcmV0dXJuOwoKICAgICAgaWYgKF90aGlzLmZpbGVJbnB1dC5maWxlcyAmJiBfdGhpcy5maWxlSW5wdXQuZmlsZXMubGVuZ3RoID4gMSkgewogICAgICAgIF90aGlzLnNldFN0YXRlKHsKICAgICAgICAgIHByb21wdFRleHQ6ICIiLmNvbmNhdChfdGhpcy5maWxlSW5wdXQuZmlsZXMubGVuZ3RoLCAiICIpLmNvbmNhdChmaWxlc1NlbGVjdGVkKQogICAgICAgIH0pOwogICAgICB9IGVsc2UgaWYgKF90aGlzLmZpbGVJbnB1dC5maWxlcyAmJiBfdGhpcy5maWxlSW5wdXQuZmlsZXMubGVuZ3RoID09PSAwKSB7CiAgICAgICAgX3RoaXMuc2V0U3RhdGUoewogICAgICAgICAgcHJvbXB0VGV4dDogbnVsbAogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIF90aGlzLnNldFN0YXRlKHsKICAgICAgICAgIHByb21wdFRleHQ6IF90aGlzLmZpbGVJbnB1dC52YWx1ZS5zcGxpdCgnXFwnKS5wb3AoKQogICAgICAgIH0pOwogICAgICB9CgogICAgICB2YXIgb25DaGFuZ2UgPSBfdGhpcy5wcm9wcy5vbkNoYW5nZTsKCiAgICAgIGlmIChvbkNoYW5nZSkgewogICAgICAgIG9uQ2hhbmdlKF90aGlzLmZpbGVJbnB1dC5maWxlcyk7CiAgICAgIH0KICAgIH0pOwoKICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgInJlbW92ZUZpbGVzIiwgZnVuY3Rpb24gKGUpIHsKICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTsKICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgICBpZiAoIV90aGlzLmZpbGVJbnB1dCkgcmV0dXJuOwogICAgICBfdGhpcy5maWxlSW5wdXQudmFsdWUgPSAnJzsKCiAgICAgIF90aGlzLmhhbmRsZUNoYW5nZShudWxsKTsKICAgIH0pOwoKICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgInNob3dEcm9wIiwgZnVuY3Rpb24gKCkgewogICAgICBpZiAoIV90aGlzLnByb3BzLmRpc2FibGVkKSB7CiAgICAgICAgX3RoaXMuc2V0U3RhdGUoewogICAgICAgICAgaXNIb3ZlcmluZ0Ryb3A6IHRydWUKICAgICAgICB9KTsKICAgICAgfQogICAgfSk7CgogICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCAiaGlkZURyb3AiLCBmdW5jdGlvbiAoKSB7CiAgICAgIF90aGlzLnNldFN0YXRlKHsKICAgICAgICBpc0hvdmVyaW5nRHJvcDogZmFsc2UKICAgICAgfSk7CiAgICB9KTsKCiAgICByZXR1cm4gX3RoaXM7CiAgfQoKICBfY3JlYXRlQ2xhc3MoRXVpRmlsZVBpY2tlciwgW3sKICAgIGtleTogInJlbmRlciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlJMThuLCB7CiAgICAgICAgdG9rZW5zOiBbJ2V1aUZpbGVQaWNrZXIuY2xlYXJTZWxlY3RlZEZpbGVzJywgJ2V1aUZpbGVQaWNrZXIuZmlsZXNTZWxlY3RlZCddLAogICAgICAgIGRlZmF1bHRzOiBbJ0NsZWFyIHNlbGVjdGVkIGZpbGVzJywgJ2ZpbGVzIHNlbGVjdGVkJ10KICAgICAgfSwgZnVuY3Rpb24gKF9yZWYpIHsKICAgICAgICB2YXIgX3JlZjIgPSBfc2xpY2VkVG9BcnJheShfcmVmLCAyKSwKICAgICAgICAgICAgY2xlYXJTZWxlY3RlZEZpbGVzID0gX3JlZjJbMF0sCiAgICAgICAgICAgIGZpbGVzU2VsZWN0ZWQgPSBfcmVmMlsxXTsKCiAgICAgICAgdmFyIF90aGlzMiRwcm9wcyA9IF90aGlzMi5wcm9wcywKICAgICAgICAgICAgaWQgPSBfdGhpczIkcHJvcHMuaWQsCiAgICAgICAgICAgIG5hbWUgPSBfdGhpczIkcHJvcHMubmFtZSwKICAgICAgICAgICAgaW5pdGlhbFByb21wdFRleHQgPSBfdGhpczIkcHJvcHMuaW5pdGlhbFByb21wdFRleHQsCiAgICAgICAgICAgIGNsYXNzTmFtZSA9IF90aGlzMiRwcm9wcy5jbGFzc05hbWUsCiAgICAgICAgICAgIGRpc2FibGVkID0gX3RoaXMyJHByb3BzLmRpc2FibGVkLAogICAgICAgICAgICBjb21wcmVzc2VkID0gX3RoaXMyJHByb3BzLmNvbXByZXNzZWQsCiAgICAgICAgICAgIG9uQ2hhbmdlID0gX3RoaXMyJHByb3BzLm9uQ2hhbmdlLAogICAgICAgICAgICBpc0ludmFsaWQgPSBfdGhpczIkcHJvcHMuaXNJbnZhbGlkLAogICAgICAgICAgICBmdWxsV2lkdGggPSBfdGhpczIkcHJvcHMuZnVsbFdpZHRoLAogICAgICAgICAgICBpc0xvYWRpbmcgPSBfdGhpczIkcHJvcHMuaXNMb2FkaW5nLAogICAgICAgICAgICBkaXNwbGF5ID0gX3RoaXMyJHByb3BzLmRpc3BsYXksCiAgICAgICAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3RoaXMyJHByb3BzLCBbImlkIiwgIm5hbWUiLCAiaW5pdGlhbFByb21wdFRleHQiLCAiY2xhc3NOYW1lIiwgImRpc2FibGVkIiwgImNvbXByZXNzZWQiLCAib25DaGFuZ2UiLCAiaXNJbnZhbGlkIiwgImZ1bGxXaWR0aCIsICJpc0xvYWRpbmciLCAiZGlzcGxheSJdKTsKCiAgICAgICAgdmFyIHByb21wdElkID0gaHRtbElkR2VuZXJhdG9yKCkoKTsKCiAgICAgICAgaWYgKGlkKSB7CiAgICAgICAgICBwcm9tcHRJZCA9ICIiLmNvbmNhdChpZCwgIi1maWxlUGlja2VyX19wcm9tcHQiKTsKICAgICAgICB9CgogICAgICAgIHZhciBpc092ZXJyaWRpbmdJbml0aWFsUHJvbXB0ID0gX3RoaXMyLnN0YXRlLnByb21wdFRleHQgIT0gbnVsbDsKICAgICAgICB2YXIgbm9ybWFsRm9ybUNvbnRyb2wgPSBkaXNwbGF5ID09PSAnZGVmYXVsdCc7CiAgICAgICAgdmFyIGNsYXNzZXMgPSBjbGFzc05hbWVzKCdldWlGaWxlUGlja2VyJywgZGlzcGxheVRvQ2xhc3NOYW1lTWFwW2Rpc3BsYXldLCB7CiAgICAgICAgICBldWlGaWxlUGlja2VyX19zaG93RHJvcDogX3RoaXMyLnN0YXRlLmlzSG92ZXJpbmdEcm9wLAogICAgICAgICAgJ2V1aUZpbGVQaWNrZXItLWNvbXByZXNzZWQnOiBjb21wcmVzc2VkLAogICAgICAgICAgJ2V1aUZpbGVQaWNrZXItLWZ1bGxXaWR0aCc6IGZ1bGxXaWR0aCwKICAgICAgICAgICdldWlGaWxlUGlja2VyLWlzSW52YWxpZCc6IGlzSW52YWxpZCwKICAgICAgICAgICdldWlGaWxlUGlja2VyLWlzTG9hZGluZyc6IGlzTG9hZGluZywKICAgICAgICAgICdldWlGaWxlUGlja2VyLWhhc0ZpbGVzJzogaXNPdmVycmlkaW5nSW5pdGlhbFByb21wdAogICAgICAgIH0sIGNsYXNzTmFtZSk7CiAgICAgICAgdmFyIGNsZWFyQnV0dG9uOwoKICAgICAgICBpZiAoaXNMb2FkaW5nICYmIG5vcm1hbEZvcm1Db250cm9sKSB7CiAgICAgICAgICAvLyBPdmVycmlkZSBjbGVhciBidXR0b24gd2l0aCBsb2FkaW5nIHNwaW5uZXIgaWYgaXQgaXMgaW4gbG9hZGluZyBzdGF0ZQogICAgICAgICAgY2xlYXJCdXR0b24gPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlMb2FkaW5nU3Bpbm5lciwgewogICAgICAgICAgICBjbGFzc05hbWU6ICJldWlGaWxlUGlja2VyX19sb2FkaW5nU3Bpbm5lciIKICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSBpZiAoaXNPdmVycmlkaW5nSW5pdGlhbFByb21wdCkgewogICAgICAgICAgaWYgKG5vcm1hbEZvcm1Db250cm9sKSB7CiAgICAgICAgICAgIGNsZWFyQnV0dG9uID0gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImJ1dHRvbiIsIHsKICAgICAgICAgICAgICB0eXBlOiAiYnV0dG9uIiwKICAgICAgICAgICAgICAiYXJpYS1sYWJlbCI6IGNsZWFyU2VsZWN0ZWRGaWxlcywKICAgICAgICAgICAgICBjbGFzc05hbWU6ICJldWlGaWxlUGlja2VyX19jbGVhckJ1dHRvbiIsCiAgICAgICAgICAgICAgb25DbGljazogX3RoaXMyLnJlbW92ZUZpbGVzCiAgICAgICAgICAgIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEV1aUljb24sIHsKICAgICAgICAgICAgICBjbGFzc05hbWU6ICJldWlGaWxlUGlja2VyX19jbGVhckljb24iLAogICAgICAgICAgICAgIHR5cGU6ICJjcm9zcyIKICAgICAgICAgICAgfSkpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgY2xlYXJCdXR0b24gPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlCdXR0b25FbXB0eSwgewogICAgICAgICAgICAgICJhcmlhLWxhYmVsIjogY2xlYXJTZWxlY3RlZEZpbGVzLAogICAgICAgICAgICAgIGNsYXNzTmFtZTogImV1aUZpbGVQaWNrZXJfX2NsZWFyQnV0dG9uIiwKICAgICAgICAgICAgICBzaXplOiAieHMiLAogICAgICAgICAgICAgIG9uQ2xpY2s6IF90aGlzMi5yZW1vdmVGaWxlcwogICAgICAgICAgICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlJMThuLCB7CiAgICAgICAgICAgICAgdG9rZW46ICJldWlGaWxlUGlja2VyLnJlbW92ZVNlbGVjdGVkIiwKICAgICAgICAgICAgICBkZWZhdWx0OiAiUmVtb3ZlIgogICAgICAgICAgICB9KSk7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGNsZWFyQnV0dG9uID0gbnVsbDsKICAgICAgICB9CgogICAgICAgIHZhciBsb2FkZXIgPSAhbm9ybWFsRm9ybUNvbnRyb2wgJiYgaXNMb2FkaW5nICYmIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEV1aVByb2dyZXNzLCB7CiAgICAgICAgICBzaXplOiAieHMiLAogICAgICAgICAgY29sb3I6ICJhY2NlbnQiLAogICAgICAgICAgcG9zaXRpb246ICJhYnNvbHV0ZSIKICAgICAgICB9KTsKICAgICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsKICAgICAgICAgIGNsYXNzTmFtZTogY2xhc3NlcwogICAgICAgIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICAgICAgICBjbGFzc05hbWU6ICJldWlGaWxlUGlja2VyX193cmFwIgogICAgICAgIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEV1aVZhbGlkYXRhYmxlQ29udHJvbCwgewogICAgICAgICAgaXNJbnZhbGlkOiBpc0ludmFsaWQKICAgICAgICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgiaW5wdXQiLCBfZXh0ZW5kcyh7CiAgICAgICAgICB0eXBlOiAiZmlsZSIsCiAgICAgICAgICBpZDogaWQsCiAgICAgICAgICBuYW1lOiBuYW1lLAogICAgICAgICAgY2xhc3NOYW1lOiAiZXVpRmlsZVBpY2tlcl9faW5wdXQiLAogICAgICAgICAgb25DaGFuZ2U6IGZ1bmN0aW9uIG9uQ2hhbmdlKCkgewogICAgICAgICAgICByZXR1cm4gX3RoaXMyLmhhbmRsZUNoYW5nZShmaWxlc1NlbGVjdGVkKTsKICAgICAgICAgIH0sCiAgICAgICAgICByZWY6IGZ1bmN0aW9uIHJlZihpbnB1dCkgewogICAgICAgICAgICBfdGhpczIuZmlsZUlucHV0ID0gaW5wdXQ7CiAgICAgICAgICB9LAogICAgICAgICAgb25EcmFnT3ZlcjogX3RoaXMyLnNob3dEcm9wLAogICAgICAgICAgb25EcmFnTGVhdmU6IF90aGlzMi5oaWRlRHJvcCwKICAgICAgICAgIG9uRHJvcDogX3RoaXMyLmhpZGVEcm9wLAogICAgICAgICAgZGlzYWJsZWQ6IGRpc2FibGVkLAogICAgICAgICAgImFyaWEtZGVzY3JpYmVkYnkiOiBwcm9tcHRJZAogICAgICAgIH0sIHJlc3QpKSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICAgICAgICBjbGFzc05hbWU6ICJldWlGaWxlUGlja2VyX19wcm9tcHQiLAogICAgICAgICAgaWQ6IHByb21wdElkCiAgICAgICAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRXVpSWNvbiwgewogICAgICAgICAgY2xhc3NOYW1lOiAiZXVpRmlsZVBpY2tlcl9faWNvbiIsCiAgICAgICAgICB0eXBlOiAiaW1wb3J0QWN0aW9uIiwKICAgICAgICAgIHNpemU6IG5vcm1hbEZvcm1Db250cm9sID8gJ20nIDogJ2wnLAogICAgICAgICAgImFyaWEtaGlkZGVuIjogInRydWUiCiAgICAgICAgfSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICAgICAgICBjbGFzc05hbWU6ICJldWlGaWxlUGlja2VyX19wcm9tcHRUZXh0IgogICAgICAgIH0sIF90aGlzMi5zdGF0ZS5wcm9tcHRUZXh0IHx8IGluaXRpYWxQcm9tcHRUZXh0KSwgY2xlYXJCdXR0b24sIGxvYWRlcikpKTsKICAgICAgfSk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gRXVpRmlsZVBpY2tlcjsKfShDb21wb25lbnQpOwoKX2RlZmluZVByb3BlcnR5KEV1aUZpbGVQaWNrZXIsICJkZWZhdWx0UHJvcHMiLCB7CiAgaW5pdGlhbFByb21wdFRleHQ6ICdTZWxlY3Qgb3IgZHJhZyBhbmQgZHJvcCBhIGZpbGUnLAogIGNvbXByZXNzZWQ6IGZhbHNlLAogIGRpc3BsYXk6ICdsYXJnZScKfSk7CgpFdWlGaWxlUGlja2VyLnByb3BUeXBlcyA9IHsKICBpZDogUHJvcFR5cGVzLnN0cmluZywKICBuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLAogIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZywKCiAgLyoqCiAgICAgKiBUaGUgY29udGVudCB0aGF0IGFwcGVhcnMgaW4gdGhlIGRyb3B6b25lIGlmIG5vIGZpbGUgaXMgYXR0YWNoZWQKICAgICAqLwogIGluaXRpYWxQcm9tcHRUZXh0OiBQcm9wVHlwZXMubm9kZSwKCiAgLyoqCiAgICAgKiBVc2UgYXMgYSBjYWxsYmFjayB0byBhY2Nlc3MgdGhlIEhUTUwgRmlsZUxpc3QgQVBJCiAgICAgKi8KICBvbkNoYW5nZTogUHJvcFR5cGVzLmZ1bmMsCgogIC8qKgogICAgICogUmVkdWNlcyB0aGUgc2l6ZSB0byBhIHR5cGljYWwgKGNvbXByZXNzZWQpIGlucHV0CiAgICAgKi8KICBjb21wcmVzc2VkOiBQcm9wVHlwZXMuYm9vbCwKCiAgLyoqCiAgICAgKiBTaXplIG9yIHR5cGUgb2YgZGlzcGxheTsKICAgICAqIGBkZWZhdWx0YCBmb3Igbm9ybWFsIGhlaWdodCwgc2ltaWxhciB0byBvdGhlciBjb250cm9sczsKICAgICAqIGBsYXJnZWAgZm9yIHRhbGxlciBzaXplCiAgICAgKi8KICBkaXNwbGF5OiBQcm9wVHlwZXMub25lT2YoWyJkZWZhdWx0IiwgImxhcmdlIl0pLAogIGZ1bGxXaWR0aDogUHJvcFR5cGVzLmJvb2wsCiAgaXNJbnZhbGlkOiBQcm9wVHlwZXMuYm9vbCwKICBpc0xvYWRpbmc6IFByb3BUeXBlcy5ib29sLAogIGRpc2FibGVkOiBQcm9wVHlwZXMuYm9vbCwKICAiYXJpYS1sYWJlbCI6IFByb3BUeXBlcy5zdHJpbmcsCiAgImRhdGEtdGVzdC1zdWJqIjogUHJvcFR5cGVzLnN0cmluZwp9OwoKdHJ5IHsKICBFdWlGaWxlUGlja2VyLl9fZG9jZ2VuSW5mbyA9IHsKICAgIGRlc2NyaXB0aW9uOiAnJywKICAgIGRpc3BsYXlOYW1lOiAnRXVpRmlsZVBpY2tlcicsCiAgICBtZXRob2RzOiBbXSwKICAgIHByb3BzOiB7CiAgICAgIGlkOiB7CiAgICAgICAgZGVmYXVsdFZhbHVlOiBudWxsLAogICAgICAgIGRlc2NyaXB0aW9uOiAnJywKICAgICAgICBuYW1lOiAnaWQnLAogICAgICAgIHBhcmVudDogewogICAgICAgICAgZmlsZU5hbWU6ICdldWkvc3JjL2NvbXBvbmVudHMvZm9ybS9maWxlX3BpY2tlci9maWxlX3BpY2tlci50c3gnLAogICAgICAgICAgbmFtZTogJ0V1aUZpbGVQaWNrZXJQcm9wcycKICAgICAgICB9LAogICAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgICB0eXBlOiB7CiAgICAgICAgICBuYW1lOiAnc3RyaW5nJwogICAgICAgIH0KICAgICAgfSwKICAgICAgbmFtZTogewogICAgICAgIGRlZmF1bHRWYWx1ZTogbnVsbCwKICAgICAgICBkZXNjcmlwdGlvbjogJycsCiAgICAgICAgbmFtZTogJ25hbWUnLAogICAgICAgIHBhcmVudDogewogICAgICAgICAgZmlsZU5hbWU6ICdldWkvc3JjL2NvbXBvbmVudHMvZm9ybS9maWxlX3BpY2tlci9maWxlX3BpY2tlci50c3gnLAogICAgICAgICAgbmFtZTogJ0V1aUZpbGVQaWNrZXJQcm9wcycKICAgICAgICB9LAogICAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgICB0eXBlOiB7CiAgICAgICAgICBuYW1lOiAnc3RyaW5nJwogICAgICAgIH0KICAgICAgfSwKICAgICAgY2xhc3NOYW1lOiB7CiAgICAgICAgZGVmYXVsdFZhbHVlOiBudWxsLAogICAgICAgIGRlc2NyaXB0aW9uOiAnJywKICAgICAgICBuYW1lOiAnY2xhc3NOYW1lJywKICAgICAgICBwYXJlbnQ6IHsKICAgICAgICAgIGZpbGVOYW1lOiAnZXVpL3NyYy9jb21wb25lbnRzL2Zvcm0vZmlsZV9waWNrZXIvZmlsZV9waWNrZXIudHN4JywKICAgICAgICAgIG5hbWU6ICdFdWlGaWxlUGlja2VyUHJvcHMnCiAgICAgICAgfSwKICAgICAgICByZXF1aXJlZDogZmFsc2UsCiAgICAgICAgdHlwZTogewogICAgICAgICAgbmFtZTogJ3N0cmluZycKICAgICAgICB9CiAgICAgIH0sCiAgICAgIGluaXRpYWxQcm9tcHRUZXh0OiB7CiAgICAgICAgZGVmYXVsdFZhbHVlOiB7CiAgICAgICAgICB2YWx1ZTogJ1NlbGVjdCBvciBkcmFnIGFuZCBkcm9wIGEgZmlsZScKICAgICAgICB9LAogICAgICAgIGRlc2NyaXB0aW9uOiAnVGhlIGNvbnRlbnQgdGhhdCBhcHBlYXJzIGluIHRoZSBkcm9wem9uZSBpZiBubyBmaWxlIGlzIGF0dGFjaGVkJywKICAgICAgICBuYW1lOiAnaW5pdGlhbFByb21wdFRleHQnLAogICAgICAgIHBhcmVudDogewogICAgICAgICAgZmlsZU5hbWU6ICdldWkvc3JjL2NvbXBvbmVudHMvZm9ybS9maWxlX3BpY2tlci9maWxlX3BpY2tlci50c3gnLAogICAgICAgICAgbmFtZTogJ0V1aUZpbGVQaWNrZXJQcm9wcycKICAgICAgICB9LAogICAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgICB0eXBlOiB7CiAgICAgICAgICBuYW1lOiAnUmVhY3ROb2RlJwogICAgICAgIH0KICAgICAgfSwKICAgICAgb25DaGFuZ2U6IHsKICAgICAgICBkZWZhdWx0VmFsdWU6IG51bGwsCiAgICAgICAgZGVzY3JpcHRpb246ICdVc2UgYXMgYSBjYWxsYmFjayB0byBhY2Nlc3MgdGhlIEhUTUwgRmlsZUxpc3QgQVBJJywKICAgICAgICBuYW1lOiAnb25DaGFuZ2UnLAogICAgICAgIHBhcmVudDogewogICAgICAgICAgZmlsZU5hbWU6ICdldWkvc3JjL2NvbXBvbmVudHMvZm9ybS9maWxlX3BpY2tlci9maWxlX3BpY2tlci50c3gnLAogICAgICAgICAgbmFtZTogJ0V1aUZpbGVQaWNrZXJQcm9wcycKICAgICAgICB9LAogICAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgICB0eXBlOiB7CiAgICAgICAgICBuYW1lOiAnKGZpbGVzOiBGaWxlTGlzdCkgPT4gdm9pZCcKICAgICAgICB9CiAgICAgIH0sCiAgICAgIGNvbXByZXNzZWQ6IHsKICAgICAgICBkZWZhdWx0VmFsdWU6IHsKICAgICAgICAgIHZhbHVlOiAnZmFsc2UnCiAgICAgICAgfSwKICAgICAgICBkZXNjcmlwdGlvbjogJ1JlZHVjZXMgdGhlIHNpemUgdG8gYSB0eXBpY2FsIChjb21wcmVzc2VkKSBpbnB1dCcsCiAgICAgICAgbmFtZTogJ2NvbXByZXNzZWQnLAogICAgICAgIHBhcmVudDogewogICAgICAgICAgZmlsZU5hbWU6ICdldWkvc3JjL2NvbXBvbmVudHMvZm9ybS9maWxlX3BpY2tlci9maWxlX3BpY2tlci50c3gnLAogICAgICAgICAgbmFtZTogJ0V1aUZpbGVQaWNrZXJQcm9wcycKICAgICAgICB9LAogICAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgICB0eXBlOiB7CiAgICAgICAgICBuYW1lOiAnYm9vbGVhbicKICAgICAgICB9CiAgICAgIH0sCiAgICAgIGRpc3BsYXk6IHsKICAgICAgICBkZWZhdWx0VmFsdWU6IHsKICAgICAgICAgIHZhbHVlOiAnbGFyZ2UnCiAgICAgICAgfSwKICAgICAgICBkZXNjcmlwdGlvbjogJ1NpemUgb3IgdHlwZSBvZiBkaXNwbGF5O1xuJyArICdgZGVmYXVsdGAgZm9yIG5vcm1hbCBoZWlnaHQsIHNpbWlsYXIgdG8gb3RoZXIgY29udHJvbHM7XG4nICsgJ2BsYXJnZWAgZm9yIHRhbGxlciBzaXplJywKICAgICAgICBuYW1lOiAnZGlzcGxheScsCiAgICAgICAgcGFyZW50OiB7CiAgICAgICAgICBmaWxlTmFtZTogJ2V1aS9zcmMvY29tcG9uZW50cy9mb3JtL2ZpbGVfcGlja2VyL2ZpbGVfcGlja2VyLnRzeCcsCiAgICAgICAgICBuYW1lOiAnRXVpRmlsZVBpY2tlclByb3BzJwogICAgICAgIH0sCiAgICAgICAgcmVxdWlyZWQ6IGZhbHNlLAogICAgICAgIHR5cGU6IHsKICAgICAgICAgIG5hbWU6ICdlbnVtJywKICAgICAgICAgIHJhdzogJyJkZWZhdWx0IiB8ICJsYXJnZSInLAogICAgICAgICAgdmFsdWU6IFt7CiAgICAgICAgICAgIHZhbHVlOiAnImRlZmF1bHQiJwogICAgICAgICAgfSwgewogICAgICAgICAgICB2YWx1ZTogJyJsYXJnZSInCiAgICAgICAgICB9XQogICAgICAgIH0KICAgICAgfSwKICAgICAgZnVsbFdpZHRoOiB7CiAgICAgICAgZGVmYXVsdFZhbHVlOiBudWxsLAogICAgICAgIGRlc2NyaXB0aW9uOiAnJywKICAgICAgICBuYW1lOiAnZnVsbFdpZHRoJywKICAgICAgICBwYXJlbnQ6IHsKICAgICAgICAgIGZpbGVOYW1lOiAnZXVpL3NyYy9jb21wb25lbnRzL2Zvcm0vZmlsZV9waWNrZXIvZmlsZV9waWNrZXIudHN4JywKICAgICAgICAgIG5hbWU6ICdFdWlGaWxlUGlja2VyUHJvcHMnCiAgICAgICAgfSwKICAgICAgICByZXF1aXJlZDogZmFsc2UsCiAgICAgICAgdHlwZTogewogICAgICAgICAgbmFtZTogJ2Jvb2xlYW4nCiAgICAgICAgfQogICAgICB9LAogICAgICBpc0ludmFsaWQ6IHsKICAgICAgICBkZWZhdWx0VmFsdWU6IG51bGwsCiAgICAgICAgZGVzY3JpcHRpb246ICcnLAogICAgICAgIG5hbWU6ICdpc0ludmFsaWQnLAogICAgICAgIHBhcmVudDogewogICAgICAgICAgZmlsZU5hbWU6ICdldWkvc3JjL2NvbXBvbmVudHMvZm9ybS9maWxlX3BpY2tlci9maWxlX3BpY2tlci50c3gnLAogICAgICAgICAgbmFtZTogJ0V1aUZpbGVQaWNrZXJQcm9wcycKICAgICAgICB9LAogICAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgICB0eXBlOiB7CiAgICAgICAgICBuYW1lOiAnYm9vbGVhbicKICAgICAgICB9CiAgICAgIH0sCiAgICAgIGlzTG9hZGluZzogewogICAgICAgIGRlZmF1bHRWYWx1ZTogbnVsbCwKICAgICAgICBkZXNjcmlwdGlvbjogJycsCiAgICAgICAgbmFtZTogJ2lzTG9hZGluZycsCiAgICAgICAgcGFyZW50OiB7CiAgICAgICAgICBmaWxlTmFtZTogJ2V1aS9zcmMvY29tcG9uZW50cy9mb3JtL2ZpbGVfcGlja2VyL2ZpbGVfcGlja2VyLnRzeCcsCiAgICAgICAgICBuYW1lOiAnRXVpRmlsZVBpY2tlclByb3BzJwogICAgICAgIH0sCiAgICAgICAgcmVxdWlyZWQ6IGZhbHNlLAogICAgICAgIHR5cGU6IHsKICAgICAgICAgIG5hbWU6ICdib29sZWFuJwogICAgICAgIH0KICAgICAgfSwKICAgICAgZGlzYWJsZWQ6IHsKICAgICAgICBkZWZhdWx0VmFsdWU6IG51bGwsCiAgICAgICAgZGVzY3JpcHRpb246ICcnLAogICAgICAgIG5hbWU6ICdkaXNhYmxlZCcsCiAgICAgICAgcGFyZW50OiB7CiAgICAgICAgICBmaWxlTmFtZTogJ2V1aS9zcmMvY29tcG9uZW50cy9mb3JtL2ZpbGVfcGlja2VyL2ZpbGVfcGlja2VyLnRzeCcsCiAgICAgICAgICBuYW1lOiAnRXVpRmlsZVBpY2tlclByb3BzJwogICAgICAgIH0sCiAgICAgICAgcmVxdWlyZWQ6IGZhbHNlLAogICAgICAgIHR5cGU6IHsKICAgICAgICAgIG5hbWU6ICdib29sZWFuJwogICAgICAgIH0KICAgICAgfSwKICAgICAgJ2FyaWEtbGFiZWwnOiB7CiAgICAgICAgZGVmYXVsdFZhbHVlOiBudWxsLAogICAgICAgIGRlc2NyaXB0aW9uOiAnJywKICAgICAgICBuYW1lOiAnYXJpYS1sYWJlbCcsCiAgICAgICAgcGFyZW50OiB7CiAgICAgICAgICBmaWxlTmFtZTogJ2V1aS9zcmMvY29tcG9uZW50cy9jb21tb24udHMnLAogICAgICAgICAgbmFtZTogJ0NvbW1vblByb3BzJwogICAgICAgIH0sCiAgICAgICAgcmVxdWlyZWQ6IGZhbHNlLAogICAgICAgIHR5cGU6IHsKICAgICAgICAgIG5hbWU6ICdzdHJpbmcnCiAgICAgICAgfQogICAgICB9LAogICAgICAnZGF0YS10ZXN0LXN1YmonOiB7CiAgICAgICAgZGVmYXVsdFZhbHVlOiBudWxsLAogICAgICAgIGRlc2NyaXB0aW9uOiAnJywKICAgICAgICBuYW1lOiAnZGF0YS10ZXN0LXN1YmonLAogICAgICAgIHBhcmVudDogewogICAgICAgICAgZmlsZU5hbWU6ICdldWkvc3JjL2NvbXBvbmVudHMvY29tbW9uLnRzJywKICAgICAgICAgIG5hbWU6ICdDb21tb25Qcm9wcycKICAgICAgICB9LAogICAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgICB0eXBlOiB7CiAgICAgICAgICBuYW1lOiAnc3RyaW5nJwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIGV4dGVuZGVkSW50ZXJmYWNlczogWydFdWlGaWxlUGlja2VyUHJvcHMnLCAnQ29tbW9uUHJvcHMnLCAnSW5wdXRIVE1MQXR0cmlidXRlcycsICdIVE1MQXR0cmlidXRlcycsICdBcmlhQXR0cmlidXRlcycsICdET01BdHRyaWJ1dGVzJ10KICB9Owp9IGNhdGNoIChlKSB7fQ=="},{"version":3,"sources":["D:/work/eui/src/components/form/file_picker/file_picker.tsx"],"names":["React","Component","classNames","keysOf","EuiValidatableControl","EuiButtonEmpty","EuiProgress","EuiIcon","EuiI18n","EuiLoadingSpinner","htmlIdGenerator","displayToClassNameMap","default","large","DISPLAYS","EuiFilePicker","promptText","isHoveringDrop","filesSelected","fileInput","files","length","setState","value","split","pop","onChange","props","e","stopPropagation","preventDefault","handleChange","disabled","clearSelectedFiles","id","name","initialPromptText","className","compressed","isInvalid","fullWidth","isLoading","display","rest","promptId","isOverridingInitialPrompt","state","normalFormControl","classes","euiFilePicker__showDrop","clearButton","removeFiles","loader","input","showDrop","hideDrop"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { keysOf } from '../../common';\nimport { EuiValidatableControl } from '../validatable_control';\nimport { EuiButtonEmpty } from '../../button';\nimport { EuiProgress } from '../../progress';\nimport { EuiIcon } from '../../icon';\nimport { EuiI18n } from '../../i18n';\nimport { EuiLoadingSpinner } from '../../loading';\nimport { htmlIdGenerator } from '../../../services/accessibility';\nvar displayToClassNameMap = {\n  default: null,\n  large: 'euiFilePicker--large'\n};\nexport var DISPLAYS = keysOf(displayToClassNameMap);\nexport class EuiFilePicker extends Component {\n  static defaultProps = {\n    initialPromptText: 'Select or drag and drop a file',\n    compressed: false,\n    display: 'large'\n  };\n  state = {\n    promptText: null,\n    isHoveringDrop: false\n  };\n  fileInput = null;\n  handleChange = filesSelected => {\n    if (!this.fileInput) return;\n\n    if (this.fileInput.files && this.fileInput.files.length > 1) {\n      this.setState({\n        promptText: `${this.fileInput.files.length} ${filesSelected}`\n      });\n    } else if (this.fileInput.files && this.fileInput.files.length === 0) {\n      this.setState({\n        promptText: null\n      });\n    } else {\n      this.setState({\n        promptText: this.fileInput.value.split('\\\\').pop()\n      });\n    }\n\n    const {\n      onChange\n    } = this.props;\n\n    if (onChange) {\n      onChange(this.fileInput.files);\n    }\n  };\n  removeFiles = e => {\n    e.stopPropagation();\n    e.preventDefault();\n    if (!this.fileInput) return;\n    this.fileInput.value = '';\n    this.handleChange(null);\n  };\n  showDrop = () => {\n    if (!this.props.disabled) {\n      this.setState({\n        isHoveringDrop: true\n      });\n    }\n  };\n  hideDrop = () => {\n    this.setState({\n      isHoveringDrop: false\n    });\n  };\n\n  render() {\n    return <EuiI18n tokens={['euiFilePicker.clearSelectedFiles', 'euiFilePicker.filesSelected']} defaults={['Clear selected files', 'files selected']}>\n        {([clearSelectedFiles, filesSelected]) => {\n        const {\n          id,\n          name,\n          initialPromptText,\n          className,\n          disabled,\n          compressed,\n          onChange,\n          isInvalid,\n          fullWidth,\n          isLoading,\n          display,\n          ...rest\n        } = this.props;\n        let promptId = htmlIdGenerator()();\n\n        if (id) {\n          promptId = `${id}-filePicker__prompt`;\n        }\n\n        const isOverridingInitialPrompt = this.state.promptText != null;\n        const normalFormControl = display === 'default';\n        const classes = classNames('euiFilePicker', displayToClassNameMap[display], {\n          euiFilePicker__showDrop: this.state.isHoveringDrop,\n          'euiFilePicker--compressed': compressed,\n          'euiFilePicker--fullWidth': fullWidth,\n          'euiFilePicker-isInvalid': isInvalid,\n          'euiFilePicker-isLoading': isLoading,\n          'euiFilePicker-hasFiles': isOverridingInitialPrompt\n        }, className);\n        let clearButton;\n\n        if (isLoading && normalFormControl) {\n          // Override clear button with loading spinner if it is in loading state\n          clearButton = <EuiLoadingSpinner className=\"euiFilePicker__loadingSpinner\" />;\n        } else if (isOverridingInitialPrompt) {\n          if (normalFormControl) {\n            clearButton = <button type=\"button\" aria-label={clearSelectedFiles} className=\"euiFilePicker__clearButton\" onClick={this.removeFiles}>\n                  <EuiIcon className=\"euiFilePicker__clearIcon\" type=\"cross\" />\n                </button>;\n          } else {\n            clearButton = <EuiButtonEmpty aria-label={clearSelectedFiles} className=\"euiFilePicker__clearButton\" size=\"xs\" onClick={this.removeFiles}>\n                  <EuiI18n token=\"euiFilePicker.removeSelected\" default=\"Remove\" />\n                </EuiButtonEmpty>;\n          }\n        } else {\n          clearButton = null;\n        }\n\n        const loader = !normalFormControl && isLoading && <EuiProgress size=\"xs\" color=\"accent\" position=\"absolute\" />;\n        return <div className={classes}>\n              <div className=\"euiFilePicker__wrap\">\n                <EuiValidatableControl isInvalid={isInvalid}>\n                  <input type=\"file\" id={id} name={name} className=\"euiFilePicker__input\" onChange={() => this.handleChange(filesSelected)} ref={input => {\n                this.fileInput = input;\n              }} onDragOver={this.showDrop} onDragLeave={this.hideDrop} onDrop={this.hideDrop} disabled={disabled} aria-describedby={promptId} {...rest} />\n                </EuiValidatableControl>\n                <div className=\"euiFilePicker__prompt\" id={promptId}>\n                  <EuiIcon className=\"euiFilePicker__icon\" type=\"importAction\" size={normalFormControl ? 'm' : 'l'} aria-hidden=\"true\" />\n                  <div className=\"euiFilePicker__promptText\">\n                    {this.state.promptText || initialPromptText}\n                  </div>\n                  {clearButton}\n                  {loader}\n                </div>\n              </div>\n            </div>;\n      }}\n      </EuiI18n>;\n  }\n\n}\nEuiFilePicker.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  className: PropTypes.string,\n\n  /**\n     * The content that appears in the dropzone if no file is attached\n     */\n  initialPromptText: PropTypes.node,\n\n  /**\n     * Use as a callback to access the HTML FileList API\n     */\n  onChange: PropTypes.func,\n\n  /**\n     * Reduces the size to a typical (compressed) input\n     */\n  compressed: PropTypes.bool,\n\n  /**\n     * Size or type of display;\n     * `default` for normal height, similar to other controls;\n     * `large` for taller size\n     */\n  display: PropTypes.oneOf([\"default\", \"large\"]),\n  fullWidth: PropTypes.bool,\n  isInvalid: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  disabled: PropTypes.bool,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string\n};\n\ntry {\n  EuiFilePicker.__docgenInfo = {\n    description: '',\n    displayName: 'EuiFilePicker',\n    methods: [],\n    props: {\n      id: {\n        defaultValue: null,\n        description: '',\n        name: 'id',\n        parent: {\n          fileName: 'eui/src/components/form/file_picker/file_picker.tsx',\n          name: 'EuiFilePickerProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      name: {\n        defaultValue: null,\n        description: '',\n        name: 'name',\n        parent: {\n          fileName: 'eui/src/components/form/file_picker/file_picker.tsx',\n          name: 'EuiFilePickerProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/src/components/form/file_picker/file_picker.tsx',\n          name: 'EuiFilePickerProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      initialPromptText: {\n        defaultValue: {\n          value: 'Select or drag and drop a file'\n        },\n        description: 'The content that appears in the dropzone if no file is attached',\n        name: 'initialPromptText',\n        parent: {\n          fileName: 'eui/src/components/form/file_picker/file_picker.tsx',\n          name: 'EuiFilePickerProps'\n        },\n        required: false,\n        type: {\n          name: 'ReactNode'\n        }\n      },\n      onChange: {\n        defaultValue: null,\n        description: 'Use as a callback to access the HTML FileList API',\n        name: 'onChange',\n        parent: {\n          fileName: 'eui/src/components/form/file_picker/file_picker.tsx',\n          name: 'EuiFilePickerProps'\n        },\n        required: false,\n        type: {\n          name: '(files: FileList) => void'\n        }\n      },\n      compressed: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: 'Reduces the size to a typical (compressed) input',\n        name: 'compressed',\n        parent: {\n          fileName: 'eui/src/components/form/file_picker/file_picker.tsx',\n          name: 'EuiFilePickerProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      display: {\n        defaultValue: {\n          value: 'large'\n        },\n        description: 'Size or type of display;\\n' + '`default` for normal height, similar to other controls;\\n' + '`large` for taller size',\n        name: 'display',\n        parent: {\n          fileName: 'eui/src/components/form/file_picker/file_picker.tsx',\n          name: 'EuiFilePickerProps'\n        },\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"default\" | \"large\"',\n          value: [{\n            value: '\"default\"'\n          }, {\n            value: '\"large\"'\n          }]\n        }\n      },\n      fullWidth: {\n        defaultValue: null,\n        description: '',\n        name: 'fullWidth',\n        parent: {\n          fileName: 'eui/src/components/form/file_picker/file_picker.tsx',\n          name: 'EuiFilePickerProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      isInvalid: {\n        defaultValue: null,\n        description: '',\n        name: 'isInvalid',\n        parent: {\n          fileName: 'eui/src/components/form/file_picker/file_picker.tsx',\n          name: 'EuiFilePickerProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      isLoading: {\n        defaultValue: null,\n        description: '',\n        name: 'isLoading',\n        parent: {\n          fileName: 'eui/src/components/form/file_picker/file_picker.tsx',\n          name: 'EuiFilePickerProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      disabled: {\n        defaultValue: null,\n        description: '',\n        name: 'disabled',\n        parent: {\n          fileName: 'eui/src/components/form/file_picker/file_picker.tsx',\n          name: 'EuiFilePickerProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: '',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'data-test-subj': {\n        defaultValue: null,\n        description: '',\n        name: 'data-test-subj',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      }\n    },\n    extendedInterfaces: ['EuiFilePickerProps', 'CommonProps', 'InputHTMLAttributes', 'HTMLAttributes', 'AriaAttributes', 'DOMAttributes']\n  };\n} catch (e) {}"]}]}