{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src-docs\\src\\views\\tree_view\\tree_view_example.js","dependencies":[{"path":"D:\\work\\eui\\src-docs\\src\\views\\tree_view\\tree_view_example.js","mtime":1649070093272},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nOwppbXBvcnQgeyByZW5kZXJUb0h0bWwgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcyc7CmltcG9ydCB7IEd1aWRlU2VjdGlvblR5cGVzIH0gZnJvbSAnLi4vLi4vY29tcG9uZW50cyc7CmltcG9ydCB7IEV1aUNvZGUsIEV1aVRyZWVWaWV3IH0gZnJvbSAnLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMnOwppbXBvcnQgeyBFdWlUcmVlVmlld05vZGUgfSBmcm9tICcuL3RyZWVfdmlld19wcm9wcyc7CmltcG9ydCBUcmVlVmlldyBmcm9tICcuL3RyZWVfdmlldyc7CmltcG9ydCBUcmVlVmlld0NvbXByZXNzZWQgZnJvbSAnLi9jb21wcmVzc2VkJzsKCnZhciB0cmVlVmlld1NvdXJjZSA9IHJlcXVpcmUoJyEhcmF3LWxvYWRlciEuL3RyZWVfdmlldycpOwoKdmFyIHRyZWVWaWV3SHRtbCA9IHJlbmRlclRvSHRtbChUcmVlVmlldyk7Cgp2YXIgdHJlZVZpZXdDb21wcmVzc2VkU291cmNlID0gcmVxdWlyZSgnISFyYXctbG9hZGVyIS4vY29tcHJlc3NlZCcpOwoKdmFyIHRyZWVWaWV3Q29tcHJlc3NlZEh0bWwgPSByZW5kZXJUb0h0bWwoVHJlZVZpZXdDb21wcmVzc2VkKTsKdmFyIHRyZWVWaWV3U25pcHBldCA9IFsiPEV1aVRyZWVWaWV3XG4gIGl0ZW1zPXtbXG4gICAge1xuICAgICAgbGFiZWw6ICdJdGVtIE9uZScsXG4gICAgICBpZDogJ2l0ZW1fb25lJyxcbiAgICAgIGljb246IDxFdWlJY29uIHR5cGU9XCJhcnJvd1JpZ2h0XCIgLz4sXG4gICAgICBpY29uV2hlbkV4cGFuZGVkOiA8RXVpSWNvbiB0eXBlPVwiYXJyb3dEb3duXCIgLz4sXG4gICAgICBpc0V4cGFuZGVkOiB0cnVlLFxuICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAge1xuICAgICAgICAgIGxhYmVsOiAnSXRlbSBBJyxcbiAgICAgICAgICBpZDogJ2l0ZW1fYScsXG4gICAgICAgICAgaWNvbjogPEV1aUljb24gdHlwZT1cImRvY3VtZW50XCIgLz4sXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBsYWJlbDogJ0l0ZW0gQicsXG4gICAgICAgICAgaWQ6ICdpdGVtX2InLFxuICAgICAgICAgIGljb246IDxFdWlJY29uIHR5cGU9XCJkb2N1bWVudFwiIC8+LFxuICAgICAgICB9LFxuICAgICAgXSxcbiAgICB9LFxuICAgIHtcbiAgICAgIGxhYmVsOiAnSXRlbSBUd28nLFxuICAgICAgaWQ6ICdpdGVtX3R3bycsXG4gICAgfVxuICBdfVxuICBhcmlhLWxhYmVsPVwiU2FtcGxlIFRyZWUgVmlld1wiXG4vPiJdOwpleHBvcnQgdmFyIFRyZWVWaWV3RXhhbXBsZSA9IHsKICB0aXRsZTogJ1RyZWUgdmlldycsCiAgc2VjdGlvbnM6IFt7CiAgICBzb3VyY2U6IFt7CiAgICAgIHR5cGU6IEd1aWRlU2VjdGlvblR5cGVzLkpTLAogICAgICBjb2RlOiB0cmVlVmlld1NvdXJjZQogICAgfSwgewogICAgICB0eXBlOiBHdWlkZVNlY3Rpb25UeXBlcy5IVE1MLAogICAgICBjb2RlOiB0cmVlVmlld0h0bWwKICAgIH1dLAogICAgdGV4dDogLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJwIiwgbnVsbCwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoInN0cm9uZyIsIG51bGwsICJFdWlUcmVlVmlldyIpLCAiIGFsbG93cyB5b3UgdG8gcmVuZGVyIHJlY3Vyc2l2ZSBvYmplY3RzLCBzdWNoIGFzIGEgZmlsZSBkaXJlY3RvcnkuIFRoZSAiLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlDb2RlLCBudWxsLCAiY2hpbGRyZW4iKSwgIiBwcm9wIHRha2VzIGFuIGFycmF5IG9mICIsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEV1aUNvZGUsIG51bGwsICJub2RlcyIpLCAiLiIpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgicCIsIG51bGwsICJLZXlib2FyZCBuYXZpZ2F0aW9uIGFsbG93cyB1c2VycyB0byBuYXZpZ2F0ZSBhbmQgaW50ZXJhY3Qgd2l0aCB0aGUgdHJlZSB1c2luZyB0aGUgYXJyb3cga2V5cywgc3BhY2ViYXIsIGFuZCByZXR1cm4uIiksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJwIiwgbnVsbCwgIlRoZSAiLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlDb2RlLCBudWxsLCAiaWNvbiIpLCAiIHByb3AgYWNjZXB0cyBhbnkiLCAnICcsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KExpbmssIHsKICAgICAgdG86ICIvZGlzcGxheS9pY29ucyIKICAgIH0sICJpY29uIG9yIHRva2VuIiksICIuIFlvdSBjYW4gYWxzbyBzcGVjaWZpeSBhIGRpZmZlcmVudCBpY29uIGZvciB0aGUgb3BlbiBzdGF0ZSB3aXRoIHRoZSIsICcgJywgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRXVpQ29kZSwgbnVsbCwgImljb25XaGVuRXhwYW5kZWQiKSwgIiBwcm9wLiIpKSwKICAgIGNvbXBvbmVudHM6IHsKICAgICAgRXVpVHJlZVZpZXc6IEV1aVRyZWVWaWV3CiAgICB9LAogICAgZGVtbzogLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoVHJlZVZpZXcsIG51bGwpLAogICAgc25pcHBldDogdHJlZVZpZXdTbmlwcGV0LAogICAgcHJvcHM6IHsKICAgICAgRXVpVHJlZVZpZXc6IEV1aVRyZWVWaWV3LAogICAgICBFdWlUcmVlVmlld05vZGU6IEV1aVRyZWVWaWV3Tm9kZQogICAgfQogIH0sIHsKICAgIHRpdGxlOiAnT3B0aW9uYWwgc3R5bGluZycsCiAgICBzb3VyY2U6IFt7CiAgICAgIHR5cGU6IEd1aWRlU2VjdGlvblR5cGVzLkpTLAogICAgICBjb2RlOiB0cmVlVmlld0NvbXByZXNzZWRTb3VyY2UKICAgIH0sIHsKICAgICAgdHlwZTogR3VpZGVTZWN0aW9uVHlwZXMuSFRNTCwKICAgICAgY29kZTogdHJlZVZpZXdDb21wcmVzc2VkSHRtbAogICAgfV0sCiAgICB0ZXh0OiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgbnVsbCwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoInAiLCBudWxsLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgic3Ryb25nIiwgbnVsbCwgIkV1aVRyZWVWaWV3IiksICIgc3VwcG9ydHMgYSBjb21wcmVzc2VkIG1vZGUgd2l0aCB0aGUiLCAnICcsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEV1aUNvZGUsIHsKICAgICAgbGFuZ3VhZ2U6ICJqcyIKICAgIH0sICdkaXNwbGF5PSJjb21wcmVzc2VkIicpLCAiIHNldHRpbmcuIFdoZW4gdXNpbmcgdGhlIGNvbXByZXNzZWQgdmVyc2lvbiBpdCdzIGhpZ2hseSByZWNvbW1lbmRlZCB0byB1c2UgdGhlIHNtYWxsIHNpemUgb2YgIiwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoInN0cm9uZyIsIG51bGwsICJFdWlJY29uIiksICIgYW5kIHRoZSBleHRyYSBzbWFsbCBzaXplIG9mICIsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJzdHJvbmciLCBudWxsLCAiRXVpVG9rZW4iKSwgIi4gVGhpcyB3aWxsIGhlbHAgcHJldmVudCBhd2thcmQgYWxpZ25tZW50IGlzc3VlcyB3aGVuIHVzZWQgYWxvbmdzaWRlIHRoZSIsICcgJywgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRXVpQ29kZSwgbnVsbCwgInNob3dFeHBhbnNpb25BcnJvd3MiKSwgIiBwcm9wLiIpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgicCIsIG51bGwsICJUaGUgIiwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRXVpQ29kZSwgbnVsbCwgInNob3dFeHBhbnNpb25BcnJvd3MiKSwgIiBwcm9wIHByb3ZpZGVzIGFuIGFkZGl0aW9uYWwgdmlzdWFsIGluZGljYXRvci4gSWRlYWwgZm9yIHdoZW4gYSB0cmVlJ3MgaXRlbXMgdXNlIGljb25zIHRoYXQgZG9uJ3QgaW1tZWRpYXRlbHkgbGV0IGEgdXNlciBrbm93IHRoYXQgdGhlcmUgYXJlIG5lc3RlZCBub2RlcyB0aGF0IG1heSBub3QgYmUgdmlzaWJsZS4iKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoInAiLCBudWxsLCAiSW4gc29tZSBjYXNlcywgeW91IG1heSB3YW50IHRvIGF1dG9tYXRpY2FsbHkgZXhwYW5kIGFsbCB0aGUgaXRlbXMgd2l0aCBjaGlsZHJlbi4gSW4gdGhvc2UgaW5zdGFuY2VzLCB5b3UgY2FuIHVzZSB0aGUiLCAnICcsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEV1aUNvZGUsIG51bGwsICJleHBhbmRCeURlZmF1bHQiKSwgIiBwcm9wLCBhcyBzZWVuIGluIHRoZSBleGFtcGxlIGJlbG93LiIpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgicCIsIG51bGwsICJMYXN0bHksIGVhY2ggbm9kZSBjYW4gYWxzbyBhY2NlcHQgYSBjdXN0b20iLCAnICcsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEV1aUNvZGUsIG51bGwsICJjbGFzc05hbWUiKSwgIiBzaG91bGQgeW91IG5lZWQgdG8gc3R5bGUgdGhlbSBpbmRpdmlkdWFsbHkuIikpLAogICAgY29tcG9uZW50czogewogICAgICBFdWlUcmVlVmlldzogRXVpVHJlZVZpZXcKICAgIH0sCiAgICBkZW1vOiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChUcmVlVmlld0NvbXByZXNzZWQsIG51bGwpLAogICAgcHJvcHM6IHsKICAgICAgRXVpVHJlZVZpZXc6IEV1aVRyZWVWaWV3LAogICAgICBFdWlUcmVlVmlld05vZGU6IEV1aVRyZWVWaWV3Tm9kZQogICAgfQogIH1dCn07"},{"version":3,"sources":["D:/work/eui/src-docs/src/views/tree_view/tree_view_example.js"],"names":["React","Link","renderToHtml","GuideSectionTypes","EuiCode","EuiTreeView","EuiTreeViewNode","TreeView","TreeViewCompressed","treeViewSource","require","treeViewHtml","treeViewCompressedSource","treeViewCompressedHtml","treeViewSnippet","TreeViewExample","title","sections","source","type","JS","code","HTML","text","components","demo","snippet","props"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,SAASC,iBAAT,QAAkC,kBAAlC;AAEA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,4BAArC;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,kBAAP,MAA+B,cAA/B;;AAEA,IAAMC,cAAc,GAAGC,OAAO,CAAC,0BAAD,CAA9B;;AACA,IAAMC,YAAY,GAAGT,YAAY,CAACK,QAAD,CAAjC;;AAEA,IAAMK,wBAAwB,GAAGF,OAAO,CAAC,2BAAD,CAAxC;;AACA,IAAMG,sBAAsB,GAAGX,YAAY,CAACM,kBAAD,CAA3C;AAEA,IAAMM,eAAe,GAAG,6lBAAxB;AA+BA,OAAO,IAAMC,eAAe,GAAG;AAC7BC,EAAAA,KAAK,EAAE,WADsB;AAE7BC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAEhB,iBAAiB,CAACiB,EAD1B;AAEEC,MAAAA,IAAI,EAAEZ;AAFR,KADM,EAKN;AACEU,MAAAA,IAAI,EAAEhB,iBAAiB,CAACmB,IAD1B;AAEED,MAAAA,IAAI,EAAEV;AAFR,KALM,CADV;AAWEY,IAAAA,IAAI,eACF,8CACE,4CACE,kDADF,0FAEgC,oBAAC,OAAD,mBAFhC,2CAGc,oBAAC,OAAD,gBAHd,MADF,eAME,qJANF,eAUE,oDACM,oBAAC,OAAD,eADN,uBAC+C,GAD/C,eAEE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC;AAAT,uBAFF,0EAGwD,GAHxD,eAIE,oBAAC,OAAD,2BAJF,WAVF,CAZJ;AA8BEC,IAAAA,UAAU,EAAE;AAAEnB,MAAAA,WAAW,EAAXA;AAAF,KA9Bd;AA+BEoB,IAAAA,IAAI,eAAE,oBAAC,QAAD,OA/BR;AAgCEC,IAAAA,OAAO,EAAEZ,eAhCX;AAiCEa,IAAAA,KAAK,EAAE;AAAEtB,MAAAA,WAAW,EAAXA,WAAF;AAAeC,MAAAA,eAAe,EAAfA;AAAf;AAjCT,GADQ,EAoCR;AACEU,IAAAA,KAAK,EAAE,kBADT;AAEEE,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAEhB,iBAAiB,CAACiB,EAD1B;AAEEC,MAAAA,IAAI,EAAET;AAFR,KADM,EAKN;AACEO,MAAAA,IAAI,EAAEhB,iBAAiB,CAACmB,IAD1B;AAEED,MAAAA,IAAI,EAAER;AAFR,KALM,CAFV;AAYEU,IAAAA,IAAI,eACF,8CACE,4CACE,kDADF,0CACmE,GADnE,eAEE,oBAAC,OAAD;AAAS,MAAA,QAAQ,EAAC;AAAlB,OAAwB,sBAAxB,CAFF,gHAIwB,8CAJxB,gDAKU,+CALV,8EAM2C,GAN3C,eAOE,oBAAC,OAAD,8BAPF,WADF,eAUE,oDACM,oBAAC,OAAD,8BADN,uLAVF,eAgBE,uJAEqD,GAFrD,eAGE,oBAAC,OAAD,0BAHF,yCAhBF,eAsBE,6EAC6C,GAD7C,eAEE,oBAAC,OAAD,oBAFF,iDAtBF,CAbJ;AA0CEC,IAAAA,UAAU,EAAE;AAAEnB,MAAAA,WAAW,EAAXA;AAAF,KA1Cd;AA2CEoB,IAAAA,IAAI,eAAE,oBAAC,kBAAD,OA3CR;AA4CEE,IAAAA,KAAK,EAAE;AAAEtB,MAAAA,WAAW,EAAXA,WAAF;AAAeC,MAAAA,eAAe,EAAfA;AAAf;AA5CT,GApCQ;AAFmB,CAAxB","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { renderToHtml } from '../../services';\n\nimport { GuideSectionTypes } from '../../components';\n\nimport { EuiCode, EuiTreeView } from '../../../../src/components';\nimport { EuiTreeViewNode } from './tree_view_props';\nimport TreeView from './tree_view';\nimport TreeViewCompressed from './compressed';\n\nconst treeViewSource = require('!!raw-loader!./tree_view');\nconst treeViewHtml = renderToHtml(TreeView);\n\nconst treeViewCompressedSource = require('!!raw-loader!./compressed');\nconst treeViewCompressedHtml = renderToHtml(TreeViewCompressed);\n\nconst treeViewSnippet = [\n  `<EuiTreeView\n  items={[\n    {\n      label: 'Item One',\n      id: 'item_one',\n      icon: <EuiIcon type=\"arrowRight\" />,\n      iconWhenExpanded: <EuiIcon type=\"arrowDown\" />,\n      isExpanded: true,\n      children: [\n        {\n          label: 'Item A',\n          id: 'item_a',\n          icon: <EuiIcon type=\"document\" />,\n        },\n        {\n          label: 'Item B',\n          id: 'item_b',\n          icon: <EuiIcon type=\"document\" />,\n        },\n      ],\n    },\n    {\n      label: 'Item Two',\n      id: 'item_two',\n    }\n  ]}\n  aria-label=\"Sample Tree View\"\n/>`,\n];\n\nexport const TreeViewExample = {\n  title: 'Tree view',\n  sections: [\n    {\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: treeViewSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: treeViewHtml,\n        },\n      ],\n      text: (\n        <div>\n          <p>\n            <strong>EuiTreeView</strong> allows you to render recursive objects,\n            such as a file directory. The <EuiCode>children</EuiCode> prop takes\n            an array of <EuiCode>nodes</EuiCode>.\n          </p>\n          <p>\n            Keyboard navigation allows users to navigate and interact with the\n            tree using the arrow keys, spacebar, and return.\n          </p>\n          <p>\n            The <EuiCode>icon</EuiCode> prop accepts any{' '}\n            <Link to=\"/display/icons\">icon or token</Link>. You can also\n            specifiy a different icon for the open state with the{' '}\n            <EuiCode>iconWhenExpanded</EuiCode> prop.\n          </p>\n        </div>\n      ),\n      components: { EuiTreeView },\n      demo: <TreeView />,\n      snippet: treeViewSnippet,\n      props: { EuiTreeView, EuiTreeViewNode },\n    },\n    {\n      title: 'Optional styling',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: treeViewCompressedSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: treeViewCompressedHtml,\n        },\n      ],\n      text: (\n        <div>\n          <p>\n            <strong>EuiTreeView</strong> supports a compressed mode with the{' '}\n            <EuiCode language=\"js\">{'display=\"compressed\"'}</EuiCode> setting.\n            When using the compressed version it&apos;s highly recommended to\n            use the small size of <strong>EuiIcon</strong> and the extra small\n            size of <strong>EuiToken</strong>. This will help prevent awkard\n            alignment issues when used alongside the{' '}\n            <EuiCode>showExpansionArrows</EuiCode> prop.\n          </p>\n          <p>\n            The <EuiCode>showExpansionArrows</EuiCode> prop provides an\n            additional visual indicator. Ideal for when a tree&apos;s items use\n            icons that don&apos;t immediately let a user know that there are\n            nested nodes that may not be visible.\n          </p>\n          <p>\n            In some cases, you may want to automatically expand all the items\n            with children. In those instances, you can use the{' '}\n            <EuiCode>expandByDefault</EuiCode> prop, as seen in the example\n            below.\n          </p>\n          <p>\n            Lastly, each node can also accept a custom{' '}\n            <EuiCode>className</EuiCode> should you need to style them\n            individually.\n          </p>\n        </div>\n      ),\n      components: { EuiTreeView },\n      demo: <TreeViewCompressed />,\n      props: { EuiTreeView, EuiTreeViewNode },\n    },\n  ],\n};\n"]}]}