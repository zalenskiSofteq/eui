{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\datagrid\\data_grid_cell_buttons.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\datagrid\\data_grid_cell_buttons.tsx","mtime":1649070093364},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmFzc2lnbiI7CgpmdW5jdGlvbiBfdG9Db25zdW1hYmxlQXJyYXkoYXJyKSB7IHJldHVybiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5KGFycikgfHwgX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFycikgfHwgX25vbkl0ZXJhYmxlU3ByZWFkKCk7IH0KCmZ1bmN0aW9uIF9ub25JdGVyYWJsZVNwcmVhZCgpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2UuXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuIik7IH0KCmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHsgaWYgKCFvKSByZXR1cm47IGlmICh0eXBlb2YgbyA9PT0gInN0cmluZyIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7IGlmIChuID09PSAiT2JqZWN0IiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lOyBpZiAobiA9PT0gIk1hcCIgfHwgbiA9PT0gIlNldCIpIHJldHVybiBBcnJheS5mcm9tKG8pOyBpZiAobiA9PT0gIkFyZ3VtZW50cyIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB9CgpmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5KGl0ZXIpIHsgaWYgKHR5cGVvZiBTeW1ib2wgIT09ICJ1bmRlZmluZWQiICYmIFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoaXRlcikpIHJldHVybiBBcnJheS5mcm9tKGl0ZXIpOyB9CgpmdW5jdGlvbiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShhcnIpOyB9CgpmdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikgeyBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH0KCmZ1bmN0aW9uIF9leHRlbmRzKCkgeyBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07IHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9CgovKgogKiBMaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lIG9yIG1vcmUgY29udHJpYnV0b3IKICogbGljZW5zZSBhZ3JlZW1lbnRzLiBTZWUgdGhlIE5PVElDRSBmaWxlIGRpc3RyaWJ1dGVkIHdpdGgKICogdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIHJlZ2FyZGluZyBjb3B5cmlnaHQKICogb3duZXJzaGlwLiBFbGFzdGljc2VhcmNoIEIuVi4gbGljZW5zZXMgdGhpcyBmaWxlIHRvIHlvdSB1bmRlcgogKiB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsgeW91IG1heQogKiBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgogKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKICoKICogICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiAqCiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywKICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4KICogIkFTIElTIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZCiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZQogKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zCiAqIHVuZGVyIHRoZSBMaWNlbnNlLgogKi8KaW1wb3J0IFJlYWN0LCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7CmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnOwppbXBvcnQgeyBFdWlJMThuIH0gZnJvbSAnLi4vaTE4bic7CmltcG9ydCB7IEV1aUJ1dHRvbkljb24gfSBmcm9tICcuLi9idXR0b24vYnV0dG9uX2ljb24nOwpleHBvcnQgdmFyIEV1aURhdGFHcmlkQ2VsbEJ1dHRvbnMgPSBmdW5jdGlvbiBFdWlEYXRhR3JpZENlbGxCdXR0b25zKF9yZWYpIHsKICB2YXIgcG9wb3ZlcklzT3BlbiA9IF9yZWYucG9wb3ZlcklzT3BlbiwKICAgICAgY2xvc2VQb3BvdmVyID0gX3JlZi5jbG9zZVBvcG92ZXIsCiAgICAgIG9uRXhwYW5kQ2xpY2sgPSBfcmVmLm9uRXhwYW5kQ2xpY2ssCiAgICAgIGNvbHVtbiA9IF9yZWYuY29sdW1uLAogICAgICByb3dJbmRleCA9IF9yZWYucm93SW5kZXg7CiAgdmFyIGJ1dHRvbkljb25DbGFzc2VzID0gY2xhc3NOYW1lcygnZXVpRGF0YUdyaWRSb3dDZWxsX19leHBhbmRCdXR0b25JY29uJywgewogICAgJ2V1aURhdGFHcmlkUm93Q2VsbF9fZXhwYW5kQnV0dG9uSWNvbi1pc0FjdGl2ZSc6IHBvcG92ZXJJc09wZW4KICB9KTsKICB2YXIgYnV0dG9uQ2xhc3NlcyA9IGNsYXNzTmFtZXMoJ2V1aURhdGFHcmlkUm93Q2VsbF9fZXhwYW5kQnV0dG9uJywgewogICAgJ2V1aURhdGFHcmlkUm93Q2VsbF9fZXhwYW5kQnV0dG9uLWlzQWN0aXZlJzogcG9wb3ZlcklzT3BlbgogIH0pOwogIHZhciBleHBhbmRCdXR0b24gPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlJMThuLCB7CiAgICBrZXk6ICdleHBhbmQnLAogICAgdG9rZW46ICJldWlEYXRhR3JpZENlbGxCdXR0b25zLmV4cGFuZEJ1dHRvblRpdGxlIiwKICAgIGRlZmF1bHQ6ICJDbGljayBvciBoaXQgZW50ZXIgdG8gaW50ZXJhY3Qgd2l0aCBjZWxsIGNvbnRlbnQiCiAgfSwgZnVuY3Rpb24gKGV4cGFuZEJ1dHRvblRpdGxlKSB7CiAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRXVpQnV0dG9uSWNvbiwgewogICAgICBkaXNwbGF5OiAiZmlsbCIsCiAgICAgIGNsYXNzTmFtZTogYnV0dG9uSWNvbkNsYXNzZXMsCiAgICAgIGNvbG9yOiAicHJpbWFyeSIsCiAgICAgIGljb25TaXplOiAicyIsCiAgICAgIGljb25UeXBlOiAiZXhwYW5kTWluaSIsCiAgICAgICJhcmlhLWhpZGRlbiI6IHRydWUsCiAgICAgIG9uQ2xpY2s6IG9uRXhwYW5kQ2xpY2ssCiAgICAgIHRpdGxlOiBleHBhbmRCdXR0b25UaXRsZQogICAgfSk7CiAgfSk7CiAgdmFyIGFkZGl0aW9uYWxCdXR0b25zID0gdXNlTWVtbyhmdW5jdGlvbiAoKSB7CiAgICB2YXIgQnV0dG9uQ29tcG9uZW50ID0gZnVuY3Rpb24gQnV0dG9uQ29tcG9uZW50KHByb3BzKSB7CiAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlCdXR0b25JY29uLCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHsKICAgICAgICAiYXJpYS1oaWRkZW4iOiB0cnVlLAogICAgICAgIGNsYXNzTmFtZTogImV1aURhdGFHcmlkUm93Q2VsbF9fYWN0aW9uQnV0dG9uSWNvbiIsCiAgICAgICAgaWNvblNpemU6ICJzIgogICAgICB9KSk7CiAgICB9OwoKICAgIHJldHVybiBjb2x1bW4gJiYgQXJyYXkuaXNBcnJheShjb2x1bW4uY2VsbEFjdGlvbnMpID8gY29sdW1uLmNlbGxBY3Rpb25zLm1hcChmdW5jdGlvbiAoQWN0aW9uLCBpZHgpIHsKICAgICAgLy8gUmVhY3QgaXMgbW9yZSBwZXJtaXNzaWJsZSB0aGFuIHRoZSBUUyB0eXBlcyBpbmRpY2F0ZQogICAgICB2YXIgQ2VsbEJ1dHRvbkVsZW1lbnQgPSBBY3Rpb247CiAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDZWxsQnV0dG9uRWxlbWVudCwgewogICAgICAgIGtleTogaWR4LAogICAgICAgIHJvd0luZGV4OiByb3dJbmRleCwKICAgICAgICBjb2x1bW5JZDogY29sdW1uLmlkLAogICAgICAgIENvbXBvbmVudDogQnV0dG9uQ29tcG9uZW50LAogICAgICAgIGlzRXhwYW5kZWQ6IGZhbHNlLAogICAgICAgIGNsb3NlUG9wb3ZlcjogY2xvc2VQb3BvdmVyCiAgICAgIH0pOwogICAgfSkgOiBbXTsKICB9LCBbY29sdW1uLCByb3dJbmRleCwgY2xvc2VQb3BvdmVyXSk7CiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICBjbGFzc05hbWU6IGJ1dHRvbkNsYXNzZXMKICB9LCBbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KGFkZGl0aW9uYWxCdXR0b25zKSwgW2V4cGFuZEJ1dHRvbl0pKTsKfTsKCnRyeSB7CiAgRXVpRGF0YUdyaWRDZWxsQnV0dG9ucy5fX2RvY2dlbkluZm8gPSB7CiAgICBkZXNjcmlwdGlvbjogJycsCiAgICBkaXNwbGF5TmFtZTogJ0V1aURhdGFHcmlkQ2VsbEJ1dHRvbnMnLAogICAgbWV0aG9kczogW10sCiAgICBwcm9wczogewogICAgICBwb3BvdmVySXNPcGVuOiB7CiAgICAgICAgZGVmYXVsdFZhbHVlOiBudWxsLAogICAgICAgIGRlc2NyaXB0aW9uOiAnJywKICAgICAgICBuYW1lOiAncG9wb3ZlcklzT3BlbicsCiAgICAgICAgcGFyZW50OiB1bmRlZmluZWQsCiAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgdHlwZTogewogICAgICAgICAgbmFtZTogJ2Jvb2xlYW4nCiAgICAgICAgfQogICAgICB9LAogICAgICBjbG9zZVBvcG92ZXI6IHsKICAgICAgICBkZWZhdWx0VmFsdWU6IG51bGwsCiAgICAgICAgZGVzY3JpcHRpb246ICcnLAogICAgICAgIG5hbWU6ICdjbG9zZVBvcG92ZXInLAogICAgICAgIHBhcmVudDogdW5kZWZpbmVkLAogICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgIHR5cGU6IHsKICAgICAgICAgIG5hbWU6ICcoKSA9PiB2b2lkJwogICAgICAgIH0KICAgICAgfSwKICAgICAgb25FeHBhbmRDbGljazogewogICAgICAgIGRlZmF1bHRWYWx1ZTogbnVsbCwKICAgICAgICBkZXNjcmlwdGlvbjogJycsCiAgICAgICAgbmFtZTogJ29uRXhwYW5kQ2xpY2snLAogICAgICAgIHBhcmVudDogdW5kZWZpbmVkLAogICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgIHR5cGU6IHsKICAgICAgICAgIG5hbWU6ICcoKSA9PiB2b2lkJwogICAgICAgIH0KICAgICAgfSwKICAgICAgY29sdW1uOiB7CiAgICAgICAgZGVmYXVsdFZhbHVlOiBudWxsLAogICAgICAgIGRlc2NyaXB0aW9uOiAnJywKICAgICAgICBuYW1lOiAnY29sdW1uJywKICAgICAgICBwYXJlbnQ6IHVuZGVmaW5lZCwKICAgICAgICByZXF1aXJlZDogZmFsc2UsCiAgICAgICAgdHlwZTogewogICAgICAgICAgbmFtZTogJ0V1aURhdGFHcmlkQ29sdW1uJwogICAgICAgIH0KICAgICAgfSwKICAgICAgcm93SW5kZXg6IHsKICAgICAgICBkZWZhdWx0VmFsdWU6IG51bGwsCiAgICAgICAgZGVzY3JpcHRpb246ICcnLAogICAgICAgIG5hbWU6ICdyb3dJbmRleCcsCiAgICAgICAgcGFyZW50OiB1bmRlZmluZWQsCiAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgdHlwZTogewogICAgICAgICAgbmFtZTogJ251bWJlcicKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBleHRlbmRlZEludGVyZmFjZXM6IFtdCiAgfTsKfSBjYXRjaCAoZSkge30="},{"version":3,"sources":["D:/work/eui/src/components/datagrid/data_grid_cell_buttons.tsx"],"names":["React","useMemo","classNames","EuiI18n","EuiButtonIcon","EuiDataGridCellButtons","popoverIsOpen","closePopover","onExpandClick","column","rowIndex","buttonIconClasses","buttonClasses","expandButton","expandButtonTitle","additionalButtons","ButtonComponent","props","Array","isArray","cellActions","map","Action","idx","CellButtonElement","id"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAuCC,OAAvC,QAAsD,OAAtD;AAMA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,SAASC,aAAT,QAAkD,uBAAlD;AAEA,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,OAYhC;AAAA,MAXJC,aAWI,QAXJA,aAWI;AAAA,MAVJC,YAUI,QAVJA,YAUI;AAAA,MATJC,aASI,QATJA,aASI;AAAA,MARJC,MAQI,QARJA,MAQI;AAAA,MAPJC,QAOI,QAPJA,QAOI;AACJ,MAAMC,iBAAiB,GAAGT,UAAU,CAAC,sCAAD,EAAyC;AAC3E,qDAAiDI;AAD0B,GAAzC,CAApC;AAGA,MAAMM,aAAa,GAAGV,UAAU,CAAC,kCAAD,EAAqC;AACnE,iDAA6CI;AADsB,GAArC,CAAhC;AAGA,MAAMO,YAAY,gBAChB,oBAAC,OAAD;AACE,IAAA,GAAG,EAAE,QADP;AAEE,IAAA,KAAK,EAAC,0CAFR;AAGE,IAAA,OAAO,EAAC;AAHV,KAIG,UAACC,iBAAD;AAAA,wBACC,oBAAC,aAAD;AACE,MAAA,OAAO,EAAC,MADV;AAEE,MAAA,SAAS,EAAEH,iBAFb;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,QAAQ,EAAC,GAJX;AAKE,MAAA,QAAQ,EAAC,YALX;AAME,yBANF;AAOE,MAAA,OAAO,EAAEH,aAPX;AAQE,MAAA,KAAK,EAAEM;AART,MADD;AAAA,GAJH,CADF;AAmBA,MAAMC,iBAAiB,GAAGd,OAAO,CAAC,YAAM;AACtC,QAAMe,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,0BACtB,oBAAC,aAAD,eACMA,KADN;AAEE,2BAFF;AAGE,QAAA,SAAS,EAAC,sCAHZ;AAIE,QAAA,QAAQ,EAAC;AAJX,SADsB;AAAA,KAAxB;;AAQA,WAAOR,MAAM,IAAIS,KAAK,CAACC,OAAN,CAAcV,MAAM,CAACW,WAArB,CAAV,GACHX,MAAM,CAACW,WAAP,CAAmBC,GAAnB,CACE,UAACC,MAAD,EAAsCC,GAAtC,EAAsD;AACpD;AACA,UAAMC,iBAAiB,GAAGF,MAA1B;AAGA,0BACE,oBAAC,iBAAD;AACE,QAAA,GAAG,EAAEC,GADP;AAEE,QAAA,QAAQ,EAAEb,QAFZ;AAGE,QAAA,QAAQ,EAAED,MAAM,CAACgB,EAHnB;AAIE,QAAA,SAAS,EAAET,eAJb;AAKE,QAAA,UAAU,EAAE,KALd;AAME,QAAA,YAAY,EAAET;AANhB,QADF;AAUD,KAhBH,CADG,GAmBH,EAnBJ;AAoBD,GA7BgC,EA6B9B,CAACE,MAAD,EAASC,QAAT,EAAmBH,YAAnB,CA7B8B,CAAjC;AA+BA,sBACE;AAAK,IAAA,SAAS,EAAEK;AAAhB,kCAAoCG,iBAApC,IAAuDF,YAAvD,GADF;AAGD,CAxEM","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { JSXElementConstructor, useMemo } from 'react';\nimport {\n  EuiDataGridColumn,\n  EuiDataGridColumnCellAction,\n  EuiDataGridColumnCellActionProps,\n} from './data_grid_types';\nimport classNames from 'classnames';\nimport { EuiI18n } from '../i18n';\nimport { EuiButtonIcon, EuiButtonIconProps } from '../button/button_icon';\n\nexport const EuiDataGridCellButtons = ({\n  popoverIsOpen,\n  closePopover,\n  onExpandClick,\n  column,\n  rowIndex,\n}: {\n  popoverIsOpen: boolean;\n  closePopover: () => void;\n  onExpandClick: () => void;\n  column?: EuiDataGridColumn;\n  rowIndex: number;\n}) => {\n  const buttonIconClasses = classNames('euiDataGridRowCell__expandButtonIcon', {\n    'euiDataGridRowCell__expandButtonIcon-isActive': popoverIsOpen,\n  });\n  const buttonClasses = classNames('euiDataGridRowCell__expandButton', {\n    'euiDataGridRowCell__expandButton-isActive': popoverIsOpen,\n  });\n  const expandButton = (\n    <EuiI18n\n      key={'expand'}\n      token=\"euiDataGridCellButtons.expandButtonTitle\"\n      default=\"Click or hit enter to interact with cell content\">\n      {(expandButtonTitle: string) => (\n        <EuiButtonIcon\n          display=\"fill\"\n          className={buttonIconClasses}\n          color=\"primary\"\n          iconSize=\"s\"\n          iconType=\"expandMini\"\n          aria-hidden\n          onClick={onExpandClick}\n          title={expandButtonTitle}\n        />\n      )}\n    </EuiI18n>\n  );\n  const additionalButtons = useMemo(() => {\n    const ButtonComponent = (props: EuiButtonIconProps) => (\n      <EuiButtonIcon\n        {...props}\n        aria-hidden\n        className=\"euiDataGridRowCell__actionButtonIcon\"\n        iconSize=\"s\"\n      />\n    );\n    return column && Array.isArray(column.cellActions)\n      ? column.cellActions.map(\n          (Action: EuiDataGridColumnCellAction, idx: number) => {\n            // React is more permissible than the TS types indicate\n            const CellButtonElement = Action as JSXElementConstructor<\n              EuiDataGridColumnCellActionProps\n            >;\n            return (\n              <CellButtonElement\n                key={idx}\n                rowIndex={rowIndex}\n                columnId={column.id}\n                Component={ButtonComponent}\n                isExpanded={false}\n                closePopover={closePopover}\n              />\n            );\n          }\n        )\n      : [];\n  }, [column, rowIndex, closePopover]);\n\n  return (\n    <div className={buttonClasses}>{[...additionalButtons, expandButton]}</div>\n  );\n};\n"]}]}