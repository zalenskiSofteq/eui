{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\selectable\\selectable_search\\selectable_search.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\selectable\\selectable_search\\selectable_search.tsx","mtime":1649070093763},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/selectable/selectable_search/selectable_search.tsx"],"names":["React","Component","classNames","EuiFieldSearch","getMatchingOptions","EuiSelectableSearch","props","value","state","searchValue","setState","matchingOptions","options","isPreFiltered","onChange","defaultValue","className","listId","placeholder","rest","classes","ariaPropsIfListIsPresent","role","undefined","onSearchChange"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,cAAT,QAAoD,YAApD;AACA,SAASC,kBAAT,QAAmC,qBAAnC;AA4BA,WAAaC,mBAAb;AAAA;;AAAA;;AAQE,+BAAYC,KAAZ,EAAgD;AAAA;;AAAA;;AAC9C,8BAAMA,KAAN;;AAD8C,qEAkB/B,UAACC,KAAD,EAAmB;AAClC,UAAIA,KAAK,KAAK,MAAKC,KAAL,CAAWC,WAAzB,EAAsC;AACpC,cAAKC,QAAL,CAAc;AAAED,UAAAA,WAAW,EAAEF;AAAf,SAAd,EAAsC,YAAM;AAC1C,cAAMI,eAAe,GAAGP,kBAAkB,CACxC,MAAKE,KAAL,CAAWM,OAD6B,EAExCL,KAFwC,EAGxC,MAAKD,KAAL,CAAWO,aAH6B,CAA1C;;AAKA,gBAAKP,KAAL,CAAWQ,QAAX,CAAoBH,eAApB,EAAqCJ,KAArC;AACD,SAPD;AAQD;AACF,KA7B+C;;AAG9C,UAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAEH,KAAK,CAACS;AADR,KAAb;AAH8C;AAM/C;;AAdH;AAAA;AAAA,wCAgBsB;AAAA,UACVN,WADU,GACM,KAAKD,KADX,CACVC,WADU;AAElB,UAAME,eAAe,GAAGP,kBAAkB,CACxC,KAAKE,KAAL,CAAWM,OAD6B,EAExCH,WAFwC,EAGxC,KAAKH,KAAL,CAAWO,aAH6B,CAA1C;AAKA,WAAKP,KAAL,CAAWQ,QAAX,CAAoBH,eAApB,EAAqCF,WAArC;AACD;AAxBH;AAAA;AAAA,6BAuCW;AAAA,wBAUH,KAAKH,KAVF;AAAA,UAELU,SAFK,eAELA,SAFK;AAAA,UAGLF,QAHK,eAGLA,QAHK;AAAA,UAILF,OAJK,eAILA,OAJK;AAAA,UAKLG,YALK,eAKLA,YALK;AAAA,UAMLE,MANK,eAMLA,MANK;AAAA,UAOLC,WAPK,eAOLA,WAPK;AAAA,UAQLL,aARK,eAQLA,aARK;AAAA,UASFM,IATE;;AAYP,UAAMC,OAAO,GAAGlB,UAAU,CAAC,qBAAD,EAAwBc,SAAxB,CAA1B;AAEA,UAAMK,wBAEO,GAAGJ,MAAM,GAClB;AACEK,QAAAA,IAAI,EAAE,UADR;AAEE,6BAAqB,MAFvB;AAGE,yBAAiB,IAHnB;AAIE,yBAAiBL,MAJnB;AAKE,qBAAaA,MALf,CAKuB;;AALvB,OADkB,GAQlBM,SAVJ;AAYA,0BACE,oBAAC,cAAD;AACE,QAAA,SAAS,EAAEH,OADb;AAEE,QAAA,WAAW,EAAEF,WAFf;AAGE,QAAA,QAAQ,EAAE,KAAKM,cAHjB;AAIE,QAAA,WAAW,MAJb;AAKE,QAAA,YAAY,EAAET,YALhB;AAME,QAAA,SAAS,MANX;AAOE,QAAA,YAAY,EAAC,KAPf;AAQE,yBAAc;AARhB,SASMM,wBATN,EAUMF,IAVN,EADF;AAcD;AA/EH;;AAAA;AAAA,EAA4ClB,SAA5C;;gBAAaI,mB,kBAIW;AACpBU,EAAAA,YAAY,EAAE;AADM,C;;;;;;;;AAvDxB;AACA;;;;AADA;AACA;AACA;;;;;;;AAFA;AACA;AACA;;;;AAFA;AACA;AACA;;;;AAFA;AACA;AACA;;;;AAFA;AACA;AACA;AACA;;;;;AAHA;AACA;;;;AADA;AACA;;;;;;;AADA;AACA","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { EuiFieldSearch } from '../../form';\nimport { getMatchingOptions } from '../matching_options';\nexport class EuiSelectableSearch extends Component {\n  static defaultProps = {\n    defaultValue: ''\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchValue: props.defaultValue\n    };\n  }\n\n  componentDidMount() {\n    const {\n      searchValue\n    } = this.state;\n    const matchingOptions = getMatchingOptions(this.props.options, searchValue, this.props.isPreFiltered);\n    this.props.onChange(matchingOptions, searchValue);\n  }\n\n  onSearchChange = value => {\n    if (value !== this.state.searchValue) {\n      this.setState({\n        searchValue: value\n      }, () => {\n        const matchingOptions = getMatchingOptions(this.props.options, value, this.props.isPreFiltered);\n        this.props.onChange(matchingOptions, value);\n      });\n    }\n  };\n\n  render() {\n    const {\n      className,\n      onChange,\n      options,\n      defaultValue,\n      listId,\n      placeholder,\n      isPreFiltered,\n      ...rest\n    } = this.props;\n    const classes = classNames('euiSelectableSearch', className);\n    const ariaPropsIfListIsPresent = listId ? {\n      role: 'combobox',\n      'aria-autocomplete': 'list',\n      'aria-expanded': true,\n      'aria-controls': listId,\n      'aria-owns': listId // legacy attribute but shims support for nearly everything atm\n\n    } : undefined;\n    return <EuiFieldSearch className={classes} placeholder={placeholder} onSearch={this.onSearchChange} incremental defaultValue={defaultValue} fullWidth autoComplete=\"off\" aria-haspopup=\"listbox\" {...ariaPropsIfListIsPresent} {...rest} />;\n  }\n\n}\nEuiSelectableSearch.propTypes = {\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n\n  /**\n       * Passes back (matchingOptions, searchValue)\n       */\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    /**\n       * Optional `boolean`.\n       * Set to `true` to indicate object is just a grouping label, not a selectable item\n       */\n    isGroupLabel: PropTypes.oneOfType([PropTypes.oneOf([true]).isRequired, PropTypes.oneOf([false])]),\n    className: PropTypes.string,\n    \"aria-label\": PropTypes.string,\n    \"data-test-subj\": PropTypes.string,\n\n    /**\n       * Visible label of option.\n       * Must be unique across items if `key` is not supplied\n       */\n    label: PropTypes.string,\n\n    /**\n       * Optionally change the searchable term by passing a different string other than the `label`.\n       * Best used when creating a custom `optionRender` to separate the label from metadata but allowing to search on both\n       */\n    searchableLabel: PropTypes.string,\n\n    /**\n       * Must be unique across items.\n       * Will be used to match options instead of `label`\n       */\n    key: PropTypes.string,\n\n    /**\n       * Leave `undefined` to indicate not selected,\n       * 'on' to indicate inclusion and\n       * 'off' to indicate exclusion\n       */\n    checked: PropTypes.oneOf([\"on\", \"off\", undefined]),\n    disabled: PropTypes.bool,\n\n    /**\n       * Node to add between the selection icon and the label\n       */\n    prepend: PropTypes.node,\n\n    /**\n       * Node to add to the far right of the item\n       */\n    append: PropTypes.node,\n    ref: PropTypes.func\n  }).isRequired).isRequired,\n  defaultValue: PropTypes.string.isRequired,\n\n  /**\n       * The id of the visible list to create the appropriate aria controls\n       */\n  listId: PropTypes.string,\n  isPreFiltered: PropTypes.bool.isRequired\n};\n\ntry {\n  EuiSelectableSearch.__docgenInfo = {\n    description: '',\n    displayName: 'EuiSelectableSearch',\n    methods: [],\n    props: {\n      value: {\n        defaultValue: null,\n        description: '',\n        name: 'value',\n        parent: {\n          fileName: 'eui/src/components/form/field_search/field_search.tsx',\n          name: 'EuiFieldSearchProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      append: {\n        defaultValue: null,\n        description: 'Creates an input group with element(s) coming after input.\\n' + '`string` | `ReactElement` or an array of these',\n        name: 'append',\n        parent: {\n          fileName: 'eui/src/components/form/field_search/field_search.tsx',\n          name: 'EuiFieldSearchProps'\n        },\n        required: false,\n        type: {\n          name: 'PrependAppendType'\n        }\n      },\n      id: {\n        defaultValue: null,\n        description: '',\n        name: 'id',\n        parent: {\n          fileName: 'eui/src/components/form/field_search/field_search.tsx',\n          name: 'EuiFieldSearchProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      placeholder: {\n        defaultValue: null,\n        description: '',\n        name: 'placeholder',\n        parent: {\n          fileName: 'eui/src/components/form/field_search/field_search.tsx',\n          name: 'EuiFieldSearchProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: '',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'data-test-subj': {\n        defaultValue: null,\n        description: '',\n        name: 'data-test-subj',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      isLoading: {\n        defaultValue: null,\n        description: '',\n        name: 'isLoading',\n        parent: {\n          fileName: 'eui/src/components/form/field_search/field_search.tsx',\n          name: 'EuiFieldSearchProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      name: {\n        defaultValue: null,\n        description: '',\n        name: 'name',\n        parent: {\n          fileName: 'eui/src/components/form/field_search/field_search.tsx',\n          name: 'EuiFieldSearchProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      compressed: {\n        defaultValue: null,\n        description: 'when `true` creates a shorter height input',\n        name: 'compressed',\n        parent: {\n          fileName: 'eui/src/components/form/field_search/field_search.tsx',\n          name: 'EuiFieldSearchProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      isInvalid: {\n        defaultValue: null,\n        description: '',\n        name: 'isInvalid',\n        parent: {\n          fileName: 'eui/src/components/form/field_search/field_search.tsx',\n          name: 'EuiFieldSearchProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      fullWidth: {\n        defaultValue: null,\n        description: '',\n        name: 'fullWidth',\n        parent: {\n          fileName: 'eui/src/components/form/field_search/field_search.tsx',\n          name: 'EuiFieldSearchProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      inputRef: {\n        defaultValue: null,\n        description: '',\n        name: 'inputRef',\n        parent: {\n          fileName: 'eui/src/components/form/field_search/field_search.tsx',\n          name: 'EuiFieldSearchProps'\n        },\n        required: false,\n        type: {\n          name: '(node: HTMLInputElement) => void'\n        }\n      },\n      prepend: {\n        defaultValue: null,\n        description: 'Creates an input group with element(s) coming before input\\n' + '`string` | `ReactElement` or an array of these',\n        name: 'prepend',\n        parent: {\n          fileName: 'eui/src/components/form/field_search/field_search.tsx',\n          name: 'EuiFieldSearchProps'\n        },\n        required: false,\n        type: {\n          name: 'PrependAppendType'\n        }\n      },\n      onSearch: {\n        defaultValue: null,\n        description: 'Called when the user presses [Enter] OR on change if the incremental prop is `true`.\\n' + \"If you don't need the on[Enter] functionality, prefer using onChange\",\n        name: 'onSearch',\n        parent: {\n          fileName: 'eui/src/components/form/field_search/field_search.tsx',\n          name: 'EuiFieldSearchProps'\n        },\n        required: false,\n        type: {\n          name: '(value: string) => void'\n        }\n      },\n      incremental: {\n        defaultValue: null,\n        description: 'When `true` the search will be executed (that is, the `onSearch` will be called) as the\\n' + 'user types.',\n        name: 'incremental',\n        parent: {\n          fileName: 'eui/src/components/form/field_search/field_search.tsx',\n          name: 'EuiFieldSearchProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      isClearable: {\n        defaultValue: null,\n        description: 'Shows a button that quickly clears any input',\n        name: 'isClearable',\n        parent: {\n          fileName: 'eui/src/components/form/field_search/field_search.tsx',\n          name: 'EuiFieldSearchProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      onChange: {\n        defaultValue: null,\n        description: 'Passes back (matchingOptions, searchValue)',\n        name: 'onChange',\n        parent: undefined,\n        required: true,\n        type: {\n          name: '(matchingOptions: ExclusiveUnion<EuiSelectableGroupLabelOption<T>, EuiSelectableLIOption<T>>[], searchValue: string) => void'\n        }\n      },\n      options: {\n        defaultValue: null,\n        description: '',\n        name: 'options',\n        parent: undefined,\n        required: true,\n        type: {\n          name: 'ExclusiveUnion<EuiSelectableGroupLabelOption<T>, EuiSelectableLIOption<T>>[]'\n        }\n      },\n      listId: {\n        defaultValue: null,\n        description: 'The id of the visible list to create the appropriate aria controls',\n        name: 'listId',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      isPreFiltered: {\n        defaultValue: null,\n        description: '',\n        name: 'isPreFiltered',\n        parent: undefined,\n        required: true,\n        type: {\n          name: 'boolean'\n        }\n      }\n    },\n    extendedInterfaces: ['EuiFieldSearchProps', 'HTMLAttributes', 'InputHTMLAttributes', 'AriaAttributes', 'DOMAttributes', 'CommonProps']\n  };\n} catch (e) {}"]}]}