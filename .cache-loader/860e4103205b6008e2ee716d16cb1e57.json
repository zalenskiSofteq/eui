{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src-docs\\src\\views\\overlay_mask\\overlay_mask_header.js","dependencies":[{"path":"D:\\work\\eui\\src-docs\\src\\views\\overlay_mask\\overlay_mask_header.js","mtime":1649070001071},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7IHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7IH0KCmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuIik7IH0KCmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHsgaWYgKCFvKSByZXR1cm47IGlmICh0eXBlb2YgbyA9PT0gInN0cmluZyIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7IGlmIChuID09PSAiT2JqZWN0IiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lOyBpZiAobiA9PT0gIk1hcCIgfHwgbiA9PT0gIlNldCIpIHJldHVybiBBcnJheS5mcm9tKG8pOyBpZiAobiA9PT0gIkFyZ3VtZW50cyIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB9CgpmdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikgeyBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH0KCmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHsgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJ1bmRlZmluZWQiIHx8ICEoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChhcnIpKSkgcmV0dXJuOyB2YXIgX2FyciA9IFtdOyB2YXIgX24gPSB0cnVlOyB2YXIgX2QgPSBmYWxzZTsgdmFyIF9lID0gdW5kZWZpbmVkOyB0cnkgeyBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVsicmV0dXJuIl0gIT0gbnVsbCkgX2lbInJldHVybiJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfQoKZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOyB9CgppbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7CmltcG9ydCB7IEV1aU92ZXJsYXlNYXNrLCBFdWlCdXR0b24sIEV1aUZseW91dCwgRXVpVGl0bGUsIEV1aUZseW91dEhlYWRlciB9IGZyb20gJy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzJzsKZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uICgpIHsKICB2YXIgX3VzZVN0YXRlID0gdXNlU3RhdGUoZmFsc2UpLAogICAgICBfdXNlU3RhdGUyID0gX3NsaWNlZFRvQXJyYXkoX3VzZVN0YXRlLCAyKSwKICAgICAgZmx5T3V0ID0gX3VzZVN0YXRlMlswXSwKICAgICAgY2hhbmdlRmx5T3V0ID0gX3VzZVN0YXRlMlsxXTsKCiAgdmFyIHRvZ2dsZUZseU91dCA9IGZ1bmN0aW9uIHRvZ2dsZUZseU91dCgpIHsKICAgIGNoYW5nZUZseU91dCghZmx5T3V0KTsKICB9OwoKICB2YXIgZmx5b3V0OwoKICBpZiAoZmx5T3V0KSB7CiAgICBmbHlvdXQgPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChSZWFjdC5GcmFnbWVudCwgbnVsbCwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRXVpT3ZlcmxheU1hc2ssIHsKICAgICAgb25DbGljazogdG9nZ2xlRmx5T3V0LAogICAgICBoZWFkZXJaaW5kZXhMb2NhdGlvbjogImJlbG93IgogICAgfSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEV1aUZseW91dCwgewogICAgICBzaXplOiAicyIsCiAgICAgIG9uQ2xvc2U6IHRvZ2dsZUZseU91dAogICAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRXVpRmx5b3V0SGVhZGVyLCBudWxsLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlUaXRsZSwgbnVsbCwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImgxIiwgbnVsbCwgIkNsaWNrIG91dHNpZGUgdGhpcyBmbHlvdXQgdG8gY2xvc2Ugb3ZlcmxheS4gIikpKSkpOwogIH0KCiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LCBudWxsLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlCdXR0b24sIHsKICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soKSB7CiAgICAgIHJldHVybiB0b2dnbGVGbHlPdXQoKTsKICAgIH0KICB9LCAiT3ZlcmxheSBhcyBhIHNpYmxpbmcgb2YgYSBmbHlvdXQiKSwgZmx5b3V0KTsKfSk7"},{"version":3,"sources":["D:/work/eui/src-docs/src/views/overlay_mask/overlay_mask_header.js"],"names":["React","useState","EuiOverlayMask","EuiButton","EuiFlyout","EuiTitle","EuiFlyoutHeader","flyOut","changeFlyOut","toggleFlyOut","flyout"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SACEC,cADF,EAEEC,SAFF,EAGEC,SAHF,EAIEC,QAJF,EAKEC,eALF,QAMO,4BANP;AAQA,gBAAe,YAAM;AAAA,kBACYL,QAAQ,CAAC,KAAD,CADpB;AAAA;AAAA,MACZM,MADY;AAAA,MACJC,YADI;;AAGnB,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBD,IAAAA,YAAY,CAAC,CAACD,MAAF,CAAZ;AACD,GAFD;;AAIA,MAAIG,MAAJ;;AACA,MAAIH,MAAJ,EAAY;AACVG,IAAAA,MAAM,gBACJ,oBAAC,KAAD,CAAO,QAAP,qBACE,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAED,YAAzB;AAAuC,MAAA,oBAAoB,EAAC;AAA5D,MADF,eAEE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,GAAhB;AAAoB,MAAA,OAAO,EAAEA;AAA7B,oBACE,oBAAC,eAAD,qBACE,oBAAC,QAAD,qBACE,+EADF,CADF,CADF,CAFF,CADF;AAYD;;AAED,sBACE,oBAAC,KAAD,CAAO,QAAP,qBACE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAE;AAAA,aAAMA,YAAY,EAAlB;AAAA;AAApB,wCADF,EAIGC,MAJH,CADF;AAQD,CA/BD","sourcesContent":["import React, { useState } from 'react';\n\nimport {\n  EuiOverlayMask,\n  EuiButton,\n  EuiFlyout,\n  EuiTitle,\n  EuiFlyoutHeader,\n} from '../../../../src/components';\n\nexport default () => {\n  const [flyOut, changeFlyOut] = useState(false);\n\n  const toggleFlyOut = () => {\n    changeFlyOut(!flyOut);\n  };\n\n  let flyout;\n  if (flyOut) {\n    flyout = (\n      <React.Fragment>\n        <EuiOverlayMask onClick={toggleFlyOut} headerZindexLocation=\"below\" />\n        <EuiFlyout size=\"s\" onClose={toggleFlyOut}>\n          <EuiFlyoutHeader>\n            <EuiTitle>\n              <h1>Click outside this flyout to close overlay. </h1>\n            </EuiTitle>\n          </EuiFlyoutHeader>\n        </EuiFlyout>\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <EuiButton onClick={() => toggleFlyOut()}>\n        Overlay as a sibling of a flyout\n      </EuiButton>\n      {flyout}\n    </React.Fragment>\n  );\n};\n"]}]}