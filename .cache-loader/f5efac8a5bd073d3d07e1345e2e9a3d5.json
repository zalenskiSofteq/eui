{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\markdown_editor\\markdown_format.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\markdown_editor\\markdown_format.tsx","mtime":1649070093702},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoKICogTGljZW5zZWQgdG8gRWxhc3RpY3NlYXJjaCBCLlYuIHVuZGVyIG9uZSBvciBtb3JlIGNvbnRyaWJ1dG9yCiAqIGxpY2Vuc2UgYWdyZWVtZW50cy4gU2VlIHRoZSBOT1RJQ0UgZmlsZSBkaXN0cmlidXRlZCB3aXRoCiAqIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiByZWdhcmRpbmcgY29weXJpZ2h0CiAqIG93bmVyc2hpcC4gRWxhc3RpY3NlYXJjaCBCLlYuIGxpY2Vuc2VzIHRoaXMgZmlsZSB0byB5b3UgdW5kZXIKICogdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7IHlvdSBtYXkKICogbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiAqCiAqICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsCiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuCiAqICJBUyBJUyIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWQogKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUKICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucwogKiB1bmRlciB0aGUgTGljZW5zZS4KICovCmltcG9ydCBSZWFjdCwgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnOwppbXBvcnQgUHJvcFR5cGVzIGZyb20gInByb3AtdHlwZXMiOwppbXBvcnQgdW5pZmllZCBmcm9tICd1bmlmaWVkJzsKaW1wb3J0IHsgZGVmYXVsdFByb2Nlc3NpbmdQbHVnaW5zLCBkZWZhdWx0UGFyc2luZ1BsdWdpbnMgfSBmcm9tICcuL3BsdWdpbnMvbWFya2Rvd25fZGVmYXVsdF9wbHVnaW5zJzsKZXhwb3J0IHZhciBFdWlNYXJrZG93bkZvcm1hdCA9IGZ1bmN0aW9uIEV1aU1hcmtkb3duRm9ybWF0KF9yZWYpIHsKICB2YXIgY2hpbGRyZW4gPSBfcmVmLmNoaWxkcmVuLAogICAgICBfcmVmJHBhcnNpbmdQbHVnaW5MaXMgPSBfcmVmLnBhcnNpbmdQbHVnaW5MaXN0LAogICAgICBwYXJzaW5nUGx1Z2luTGlzdCA9IF9yZWYkcGFyc2luZ1BsdWdpbkxpcyA9PT0gdm9pZCAwID8gZGVmYXVsdFBhcnNpbmdQbHVnaW5zIDogX3JlZiRwYXJzaW5nUGx1Z2luTGlzLAogICAgICBfcmVmJHByb2Nlc3NpbmdQbHVnaW4gPSBfcmVmLnByb2Nlc3NpbmdQbHVnaW5MaXN0LAogICAgICBwcm9jZXNzaW5nUGx1Z2luTGlzdCA9IF9yZWYkcHJvY2Vzc2luZ1BsdWdpbiA9PT0gdm9pZCAwID8gZGVmYXVsdFByb2Nlc3NpbmdQbHVnaW5zIDogX3JlZiRwcm9jZXNzaW5nUGx1Z2luOwogIHZhciBwcm9jZXNzb3IgPSB1c2VNZW1vKGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiB1bmlmaWVkKCkudXNlKHBhcnNpbmdQbHVnaW5MaXN0KS51c2UocHJvY2Vzc2luZ1BsdWdpbkxpc3QpOwogIH0sIFtwYXJzaW5nUGx1Z2luTGlzdCwgcHJvY2Vzc2luZ1BsdWdpbkxpc3RdKTsKICB2YXIgcmVzdWx0ID0gdXNlTWVtbyhmdW5jdGlvbiAoKSB7CiAgICB0cnkgewogICAgICB2YXIgX3JlZjI7CgogICAgICB2YXIgcHJvY2Vzc2VkID0gcHJvY2Vzc29yLnByb2Nlc3NTeW5jKGNoaWxkcmVuKTsgLy8gYC5yZXN1bHRgIGlzIGludGVudGlvbmFsbHkgYHVua25vd25gIChodHRwczovL2dpdGh1Yi5jb20vdmZpbGUvdmZpbGUvcHVsbC81MykKICAgICAgLy8gY2FzdCB0byBzb21ldGhpbmcgZXhwZWN0ZWQuCgogICAgICByZXR1cm4gKF9yZWYyID0gcHJvY2Vzc2VkLnJlc3VsdCkgIT09IG51bGwgJiYgX3JlZjIgIT09IHZvaWQgMCA/IF9yZWYyIDogcHJvY2Vzc2VkLmNvbnRlbnRzOwogICAgfSBjYXRjaCAoZSkgewogICAgICByZXR1cm4gY2hpbGRyZW47CiAgICB9CiAgfSwgW2NoaWxkcmVuLCBwcm9jZXNzb3JdKTsKICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsKICAgIGNsYXNzTmFtZTogImV1aU1hcmtkb3duRm9ybWF0IgogIH0sIHJlc3VsdCk7Cn07CkV1aU1hcmtkb3duRm9ybWF0LnByb3BUeXBlcyA9IHsKICBjaGlsZHJlbjogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLAoKICAvKiogYXJyYXkgb2YgdW5pZmllZCBwbHVnaW5zIHRvIHBhcnNlIGNvbnRlbnQgaW50byBhbiBBU1QgKi8KICBwYXJzaW5nUGx1Z2luTGlzdDogUHJvcFR5cGVzLmFueSwKCiAgLyoqIGFycmF5IG9mIHVuaWZpZWQgcGx1Z2lucyB0byBjb252ZXJ0IHRoZSBBU1QgaW50byBhIFJlYWN0Tm9kZSAqLwogIHByb2Nlc3NpbmdQbHVnaW5MaXN0OiBQcm9wVHlwZXMuYW55Cn07Cgp0cnkgewogIEV1aU1hcmtkb3duRm9ybWF0Ll9fZG9jZ2VuSW5mbyA9IHsKICAgIGRlc2NyaXB0aW9uOiAnJywKICAgIGRpc3BsYXlOYW1lOiAnRXVpTWFya2Rvd25Gb3JtYXQnLAogICAgbWV0aG9kczogW10sCiAgICBwcm9wczogewogICAgICBwYXJzaW5nUGx1Z2luTGlzdDogewogICAgICAgIGRlZmF1bHRWYWx1ZTogewogICAgICAgICAgdmFsdWU6IG51bGwKICAgICAgICB9LAogICAgICAgIGRlc2NyaXB0aW9uOiAnYXJyYXkgb2YgdW5pZmllZCBwbHVnaW5zIHRvIHBhcnNlIGNvbnRlbnQgaW50byBhbiBBU1QnLAogICAgICAgIG5hbWU6ICdwYXJzaW5nUGx1Z2luTGlzdCcsCiAgICAgICAgcGFyZW50OiB7CiAgICAgICAgICBmaWxlTmFtZTogJ2V1aS9zcmMvY29tcG9uZW50cy9tYXJrZG93bl9lZGl0b3IvbWFya2Rvd25fZm9ybWF0LnRzeCcsCiAgICAgICAgICBuYW1lOiAnRXVpTWFya2Rvd25Gb3JtYXRQcm9wcycKICAgICAgICB9LAogICAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgICB0eXBlOiB7CiAgICAgICAgICBuYW1lOiAnUGx1Z2dhYmxlTGlzdDxTZXR0aW5ncz4nCiAgICAgICAgfQogICAgICB9LAogICAgICBwcm9jZXNzaW5nUGx1Z2luTGlzdDogewogICAgICAgIGRlZmF1bHRWYWx1ZTogewogICAgICAgICAgdmFsdWU6IG51bGwKICAgICAgICB9LAogICAgICAgIGRlc2NyaXB0aW9uOiAnYXJyYXkgb2YgdW5pZmllZCBwbHVnaW5zIHRvIGNvbnZlcnQgdGhlIEFTVCBpbnRvIGEgUmVhY3ROb2RlJywKICAgICAgICBuYW1lOiAncHJvY2Vzc2luZ1BsdWdpbkxpc3QnLAogICAgICAgIHBhcmVudDogewogICAgICAgICAgZmlsZU5hbWU6ICdldWkvc3JjL2NvbXBvbmVudHMvbWFya2Rvd25fZWRpdG9yL21hcmtkb3duX2Zvcm1hdC50c3gnLAogICAgICAgICAgbmFtZTogJ0V1aU1hcmtkb3duRm9ybWF0UHJvcHMnCiAgICAgICAgfSwKICAgICAgICByZXF1aXJlZDogZmFsc2UsCiAgICAgICAgdHlwZTogewogICAgICAgICAgbmFtZTogJ1BsdWdnYWJsZUxpc3Q8U2V0dGluZ3M+JwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIGV4dGVuZGVkSW50ZXJmYWNlczogWydFdWlNYXJrZG93bkZvcm1hdFByb3BzJ10KICB9Owp9IGNhdGNoIChlKSB7fQ=="},{"version":3,"sources":["D:/work/eui/src/components/markdown_editor/markdown_format.tsx"],"names":["React","useMemo","unified","defaultProcessingPlugins","defaultParsingPlugins","EuiMarkdownFormat","children","parsingPluginList","processingPluginList","processor","use","result","processed","processSync","contents","e"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAmCC,OAAnC,QAAkD,OAAlD;;AACA,OAAOC,OAAP,MAAuC,SAAvC;AAEA,SACEC,wBADF,EAEEC,qBAFF,QAGO,oCAHP;AAaA,OAAO,IAAMC,iBAA4D,GAAG,SAA/DA,iBAA+D,OAItE;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,mCAFJC,iBAEI;AAAA,MAFJA,iBAEI,sCAFgBH,qBAEhB;AAAA,mCADJI,oBACI;AAAA,MADJA,oBACI,sCADmBL,wBACnB;AACJ,MAAMM,SAAS,GAAGR,OAAO,CACvB;AAAA,WAAMC,OAAO,GAAGQ,GAAV,CAAcH,iBAAd,EAAiCG,GAAjC,CAAqCF,oBAArC,CAAN;AAAA,GADuB,EAEvB,CAACD,iBAAD,EAAoBC,oBAApB,CAFuB,CAAzB;AAIA,MAAMG,MAAM,GAAGV,OAAO,CAAC,YAAM;AAC3B,QAAI;AAAA;;AACF,UAAMW,SAAS,GAAGH,SAAS,CAACI,WAAV,CAAsBP,QAAtB,CAAlB,CADE,CAEF;AACA;;AACA,sBAAQM,SAAS,CAACD,MAAlB,yCAA8CC,SAAS,CAACE,QAAxD;AACD,KALD,CAKE,OAAOC,CAAP,EAAU;AACV,aAAOT,QAAP;AACD;AACF,GATqB,EASnB,CAACA,QAAD,EAAWG,SAAX,CATmB,CAAtB;AAUA,sBAAO;AAAK,IAAA,SAAS,EAAC;AAAf,KAAoCE,MAApC,CAAP;AACD,CApBM","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport PropTypes from \"prop-types\";\nimport unified from 'unified';\nimport { defaultProcessingPlugins, defaultParsingPlugins } from './plugins/markdown_default_plugins';\nexport var EuiMarkdownFormat = ({\n  children,\n  parsingPluginList = defaultParsingPlugins,\n  processingPluginList = defaultProcessingPlugins\n}) => {\n  const processor = useMemo(() => unified().use(parsingPluginList).use(processingPluginList), [parsingPluginList, processingPluginList]);\n  const result = useMemo(() => {\n    try {\n      const processed = processor.processSync(children); // `.result` is intentionally `unknown` (https://github.com/vfile/vfile/pull/53)\n      // cast to something expected.\n\n      return processed.result ?? processed.contents;\n    } catch (e) {\n      return children;\n    }\n  }, [children, processor]);\n  return <div className=\"euiMarkdownFormat\">{result}</div>;\n};\nEuiMarkdownFormat.propTypes = {\n  children: PropTypes.string.isRequired,\n\n  /** array of unified plugins to parse content into an AST */\n  parsingPluginList: PropTypes.any,\n\n  /** array of unified plugins to convert the AST into a ReactNode */\n  processingPluginList: PropTypes.any\n};\n\ntry {\n  EuiMarkdownFormat.__docgenInfo = {\n    description: '',\n    displayName: 'EuiMarkdownFormat',\n    methods: [],\n    props: {\n      parsingPluginList: {\n        defaultValue: {\n          value: null\n        },\n        description: 'array of unified plugins to parse content into an AST',\n        name: 'parsingPluginList',\n        parent: {\n          fileName: 'eui/src/components/markdown_editor/markdown_format.tsx',\n          name: 'EuiMarkdownFormatProps'\n        },\n        required: false,\n        type: {\n          name: 'PluggableList<Settings>'\n        }\n      },\n      processingPluginList: {\n        defaultValue: {\n          value: null\n        },\n        description: 'array of unified plugins to convert the AST into a ReactNode',\n        name: 'processingPluginList',\n        parent: {\n          fileName: 'eui/src/components/markdown_editor/markdown_format.tsx',\n          name: 'EuiMarkdownFormatProps'\n        },\n        required: false,\n        type: {\n          name: 'PluggableList<Settings>'\n        }\n      }\n    },\n    extendedInterfaces: ['EuiMarkdownFormatProps']\n  };\n} catch (e) {}"]}]}