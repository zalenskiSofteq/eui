{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\responsive\\show_for.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\responsive\\show_for.tsx","mtime":1649070093744},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMiOwoKZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7IHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7IH0KCmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuIik7IH0KCmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHsgaWYgKCFvKSByZXR1cm47IGlmICh0eXBlb2YgbyA9PT0gInN0cmluZyIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7IGlmIChuID09PSAiT2JqZWN0IiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lOyBpZiAobiA9PT0gIk1hcCIgfHwgbiA9PT0gIlNldCIpIHJldHVybiBBcnJheS5mcm9tKG8pOyBpZiAobiA9PT0gIkFyZ3VtZW50cyIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB9CgpmdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikgeyBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH0KCmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHsgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJ1bmRlZmluZWQiIHx8ICEoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChhcnIpKSkgcmV0dXJuOyB2YXIgX2FyciA9IFtdOyB2YXIgX24gPSB0cnVlOyB2YXIgX2QgPSBmYWxzZTsgdmFyIF9lID0gdW5kZWZpbmVkOyB0cnkgeyBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVsicmV0dXJuIl0gIT0gbnVsbCkgX2lbInJldHVybiJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfQoKZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOyB9CgovKgogKiBMaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lIG9yIG1vcmUgY29udHJpYnV0b3IKICogbGljZW5zZSBhZ3JlZW1lbnRzLiBTZWUgdGhlIE5PVElDRSBmaWxlIGRpc3RyaWJ1dGVkIHdpdGgKICogdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIHJlZ2FyZGluZyBjb3B5cmlnaHQKICogb3duZXJzaGlwLiBFbGFzdGljc2VhcmNoIEIuVi4gbGljZW5zZXMgdGhpcyBmaWxlIHRvIHlvdSB1bmRlcgogKiB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsgeW91IG1heQogKiBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgogKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKICoKICogICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiAqCiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywKICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4KICogIkFTIElTIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZCiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZQogKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zCiAqIHVuZGVyIHRoZSBMaWNlbnNlLgogKi8KaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7CmltcG9ydCBQcm9wVHlwZXMgZnJvbSAicHJvcC10eXBlcyI7CmltcG9ydCB7IHRocm90dGxlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMnOwppbXBvcnQgeyBnZXRCcmVha3BvaW50IH0gZnJvbSAnLi4vLi4vc2VydmljZXMvYnJlYWtwb2ludCc7CmV4cG9ydCB2YXIgRXVpU2hvd0ZvciA9IGZ1bmN0aW9uIEV1aVNob3dGb3IoX3JlZikgewogIHZhciBjaGlsZHJlbiA9IF9yZWYuY2hpbGRyZW4sCiAgICAgIHNpemVzID0gX3JlZi5zaXplczsKCiAgdmFyIF91c2VTdGF0ZSA9IHVzZVN0YXRlKGdldEJyZWFrcG9pbnQodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcgPyAtSW5maW5pdHkgOiB3aW5kb3cuaW5uZXJXaWR0aCkpLAogICAgICBfdXNlU3RhdGUyID0gX3NsaWNlZFRvQXJyYXkoX3VzZVN0YXRlLCAyKSwKICAgICAgY3VycmVudEJyZWFrcG9pbnQgPSBfdXNlU3RhdGUyWzBdLAogICAgICBzZXRDdXJyZW50QnJlYWtwb2ludCA9IF91c2VTdGF0ZTJbMV07CgogIHZhciBmdW5jdGlvblRvQ2FsbE9uV2luZG93UmVzaXplID0gdGhyb3R0bGUoZnVuY3Rpb24gKCkgewogICAgdmFyIG5ld0JyZWFrcG9pbnQgPSBnZXRCcmVha3BvaW50KHdpbmRvdy5pbm5lcldpZHRoKTsKCiAgICBpZiAobmV3QnJlYWtwb2ludCAhPT0gY3VycmVudEJyZWFrcG9pbnQpIHsKICAgICAgc2V0Q3VycmVudEJyZWFrcG9pbnQobmV3QnJlYWtwb2ludCk7CiAgICB9IC8vIHJlYWN0cyBldmVyeSA1MG1zIHRvIHJlc2l6ZSBjaGFuZ2VzIGFuZCBhbHdheXMgZ2V0cyB0aGUgZmluYWwgdXBkYXRlCgogIH0sIDUwKTsgLy8gQWRkIHdpbmRvdyByZXNpemUgaGFuZGxlcnMKCiAgdXNlRWZmZWN0KGZ1bmN0aW9uICgpIHsKICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBmdW5jdGlvblRvQ2FsbE9uV2luZG93UmVzaXplKTsKICAgIHJldHVybiBmdW5jdGlvbiAoKSB7CiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCBmdW5jdGlvblRvQ2FsbE9uV2luZG93UmVzaXplKTsKICAgIH07CiAgfSwgW3NpemVzLCBmdW5jdGlvblRvQ2FsbE9uV2luZG93UmVzaXplXSk7CgogIGlmIChzaXplcyA9PT0gJ2FsbCcgfHwgc2l6ZXMuaW5jbHVkZXMoY3VycmVudEJyZWFrcG9pbnQpKSB7CiAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIG51bGwsIGNoaWxkcmVuKTsKICB9CgogIHJldHVybiBudWxsOwp9OwpFdWlTaG93Rm9yLnByb3BUeXBlcyA9IHsKICAvKioKICAgICAqIFJlcXVpcmVkIG90aGVyd2lzZSBub3RoaW5nIGV2ZXIgZ2V0cyByZXR1cm5lZAogICAgICovCiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLmlzUmVxdWlyZWQsCgogIC8qKgogICAgICogTGlzdCBvZiBhbGwgdGhlIHJlc3BvbnNpdmUgc2l6ZXMgdG8gc2hvdyB0aGUgY2hpbGRyZW4gZm9yLgogICAgICogQXJyYXkgb2YgI0V1aUJyZWFrcG9pbnRTaXplCiAgICAgKi8KICBzaXplczogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLm9uZU9mKFsieHMiLCAicyIsICJtIiwgImwiLCAieGwiXSkuaXNSZXF1aXJlZCkuaXNSZXF1aXJlZCwgUHJvcFR5cGVzLm9uZU9mKFsiYWxsIiwgIm5vbmUiXSldKS5pc1JlcXVpcmVkCn07Cgp0cnkgewogIEV1aVNob3dGb3IuX19kb2NnZW5JbmZvID0gewogICAgZGVzY3JpcHRpb246ICcnLAogICAgZGlzcGxheU5hbWU6ICdFdWlTaG93Rm9yJywKICAgIG1ldGhvZHM6IFtdLAogICAgcHJvcHM6IHsKICAgICAgY2hpbGRyZW46IHsKICAgICAgICBkZWZhdWx0VmFsdWU6IG51bGwsCiAgICAgICAgZGVzY3JpcHRpb246ICdSZXF1aXJlZCBvdGhlcndpc2Ugbm90aGluZyBldmVyIGdldHMgcmV0dXJuZWQnLAogICAgICAgIG5hbWU6ICdjaGlsZHJlbicsCiAgICAgICAgcGFyZW50OiB7CiAgICAgICAgICBmaWxlTmFtZTogJ2V1aS9zcmMvY29tcG9uZW50cy9yZXNwb25zaXZlL3Nob3dfZm9yLnRzeCcsCiAgICAgICAgICBuYW1lOiAnRXVpU2hvd0ZvclByb3BzJwogICAgICAgIH0sCiAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgdHlwZTogewogICAgICAgICAgbmFtZTogJ1JlYWN0Tm9kZScKICAgICAgICB9CiAgICAgIH0sCiAgICAgIHNpemVzOiB7CiAgICAgICAgZGVmYXVsdFZhbHVlOiBudWxsLAogICAgICAgIGRlc2NyaXB0aW9uOiAnTGlzdCBvZiBhbGwgdGhlIHJlc3BvbnNpdmUgc2l6ZXMgdG8gc2hvdyB0aGUgY2hpbGRyZW4gZm9yLlxuJyArICdBcnJheSBvZiAjRXVpQnJlYWtwb2ludFNpemUnLAogICAgICAgIG5hbWU6ICdzaXplcycsCiAgICAgICAgcGFyZW50OiB7CiAgICAgICAgICBmaWxlTmFtZTogJ2V1aS9zcmMvY29tcG9uZW50cy9yZXNwb25zaXZlL3Nob3dfZm9yLnRzeCcsCiAgICAgICAgICBuYW1lOiAnRXVpU2hvd0ZvclByb3BzJwogICAgICAgIH0sCiAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgdHlwZTogewogICAgICAgICAgbmFtZTogJ0V1aUJyZWFrcG9pbnRTaXplW10gfCAibm9uZSIgfCAiYWxsIicKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBleHRlbmRlZEludGVyZmFjZXM6IFsnRXVpU2hvd0ZvclByb3BzJ10KICB9Owp9IGNhdGNoIChlKSB7fQ=="},{"version":3,"sources":["D:/work/eui/src/components/responsive/show_for.tsx"],"names":["React","useState","useEffect","throttle","getBreakpoint","EuiShowFor","children","sizes","window","Infinity","innerWidth","currentBreakpoint","setCurrentBreakpoint","functionToCallOnWindowResize","newBreakpoint","addEventListener","removeEventListener","includes"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAGEC,QAHF,EAIEC,SAJF,QAKO,OALP;;AAMA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAA4BC,aAA5B,QAAiD,2BAAjD;AAgBA,OAAO,IAAMC,UAA8C,GAAG,SAAjDA,UAAiD,OAGxD;AAAA,MAFJC,QAEI,QAFJA,QAEI;AAAA,MADJC,KACI,QADJA,KACI;;AAAA,kBAC8CN,QAAQ,CACxDG,aAAa,CAAC,OAAOI,MAAP,KAAkB,WAAlB,GAAgC,CAACC,QAAjC,GAA4CD,MAAM,CAACE,UAApD,CAD2C,CADtD;AAAA;AAAA,MACGC,iBADH;AAAA,MACsBC,oBADtB;;AAKJ,MAAMC,4BAA4B,GAAGV,QAAQ,CAAC,YAAM;AAClD,QAAMW,aAAa,GAAGV,aAAa,CAACI,MAAM,CAACE,UAAR,CAAnC;;AACA,QAAII,aAAa,KAAKH,iBAAtB,EAAyC;AACvCC,MAAAA,oBAAoB,CAACE,aAAD,CAApB;AACD,KAJiD,CAKlD;;AACD,GAN4C,EAM1C,EAN0C,CAA7C,CALI,CAaJ;;AACAZ,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCF,4BAAlC;AAEA,WAAO,YAAM;AACXL,MAAAA,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCH,4BAArC;AACD,KAFD;AAGD,GANQ,EAMN,CAACN,KAAD,EAAQM,4BAAR,CANM,CAAT;;AAQA,MACEN,KAAK,KAAK,KAAV,IACAA,KAAK,CAACU,QAAN,CAAeN,iBAAf,CAFF,EAGE;AACA,wBAAO,0CAAGL,QAAH,CAAP;AACD;;AAED,SAAO,IAAP;AACD,CAjCM;;;AA1CP;AACA;;;;AADA;AACA;AACA","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from \"prop-types\";\nimport { throttle } from '../../services';\nimport { getBreakpoint } from '../../services/breakpoint';\nexport var EuiShowFor = ({\n  children,\n  sizes\n}) => {\n  const [currentBreakpoint, setCurrentBreakpoint] = useState(getBreakpoint(typeof window === 'undefined' ? -Infinity : window.innerWidth));\n  const functionToCallOnWindowResize = throttle(() => {\n    const newBreakpoint = getBreakpoint(window.innerWidth);\n\n    if (newBreakpoint !== currentBreakpoint) {\n      setCurrentBreakpoint(newBreakpoint);\n    } // reacts every 50ms to resize changes and always gets the final update\n\n  }, 50); // Add window resize handlers\n\n  useEffect(() => {\n    window.addEventListener('resize', functionToCallOnWindowResize);\n    return () => {\n      window.removeEventListener('resize', functionToCallOnWindowResize);\n    };\n  }, [sizes, functionToCallOnWindowResize]);\n\n  if (sizes === 'all' || sizes.includes(currentBreakpoint)) {\n    return <>{children}</>;\n  }\n\n  return null;\n};\nEuiShowFor.propTypes = {\n  /**\n     * Required otherwise nothing ever gets returned\n     */\n  children: PropTypes.node.isRequired,\n\n  /**\n     * List of all the responsive sizes to show the children for.\n     * Array of #EuiBreakpointSize\n     */\n  sizes: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOf([\"xs\", \"s\", \"m\", \"l\", \"xl\"]).isRequired).isRequired, PropTypes.oneOf([\"all\", \"none\"])]).isRequired\n};\n\ntry {\n  EuiShowFor.__docgenInfo = {\n    description: '',\n    displayName: 'EuiShowFor',\n    methods: [],\n    props: {\n      children: {\n        defaultValue: null,\n        description: 'Required otherwise nothing ever gets returned',\n        name: 'children',\n        parent: {\n          fileName: 'eui/src/components/responsive/show_for.tsx',\n          name: 'EuiShowForProps'\n        },\n        required: true,\n        type: {\n          name: 'ReactNode'\n        }\n      },\n      sizes: {\n        defaultValue: null,\n        description: 'List of all the responsive sizes to show the children for.\\n' + 'Array of #EuiBreakpointSize',\n        name: 'sizes',\n        parent: {\n          fileName: 'eui/src/components/responsive/show_for.tsx',\n          name: 'EuiShowForProps'\n        },\n        required: true,\n        type: {\n          name: 'EuiBreakpointSize[] | \"none\" | \"all\"'\n        }\n      }\n    },\n    extendedInterfaces: ['EuiShowForProps']\n  };\n} catch (e) {}"]}]}