{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\accessibility\\keyboard_accessible.ts","dependencies":[{"path":"D:\\work\\eui\\src\\components\\accessibility\\keyboard_accessible.ts","mtime":1649070093278},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/accessibility/keyboard_accessible.ts"],"names":["Component","cloneElement","keys","EuiKeyboardAccessible","event","key","SPACE","preventDefault","props","children","onKeyDown","ENTER","onClick","onKeyUp","child","tabIndex","role","applyKeyboardAccessibility","propTypes","keyboardInaccessibleElement","propName","componentName","Error","type","href","undefined"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/**\n * Interactive elements must be able to receive focus.\n *\n * Ideally, this means using elements that are natively keyboard accessible (<a href=\"\">,\n * <input type=\"button\">, or <button>). Note that links should be used when navigating and buttons\n * should be used when performing an action on the page.\n *\n * If, however, you need to use elements that aren't natively keyboard accessible (for example, <div>,\n * <p>, or <a> without the href attribute), then you need to allow them to receive focus and to\n * respond to keyboard input. The workaround is to:\n *\n *   - Give the element tabindex=\"0\" so that it can receive keyboard focus.\n *   - Add a JavaScript onkeyup event handler that triggers element functionality if the Enter key\n *     is pressed while the element is focused. This is necessary because some browsers do not trigger\n *    onclick events for such elements when activated via the keyboard.\n *   - If the item is meant to function as a button, the onkeyup event handler should also detect the\n *     Space bar in addition to the Enter key, and the element should be given role=\"button\".\n *\n * Wrap any such elements that aren't natively keyboard accessible in this component to automatically\n * apply the above workaround to them.\n */\nimport { Component, cloneElement } from 'react';\nimport PropTypes from \"prop-types\";\nimport { keys } from '../../services';\nexport class EuiKeyboardAccessible extends Component {\n  onKeyDown = event => {\n    // Prevent a scroll from occurring if the user has hit space.\n    if (event.key === keys.SPACE) {\n      event.preventDefault();\n    }\n\n    if (this.props.children.props.onKeyDown) {\n      this.props.children.props.onKeyDown(event);\n    }\n  };\n  onKeyUp = event => {\n    // Support keyboard accessibility by emulating mouse click on ENTER or SPACE keypress.\n    if (event.key === keys.ENTER || event.key === keys.SPACE) {\n      // Delegate to the click handler on the element.\n      this.props.children.props.onClick(event);\n    }\n\n    if (this.props.children.props.onKeyUp) {\n      this.props.children.props.onKeyUp(event);\n    }\n  };\n  applyKeyboardAccessibility = child => {\n    // Add attributes required for accessibility unless they are already specified.\n    const props = {\n      tabIndex: '0',\n      role: 'button',\n      ...child.props,\n      onKeyDown: this.onKeyDown,\n      onKeyUp: this.onKeyUp\n    };\n    return cloneElement(child, props);\n  };\n\n  render() {\n    return this.applyKeyboardAccessibility(this.props.children);\n  }\n\n} // @ts-ignore defining this as a static on EuiKeyboardAccessible breaks the\n// tests\n\nEuiKeyboardAccessible.propTypes = {\n  /**\n     * ReactNode to render as this component's children\n     */\n  children: PropTypes.element.isRequired\n};\nEuiKeyboardAccessible.propTypes = {\n  children: keyboardInaccessibleElement\n};\n\nfunction keyboardInaccessibleElement(props, propName, componentName) {\n  const child = props.children;\n\n  if (!child) {\n    throw new Error(`${componentName} needs to wrap an element with which the user interacts.`);\n  } // The whole point of this component is to hack in functionality that native buttons provide\n  // by default.\n\n\n  if (child.type === 'button') {\n    throw new Error(`${componentName} doesn't need to be used on a button.`);\n  }\n\n  if (child.type === 'a' && child.props.href !== undefined) {\n    throw new Error(`${componentName} doesn't need to be used on a link if it has a href attribute.`);\n  } // We're emulating a click action, so we should already have a regular click handler defined.\n\n\n  if (!child.props.onClick) {\n    throw new Error(`${componentName} needs to wrap an element which has an onClick prop assigned.`);\n  }\n\n  if (typeof child.props.onClick !== 'function') {\n    throw new Error(`${componentName}'s child's onClick prop needs to be a function.`);\n  }\n}\n\ntry {\n  EuiKeyboardAccessible.__docgenInfo = {\n    description: '',\n    displayName: 'EuiKeyboardAccessible',\n    methods: [],\n    props: {\n      children: {\n        defaultValue: null,\n        description: \"ReactNode to render as this component's children\",\n        name: 'children',\n        parent: {\n          fileName: 'eui/src/components/accessibility/keyboard_accessible.ts',\n          name: 'Props'\n        },\n        required: true,\n        type: {\n          name: 'ReactElement'\n        }\n      }\n    },\n    extendedInterfaces: []\n  };\n} catch (e) {}"]}]}