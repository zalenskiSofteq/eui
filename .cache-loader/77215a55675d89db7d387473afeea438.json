{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\color_picker\\color_stops\\utils.ts","dependencies":[{"path":"D:\\work\\eui\\src\\components\\color_picker\\color_stops\\utils.ts","mtime":1649070093336},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNvbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zb3J0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLnRvLWZpeGVkIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucGFyc2UtZmxvYXQiOwoKZnVuY3Rpb24gX3RvQ29uc3VtYWJsZUFycmF5KGFycikgeyByZXR1cm4gX2FycmF5V2l0aG91dEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF9ub25JdGVyYWJsZVNwcmVhZCgpOyB9CgpmdW5jdGlvbiBfbm9uSXRlcmFibGVTcHJlYWQoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLiIpOyB9CgpmdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7IGlmICghbykgcmV0dXJuOyBpZiAodHlwZW9mIG8gPT09ICJzdHJpbmciKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpOyBpZiAobiA9PT0gIk9iamVjdCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTsgaWYgKG4gPT09ICJNYXAiIHx8IG4gPT09ICJTZXQiKSByZXR1cm4gQXJyYXkuZnJvbShvKTsgaWYgKG4gPT09ICJBcmd1bWVudHMiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgfQoKZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheShpdGVyKSB7IGlmICh0eXBlb2YgU3ltYm9sICE9PSAidW5kZWZpbmVkIiAmJiBTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGl0ZXIpKSByZXR1cm4gQXJyYXkuZnJvbShpdGVyKTsgfQoKZnVuY3Rpb24gX2FycmF5V2l0aG91dEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkoYXJyKTsgfQoKZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHsgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykgeyBhcnIyW2ldID0gYXJyW2ldOyB9IHJldHVybiBhcnIyOyB9CgovKgogKiBMaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lIG9yIG1vcmUgY29udHJpYnV0b3IKICogbGljZW5zZSBhZ3JlZW1lbnRzLiBTZWUgdGhlIE5PVElDRSBmaWxlIGRpc3RyaWJ1dGVkIHdpdGgKICogdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIHJlZ2FyZGluZyBjb3B5cmlnaHQKICogb3duZXJzaGlwLiBFbGFzdGljc2VhcmNoIEIuVi4gbGljZW5zZXMgdGhpcyBmaWxlIHRvIHlvdSB1bmRlcgogKiB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsgeW91IG1heQogKiBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgogKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKICoKICogICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiAqCiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywKICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4KICogIkFTIElTIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZCiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZQogKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zCiAqIHVuZGVyIHRoZSBMaWNlbnNlLgogKi8KaW1wb3J0IHsgZ2V0RXZlbnRQb3NpdGlvbiwgZ2V0Q2hyb21hQ29sb3IgfSBmcm9tICcuLi91dGlscyc7CmltcG9ydCB7IERFRkFVTFRfVklTVUFMSVpBVElPTl9DT0xPUiB9IGZyb20gJy4uLy4uLy4uL3NlcnZpY2VzJzsKaW1wb3J0IHsgRVVJX1RIVU1CX1NJWkUgfSBmcm9tICcuLi8uLi9mb3JtL3JhbmdlL3V0aWxzJzsKZXhwb3J0IHZhciByZW1vdmVTdG9wID0gZnVuY3Rpb24gcmVtb3ZlU3RvcChjb2xvclN0b3BzLCBpbmRleCkgewogIGlmIChjb2xvclN0b3BzLmxlbmd0aCA9PT0gMSkgewogICAgcmV0dXJuIGNvbG9yU3RvcHM7CiAgfQoKICByZXR1cm4gW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShjb2xvclN0b3BzLnNsaWNlKDAsIGluZGV4KSksIF90b0NvbnN1bWFibGVBcnJheShjb2xvclN0b3BzLnNsaWNlKGluZGV4ICsgMSkpKTsKfTsKZXhwb3J0IHZhciBhZGREZWZpbmVkU3RvcCA9IGZ1bmN0aW9uIGFkZERlZmluZWRTdG9wKGNvbG9yU3RvcHMsIHN0b3ApIHsKICB2YXIgY29sb3IgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IERFRkFVTFRfVklTVUFMSVpBVElPTl9DT0xPUjsKICB2YXIgbmV3U3RvcCA9IHsKICAgIHN0b3A6IHN0b3AsCiAgICBjb2xvcjogY29sb3IKICB9OwogIGNvbG9yU3RvcHMgPSBbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KGNvbG9yU3RvcHMpLCBbbmV3U3RvcF0pOwogIGNvbG9yU3RvcHMuc29ydChmdW5jdGlvbiAoYSwgYikgewogICAgaWYgKGEuc3RvcCA8IGIuc3RvcCkgewogICAgICByZXR1cm4gLTE7CiAgICB9CgogICAgaWYgKGEuc3RvcCA+IGIuc3RvcCkgewogICAgICByZXR1cm4gMTsKICAgIH0KCiAgICByZXR1cm4gMDsKICB9KTsKICByZXR1cm4gY29sb3JTdG9wczsKfTsKZXhwb3J0IHZhciBhZGRTdG9wID0gZnVuY3Rpb24gYWRkU3RvcChjb2xvclN0b3BzKSB7CiAgdmFyIGNvbG9yID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBERUZBVUxUX1ZJU1VBTElaQVRJT05fQ09MT1I7CiAgdmFyIG1heCA9IGFyZ3VtZW50cy5sZW5ndGggPiAyID8gYXJndW1lbnRzWzJdIDogdW5kZWZpbmVkOwogIHZhciBpbmRleCA9IGNvbG9yU3RvcHMubGVuZ3RoID8gY29sb3JTdG9wcy5sZW5ndGggLSAxIDogMDsKICB2YXIgc3RvcHMgPSBjb2xvclN0b3BzLm1hcChmdW5jdGlvbiAoZWwpIHsKICAgIHJldHVybiBlbC5zdG9wOwogIH0pOwogIHZhciBjdXJyZW50U3RvcCA9IHN0b3BzW2luZGV4XSAhPSBudWxsID8gc3RvcHNbaW5kZXhdIDogbWF4OwogIHZhciBkZWx0YSA9IDE7CgogIGlmIChpbmRleCAhPT0gMCkgewogICAgdmFyIHByZXZTdG9wID0gc3RvcHNbaW5kZXggLSAxXTsKICAgIGRlbHRhID0gY3VycmVudFN0b3AgLSBwcmV2U3RvcDsKICB9CgogIHZhciBzdG9wID0gY3VycmVudFN0b3AgKyBkZWx0YTsKCiAgaWYgKHN0b3AgPiBtYXgpIHsKICAgIHN0b3AgPSBtYXg7CiAgfSAvLyBXZSd2ZSByZWFjaGVkIHRoZSBtYXgsIHNvIHN0YXJ0IHdvcmtpbmcgYmFja3dhcmRzCgoKICB3aGlsZSAoc3RvcHMuaW5kZXhPZihzdG9wKSA+IC0xKSB7CiAgICBzdG9wLS07CiAgfQoKICB2YXIgbmV3U3RvcCA9IHsKICAgIHN0b3A6IHN0b3AsCiAgICBjb2xvcjogY29sb3IKICB9OwogIHJldHVybiBbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KGNvbG9yU3RvcHMuc2xpY2UoMCwgaW5kZXggKyAxKSksIFtuZXdTdG9wXSwgX3RvQ29uc3VtYWJsZUFycmF5KGNvbG9yU3RvcHMuc2xpY2UoaW5kZXggKyAxKSkpOwp9OwpleHBvcnQgdmFyIGlzQ29sb3JJbnZhbGlkID0gZnVuY3Rpb24gaXNDb2xvckludmFsaWQoY29sb3IpIHsKICB2YXIgc2hvd0FscGhhID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBmYWxzZTsKICByZXR1cm4gZ2V0Q2hyb21hQ29sb3IoY29sb3IsIHNob3dBbHBoYSkgPT0gbnVsbCB8fCBjb2xvciA9PT0gJyc7Cn07CmV4cG9ydCB2YXIgaXNTdG9wSW52YWxpZCA9IGZ1bmN0aW9uIGlzU3RvcEludmFsaWQoc3RvcCkgewogIHJldHVybiBzdG9wID09IG51bGwgfHwgaXNOYU4oc3RvcCk7Cn07CmV4cG9ydCB2YXIgaXNJbnZhbGlkID0gZnVuY3Rpb24gaXNJbnZhbGlkKGNvbG9yU3RvcHMpIHsKICB2YXIgc2hvd0FscGhhID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBmYWxzZTsKICByZXR1cm4gY29sb3JTdG9wcy5zb21lKGZ1bmN0aW9uIChjb2xvclN0b3ApIHsKICAgIHJldHVybiBpc0NvbG9ySW52YWxpZChjb2xvclN0b3AuY29sb3IsIHNob3dBbHBoYSkgfHwgaXNTdG9wSW52YWxpZChjb2xvclN0b3Auc3RvcCk7CiAgfSk7Cn07CmV4cG9ydCB2YXIgY2FsY3VsYXRlU2NhbGUgPSBmdW5jdGlvbiBjYWxjdWxhdGVTY2FsZSh0cmFja1dpZHRoKSB7CiAgdmFyIHRodW1iVG9UcmFja1JhdGlvID0gRVVJX1RIVU1CX1NJWkUgLyB0cmFja1dpZHRoOwogIHJldHVybiAoMSAtIHRodW1iVG9UcmFja1JhdGlvKSAqIDEwMDsKfTsKZXhwb3J0IHZhciBnZXRTdG9wRnJvbU1vdXNlTG9jYXRpb24gPSBmdW5jdGlvbiBnZXRTdG9wRnJvbU1vdXNlTG9jYXRpb24obG9jYXRpb24sIHJlZiwgbWluLCBtYXgpIHsKICB2YXIgYm94ID0gZ2V0RXZlbnRQb3NpdGlvbihsb2NhdGlvbiwgcmVmKTsKICByZXR1cm4gTWF0aC5yb3VuZChib3gubGVmdCAvIGJveC53aWR0aCAqIChtYXggLSBtaW4pICsgbWluKTsKfTsKZXhwb3J0IHZhciBnZXRQb3NpdGlvbkZyb21TdG9wID0gZnVuY3Rpb24gZ2V0UG9zaXRpb25Gcm9tU3RvcChzdG9wLCByZWYsIG1pbiwgbWF4KSB7CiAgLy8gRm9yIHdpZGUgaW1wbGVtZW50YXRpb25zLCBpbnRlZ2VyIHBlcmNlbnRhZ2VzIGNhbiBiZSB2aXN1YWxseSBvZmYuCiAgLy8gVXNlIDEgZGVjaW1hbCBwbGFjZSBmb3IgbW9yZSBhY2N1cmFjeQogIHJldHVybiBwYXJzZUZsb2F0KCgoc3RvcCAtIG1pbikgLyAobWF4IC0gbWluKSAqIGNhbGN1bGF0ZVNjYWxlKHJlZiAmJiByZWYuY2xpZW50V2lkdGggPiAwID8gcmVmLmNsaWVudFdpZHRoIDogMTAwKSkudG9GaXhlZCgxKSk7Cn07Cgp0cnkgewogIGlzU3RvcEludmFsaWQuX19kb2NnZW5JbmZvID0gewogICAgZGVzY3JpcHRpb246ICcnLAogICAgZGlzcGxheU5hbWU6ICdpc1N0b3BJbnZhbGlkJywKICAgIG1ldGhvZHM6IFtdLAogICAgcHJvcHM6IHt9LAogICAgZXh0ZW5kZWRJbnRlcmZhY2VzOiBbJ051bWJlciddCiAgfTsKfSBjYXRjaCAoZSkge30KCnRyeSB7CiAgY2FsY3VsYXRlU2NhbGUuX19kb2NnZW5JbmZvID0gewogICAgZGVzY3JpcHRpb246ICcnLAogICAgZGlzcGxheU5hbWU6ICdjYWxjdWxhdGVTY2FsZScsCiAgICBtZXRob2RzOiBbXSwKICAgIHByb3BzOiB7fSwKICAgIGV4dGVuZGVkSW50ZXJmYWNlczogWydOdW1iZXInXQogIH07Cn0gY2F0Y2ggKGUpIHt9"},{"version":3,"sources":["D:/work/eui/src/components/color_picker/color_stops/utils.ts"],"names":["getEventPosition","getChromaColor","DEFAULT_VISUALIZATION_COLOR","EUI_THUMB_SIZE","removeStop","colorStops","index","length","slice","addDefinedStop","stop","color","newStop","sort","a","b","addStop","max","stops","map","el","currentStop","delta","prevStop","indexOf","isColorInvalid","showAlpha","isStopInvalid","isNaN","isInvalid","some","colorStop","calculateScale","trackWidth","thumbToTrackRatio","getStopFromMouseLocation","location","ref","min","box","Math","round","left","width","getPositionFromStop","parseFloat","clientWidth","toFixed"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { getEventPosition, getChromaColor } from '../utils';\nimport { DEFAULT_VISUALIZATION_COLOR } from '../../../services';\nimport { ColorStop } from './color_stop_thumb';\nimport { EUI_THUMB_SIZE } from '../../form/range/utils';\n\nexport const removeStop = (colorStops: ColorStop[], index: number) => {\n  if (colorStops.length === 1) {\n    return colorStops;\n  }\n\n  return [...colorStops.slice(0, index), ...colorStops.slice(index + 1)];\n};\n\nexport const addDefinedStop = (\n  colorStops: ColorStop[],\n  stop: ColorStop['stop'],\n  color: ColorStop['color'] = DEFAULT_VISUALIZATION_COLOR\n) => {\n  const newStop = {\n    stop,\n    color,\n  };\n  colorStops = [...colorStops, newStop];\n  colorStops.sort((a, b) => {\n    if (a.stop < b.stop) {\n      return -1;\n    }\n    if (a.stop > b.stop) {\n      return 1;\n    }\n    return 0;\n  });\n  return colorStops;\n};\n\nexport const addStop = (\n  colorStops: ColorStop[],\n  color: ColorStop['color'] = DEFAULT_VISUALIZATION_COLOR,\n  max: number\n) => {\n  const index = colorStops.length ? colorStops.length - 1 : 0;\n  const stops = colorStops.map((el) => el.stop);\n  const currentStop = stops[index] != null ? stops[index] : max;\n  let delta = 1;\n  if (index !== 0) {\n    const prevStop = stops[index - 1];\n    delta = currentStop - prevStop;\n  }\n\n  let stop = currentStop + delta;\n\n  if (stop > max) {\n    stop = max;\n  }\n\n  // We've reached the max, so start working backwards\n  while (stops.indexOf(stop) > -1) {\n    stop--;\n  }\n\n  const newStop = {\n    stop,\n    color,\n  };\n  return [\n    ...colorStops.slice(0, index + 1),\n    newStop,\n    ...colorStops.slice(index + 1),\n  ];\n};\n\nexport const isColorInvalid = (color: string, showAlpha: boolean = false) => {\n  return getChromaColor(color, showAlpha) == null || color === '';\n};\n\nexport const isStopInvalid = (stop: ColorStop['stop']) => {\n  return stop == null || isNaN(stop);\n};\n\nexport const isInvalid = (\n  colorStops: ColorStop[],\n  showAlpha: boolean = false\n) => {\n  return colorStops.some((colorStop) => {\n    return (\n      isColorInvalid(colorStop.color, showAlpha) ||\n      isStopInvalid(colorStop.stop)\n    );\n  });\n};\n\nexport const calculateScale = (trackWidth: number) => {\n  const thumbToTrackRatio = EUI_THUMB_SIZE / trackWidth;\n  return (1 - thumbToTrackRatio) * 100;\n};\n\nexport const getStopFromMouseLocation = (\n  location: { x: number; y: number },\n  ref: HTMLDivElement,\n  min: number,\n  max: number\n) => {\n  const box = getEventPosition(location, ref);\n  return Math.round((box.left / box.width) * (max - min) + min);\n};\n\nexport const getPositionFromStop = (\n  stop: ColorStop['stop'],\n  ref: HTMLDivElement,\n  min: number,\n  max: number\n) => {\n  // For wide implementations, integer percentages can be visually off.\n  // Use 1 decimal place for more accuracy\n  return parseFloat(\n    (\n      ((stop - min) / (max - min)) *\n      calculateScale(ref && ref.clientWidth > 0 ? ref.clientWidth : 100)\n    ).toFixed(1)\n  );\n};\n"]}]}