{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\context_menu\\context_menu.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\context_menu\\context_menu.tsx","mtime":1649070093350},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/context_menu/context_menu.tsx"],"names":["React","Component","classNames","keysOf","EuiContextMenuPanel","EuiContextMenuItem","EuiHorizontalRule","sizeToClassNameMap","s","m","SIZES","isItemSeparator","item","isSeparator","mapIdsToPanels","panels","map","forEach","panel","id","mapIdsToPreviousPanels","idToPreviousPanelIdMap","Array","isArray","items","isCloseable","undefined","mapPanelItemsToPanels","idAndItemIndexToPanelIdMap","index","EuiContextMenu","nextProps","prevState","prevProps","idToPanelMap","props","panelId","previousPanelId","state","itemIndex","nextPanelId","incomingPanelId","isUsingKeyboardToNavigate","setState","focusedItemIndex","initialFocusedItemIndex","showPanel","hasPreviousPanel","previousPanel","findIndex","height","prevHeight","isOutgoingPanelVisible","idToRenderedItemsMap","renderItems","mapIdsToRenderedItems","outgoingPanelId","initialPanelId","transitionDirection","direction","omit","key","rest","name","icon","onClick","toolTipTitle","toolTipContent","onClickHandler","event","persist","window","requestAnimationFrame","showNextPanel","Boolean","transitionType","onClose","showPreviousPanel","size","onIncomingPanelHeightChange","onOutGoingPanelTransitionComplete","title","onUseKeyboardToNavigate","content","className","incomingPanel","renderPanel","outgoingPanel","width","classes"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { keysOf } from '../common';\nimport { EuiContextMenuPanel } from './context_menu_panel';\nimport { EuiContextMenuItem } from './context_menu_item';\nimport { EuiHorizontalRule } from '../horizontal_rule';\nvar sizeToClassNameMap = {\n  s: 'euiContextMenu--small',\n  m: null\n};\nexport var SIZES = keysOf(sizeToClassNameMap);\n\nvar isItemSeparator = function isItemSeparator(item) {\n  return item.isSeparator === true;\n};\n\nfunction mapIdsToPanels(panels) {\n  var map = {};\n  panels.forEach(function (panel) {\n    map[panel.id] = panel;\n  });\n  return map;\n}\n\nfunction mapIdsToPreviousPanels(panels) {\n  var idToPreviousPanelIdMap = {};\n  panels.forEach(function (panel) {\n    if (Array.isArray(panel.items)) {\n      panel.items.forEach(function (item) {\n        if (isItemSeparator(item)) return;\n        var isCloseable = item.panel !== undefined;\n\n        if (isCloseable) {\n          idToPreviousPanelIdMap[item.panel] = panel.id;\n        }\n      });\n    }\n  });\n  return idToPreviousPanelIdMap;\n}\n\nfunction mapPanelItemsToPanels(panels) {\n  var idAndItemIndexToPanelIdMap = {};\n  panels.forEach(function (panel) {\n    idAndItemIndexToPanelIdMap[panel.id] = {};\n\n    if (panel.items) {\n      panel.items.forEach(function (item, index) {\n        if (isItemSeparator(item)) return;\n\n        if (item.panel) {\n          idAndItemIndexToPanelIdMap[panel.id][index] = item.panel;\n        }\n      });\n    }\n  });\n  return idAndItemIndexToPanelIdMap;\n}\n\nexport class EuiContextMenu extends Component {\n  static defaultProps = {\n    panels: [],\n    size: 'm'\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      panels\n    } = nextProps;\n\n    if (panels && prevState.prevProps.panels !== panels) {\n      return {\n        prevProps: {\n          panels\n        },\n        idToPanelMap: mapIdsToPanels(panels),\n        idToPreviousPanelIdMap: mapIdsToPreviousPanels(panels),\n        idAndItemIndexToPanelIdMap: mapPanelItemsToPanels(panels)\n      };\n    }\n\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      prevProps: {},\n      idToPanelMap: {},\n      idToPreviousPanelIdMap: {},\n      idAndItemIndexToPanelIdMap: {},\n      idToRenderedItemsMap: this.mapIdsToRenderedItems(this.props.panels),\n      height: undefined,\n      outgoingPanelId: undefined,\n      incomingPanelId: props.initialPanelId,\n      transitionDirection: undefined,\n      isOutgoingPanelVisible: false,\n      focusedItemIndex: undefined,\n      isUsingKeyboardToNavigate: false\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.panels !== this.props.panels) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({\n        idToRenderedItemsMap: this.mapIdsToRenderedItems(this.props.panels)\n      });\n    }\n  }\n\n  hasPreviousPanel = panelId => {\n    const previousPanelId = this.state.idToPreviousPanelIdMap[panelId];\n    return typeof previousPanelId !== 'undefined';\n  };\n\n  showPanel(panelId, direction) {\n    this.setState({\n      outgoingPanelId: this.state.incomingPanelId,\n      incomingPanelId: panelId,\n      transitionDirection: direction,\n      isOutgoingPanelVisible: true\n    });\n  }\n\n  showNextPanel = itemIndex => {\n    if (itemIndex == null) {\n      return;\n    }\n\n    const nextPanelId = this.state.idAndItemIndexToPanelIdMap[this.state.incomingPanelId][itemIndex];\n\n    if (nextPanelId) {\n      if (this.state.isUsingKeyboardToNavigate) {\n        this.setState(({\n          idToPanelMap\n        }) => ({\n          focusedItemIndex: idToPanelMap[nextPanelId].initialFocusedItemIndex ?? 0\n        }));\n      }\n\n      this.showPanel(nextPanelId, 'next');\n    }\n  };\n  showPreviousPanel = () => {\n    // If there's a previous panel, then we can close the current panel to go back to it.\n    if (this.hasPreviousPanel(this.state.incomingPanelId)) {\n      const previousPanelId = this.state.idToPreviousPanelIdMap[this.state.incomingPanelId]; // Set focus on the item which shows the panel we're leaving.\n\n      const previousPanel = this.state.idToPanelMap[previousPanelId];\n      const focusedItemIndex = previousPanel.items.findIndex(item => !isItemSeparator(item) && item.panel === this.state.incomingPanelId);\n\n      if (focusedItemIndex !== -1) {\n        this.setState({\n          focusedItemIndex\n        });\n      }\n\n      this.showPanel(previousPanelId, 'previous');\n    }\n  };\n  onIncomingPanelHeightChange = height => {\n    this.setState(({\n      height: prevHeight\n    }) => {\n      if (height === prevHeight) {\n        return null;\n      }\n\n      return {\n        height\n      };\n    });\n  };\n  onOutGoingPanelTransitionComplete = () => {\n    this.setState({\n      isOutgoingPanelVisible: false\n    });\n  };\n  onUseKeyboardToNavigate = () => {\n    if (!this.state.isUsingKeyboardToNavigate) {\n      this.setState({\n        isUsingKeyboardToNavigate: true\n      });\n    }\n  };\n  mapIdsToRenderedItems = (panels = []) => {\n    const idToRenderedItemsMap = {}; // Pre-rendering the items lets us check reference equality inside of EuiContextMenuPanel.\n\n    panels.forEach(panel => {\n      idToRenderedItemsMap[panel.id] = this.renderItems(panel.items);\n    });\n    return idToRenderedItemsMap;\n  };\n\n  renderItems(items = []) {\n    return items.map((item, index) => {\n      if (isItemSeparator(item)) {\n        const {\n          isSeparator: omit,\n          key = index,\n          ...rest\n        } = item;\n        return <EuiHorizontalRule key={key} margin=\"none\" {...rest} />;\n      }\n\n      const {\n        panel,\n        name,\n        key,\n        icon,\n        onClick,\n        toolTipTitle,\n        toolTipContent,\n        ...rest\n      } = item;\n      const onClickHandler = panel ? event => {\n        if (onClick && event) {\n          event.persist();\n        } // This component is commonly wrapped in a EuiOutsideClickDetector, which means we'll\n        // need to wait for that logic to complete before re-rendering the DOM via showPanel.\n\n\n        window.requestAnimationFrame(() => {\n          if (onClick) {\n            onClick(event);\n          }\n\n          this.showNextPanel(index);\n        });\n      } : onClick;\n      return <EuiContextMenuItem key={key || (typeof name === 'string' ? name : undefined) || index} icon={icon} onClick={onClickHandler} hasPanel={Boolean(panel)} toolTipTitle={toolTipTitle} toolTipContent={toolTipContent} {...rest}>\n          {name}\n        </EuiContextMenuItem>;\n    });\n  }\n\n  renderPanel(panelId, transitionType) {\n    const panel = this.state.idToPanelMap[panelId];\n\n    if (!panel) {\n      return;\n    } // As above, we need to wait for EuiOutsideClickDetector to complete its logic before\n    // re-rendering via showPanel.\n\n\n    let onClose;\n\n    if (this.hasPreviousPanel(panelId)) {\n      onClose = () => window.requestAnimationFrame(this.showPreviousPanel);\n    }\n\n    return <EuiContextMenuPanel key={panelId} size={this.props.size} className=\"euiContextMenu__panel\" onHeightChange={transitionType === 'in' ? this.onIncomingPanelHeightChange : undefined} onTransitionComplete={transitionType === 'out' ? this.onOutGoingPanelTransitionComplete : undefined} title={panel.title} onClose={onClose} transitionType={this.state.isOutgoingPanelVisible ? transitionType : undefined} transitionDirection={this.state.isOutgoingPanelVisible ? this.state.transitionDirection : undefined} hasFocus={transitionType === 'in'} items={this.state.idToRenderedItemsMap[panelId]} initialFocusedItemIndex={this.state.isUsingKeyboardToNavigate ? this.state.focusedItemIndex : panel.initialFocusedItemIndex} onUseKeyboardToNavigate={this.onUseKeyboardToNavigate} showNextPanel={this.showNextPanel} showPreviousPanel={this.showPreviousPanel}>\n        {panel.content}\n      </EuiContextMenuPanel>;\n  }\n\n  render() {\n    const {\n      panels,\n      className,\n      initialPanelId,\n      size,\n      ...rest\n    } = this.props;\n    const incomingPanel = this.renderPanel(this.state.incomingPanelId, 'in');\n    let outgoingPanel;\n\n    if (this.state.isOutgoingPanelVisible) {\n      outgoingPanel = this.renderPanel(this.state.outgoingPanelId, 'out');\n    }\n\n    const width = this.state.idToPanelMap[this.state.incomingPanelId] && this.state.idToPanelMap[this.state.incomingPanelId].width ? this.state.idToPanelMap[this.state.incomingPanelId].width : undefined;\n    const classes = classNames('euiContextMenu', size && sizeToClassNameMap[size], className);\n    return <div className={classes} style={{\n      height: this.state.height,\n      width: width\n    }} {...rest}>\n        {outgoingPanel}\n        {incomingPanel}\n      </div>;\n  }\n\n}\nEuiContextMenu.propTypes = {\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n  panels: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.number.isRequired]).isRequired,\n    title: PropTypes.node,\n    items: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.node,\n      key: PropTypes.string,\n      panel: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.number.isRequired]),\n      isSeparator: PropTypes.oneOf([true]),\n\n      /**\n         * Defines the width of the HR.\n         */\n      size: PropTypes.oneOf([\"full\", \"half\", \"quarter\"]),\n      margin: PropTypes.oneOf([\"none\", \"xs\", \"s\", \"m\", \"l\", \"xl\", \"xxl\"]),\n      className: PropTypes.string,\n      \"aria-label\": PropTypes.string,\n      \"data-test-subj\": PropTypes.string\n    }).isRequired),\n    content: PropTypes.node,\n    width: PropTypes.number,\n    initialFocusedItemIndex: PropTypes.number,\n\n    /**\n       * Alters the size of the items and the title\n       */\n    size: PropTypes.oneOf([\"s\", \"m\"])\n  }).isRequired),\n  initialPanelId: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.number.isRequired]),\n\n  /**\n       * Alters the size of the items and the title\n       */\n  size: PropTypes.oneOf([\"s\", \"m\"])\n};\n\ntry {\n  EuiContextMenu.__docgenInfo = {\n    description: '',\n    displayName: 'EuiContextMenu',\n    methods: [],\n    props: {\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: 'Defines a string value that labels the current element.\\n' + '@see aria-labelledby.',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'data-test-subj': {\n        defaultValue: null,\n        description: '',\n        name: 'data-test-subj',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      panels: {\n        defaultValue: {\n          value: '[]'\n        },\n        description: '',\n        name: 'panels',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'EuiContextMenuPanelDescriptor[]'\n        }\n      },\n      initialPanelId: {\n        defaultValue: null,\n        description: '',\n        name: 'initialPanelId',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string | number'\n        }\n      },\n      size: {\n        defaultValue: {\n          value: 'm'\n        },\n        description: 'Alters the size of the items and the title',\n        name: 'size',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"s\" | \"m\"',\n          value: [{\n            value: '\"s\"'\n          }, {\n            value: '\"m\"'\n          }]\n        }\n      }\n    },\n    extendedInterfaces: ['CommonProps', 'HTMLAttributes', 'AriaAttributes', 'DOMAttributes']\n  };\n} catch (e) {}"]}]}