{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src-docs\\src\\views\\elastic_charts\\shared.js","dependencies":[{"path":"D:\\work\\eui\\src-docs\\src\\views\\elastic_charts\\shared.js","mtime":1649070093150},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src-docs/src/views/elastic_charts/shared.js"],"names":["React","useState","PropTypes","EuiBadge","EuiRadioGroup","EuiSpacer","EuiSwitch","EuiPanel","EuiText","EuiTitle","BarSeries","LineSeries","AreaSeries","devDependencies","chartsVersion","match","CHART_COMPONENTS","ExternalBadge","window","open","ChartCard","title","description","children","ChartTypeCard","props","idPrefix","toggleButtonsIcons","id","label","toggleIdSelected","setToggleIdSelectd","onChartTypeChange","optionId","chartType","find","onChange","mixed","disabled","type","propTypes","func","isRequired","oneOf","bool","MultiChartCard","multi","setMulti","stacked","setStacked","onMultiChange","e","isStacked","target","checked","onStackedChange"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  EuiBadge,\n  EuiRadioGroup,\n  EuiSpacer,\n  EuiSwitch,\n  EuiPanel,\n  EuiText,\n  EuiTitle,\n} from '../../../../src/components';\nimport { BarSeries, LineSeries, AreaSeries } from '@elastic/charts';\nimport { devDependencies } from '../../../../package';\n\nconst chartsVersion = devDependencies['@elastic/charts'].match(\n  /\\d+\\.\\d+\\.\\d+/\n)[0];\n\nexport const CHART_COMPONENTS = {\n  BarSeries: BarSeries,\n  LineSeries: LineSeries,\n  AreaSeries: AreaSeries,\n};\n\nexport const ExternalBadge = () => {\n  return (\n    <EuiBadge\n      iconType=\"popout\"\n      iconSide=\"right\"\n      onClickAriaLabel=\"Go to @elastic/charts docs\"\n      onClick={() =>\n        window.open(\n          `https://github.com/elastic/elastic-charts/tree/v${chartsVersion}`\n        )\n      }>\n      External library: @elastic/charts v{chartsVersion}\n    </EuiBadge>\n  );\n};\n\nexport const ChartCard = ({ title, description, children }) => {\n  return (\n    <EuiPanel>\n      <EuiTitle size=\"s\">\n        <span>{title}</span>\n      </EuiTitle>\n      <EuiSpacer size=\"s\" />\n      <EuiText size=\"s\">\n        <p>{description}</p>\n      </EuiText>\n      <EuiSpacer size=\"s\" />\n      {children}\n    </EuiPanel>\n  );\n};\n\nexport const ChartTypeCard = (props) => {\n  const idPrefix = 'chartType';\n\n  const toggleButtonsIcons = [\n    {\n      id: `${idPrefix}0`,\n      label: 'BarSeries',\n    },\n    {\n      id: `${idPrefix}1`,\n      label: 'LineSeries',\n    },\n    {\n      id: `${idPrefix}2`,\n      label: 'AreaSeries',\n    },\n  ];\n\n  const [toggleIdSelected, setToggleIdSelectd] = useState(`${idPrefix}0`);\n\n  const onChartTypeChange = (optionId) => {\n    setToggleIdSelectd(optionId);\n\n    const chartType = toggleButtonsIcons.find(({ id }) => id === optionId)\n      .label;\n    props.onChange(chartType);\n  };\n\n  if (props.mixed) {\n    toggleButtonsIcons[3] = {\n      id: `${idPrefix}3`,\n      label: 'Mixed',\n      disabled: props.mixed === 'disabled',\n    };\n  }\n\n  return (\n    <ChartCard\n      title=\"Chart types\"\n      description={`${props.type} charts can be displayed as any x/y series type.`}>\n      <EuiRadioGroup\n        compressed\n        options={toggleButtonsIcons}\n        idSelected={toggleIdSelected}\n        onChange={onChartTypeChange}\n        disabled={props.disabled}\n      />\n    </ChartCard>\n  );\n};\n\nChartTypeCard.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  mixed: PropTypes.oneOf(['enabled', 'disabled', true, false]),\n  disabled: PropTypes.bool,\n};\n\nexport const MultiChartCard = (props) => {\n  const [multi, setMulti] = useState(false);\n  const [stacked, setStacked] = useState(false);\n\n  const onMultiChange = (e) => {\n    const isStacked = e.target.checked ? stacked : false;\n\n    setMulti(e.target.checked);\n    setStacked(isStacked);\n\n    props.onChange({\n      multi: e.target.checked,\n      stacked,\n    });\n  };\n\n  const onStackedChange = (e) => {\n    setStacked(e.target.checked);\n\n    props.onChange({ multi: multi, stacked: e.target.checked });\n  };\n  return (\n    <ChartCard\n      textAlign=\"left\"\n      title=\"Single vs multiple series\"\n      description=\"Legends are only necessary when there are multiple series. Stacked series indicates accumulation but can hide subtle differences. Do not stack line charts.\">\n      <EuiSwitch\n        label=\"Show multi-series\"\n        checked={multi}\n        onChange={onMultiChange}\n      />\n      <EuiSpacer size=\"s\" />\n      <EuiSwitch\n        label=\"Stacked\"\n        checked={stacked}\n        onChange={onStackedChange}\n        disabled={!multi}\n      />\n    </ChartCard>\n  );\n};\n\nMultiChartCard.propTypes = {\n  /**\n   * Returns (multi:boolean, stacked:boolean)\n   */\n  onChange: PropTypes.func.isRequired,\n};\n"]}]}