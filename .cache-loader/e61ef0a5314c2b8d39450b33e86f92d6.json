{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\bottom_bar\\bottom_bar.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\bottom_bar\\bottom_bar.tsx","mtime":1649070093301},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/bottom_bar/bottom_bar.tsx"],"names":["classNames","React","forwardRef","useEffect","useState","useCombinedRefs","EuiScreenReaderOnly","EuiI18n","useResizeObserver","EuiPortal","paddingSizeToClassNameMap","none","s","m","l","POSITIONS","EuiBottomBar","ref","position","paddingSize","affordForDisplacement","children","className","bodyClassName","landmarkHeading","usePortal","left","right","bottom","top","style","rest","resizeRef","setResizeRef","setRef","dimensions","document","body","paddingBottom","height","classList","add","remove","classes","newStyle","bar","screenReaderHeading","displayName"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport classNames from 'classnames';\nimport PropTypes from \"prop-types\";\nimport React, { forwardRef, useEffect, useState } from 'react';\nimport { useCombinedRefs } from '../../services';\nimport { EuiScreenReaderOnly } from '../accessibility';\nimport { EuiI18n } from '../i18n';\nimport { useResizeObserver } from '../observer/resize_observer';\nimport { EuiPortal } from '../portal'; // Exported for testing\n\nexport var paddingSizeToClassNameMap = {\n  none: null,\n  s: 'euiBottomBar--paddingSmall',\n  m: 'euiBottomBar--paddingMedium',\n  l: 'euiBottomBar--paddingLarge'\n};\nexport var POSITIONS = ['static', 'fixed', 'sticky'];\nexport var EuiBottomBar = forwardRef(({\n  position = 'fixed',\n  paddingSize = 'm',\n  affordForDisplacement = true,\n  children,\n  className,\n  bodyClassName,\n  landmarkHeading,\n  usePortal = true,\n  left = 0,\n  right = 0,\n  bottom = 0,\n  top,\n  style,\n  ...rest\n}, ref) => {\n  // Force some props if `fixed` position, but not if the user has supplied these\n  affordForDisplacement = position !== 'fixed' ? false : affordForDisplacement;\n  usePortal = position !== 'fixed' ? false : usePortal;\n  const [resizeRef, setResizeRef] = useState(null);\n  const setRef = useCombinedRefs([setResizeRef, ref]); // TODO: Allow this hooke to be conditional\n\n  const dimensions = useResizeObserver(resizeRef);\n  useEffect(() => {\n    if (affordForDisplacement && usePortal) {\n      document.body.style.paddingBottom = `${dimensions.height}px`;\n    }\n\n    if (bodyClassName) {\n      document.body.classList.add(bodyClassName);\n    }\n\n    return () => {\n      if (affordForDisplacement && usePortal) {\n        document.body.style.paddingBottom = '';\n      }\n\n      if (bodyClassName) {\n        document.body.classList.remove(bodyClassName);\n      }\n    };\n  }, [affordForDisplacement, usePortal, dimensions, bodyClassName]);\n  const classes = classNames('euiBottomBar', `euiBottomBar--${position}`, paddingSizeToClassNameMap[paddingSize], className);\n  const newStyle = {\n    left,\n    right,\n    bottom,\n    top,\n    ...style\n  };\n  const bar = <>\n        <EuiI18n token=\"euiBottomBar.screenReaderHeading\" default=\"Page level controls\">\n          {screenReaderHeading => // Though it would be better to use aria-labelledby than aria-label and not repeat the same string twice\n      // A bug in voiceover won't list some landmarks in the rotor without an aria-label\n      <section aria-label={landmarkHeading ? landmarkHeading : screenReaderHeading} className={classes} ref={setRef} style={newStyle} {...rest}>\n              <EuiScreenReaderOnly>\n                <h2>\n                  {landmarkHeading ? landmarkHeading : screenReaderHeading}\n                </h2>\n              </EuiScreenReaderOnly>\n              {children}\n            </section>}\n        </EuiI18n>\n        <EuiScreenReaderOnly>\n          <p aria-live=\"assertive\">\n            {landmarkHeading ? <EuiI18n token=\"euiBottomBar.customScreenReaderAnnouncement\" default=\"There is a new region landmark called {landmarkHeading} with page level controls at the end of the document.\" values={{\n          landmarkHeading\n        }} /> : <EuiI18n token=\"euiBottomBar.screenReaderAnnouncement\" default=\"There is a new region landmark with page level controls at the end of the document.\" />}\n          </p>\n        </EuiScreenReaderOnly>\n      </>;\n  return usePortal ? <EuiPortal>{bar}</EuiPortal> : bar;\n});\nEuiBottomBar.propTypes = {\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n\n  /**\n       * How to position the bottom bar against its parent.\n       */\n  position: PropTypes.oneOfType([PropTypes.oneOf([\"fixed\"]), PropTypes.oneOf([\"static\", \"sticky\"]).isRequired]),\n\n  /**\n       * Whether to wrap in an EuiPortal which appends the component to the body element.\n       * Only works if `position` is `fixed`.\n       */\n  usePortal: PropTypes.bool,\n\n  /**\n       * Whether the component should apply padding on the document body element to afford for its own displacement height.\n       * Only works if `usePortal` is true and `position` is `fixed`.\n       */\n  affordForDisplacement: PropTypes.bool,\n\n  /**\n       * Padding applied to the bar. Default is 'm'.\n       */\n  paddingSize: PropTypes.oneOf([\"none\", \"s\", \"m\", \"l\"]),\n\n  /**\n       * Optional class applied to the body element on mount.\n       */\n  bodyClassName: PropTypes.string,\n\n  /**\n       * Customize the screen reader heading that helps users find this control. Default is 'Page level controls'.\n       */\n  landmarkHeading: PropTypes.string,\n\n  /**\n       * Starting vertical position when `fixed` position.\n       * Offset from the top of the window when `sticky` position.\n       * Has no affect on `static` positions.\n       */\n  top: PropTypes.any,\n\n  /**\n       * Ending horizontal position when `fixed` position.\n       * Has no affect on `static` or `sticky` positions.\n       */\n  right: PropTypes.any,\n\n  /**\n       * Starting vertical position when `fixed` position.\n       * Offset from the bottom of the window when `sticky` position.\n       * Has no affect on `static` positions.\n       */\n  bottom: PropTypes.any,\n\n  /**\n       * Starting horizontal position when `fixed` position.\n       * Has no affect on `static` or `sticky` positions.\n       */\n  left: PropTypes.any\n};\nEuiBottomBar.displayName = 'EuiBottomBar';\n\ntry {\n  EuiBottomBar.__docgenInfo = {\n    description: '',\n    displayName: 'EuiBottomBar',\n    methods: [],\n    props: {\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: 'Defines a string value that labels the current element.\\n' + '@see aria-labelledby.',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'data-test-subj': {\n        defaultValue: null,\n        description: '',\n        name: 'data-test-subj',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      usePortal: {\n        defaultValue: {\n          value: 'true'\n        },\n        description: 'Whether to wrap in an EuiPortal which appends the component to the body element.\\n' + 'Only works if `position` is `fixed`.',\n        name: 'usePortal',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      affordForDisplacement: {\n        defaultValue: {\n          value: 'true'\n        },\n        description: 'Whether the component should apply padding on the document body element to afford for its own displacement height.\\n' + 'Only works if `usePortal` is true and `position` is `fixed`.',\n        name: 'affordForDisplacement',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      position: {\n        defaultValue: {\n          value: 'fixed'\n        },\n        description: 'How to position the bottom bar against its parent.',\n        name: 'position',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"fixed\" | \"static\" | \"sticky\"',\n          value: [{\n            value: '\"fixed\"'\n          }, {\n            value: '\"static\"'\n          }, {\n            value: '\"sticky\"'\n          }]\n        }\n      },\n      paddingSize: {\n        defaultValue: {\n          value: 'm'\n        },\n        description: \"Padding applied to the bar. Default is 'm'.\",\n        name: 'paddingSize',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"s\" | \"m\" | \"l\" | \"none\"',\n          value: [{\n            value: '\"s\"'\n          }, {\n            value: '\"m\"'\n          }, {\n            value: '\"l\"'\n          }, {\n            value: '\"none\"'\n          }]\n        }\n      },\n      bodyClassName: {\n        defaultValue: null,\n        description: 'Optional class applied to the body element on mount.',\n        name: 'bodyClassName',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      landmarkHeading: {\n        defaultValue: null,\n        description: \"Customize the screen reader heading that helps users find this control. Default is 'Page level controls'.\",\n        name: 'landmarkHeading',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      top: {\n        defaultValue: null,\n        description: 'Starting vertical position when `fixed` position.\\n' + 'Offset from the top of the window when `sticky` position.\\n' + 'Has no affect on `static` positions.',\n        name: 'top',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string | number'\n        }\n      },\n      right: {\n        defaultValue: {\n          value: '0'\n        },\n        description: 'Ending horizontal position when `fixed` position.\\n' + 'Has no affect on `static` or `sticky` positions.',\n        name: 'right',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string | number'\n        }\n      },\n      bottom: {\n        defaultValue: {\n          value: '0'\n        },\n        description: 'Starting vertical position when `fixed` position.\\n' + 'Offset from the bottom of the window when `sticky` position.\\n' + 'Has no affect on `static` positions.',\n        name: 'bottom',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string | number'\n        }\n      },\n      left: {\n        defaultValue: {\n          value: '0'\n        },\n        description: 'Starting horizontal position when `fixed` position.\\n' + 'Has no affect on `static` or `sticky` positions.',\n        name: 'left',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string | number'\n        }\n      },\n      ref: {\n        defaultValue: null,\n        description: '',\n        name: 'ref',\n        parent: {\n          fileName: 'eui/node_modules/@types/react/index.d.ts',\n          name: 'RefAttributes'\n        },\n        required: false,\n        type: {\n          name: 'Ref<HTMLElement>'\n        }\n      }\n    },\n    extendedInterfaces: ['CommonProps', 'HTMLAttributes', 'AriaAttributes', 'DOMAttributes', 'Attributes']\n  };\n} catch (e) {}"]}]}