{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\search_bar\\filters\\field_value_selection_filter.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\search_bar\\filters\\field_value_selection_filter.tsx","mtime":1649070093745},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/search_bar/filters/field_value_selection_filter.tsx"],"names":["React","Component","isArray","isNil","keys","EuiPopover","EuiPopoverTitle","EuiFieldSearch","EuiFilterButton","EuiFilterSelectItem","EuiLoadingChart","EuiSpacer","EuiIcon","Query","Operator","defaults","config","multiSelect","filterWith","loadingMessage","noOptionsMessage","searchThreshold","FieldValueSelectionFilter","props","options","Promise","resolve","cachedOptions","state","then","opts","cache","setState","setTimeout","preloadedOptions","all","shown","selectItems","popoverOpen","error","activeItems","prevState","window","requestAnimationFrame","loadOptions","loader","resolveOptionsLoader","items","on","off","rest","query","resolveMultiSelect","forEach","op","optionField","field","clause","getOrFieldClause","value","getSimpleFieldClause","checked","resolveChecked","push","catch","q","predicate","getOptionFilter","filter","option","i","name","resolveOptionName","toLowerCase","includes","startsWith","toString","autoClose","operator","EQ","closePopover","removeSimpleFieldClauses","addSimpleFieldValue","onChange","removeOrFieldValue","addOrFieldValue","removeSimpleFieldValue","index","event","key","ARROW_DOWN","length","preventDefault","focus","ARROW_UP","searchInput","text","prevProps","activeTop","isActiveField","activeItem","some","item","active","button","onButtonClick","bind","undefined","searchBox","renderSearchBox","content","renderContent","type","threshold","disabled","ref","filterOptions","onKeyDown","renderError","renderLoader","renderNoOptions","Error","onClick","onOptionClick","view","isMust","message","hasOrFieldClause","hasSimpleFieldClause"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { isArray, isNil } from '../../../services/predicate';\nimport { keys } from '../../../services';\nimport { EuiPopover, EuiPopoverTitle } from '../../popover';\nimport { EuiFieldSearch } from '../../form/field_search';\nimport { EuiFilterButton, EuiFilterSelectItem } from '../../filter_group';\nimport { EuiLoadingChart } from '../../loading';\nimport { EuiSpacer } from '../../spacer';\nimport { EuiIcon } from '../../icon';\nimport { Query } from '../query';\nimport { Operator } from '../query/ast';\nvar defaults = {\n  config: {\n    multiSelect: true,\n    filterWith: 'prefix',\n    loadingMessage: 'Loading...',\n    noOptionsMessage: 'No options found',\n    searchThreshold: 10\n  }\n};\nexport class FieldValueSelectionFilter extends Component {\n  searchInput = null;\n\n  constructor(props) {\n    super(props);\n    const {\n      options\n    } = props.config;\n    const preloadedOptions = isArray(options) ? {\n      all: options,\n      shown: options\n    } : null;\n    this.selectItems = [];\n    this.state = {\n      popoverOpen: false,\n      error: null,\n      options: preloadedOptions,\n      activeItems: []\n    };\n  }\n\n  closePopover() {\n    this.setState({\n      popoverOpen: false\n    });\n  }\n\n  onButtonClick() {\n    this.setState(prevState => {\n      if (!prevState.popoverOpen) {\n        // loading options updates the state, so we'll do that in the animation frame\n        window.requestAnimationFrame(() => {\n          this.loadOptions();\n        });\n      }\n\n      return {\n        options: null,\n        error: null,\n        popoverOpen: !prevState.popoverOpen\n      };\n    });\n  }\n\n  loadOptions() {\n    const loader = this.resolveOptionsLoader();\n    this.setState({\n      options: null,\n      error: null\n    });\n    loader().then(options => {\n      const items = {\n        on: [],\n        off: [],\n        rest: []\n      };\n      const {\n        query,\n        config\n      } = this.props;\n      const multiSelect = this.resolveMultiSelect();\n\n      if (options) {\n        options.forEach(op => {\n          const optionField = op.field || config.field;\n\n          if (optionField) {\n            const clause = multiSelect === 'or' ? query.getOrFieldClause(optionField, op.value) : query.getSimpleFieldClause(optionField, op.value);\n            const checked = this.resolveChecked(clause);\n\n            if (!checked) {\n              items.rest.push(op);\n            } else if (checked === 'on') {\n              items.on.push(op);\n            } else {\n              items.off.push(op);\n            }\n          }\n\n          return;\n        });\n      }\n\n      this.setState({\n        error: null,\n        activeItems: items.on,\n        options: {\n          all: options,\n          shown: [...items.on, ...items.off, ...items.rest]\n        }\n      });\n    }).catch(() => {\n      this.setState({\n        options: null,\n        error: 'Could not load options'\n      });\n    });\n  }\n\n  filterOptions(q = '') {\n    this.setState(prevState => {\n      if (isNil(prevState.options)) {\n        return {};\n      }\n\n      const predicate = this.getOptionFilter();\n      return { ...prevState,\n        options: { ...prevState.options,\n          shown: prevState.options.all.filter((option, i, options) => {\n            const name = this.resolveOptionName(option).toLowerCase();\n            const query = q.toLowerCase();\n            return predicate(name, query, options);\n          })\n        }\n      };\n    });\n  }\n\n  getOptionFilter() {\n    const filterWith = this.props.config.filterWith || defaults.config.filterWith;\n\n    if (typeof filterWith === 'function') {\n      return filterWith;\n    }\n\n    if (filterWith === 'includes') {\n      return (name, query) => name.includes(query);\n    }\n\n    return (name, query) => name.startsWith(query);\n  }\n\n  resolveOptionsLoader = () => {\n    const options = this.props.config.options;\n\n    if (isArray(options)) {\n      return () => Promise.resolve(options);\n    }\n\n    return () => {\n      const cachedOptions = this.state.cachedOptions;\n\n      if (cachedOptions) {\n        return Promise.resolve(cachedOptions);\n      }\n\n      return options().then(opts => {\n        // If a cache time is set, populate the cache and also schedule a\n        // cache reset.\n        if (this.props.config.cache != null && this.props.config.cache > 0) {\n          this.setState({\n            cachedOptions: opts\n          });\n          setTimeout(() => {\n            this.setState({\n              cachedOptions: null\n            });\n          }, this.props.config.cache);\n        }\n\n        return opts;\n      });\n    };\n  };\n\n  resolveOptionName(option) {\n    return option.name || option.value.toString();\n  }\n\n  onOptionClick(field, value, checked) {\n    const multiSelect = this.resolveMultiSelect();\n    const {\n      config: {\n        autoClose = true,\n        operator = Operator.EQ\n      }\n    } = this.props; // we're closing popover only if the user can only select one item... if the\n    // user can select more, we'll leave it open so she can continue selecting\n\n    if (!multiSelect && autoClose) {\n      this.closePopover();\n      const query = checked ? this.props.query.removeSimpleFieldClauses(field) : this.props.query.removeSimpleFieldClauses(field).addSimpleFieldValue(field, value, true, operator);\n      this.props.onChange(query);\n    } else {\n      if (multiSelect === 'or') {\n        const query = checked ? this.props.query.removeOrFieldValue(field, value) : this.props.query.addOrFieldValue(field, value, true, operator);\n        this.props.onChange(query);\n      } else {\n        const query = checked ? this.props.query.removeSimpleFieldValue(field, value) : this.props.query.addSimpleFieldValue(field, value, true, operator);\n        this.props.onChange(query);\n      }\n    }\n  }\n\n  onKeyDown(index, event) {\n    switch (event.key) {\n      case keys.ARROW_DOWN:\n        if (index < this.selectItems.length - 1) {\n          event.preventDefault();\n          this.selectItems[index + 1].focus();\n        }\n\n        break;\n\n      case keys.ARROW_UP:\n        if (index < 0) {\n          return; // it's coming from the search box... nothing to do... nowhere to go\n        }\n\n        if (index === 0 && this.searchInput) {\n          event.preventDefault();\n          this.searchInput.focus();\n        } else if (index > 0) {\n          event.preventDefault();\n          this.selectItems[index - 1].focus();\n        }\n\n    }\n  }\n\n  resolveMultiSelect() {\n    const {\n      config\n    } = this.props;\n    return !isNil(config.multiSelect) ? config.multiSelect : defaults.config.multiSelect;\n  }\n\n  componentDidMount() {\n    if (this.props.query.text.length) this.loadOptions();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.query !== prevProps.query) this.loadOptions();\n  }\n\n  render() {\n    const {\n      index,\n      query,\n      config\n    } = this.props;\n    const multiSelect = this.resolveMultiSelect();\n    const activeTop = this.isActiveField(config.field);\n    const activeItem = this.state.options ? this.state.options.all.some(item => this.isActiveField(item.field)) : false;\n    const active = activeTop || activeItem;\n    const button = <EuiFilterButton iconType=\"arrowDown\" iconSide=\"right\" onClick={this.onButtonClick.bind(this)} hasActiveFilters={active} numActiveFilters={active ? this.state.activeItems.length : undefined} grow>\n        {config.name}\n      </EuiFilterButton>;\n    const searchBox = this.renderSearchBox();\n    const content = this.renderContent(config.field, query, config, multiSelect);\n    return <EuiPopover id={`${config.type}_${index}`} button={button} isOpen={this.state.popoverOpen} closePopover={this.closePopover.bind(this)} panelPaddingSize=\"none\" anchorPosition=\"downCenter\" panelClassName=\"euiFilterGroup__popoverPanel\">\n        {searchBox}\n        {content}\n      </EuiPopover>;\n  }\n\n  renderSearchBox() {\n    const threshold = this.props.config.searchThreshold || defaults.config.searchThreshold;\n\n    if (this.state.options && this.state.options.all.length >= threshold) {\n      const disabled = this.state.error != null;\n      return <EuiPopoverTitle paddingSize=\"s\">\n          <EuiFieldSearch inputRef={ref => this.searchInput = ref} disabled={disabled} incremental={true} onSearch={query => this.filterOptions(query)} onKeyDown={this.onKeyDown.bind(this, -1)} compressed />\n        </EuiPopoverTitle>;\n    }\n  }\n\n  renderContent(field, query, config, multiSelect) {\n    if (this.state.error) {\n      return this.renderError(this.state.error);\n    }\n\n    if (isNil(this.state.options)) {\n      return this.renderLoader();\n    }\n\n    if (this.state.options.shown.length === 0) {\n      return this.renderNoOptions();\n    }\n\n    if (this.state.options == null) {\n      return;\n    }\n\n    const items = [];\n    this.state.options.shown.forEach((option, index) => {\n      const optionField = option.field || field;\n\n      if (optionField == null) {\n        throw new Error('option.field or field should be provided in <FieldValueSelectionFilter/>');\n      }\n\n      const clause = multiSelect === 'or' ? query.getOrFieldClause(optionField, option.value) : query.getSimpleFieldClause(optionField, option.value);\n      const checked = this.resolveChecked(clause);\n\n      const onClick = () => {\n        // clicking a checked item will uncheck it and effective remove the filter (value = undefined)\n        this.onOptionClick(optionField, option.value, checked);\n      };\n\n      const item = <EuiFilterSelectItem key={index} checked={checked} onClick={onClick} ref={ref => this.selectItems[index] = ref} onKeyDown={this.onKeyDown.bind(this, index)}>\n          {option.view ? option.view : this.resolveOptionName(option)}\n        </EuiFilterSelectItem>;\n      items.push(item);\n    });\n    return <div className=\"euiFilterSelect__items\">{items}</div>;\n  }\n\n  resolveChecked(clause) {\n    if (clause) {\n      return Query.isMust(clause) ? 'on' : 'off';\n    }\n  }\n\n  renderLoader() {\n    const message = this.props.config.loadingMessage || defaults.config.loadingMessage;\n    return <div className=\"euiFilterSelect__note\">\n        <div className=\"euiFilterSelect__noteContent\">\n          <EuiLoadingChart size=\"m\" />\n          <EuiSpacer size=\"xs\" />\n          <p>{message}</p>\n        </div>\n      </div>;\n  }\n\n  renderError(message) {\n    return <div className=\"euiFilterSelect__note\">\n        <div className=\"euiFilterSelect__noteContent\">\n          <EuiIcon size=\"m\" type=\"faceSad\" color=\"danger\" />\n          <EuiSpacer size=\"xs\" />\n          <p>{message}</p>\n        </div>\n      </div>;\n  }\n\n  renderNoOptions() {\n    const message = this.props.config.noOptionsMessage || defaults.config.noOptionsMessage;\n    return <div className=\"euiFilterSelect__note\">\n        <div className=\"euiFilterSelect__noteContent\">\n          <EuiIcon type=\"minusInCircle\" />\n          <EuiSpacer size=\"xs\" />\n          <p>{message}</p>\n        </div>\n      </div>;\n  }\n\n  isActiveField(field) {\n    if (typeof field !== 'string') {\n      return false;\n    }\n\n    const {\n      query\n    } = this.props;\n    const multiSelect = this.resolveMultiSelect();\n\n    if (multiSelect === 'or') {\n      return query.hasOrFieldClause(field);\n    }\n\n    return query.hasSimpleFieldClause(field);\n  }\n\n}\nFieldValueSelectionFilter.propTypes = {\n  index: PropTypes.number.isRequired,\n  config: PropTypes.shape({\n    type: PropTypes.oneOf([\"field_value_selection\"]).isRequired,\n    field: PropTypes.string,\n    name: PropTypes.string.isRequired,\n\n    /**\n       * See #FieldValueOptionType\n       */\n    options: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.shape({\n      field: PropTypes.string,\n      value: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.number.isRequired, PropTypes.bool.isRequired, PropTypes.shape({\n        type: PropTypes.oneOf([\"date\"]).isRequired,\n        raw: PropTypes.any.isRequired,\n        granularity: PropTypes.oneOfType([PropTypes.shape({\n          es: PropTypes.oneOf([\"d\", \"w\", \"M\", \"y\"]).isRequired,\n          js: PropTypes.oneOf([\"day\", \"week\", \"month\", \"year\"]).isRequired,\n          isSame: PropTypes.func.isRequired,\n          start: PropTypes.func.isRequired,\n          startOfNext: PropTypes.func.isRequired,\n          iso8601: PropTypes.func.isRequired\n        }).isRequired, PropTypes.oneOf([undefined])]).isRequired,\n        text: PropTypes.string.isRequired,\n        resolve: PropTypes.func.isRequired\n      }).isRequired]).isRequired,\n      name: PropTypes.string,\n      view: PropTypes.node\n    }).isRequired).isRequired, PropTypes.func.isRequired]).isRequired,\n    filterWith: PropTypes.oneOfType([PropTypes.oneOf([\"prefix\", \"includes\"]), PropTypes.func.isRequired]),\n    cache: PropTypes.number,\n    multiSelect: PropTypes.oneOfType([PropTypes.bool.isRequired, PropTypes.oneOf([\"and\", \"or\"])]),\n    loadingMessage: PropTypes.string,\n    noOptionsMessage: PropTypes.string,\n    searchThreshold: PropTypes.number,\n    available: PropTypes.func,\n    autoClose: PropTypes.bool,\n    operator: PropTypes.oneOf([\"eq\", \"exact\", \"gt\", \"gte\", \"lt\", \"lte\"])\n  }).isRequired,\n  query: PropTypes.any.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\ntry {\n  FieldValueSelectionFilter.__docgenInfo = {\n    description: '',\n    displayName: 'FieldValueSelectionFilter',\n    methods: [],\n    props: {\n      index: {\n        defaultValue: null,\n        description: '',\n        name: 'index',\n        parent: {\n          fileName: 'eui/src/components/search_bar/filters/field_value_selection_filter.tsx',\n          name: 'FieldValueSelectionFilterProps'\n        },\n        required: true,\n        type: {\n          name: 'number'\n        }\n      },\n      config: {\n        defaultValue: null,\n        description: '',\n        name: 'config',\n        parent: {\n          fileName: 'eui/src/components/search_bar/filters/field_value_selection_filter.tsx',\n          name: 'FieldValueSelectionFilterProps'\n        },\n        required: true,\n        type: {\n          name: 'FieldValueSelectionFilterConfigType'\n        }\n      },\n      query: {\n        defaultValue: null,\n        description: '',\n        name: 'query',\n        parent: {\n          fileName: 'eui/src/components/search_bar/filters/field_value_selection_filter.tsx',\n          name: 'FieldValueSelectionFilterProps'\n        },\n        required: true,\n        type: {\n          name: 'Query'\n        }\n      },\n      onChange: {\n        defaultValue: null,\n        description: '',\n        name: 'onChange',\n        parent: {\n          fileName: 'eui/src/components/search_bar/filters/field_value_selection_filter.tsx',\n          name: 'FieldValueSelectionFilterProps'\n        },\n        required: true,\n        type: {\n          name: '(query: Query) => void'\n        }\n      }\n    },\n    extendedInterfaces: ['FieldValueSelectionFilterProps']\n  };\n} catch (e) {}"]}]}