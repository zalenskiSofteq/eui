{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\services\\color\\index.ts","dependencies":[{"path":"D:\\work\\eui\\src\\services\\color\\index.ts","mtime":1649070093832},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/services/color/index.ts"],"names":["isColorDark","isValidHex","hexToHsv","hexToRgb","hsvToHex","hsvToRgb","rgbToHex","rgbToHsv","calculateContrast","calculateLuminance","VISUALIZATION_COLORS","DEFAULT_VISUALIZATION_COLOR","colorPalette","euiPaletteForLightBackground","euiPaletteForDarkBackground","euiPaletteColorBlind","euiPaletteColorBlindBehindText","euiPaletteForStatus","euiPaletteForTemperature","euiPaletteComplimentary","euiPaletteNegative","euiPalettePositive","euiPaletteCool","euiPaletteWarm","euiPaletteGray","getSteppedGradient"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,WAAT,QAA4B,iBAA5B;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SACEC,iBADF,EAEEC,kBAFF,QAGO,0BAHP;AAIA,SACEC,oBADF,EAEEC,2BAFF,QAGO,wBAHP;AAIA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SACEC,4BADF,EAEEC,2BAFF,EAGEC,oBAHF,EAIEC,8BAJF,EAKEC,mBALF,EAMEC,wBANF,EAOEC,uBAPF,EAQEC,kBARF,EASEC,kBATF,EAUEC,cAVF,EAWEC,cAXF,EAYEC,cAZF,QAaO,gBAbP;AAcA,eAAiC,eAAjC;AACA,SAASC,kBAAT,QAAmC,oBAAnC","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport { isColorDark } from './is_color_dark';\nexport { isValidHex } from './is_valid_hex';\nexport { hexToHsv } from './hex_to_hsv';\nexport { hexToRgb } from './hex_to_rgb';\nexport { hsvToHex } from './hsv_to_hex';\nexport { hsvToRgb } from './hsv_to_rgb';\nexport { rgbToHex } from './rgb_to_hex';\nexport { rgbToHsv } from './rgb_to_hsv';\nexport {\n  calculateContrast,\n  calculateLuminance,\n} from './luminance_and_contrast';\nexport {\n  VISUALIZATION_COLORS,\n  DEFAULT_VISUALIZATION_COLOR,\n} from './visualization_colors';\nexport { colorPalette } from './color_palette';\nexport {\n  euiPaletteForLightBackground,\n  euiPaletteForDarkBackground,\n  euiPaletteColorBlind,\n  euiPaletteColorBlindBehindText,\n  euiPaletteForStatus,\n  euiPaletteForTemperature,\n  euiPaletteComplimentary,\n  euiPaletteNegative,\n  euiPalettePositive,\n  euiPaletteCool,\n  euiPaletteWarm,\n  euiPaletteGray,\n} from './eui_palettes';\nexport { rgbDef, HSV, RGB } from './color_types';\nexport { getSteppedGradient } from './stepped_gradient';\n"]}]}