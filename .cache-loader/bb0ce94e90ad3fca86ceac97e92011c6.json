{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\portal\\portal.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\portal\\portal.tsx","mtime":1649070093737},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/portal/portal.tsx"],"names":["Component","createPortal","keysOf","insertPositions","after","before","INSERT_POSITIONS","EuiPortal","props","insert","portalNode","document","createElement","body","appendChild","sibling","position","insertAdjacentElement","updatePortalRef","parentNode","removeChild","ref","portalRef","children"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA,SAASA,SAAT,QAAqC,OAArC;;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,MAAT,QAAuB,WAAvB;AAOA,OAAO,IAAMC,eAAmC,GAAG;AACjDC,EAAAA,KAAK,EAAE,UAD0C;AAEjDC,EAAAA,MAAM,EAAE;AAFyC,CAA5C;AAKP,OAAO,IAAMC,gBAA2C,GAAGJ,MAAM,CAC/DC,eAD+D,CAA1D;AAeP,WAAaI,SAAb;AAAA;;AAAA;;AAEE,qBAAYC,KAAZ,EAAmC;AAAA;;AAAA;;AACjC,8BAAMA,KAAN;;AADiC;;AAAA,QAGzBC,MAHyB,GAGd,MAAKD,KAHS,CAGzBC,MAHyB;AAKjC,UAAKC,UAAL,GAAkBC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAlB;;AAEA,QAAIH,MAAM,IAAI,IAAd,EAAoB;AAClB;AACAE,MAAAA,QAAQ,CAACE,IAAT,CAAcC,WAAd,CAA0B,MAAKJ,UAA/B;AACD,KAHD,MAGO;AACL;AADK,UAEGK,OAFH,GAEyBN,MAFzB,CAEGM,OAFH;AAAA,UAEYC,QAFZ,GAEyBP,MAFzB,CAEYO,QAFZ;AAGLD,MAAAA,OAAO,CAACE,qBAAR,CAA8Bd,eAAe,CAACa,QAAD,CAA7C,EAAyD,MAAKN,UAA9D;AACD;;AAdgC;AAelC;;AAjBH;AAAA;AAAA,wCAmBsB;AAClB,WAAKQ,eAAL,CAAqB,KAAKR,UAA1B;AACD;AArBH;AAAA;AAAA,2CAuByB;AACrB,UAAI,KAAKA,UAAL,CAAgBS,UAApB,EAAgC;AAC9B,aAAKT,UAAL,CAAgBS,UAAhB,CAA2BC,WAA3B,CAAuC,KAAKV,UAA5C;AACD;;AACD,WAAKQ,eAAL,CAAqB,IAArB;AACD;AA5BH;AAAA;AAAA,oCA8BkBG,GA9BlB,EA8B8C;AAC1C,UAAI,KAAKb,KAAL,CAAWc,SAAf,EAA0B;AACxB,aAAKd,KAAL,CAAWc,SAAX,CAAqBD,GAArB;AACD;AACF;AAlCH;AAAA;AAAA,6BAoCW;AACP,0BAAOpB,YAAY,CAAC,KAAKO,KAAL,CAAWe,QAAZ,EAAsB,KAAKb,UAA3B,CAAnB;AACD;AAtCH;;AAAA;AAAA,EAA+BV,SAA/B;;;AArDA;AACA","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/**\n * NOTE: We can't test this component because Enzyme doesn't support rendering\n * into portals.\n */\nimport { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { createPortal } from 'react-dom';\nimport { keysOf } from '../common';\nexport var insertPositions = {\n  after: 'afterend',\n  before: 'beforebegin'\n};\nexport var INSERT_POSITIONS = keysOf(insertPositions);\nexport class EuiPortal extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      insert\n    } = this.props;\n    this.portalNode = document.createElement('div');\n\n    if (insert == null) {\n      // no insertion defined, append to body\n      document.body.appendChild(this.portalNode);\n    } else {\n      // inserting before or after an element\n      const {\n        sibling,\n        position\n      } = insert;\n      sibling.insertAdjacentElement(insertPositions[position], this.portalNode);\n    }\n  }\n\n  componentDidMount() {\n    this.updatePortalRef(this.portalNode);\n  }\n\n  componentWillUnmount() {\n    if (this.portalNode.parentNode) {\n      this.portalNode.parentNode.removeChild(this.portalNode);\n    }\n\n    this.updatePortalRef(null);\n  }\n\n  updatePortalRef(ref) {\n    if (this.props.portalRef) {\n      this.props.portalRef(ref);\n    }\n  }\n\n  render() {\n    return createPortal(this.props.children, this.portalNode);\n  }\n\n}\nEuiPortal.propTypes = {\n  /**\n     * ReactNode to render as this component's content\n     */\n  children: PropTypes.node.isRequired,\n  insert: PropTypes.shape({\n    sibling: PropTypes.any.isRequired,\n    position: PropTypes.oneOf([\"after\", \"before\"]).isRequired\n  }),\n  portalRef: PropTypes.func\n};\n\ntry {\n  EuiPortal.__docgenInfo = {\n    description: '',\n    displayName: 'EuiPortal',\n    methods: [],\n    props: {\n      children: {\n        defaultValue: null,\n        description: \"ReactNode to render as this component's content\",\n        name: 'children',\n        parent: {\n          fileName: 'eui/src/components/portal/portal.tsx',\n          name: 'EuiPortalProps'\n        },\n        required: true,\n        type: {\n          name: 'ReactNode'\n        }\n      },\n      insert: {\n        defaultValue: null,\n        description: '',\n        name: 'insert',\n        parent: {\n          fileName: 'eui/src/components/portal/portal.tsx',\n          name: 'EuiPortalProps'\n        },\n        required: false,\n        type: {\n          name: '{ sibling: HTMLElement; position: \"before\" | \"after\"; }'\n        }\n      },\n      portalRef: {\n        defaultValue: null,\n        description: '',\n        name: 'portalRef',\n        parent: {\n          fileName: 'eui/src/components/portal/portal.tsx',\n          name: 'EuiPortalProps'\n        },\n        required: false,\n        type: {\n          name: '(ref: HTMLDivElement) => void'\n        }\n      }\n    },\n    extendedInterfaces: ['EuiPortalProps']\n  };\n} catch (e) {}"]}]}