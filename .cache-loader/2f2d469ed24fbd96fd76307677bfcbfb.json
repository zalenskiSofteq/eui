{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src-docs\\src\\views\\elastic_charts\\sizes.js","dependencies":[{"path":"D:\\work\\eui\\src-docs\\src\\views\\elastic_charts\\sizes.js","mtime":1649070093150},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src-docs/src/views/elastic_charts/sizes.js"],"names":["React","Component","Fragment","moment","ThemeContext","Chart","Settings","Axis","timeFormatter","niceTimeFormatByDay","LineAnnotation","BarSeries","EUI_CHARTS_THEME_DARK","EUI_CHARTS_THEME_LIGHT","EuiSpacer","EuiTitle","EuiFlexGrid","EuiFlexItem","EuiPageContent","EuiFormRow","EuiRange","EuiPage","EuiButton","EuiCopy","formatDate","dateFormatAliases","MultiChartCard","ChartCard","TIME_DATA","TIME_DATA_2","Sizes","props","changePropsBasedOnWidth","e","setState","stacked","target","checked","multiObject","optionId","toggleIdSelected","width","value","data1","slice","data2","tooltipProps","legendPosition","xAxisFormatter","xAxisTitle","date","xAxisStyle","yAxisStyle","changeDescription","mediumSize","headerFormatter","tooltipData","shortDateTime","format","length","tickLabel","visible","smallSize","i","splice","xsmallSize","state","multi","isDarkTheme","context","theme","includes","lineAnnotationStyle","lineAnnotation","annotation","dataValue","details","overflow","height","undefined","onMultiChange","onWidthChartsChange","JSON","stringify","copy","contextType"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport moment from 'moment';\nimport { ThemeContext } from '../../components';\nimport {\n  Chart,\n  Settings,\n  Axis,\n  timeFormatter,\n  niceTimeFormatByDay,\n  LineAnnotation,\n  BarSeries,\n} from '@elastic/charts';\n\nimport {\n  EUI_CHARTS_THEME_DARK,\n  EUI_CHARTS_THEME_LIGHT,\n} from '../../../../src/themes/charts/themes';\n\nimport {\n  EuiSpacer,\n  EuiTitle,\n  EuiFlexGrid,\n  EuiFlexItem,\n  EuiPageContent,\n  EuiFormRow,\n  EuiRange,\n  EuiPage,\n  EuiButton,\n  EuiCopy,\n} from '../../../../src/components';\n\nimport { formatDate, dateFormatAliases } from '../../../../src/services';\n\nimport { MultiChartCard, ChartCard } from './shared';\n\nimport { TIME_DATA, TIME_DATA_2 } from './data';\n\nexport class Sizes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.mediumSize = 50;\n    this.smallSize = 40;\n    this.xsmallSize = 33;\n\n    this.state = {\n      multi: false,\n      stacked: false,\n      width: 100,\n      data1: TIME_DATA,\n      data2: TIME_DATA_2,\n    };\n  }\n\n  componentDidMount = () => {\n    this.changePropsBasedOnWidth(100);\n  };\n\n  onStackedChange = (e) => {\n    this.setState({\n      stacked: e.target.checked,\n    });\n  };\n\n  onMultiChange = (multiObject) => {\n    this.setState({\n      ...multiObject,\n    });\n  };\n\n  onChartTypeChange = (optionId) => {\n    this.setState({\n      toggleIdSelected: optionId,\n    });\n  };\n\n  onWidthChartsChange = (e) => {\n    this.setState({\n      width: e.target.value,\n    });\n\n    this.changePropsBasedOnWidth(e.target.value);\n  };\n\n  changePropsBasedOnWidth = (width) => {\n    const data1 = TIME_DATA.slice();\n    const data2 = TIME_DATA_2.slice();\n    let tooltipProps;\n    let legendPosition = 'right';\n    const xAxisFormatter = timeFormatter(niceTimeFormatByDay(1));\n    let xAxisTitle = `${formatDate(data1[0][0], dateFormatAliases.date)}`;\n    let xAxisStyle;\n    let yAxisStyle;\n    let changeDescription =\n      'At full width, you should be able to display all the details you need; axes, tick labels and titles, and legends.';\n\n    if (width < 55) {\n      legendPosition = 'bottom';\n    }\n\n    if (width < this.mediumSize) {\n      const headerFormatter = (tooltipData) => {\n        return `${formatDate(\n          tooltipData.value,\n          dateFormatAliases.shortDateTime\n        )}`;\n      };\n\n      tooltipProps = {\n        headerFormatter,\n      };\n\n      xAxisTitle = `${formatDate(data1[0][0], dateFormatAliases.date)} ${moment(\n        data1[0][0]\n      ).format('H:mm')} - ${moment(data1[data1.length - 1][0]).format('H:mm')}`;\n\n      xAxisStyle = { tickLabel: { visible: false } };\n\n      changeDescription =\n        'When the panel becomes narrower that the axes tick labels begin to get clustered, consider moving the axes range to the axes title.';\n    }\n\n    if (width < this.smallSize && data1.length > 20) {\n      for (let i = 0; i < data1.length; i++) {\n        data1.splice(i + 1, 1);\n      }\n      for (let i = 0; i < data2.length; i++) {\n        data2.splice(i + 1, 1);\n      }\n\n      changeDescription =\n        'If the points also start becoming to clustured, consider reducing your bin count. For line charts with dots, remove the dots.';\n    }\n\n    if (width < this.xsmallSize) {\n      yAxisStyle = { tickLabel: { visible: false } };\n\n      changeDescription =\n        'At severely narrow panels, consider the key indicators of your data and call these out with annotations instead of displaying all values of all axes.';\n    }\n\n    this.setState({\n      data1,\n      data2,\n      legendPosition,\n      tooltipProps,\n      xAxisTitle,\n      xAxisFormatter,\n      xAxisStyle,\n      yAxisStyle,\n      changeDescription,\n    });\n  };\n\n  render() {\n    const {\n      multi,\n      stacked,\n      width,\n      tooltipProps,\n      data1,\n      data2,\n      legendPosition,\n      xAxisTitle,\n      xAxisFormatter,\n      xAxisStyle,\n      yAxisStyle,\n      changeDescription,\n    } = this.state;\n\n    const isDarkTheme = this.context.theme.includes('dark');\n    const theme = isDarkTheme\n      ? EUI_CHARTS_THEME_DARK.theme\n      : EUI_CHARTS_THEME_LIGHT.theme;\n    const lineAnnotationStyle = isDarkTheme\n      ? EUI_CHARTS_THEME_DARK.lineAnnotation\n      : EUI_CHARTS_THEME_LIGHT.lineAnnotation;\n\n    let annotation;\n    if (width < this.xsmallSize) {\n      annotation = (\n        <LineAnnotation\n          annotationId=\"anno_\"\n          domainType=\"yDomain\"\n          dataValues={[{ dataValue: 22, details: 'Threshold' }]}\n          marker={'22'}\n          style={lineAnnotationStyle}\n        />\n      );\n    }\n\n    return (\n      <Fragment>\n        <EuiPage>\n          <EuiPageContent\n            role={null}\n            horizontalPosition=\"center\"\n            style={{\n              width: `${width}%`,\n              overflow: 'hidden',\n            }}>\n            <EuiTitle size=\"xxs\">\n              <h2>Chart title {multi && ' by type'}</h2>\n            </EuiTitle>\n\n            <EuiSpacer size=\"s\" />\n\n            <Chart size={{ height: 200 }}>\n              <Settings\n                theme={theme}\n                showLegend={multi}\n                legendPosition={legendPosition}\n                tooltip={tooltipProps}\n              />\n              <BarSeries\n                id=\"series1\"\n                data={data1}\n                xAccessor={0}\n                yAccessors={[1]}\n                stackAccessors={stacked ? [0] : undefined}\n              />\n              {multi && (\n                <BarSeries\n                  id=\"series2\"\n                  data={data2}\n                  xAccessor={0}\n                  yAccessors={[1]}\n                  stackAccessors={stacked ? [0] : undefined}\n                />\n              )}\n              {annotation}\n              <Axis\n                title={xAxisTitle}\n                tickFormat={xAxisFormatter}\n                id=\"bottom-axis\"\n                position=\"bottom\"\n                showGridLines={false}\n                style={xAxisStyle}\n              />\n              <Axis id=\"left-axis\" position=\"left\" style={yAxisStyle} />\n            </Chart>\n          </EuiPageContent>\n        </EuiPage>\n\n        <EuiSpacer />\n\n        <EuiFlexGrid\n          columns={3}\n          className=\"euiGuide__chartsPageCrosshairSection\">\n          <EuiFlexItem>\n            <MultiChartCard onChange={this.onMultiChange} />\n          </EuiFlexItem>\n          <EuiFlexItem>\n            <ChartCard\n              title=\"Width of panel\"\n              description=\"Watch how the chart changes depending on how much room is in the panel.\">\n              <EuiFormRow helpText=\"These sizes are just for example and don't take mobile-responsiveness into account. Your chart configuration may be different based on different sizes.\">\n                <EuiRange\n                  min={20}\n                  max={100}\n                  value={width}\n                  onChange={this.onWidthChartsChange}\n                  aria-label=\"Width of panel\"\n                />\n              </EuiFormRow>\n            </ChartCard>\n          </EuiFlexItem>\n\n          <EuiFlexItem>\n            <ChartCard\n              title=\"What's changing?\"\n              description={changeDescription}\n            />\n          </EuiFlexItem>\n        </EuiFlexGrid>\n\n        <EuiSpacer />\n\n        <div className=\"eui-textCenter\">\n          <EuiCopy\n            textToCopy={`<EuiTitle size=\"xxs\">\n  <h3>Chart title ${multi && ' by type'}</h3>\n</EuiTitle>\n\n<EuiSpacer size=\"s\" />\n\n<Chart size={{height: 200}}>\n  <Settings\n    theme={isDarkTheme ? EUI_CHARTS_THEME_DARK.theme : EUI_CHARTS_THEME_LIGHT.theme}\n    showLegend={${multi}}\n    legendPosition=\"${legendPosition}\"\n    tooltip={{ headerFormatter: tooltipData => {\n      return \\`\\${formatDate(\n        tooltipData.value,\n        dateFormatAliases.shortDateTime\n      )}\\`;\n    }}}\n  />\n  <BarSeries\n    id=\"series1\"\n    data={[[0,1],[1,2]]}\n    xAccessor={0}\n    yAccessors={[1]}\n    ${stacked ? 'stackAccessors={[0]}' : ''}\n  />\n  ${\n    multi\n      ? `<BarSeries\n    id=\"series2\"\n    data={[[0,1],[1,2]]}\n    xAccessor={0}\n    yAccessors={[1]}\n    ${stacked ? 'stackAccessors={[0]}' : ''}\n  />`\n      : ''\n  }\n  ${\n    annotation\n      ? `<LineAnnotation\n    annotationId=\"anno_\"\n    domainType=\"yDomain\"\n    dataValues={[{ dataValue: 1.2, details: 'Threshold' }]}\n    marker={'1.2'}\n    style={isDarkTheme\n      ? EUI_CHARTS_THEME_DARK.lineAnnotation\n      : EUI_CHARTS_THEME_LIGHT.lineAnnotation\n    }\n  />`\n      : ''\n  }\n  <Axis\n    id=\"bottom-axis\"\n    position=\"bottom\"\n    title={'${xAxisTitle}'}\n    tickFormat={timeFormatter(niceTimeFormatByDay(1))}\n    showGridLines={false}\n    style={${JSON.stringify(xAxisStyle)}}\n  />\n  <Axis\n    id=\"left-axis\"\n    position=\"left\"\n    style={${JSON.stringify(yAxisStyle)}}\n  />\n</Chart>`}>\n            {(copy) => (\n              <EuiButton\n                fill\n                onClick={copy}\n                iconType=\"copyClipboard\"\n                disabled={false}>\n                {false\n                  ? \"Bad chart, don't copy\"\n                  : 'Copy code of current configuration'}\n              </EuiButton>\n            )}\n          </EuiCopy>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nSizes.contextType = ThemeContext;\n"]}]}