{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\combo_box\\combo_box_options_list\\combo_box_options_list.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\combo_box\\combo_box_options_list\\combo_box_options_list.tsx","mtime":1649070093342},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/combo_box/combo_box_options_list/combo_box_options_list.tsx"],"names":["React","Component","classNames","FixedSizeList","EuiFlexGroup","EuiFlexItem","EuiHighlight","EuiPanel","EuiText","EuiLoadingSpinner","EuiComboBoxTitle","EuiI18n","EuiFilterSelectItem","EuiBadge","OPTION_CONTENT_CLASSNAME","hitEnterBadge","EuiComboBoxOptionsList","requestAnimationFrame","props","updatePosition","listRefInstance","event","target","contains","onCloseList","ref","listRef","listBoxRef","setAttribute","rootId","data","index","style","option","key","isGroupLabelOption","label","value","rest","singleSelection","selectedOptions","onOptionClick","optionRef","activeOptionIndex","renderOption","searchValue","toLowerCase","checked","undefined","length","optionIsFocused","optionIsDisabled","hasOwnProperty","disabled","bind","document","body","classList","add","window","addEventListener","setTimeout","closeListOnScroll","passive","capture","prevProps","options","scrollToItem","remove","removeEventListener","dataTestSubj","areAllOptionsSelected","customOptionText","fullWidth","getSelectedOptionForSearchValue","isLoading","matchingOptions","onCreateOption","onOptionEnterKey","onScroll","position","rowHeight","scrollToIndex","width","delimiter","zIndex","emptyStateContent","includes","selectedOptionForValue","highlightSearchValue","text","reg","RegExp","parts","split","map","part","idx","match","emptyState","numVisibleOptions","height","boundedHeight","optionsList","setListRef","setListBoxRef","ListRow","classes","listRefCallback"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { FixedSizeList } from 'react-window';\nimport { EuiFlexGroup, EuiFlexItem } from '../../flex';\nimport { EuiHighlight } from '../../highlight';\nimport { EuiPanel } from '../../panel';\nimport { EuiText } from '../../text';\nimport { EuiLoadingSpinner } from '../../loading';\nimport { EuiComboBoxTitle } from './combo_box_title';\nimport { EuiI18n } from '../../i18n';\nimport { EuiFilterSelectItem } from '../../filter_group/filter_select_item';\nimport { EuiBadge } from '../../badge/';\nvar OPTION_CONTENT_CLASSNAME = 'euiComboBoxOption__content';\nvar hitEnterBadge = /*#__PURE__*/React.createElement(EuiBadge, {\n  className: \"euiComboBoxOption__enterBadge\",\n  color: \"hollow\",\n  iconType: \"returnKey\",\n  \"aria-hidden\": \"true\"\n});\nexport class EuiComboBoxOptionsList extends Component {\n  listRefInstance = null;\n  listRef = null;\n  listBoxRef = null;\n  static defaultProps = {\n    'data-test-subj': '',\n    rowHeight: 29 // row height of default option renderer\n\n  };\n  updatePosition = () => {\n    // Wait a beat for the DOM to update, since we depend on DOM elements' bounds.\n    requestAnimationFrame(() => {\n      this.props.updatePosition(this.listRefInstance);\n    });\n  };\n\n  componentDidMount() {\n    // Wait a frame, otherwise moving focus from one combo box to another will result in the class\n    // being removed from the body.\n    requestAnimationFrame(() => {\n      document.body.classList.add('euiBody-hasPortalContent');\n    });\n    this.updatePosition();\n    window.addEventListener('resize', this.updatePosition); // Firefox will trigger a scroll event in many common situations when the options list div is appended\n    // to the DOM; in testing it was always within 100ms, but setting a timeout here for 500ms to be safe\n\n    setTimeout(() => {\n      window.addEventListener('scroll', this.closeListOnScroll, {\n        passive: true,\n        // for better performance as we won't call preventDefault\n        capture: true // scroll events don't bubble, they must be captured instead\n\n      });\n    }, 500);\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      options,\n      selectedOptions,\n      searchValue\n    } = prevProps; // We don't compare matchingOptions because that will result in a loop.\n\n    if (searchValue !== this.props.searchValue || options !== this.props.options || selectedOptions !== this.props.selectedOptions) {\n      this.updatePosition();\n    }\n\n    if (this.listRef && typeof this.props.activeOptionIndex !== 'undefined' && this.props.activeOptionIndex !== prevProps.activeOptionIndex) {\n      this.listRef.scrollToItem(this.props.activeOptionIndex, 'auto');\n    }\n  }\n\n  componentWillUnmount() {\n    document.body.classList.remove('euiBody-hasPortalContent');\n    window.removeEventListener('resize', this.updatePosition);\n    window.removeEventListener('scroll', this.closeListOnScroll, {\n      capture: true\n    });\n  }\n\n  closeListOnScroll = event => {\n    // Close the list when a scroll event happens, but not if the scroll happened in the options list.\n    // This mirrors Firefox's approach of auto-closing `select` elements onscroll.\n    if (this.listRefInstance && event.target && this.listRefInstance.contains(event.target) === false) {\n      this.props.onCloseList(event);\n    }\n  };\n  listRefCallback = ref => {\n    this.props.listRef(ref);\n    this.listRefInstance = ref;\n  };\n  setListRef = ref => {\n    this.listRef = ref;\n  };\n  setListBoxRef = ref => {\n    this.listBoxRef = ref;\n\n    if (ref) {\n      ref.setAttribute('id', this.props.rootId('listbox'));\n      ref.setAttribute('role', 'listBox');\n      ref.setAttribute('tabIndex', '0');\n    }\n  };\n  ListRow = ({\n    data,\n    index,\n    style\n  }) => {\n    const option = data[index];\n    const {\n      key,\n      isGroupLabelOption,\n      label,\n      value,\n      ...rest\n    } = option;\n    const {\n      singleSelection,\n      selectedOptions,\n      onOptionClick,\n      optionRef,\n      activeOptionIndex,\n      renderOption,\n      searchValue,\n      rootId\n    } = this.props;\n\n    if (isGroupLabelOption) {\n      return <div key={key ?? label.toLowerCase()} style={style}>\n          <EuiComboBoxTitle>{label}</EuiComboBoxTitle>\n        </div>;\n    }\n\n    let checked = undefined;\n\n    if (singleSelection && selectedOptions.length && selectedOptions[0].label === label && selectedOptions[0].key === key) {\n      checked = 'on';\n    }\n\n    const optionIsFocused = activeOptionIndex === index;\n    const optionIsDisabled = option.hasOwnProperty('disabled') && option.disabled === true;\n    return <EuiFilterSelectItem style={style} key={option.key ?? option.label.toLowerCase()} onClick={() => {\n      if (onOptionClick) {\n        onOptionClick(option);\n      }\n    }} ref={optionRef.bind(this, index)} isFocused={optionIsFocused} checked={checked} showIcons={singleSelection ? true : false} id={rootId(`_option-${index}`)} title={label} {...rest}>\n        <span className=\"euiComboBoxOption__contentWrapper\">\n          {renderOption ? <span className={OPTION_CONTENT_CLASSNAME}>\n              {renderOption(option, searchValue, 'euiComboBoxOption__renderOption')}\n            </span> : <EuiHighlight search={searchValue} className={OPTION_CONTENT_CLASSNAME}>\n              {label}\n            </EuiHighlight>}\n          {optionIsFocused && !optionIsDisabled ? hitEnterBadge : null}\n        </span>\n      </EuiFilterSelectItem>;\n  };\n\n  render() {\n    const {\n      'data-test-subj': dataTestSubj,\n      activeOptionIndex,\n      areAllOptionsSelected,\n      customOptionText,\n      fullWidth,\n      getSelectedOptionForSearchValue,\n      isLoading,\n      listRef,\n      matchingOptions,\n      onCloseList,\n      onCreateOption,\n      onOptionClick,\n      onOptionEnterKey,\n      onScroll,\n      optionRef,\n      options,\n      position = 'bottom',\n      renderOption,\n      rootId,\n      rowHeight,\n      scrollToIndex,\n      searchValue,\n      selectedOptions,\n      singleSelection,\n      updatePosition,\n      width,\n      delimiter,\n      zIndex,\n      style,\n      ...rest\n    } = this.props;\n    let emptyStateContent;\n\n    if (isLoading) {\n      emptyStateContent = <EuiFlexGroup gutterSize=\"s\" justifyContent=\"center\">\n          <EuiFlexItem grow={false}>\n            <EuiLoadingSpinner size=\"m\" />\n          </EuiFlexItem>\n          <EuiFlexItem grow={false}>\n            <EuiI18n token=\"euiComboBoxOptionsList.loadingOptions\" default=\"Loading options\" />\n          </EuiFlexItem>\n        </EuiFlexGroup>;\n    } else if (searchValue && matchingOptions && matchingOptions.length === 0) {\n      if (onCreateOption && getSelectedOptionForSearchValue) {\n        if (delimiter && searchValue.includes(delimiter)) {\n          emptyStateContent = <div className=\"euiComboBoxOption__contentWrapper\">\n              <p className=\"euiComboBoxOption__emptyStateText\">\n                <EuiI18n token=\"euiComboBoxOptionsList.delimiterMessage\" default=\"Add each item separated by {delimiter}\" values={{\n                delimiter: <strong>{delimiter}</strong>\n              }} />\n              </p>\n              {hitEnterBadge}\n            </div>;\n        } else {\n          const selectedOptionForValue = getSelectedOptionForSearchValue(searchValue, selectedOptions);\n\n          if (selectedOptionForValue) {\n            // Disallow duplicate custom options.\n            emptyStateContent = <p>\n                <EuiI18n token=\"euiComboBoxOptionsList.alreadyAdded\" default=\"{label} has already been added\" values={{\n                label: <strong>{selectedOptionForValue.label}</strong>\n              }} />\n              </p>;\n          } else {\n            const highlightSearchValue = (text, searchValue) => {\n              const reg = new RegExp(/(\\{searchValue})/, 'gi');\n              const parts = text.split(reg);\n              return <p className=\"euiComboBoxOption__emptyStateText\">\n                  {parts.map((part, idx) => part.match(reg) ? <strong key={idx}>{searchValue}</strong> : part)}\n                </p>;\n            };\n\n            emptyStateContent = <div className=\"euiComboBoxOption__contentWrapper\">\n                {customOptionText ? highlightSearchValue(customOptionText, searchValue) : <p className=\"euiComboBoxOption__emptyStateText\">\n                    <EuiI18n token=\"euiComboBoxOptionsList.createCustomOption\" default=\"Add {searchValue} as a custom option\" values={{\n                  searchValue: <strong>{searchValue}</strong>\n                }} />\n                  </p>}\n                {hitEnterBadge}\n              </div>;\n          }\n        }\n      } else {\n        emptyStateContent = <p>\n            <EuiI18n token=\"euiComboBoxOptionsList.noMatchingOptions\" default=\"{searchValue} doesn't match any options\" values={{\n            searchValue: <strong>{searchValue}</strong>\n          }} />\n          </p>;\n      }\n    } else if (!options.length) {\n      emptyStateContent = <p>\n          <EuiI18n token=\"euiComboBoxOptionsList.noAvailableOptions\" default=\"There aren't any options available\" />\n        </p>;\n    } else if (areAllOptionsSelected) {\n      emptyStateContent = <p>\n          <EuiI18n token=\"euiComboBoxOptionsList.allOptionsSelected\" default=\"You've selected all available options\" />\n        </p>;\n    }\n\n    const emptyState = emptyStateContent ? <EuiText size=\"xs\" className=\"euiComboBoxOptionsList__empty\">\n        {emptyStateContent}\n      </EuiText> : undefined;\n    const numVisibleOptions = matchingOptions.length < 7 ? matchingOptions.length : 7;\n    const height = numVisibleOptions * (rowHeight + 1); // Add one for the border\n    // bounded by max-height of euiComboBoxOptionsList__rowWrap\n\n    const boundedHeight = height > 200 ? 200 : height;\n    const optionsList = <FixedSizeList height={boundedHeight} onScroll={onScroll} itemCount={matchingOptions.length} itemSize={rowHeight} itemData={matchingOptions} ref={this.setListRef} innerRef={this.setListBoxRef} width={width}>\n        {this.ListRow}\n      </FixedSizeList>;\n    /**\n     * Reusing the EuiPopover__panel classes to help with consistency/maintenance.\n     * But this should really be converted to user the popover component.\n     */\n\n    const classes = classNames('euiComboBoxOptionsList', 'euiPopover__panel', 'euiPopover__panel-isAttached', 'euiPopover__panel-noArrow', 'euiPopover__panel-isOpen', `euiPopover__panel--${position}`);\n    return <EuiPanel paddingSize=\"none\" hasShadow={false} className={classes} panelRef={this.listRefCallback} data-test-subj={`comboBoxOptionsList ${dataTestSubj}`} style={{ ...style,\n      zIndex: zIndex\n    }} {...rest}>\n        <div className=\"euiComboBoxOptionsList__rowWrap\">\n          {emptyState || optionsList}\n        </div>\n      </EuiPanel>;\n  }\n\n}\nEuiComboBoxOptionsList.propTypes = {\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.oneOfType([PropTypes.string, PropTypes.string.isRequired]),\n  activeOptionIndex: PropTypes.number,\n  areAllOptionsSelected: PropTypes.bool,\n\n  /**\n       * Creates a custom text option. You can use `{searchValue}` inside your string to better customize your text.\n       * It won't show if there's no onCreateOption.\n       */\n  customOptionText: PropTypes.string,\n  fullWidth: PropTypes.bool,\n  getSelectedOptionForSearchValue: PropTypes.func,\n  isLoading: PropTypes.bool,\n  listRef: PropTypes.any.isRequired,\n  matchingOptions: PropTypes.arrayOf(PropTypes.shape({\n    isGroupLabelOption: PropTypes.bool,\n    label: PropTypes.string.isRequired,\n    key: PropTypes.string,\n    options: PropTypes.arrayOf(PropTypes.shape({\n      isGroupLabelOption: PropTypes.bool,\n      label: PropTypes.string.isRequired,\n      key: PropTypes.string,\n      options: PropTypes.arrayOf(PropTypes.any.isRequired),\n      value: PropTypes.any,\n      className: PropTypes.string,\n      \"aria-label\": PropTypes.string,\n      \"data-test-subj\": PropTypes.string\n    }).isRequired),\n    value: PropTypes.any,\n    className: PropTypes.string,\n    \"aria-label\": PropTypes.string,\n    \"data-test-subj\": PropTypes.string\n  }).isRequired).isRequired,\n  onCloseList: PropTypes.func.isRequired,\n  onCreateOption: PropTypes.func,\n  onOptionClick: PropTypes.func,\n  onOptionEnterKey: PropTypes.func,\n  onScroll: PropTypes.any,\n  optionRef: PropTypes.func.isRequired,\n\n  /**\n       * Array of EuiComboBoxOptionOption objects. See #EuiComboBoxOptionOption\n       */\n  options: PropTypes.arrayOf(PropTypes.shape({\n    isGroupLabelOption: PropTypes.bool,\n    label: PropTypes.string.isRequired,\n    key: PropTypes.string,\n    options: PropTypes.arrayOf(PropTypes.shape({\n      isGroupLabelOption: PropTypes.bool,\n      label: PropTypes.string.isRequired,\n      key: PropTypes.string,\n      options: PropTypes.arrayOf(PropTypes.any.isRequired),\n      value: PropTypes.any,\n      className: PropTypes.string,\n      \"aria-label\": PropTypes.string,\n      \"data-test-subj\": PropTypes.string\n    }).isRequired),\n    value: PropTypes.any,\n    className: PropTypes.string,\n    \"aria-label\": PropTypes.string,\n    \"data-test-subj\": PropTypes.string\n  }).isRequired).isRequired,\n  position: PropTypes.oneOf([\"top\", \"bottom\"]),\n  renderOption: PropTypes.func,\n  rootId: PropTypes.any.isRequired,\n  rowHeight: PropTypes.number.isRequired,\n  scrollToIndex: PropTypes.number,\n  searchValue: PropTypes.string.isRequired,\n  selectedOptions: PropTypes.arrayOf(PropTypes.shape({\n    isGroupLabelOption: PropTypes.bool,\n    label: PropTypes.string.isRequired,\n    key: PropTypes.string,\n    options: PropTypes.arrayOf(PropTypes.shape({\n      isGroupLabelOption: PropTypes.bool,\n      label: PropTypes.string.isRequired,\n      key: PropTypes.string,\n      options: PropTypes.arrayOf(PropTypes.any.isRequired),\n      value: PropTypes.any,\n      className: PropTypes.string,\n      \"aria-label\": PropTypes.string,\n      \"data-test-subj\": PropTypes.string\n    }).isRequired),\n    value: PropTypes.any,\n    className: PropTypes.string,\n    \"aria-label\": PropTypes.string,\n    \"data-test-subj\": PropTypes.string\n  }).isRequired).isRequired,\n  updatePosition: PropTypes.func.isRequired,\n  width: PropTypes.number.isRequired,\n  singleSelection: PropTypes.oneOfType([PropTypes.bool.isRequired, PropTypes.shape({\n    asPlainText: PropTypes.bool\n  }).isRequired]),\n  delimiter: PropTypes.string,\n  zIndex: PropTypes.number\n};\n\ntry {\n  EuiComboBoxOptionsList.__docgenInfo = {\n    description: '',\n    displayName: 'EuiComboBoxOptionsList',\n    methods: [],\n    props: {\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: '',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'data-test-subj': {\n        defaultValue: {\n          value: ''\n        },\n        description: '',\n        name: 'data-test-subj',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      element: {\n        defaultValue: null,\n        description: '',\n        name: 'element',\n        parent: {\n          fileName: 'eui/src/components/panel/panel.tsx',\n          name: '_EuiPanelDivlike'\n        },\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"button\" | \"div\"',\n          value: [{\n            value: '\"button\"'\n          }, {\n            value: '\"div\"'\n          }]\n        }\n      },\n      hasShadow: {\n        defaultValue: null,\n        description: 'Adds a medium shadow to the panel;\\nOnly works when `color=\"plain\"`',\n        name: 'hasShadow',\n        parent: {\n          fileName: 'eui/src/components/panel/panel.tsx',\n          name: '_EuiPanelProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      hasBorder: {\n        defaultValue: null,\n        description: 'Adds a slight 1px border on all edges.\\n' + 'Only works when `color=\"plain | transparent\"`\\n' + \"Default is `undefined` and will default to that theme's panel style\",\n        name: 'hasBorder',\n        parent: {\n          fileName: 'eui/src/components/panel/panel.tsx',\n          name: '_EuiPanelProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      paddingSize: {\n        defaultValue: null,\n        description: 'Padding for all four sides',\n        name: 'paddingSize',\n        parent: {\n          fileName: 'eui/src/components/panel/panel.tsx',\n          name: '_EuiPanelProps'\n        },\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"s\" | \"m\" | \"l\" | \"none\"',\n          value: [{\n            value: '\"s\"'\n          }, {\n            value: '\"m\"'\n          }, {\n            value: '\"l\"'\n          }, {\n            value: '\"none\"'\n          }]\n        }\n      },\n      borderRadius: {\n        defaultValue: null,\n        description: 'Corner border radius',\n        name: 'borderRadius',\n        parent: {\n          fileName: 'eui/src/components/panel/panel.tsx',\n          name: '_EuiPanelProps'\n        },\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"m\" | \"none\"',\n          value: [{\n            value: '\"m\"'\n          }, {\n            value: '\"none\"'\n          }]\n        }\n      },\n      grow: {\n        defaultValue: null,\n        description: 'When true the panel will grow in height to match `EuiFlexItem`',\n        name: 'grow',\n        parent: {\n          fileName: 'eui/src/components/panel/panel.tsx',\n          name: '_EuiPanelProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      panelRef: {\n        defaultValue: null,\n        description: '',\n        name: 'panelRef',\n        parent: {\n          fileName: 'eui/src/components/panel/panel.tsx',\n          name: '_EuiPanelProps'\n        },\n        required: false,\n        type: {\n          name: 'Ref<HTMLDivElement>'\n        }\n      },\n      color: {\n        defaultValue: null,\n        description: 'Background color of the panel;\\n' + 'Usually a lightened form of the brand colors',\n        name: 'color',\n        parent: {\n          fileName: 'eui/src/components/panel/panel.tsx',\n          name: '_EuiPanelProps'\n        },\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"transparent\" | \"plain\" | \"subdued\" | \"accent\" | \"primary\" | \"success\" | \"warning\" | \"danger\"',\n          value: [{\n            value: '\"transparent\"'\n          }, {\n            value: '\"plain\"'\n          }, {\n            value: '\"subdued\"'\n          }, {\n            value: '\"accent\"'\n          }, {\n            value: '\"primary\"'\n          }, {\n            value: '\"success\"'\n          }, {\n            value: '\"warning\"'\n          }, {\n            value: '\"danger\"'\n          }]\n        }\n      },\n      activeOptionIndex: {\n        defaultValue: null,\n        description: '',\n        name: 'activeOptionIndex',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'number'\n        }\n      },\n      areAllOptionsSelected: {\n        defaultValue: null,\n        description: '',\n        name: 'areAllOptionsSelected',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      customOptionText: {\n        defaultValue: null,\n        description: 'Creates a custom text option. You can use `{searchValue}` inside your string to better customize your text.\\n' + \"It won't show if there's no onCreateOption.\",\n        name: 'customOptionText',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      fullWidth: {\n        defaultValue: null,\n        description: '',\n        name: 'fullWidth',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      getSelectedOptionForSearchValue: {\n        defaultValue: null,\n        description: '',\n        name: 'getSelectedOptionForSearchValue',\n        parent: undefined,\n        required: false,\n        type: {\n          name: '(searchValue: string, selectedOptions: any[]) => EuiComboBoxOptionOption<T>'\n        }\n      },\n      isLoading: {\n        defaultValue: null,\n        description: '',\n        name: 'isLoading',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      listRef: {\n        defaultValue: null,\n        description: '',\n        name: 'listRef',\n        parent: undefined,\n        required: true,\n        type: {\n          name: '(instance: HTMLDivElement) => void'\n        }\n      },\n      matchingOptions: {\n        defaultValue: null,\n        description: '',\n        name: 'matchingOptions',\n        parent: undefined,\n        required: true,\n        type: {\n          name: 'EuiComboBoxOptionOption<T>[]'\n        }\n      },\n      onCloseList: {\n        defaultValue: null,\n        description: '',\n        name: 'onCloseList',\n        parent: undefined,\n        required: true,\n        type: {\n          name: '(event: Event) => void'\n        }\n      },\n      onCreateOption: {\n        defaultValue: null,\n        description: '',\n        name: 'onCreateOption',\n        parent: undefined,\n        required: false,\n        type: {\n          name: '(searchValue: string, options: EuiComboBoxOptionOption<T>[]) => boolean | void'\n        }\n      },\n      onOptionClick: {\n        defaultValue: null,\n        description: '',\n        name: 'onOptionClick',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'OptionHandler<T>'\n        }\n      },\n      onOptionEnterKey: {\n        defaultValue: null,\n        description: '',\n        name: 'onOptionEnterKey',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'OptionHandler<T>'\n        }\n      },\n      optionRef: {\n        defaultValue: null,\n        description: '',\n        name: 'optionRef',\n        parent: undefined,\n        required: true,\n        type: {\n          name: '(index: number, node: EuiFilterSelectItem) => void'\n        }\n      },\n      options: {\n        defaultValue: null,\n        description: 'Array of EuiComboBoxOptionOption objects. See #EuiComboBoxOptionOption',\n        name: 'options',\n        parent: undefined,\n        required: true,\n        type: {\n          name: 'EuiComboBoxOptionOption<T>[]'\n        }\n      },\n      position: {\n        defaultValue: null,\n        description: '',\n        name: 'position',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'enum',\n          raw: 'EuiComboBoxOptionsListPosition',\n          value: [{\n            value: '\"top\"'\n          }, {\n            value: '\"bottom\"'\n          }]\n        }\n      },\n      renderOption: {\n        defaultValue: null,\n        description: '',\n        name: 'renderOption',\n        parent: undefined,\n        required: false,\n        type: {\n          name: '(option: EuiComboBoxOptionOption<T>, searchValue: string, OPTION_CONTENT_CLASSNAME: string) => ReactNode'\n        }\n      },\n      rootId: {\n        defaultValue: null,\n        description: '',\n        name: 'rootId',\n        parent: undefined,\n        required: true,\n        type: {\n          name: '(idSuffix?: string) => string'\n        }\n      },\n      rowHeight: {\n        defaultValue: {\n          value: '29'\n        },\n        description: '',\n        name: 'rowHeight',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'number'\n        }\n      },\n      scrollToIndex: {\n        defaultValue: null,\n        description: '',\n        name: 'scrollToIndex',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'number'\n        }\n      },\n      searchValue: {\n        defaultValue: null,\n        description: '',\n        name: 'searchValue',\n        parent: undefined,\n        required: true,\n        type: {\n          name: 'string'\n        }\n      },\n      selectedOptions: {\n        defaultValue: null,\n        description: '',\n        name: 'selectedOptions',\n        parent: undefined,\n        required: true,\n        type: {\n          name: 'EuiComboBoxOptionOption<T>[]'\n        }\n      },\n      updatePosition: {\n        defaultValue: null,\n        description: '',\n        name: 'updatePosition',\n        parent: undefined,\n        required: true,\n        type: {\n          name: 'UpdatePositionHandler'\n        }\n      },\n      width: {\n        defaultValue: null,\n        description: '',\n        name: 'width',\n        parent: undefined,\n        required: true,\n        type: {\n          name: 'number'\n        }\n      },\n      singleSelection: {\n        defaultValue: null,\n        description: '',\n        name: 'singleSelection',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean | EuiComboBoxSingleSelectionShape'\n        }\n      },\n      delimiter: {\n        defaultValue: null,\n        description: '',\n        name: 'delimiter',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      zIndex: {\n        defaultValue: null,\n        description: '',\n        name: 'zIndex',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'number'\n        }\n      }\n    },\n    extendedInterfaces: ['CommonProps', 'ButtonHTMLAttributes', '_EuiPanelDivlike', '_EuiPanelProps', 'HTMLAttributes', 'AriaAttributes', 'DOMAttributes']\n  };\n} catch (e) {}"]}]}