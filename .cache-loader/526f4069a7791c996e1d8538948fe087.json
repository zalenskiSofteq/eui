{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src-docs\\src\\views\\suggest\\global_filter_add.js","dependencies":[{"path":"D:\\work\\eui\\src-docs\\src\\views\\suggest\\global_filter_add.js","mtime":1649070093238},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7IHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7IH0KCmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuIik7IH0KCmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHsgaWYgKCFvKSByZXR1cm47IGlmICh0eXBlb2YgbyA9PT0gInN0cmluZyIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7IGlmIChuID09PSAiT2JqZWN0IiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lOyBpZiAobiA9PT0gIk1hcCIgfHwgbiA9PT0gIlNldCIpIHJldHVybiBBcnJheS5mcm9tKG8pOyBpZiAobiA9PT0gIkFyZ3VtZW50cyIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB9CgpmdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikgeyBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH0KCmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHsgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJ1bmRlZmluZWQiIHx8ICEoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChhcnIpKSkgcmV0dXJuOyB2YXIgX2FyciA9IFtdOyB2YXIgX24gPSB0cnVlOyB2YXIgX2QgPSBmYWxzZTsgdmFyIF9lID0gdW5kZWZpbmVkOyB0cnkgeyBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVsicmV0dXJuIl0gIT0gbnVsbCkgX2lbInJldHVybiJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfQoKZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOyB9CgppbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7CmltcG9ydCB7IEV1aUJ1dHRvbkVtcHR5LCBFdWlQb3BvdmVyLCBFdWlQb3BvdmVyVGl0bGUsIEV1aUZsZXhHcm91cCwgRXVpRmxleEl0ZW0gfSBmcm9tICcuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cyc7CmltcG9ydCBHbG9iYWxGaWx0ZXJGb3JtIGZyb20gJy4vZ2xvYmFsX2ZpbHRlcl9mb3JtJzsKZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uICgpIHsKICB2YXIgX3VzZVN0YXRlID0gdXNlU3RhdGUoZmFsc2UpLAogICAgICBfdXNlU3RhdGUyID0gX3NsaWNlZFRvQXJyYXkoX3VzZVN0YXRlLCAyKSwKICAgICAgaXNQb3BvdmVyT3BlbiA9IF91c2VTdGF0ZTJbMF0sCiAgICAgIHNldElzUG9wb3Zlck9wZW4gPSBfdXNlU3RhdGUyWzFdOwoKICB2YXIgdG9nZ2xlUG9wb3ZlciA9IGZ1bmN0aW9uIHRvZ2dsZVBvcG92ZXIoKSB7CiAgICBzZXRJc1BvcG92ZXJPcGVuKCFpc1BvcG92ZXJPcGVuKTsKICB9OwoKICB2YXIgY2xvc2VQb3BvdmVyID0gZnVuY3Rpb24gY2xvc2VQb3BvdmVyKCkgewogICAgc2V0SXNQb3BvdmVyT3BlbihmYWxzZSk7CiAgfTsKCiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEV1aVBvcG92ZXIsIHsKICAgIGlzT3BlbjogaXNQb3BvdmVyT3BlbiwKICAgIGNsb3NlUG9wb3ZlcjogY2xvc2VQb3BvdmVyLAogICAgYnV0dG9uOiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlCdXR0b25FbXB0eSwgewogICAgICBvbkNsaWNrOiB0b2dnbGVQb3BvdmVyLAogICAgICBzaXplOiAieHMiCiAgICB9LCAiKyBBZGQgZmlsdGVyIiksCiAgICBhbmNob3JQb3NpdGlvbjogImRvd25DZW50ZXIiCiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRXVpUG9wb3ZlclRpdGxlLCBudWxsLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlGbGV4R3JvdXAsIHsKICAgIGFsaWduSXRlbXM6ICJiYXNlbGluZSIKICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlGbGV4SXRlbSwgbnVsbCwgIkFkZCBhIGZpbHRlciIpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlGbGV4SXRlbSwgewogICAgZ3JvdzogZmFsc2UKICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlCdXR0b25FbXB0eSwgewogICAgZmx1c2g6ICJyaWdodCIsCiAgICBzaXplOiAieHMiCiAgfSwgIkVkaXQgYXMgUXVlcnkgRFNMIikpKSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEdsb2JhbEZpbHRlckZvcm0sIHsKICAgIHN0eWxlOiB7CiAgICAgIHdpZHRoOiA0MDAKICAgIH0sCiAgICBvbkFkZDogdG9nZ2xlUG9wb3ZlciwKICAgIG9uQ2FuY2VsOiB0b2dnbGVQb3BvdmVyCiAgfSkpOwp9KTs="},{"version":3,"sources":["D:/work/eui/src-docs/src/views/suggest/global_filter_add.js"],"names":["React","useState","EuiButtonEmpty","EuiPopover","EuiPopoverTitle","EuiFlexGroup","EuiFlexItem","GlobalFilterForm","isPopoverOpen","setIsPopoverOpen","togglePopover","closePopover","width"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SACEC,cADF,EAEEC,UAFF,EAGEC,eAHF,EAIEC,YAJF,EAKEC,WALF,QAMO,4BANP;AAQA,OAAOC,gBAAP,MAA6B,sBAA7B;AAEA,gBAAe,YAAM;AAAA,kBACuBN,QAAQ,CAAC,KAAD,CAD/B;AAAA;AAAA,MACZO,aADY;AAAA,MACGC,gBADH;;AAGnB,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BD,IAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACD,GAFD;;AAIA,MAAMG,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBF,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,GAFD;;AAIA,sBACE,oBAAC,UAAD;AACE,IAAA,MAAM,EAAED,aADV;AAEE,IAAA,YAAY,EAAEG,YAFhB;AAGE,IAAA,MAAM,eACJ,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAED,aAAzB;AAAwC,MAAA,IAAI,EAAC;AAA7C,sBAJJ;AAQE,IAAA,cAAc,EAAC;AARjB,kBASE,oBAAC,eAAD,qBACE,oBAAC,YAAD;AAAc,IAAA,UAAU,EAAC;AAAzB,kBACE,oBAAC,WAAD,uBADF,eAEE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAE;AAAnB,kBAEE,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAC,OAAtB;AAA8B,IAAA,IAAI,EAAC;AAAnC,yBAFF,CAFF,CADF,CATF,eAqBE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAK,EAAE;AAAT,KADT;AAEE,IAAA,KAAK,EAAEF,aAFT;AAGE,IAAA,QAAQ,EAAEA;AAHZ,IArBF,CADF;AA6BD,CAxCD","sourcesContent":["import React, { useState } from 'react';\n\nimport {\n  EuiButtonEmpty,\n  EuiPopover,\n  EuiPopoverTitle,\n  EuiFlexGroup,\n  EuiFlexItem,\n} from '../../../../src/components';\n\nimport GlobalFilterForm from './global_filter_form';\n\nexport default () => {\n  const [isPopoverOpen, setIsPopoverOpen] = useState(false);\n\n  const togglePopover = () => {\n    setIsPopoverOpen(!isPopoverOpen);\n  };\n\n  const closePopover = () => {\n    setIsPopoverOpen(false);\n  };\n\n  return (\n    <EuiPopover\n      isOpen={isPopoverOpen}\n      closePopover={closePopover}\n      button={\n        <EuiButtonEmpty onClick={togglePopover} size=\"xs\">\n          + Add filter\n        </EuiButtonEmpty>\n      }\n      anchorPosition=\"downCenter\">\n      <EuiPopoverTitle>\n        <EuiFlexGroup alignItems=\"baseline\">\n          <EuiFlexItem>Add a filter</EuiFlexItem>\n          <EuiFlexItem grow={false}>\n            {/* This button should open a modal */}\n            <EuiButtonEmpty flush=\"right\" size=\"xs\">\n              Edit as Query DSL\n            </EuiButtonEmpty>\n          </EuiFlexItem>\n        </EuiFlexGroup>\n      </EuiPopoverTitle>\n\n      <GlobalFilterForm\n        style={{ width: 400 }}\n        onAdd={togglePopover}\n        onCancel={togglePopover}\n      />\n    </EuiPopover>\n  );\n};\n"]}]}