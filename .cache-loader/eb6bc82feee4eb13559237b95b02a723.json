{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src-docs\\src\\views\\elastic_charts\\pie_example.js","dependencies":[{"path":"D:\\work\\eui\\src-docs\\src\\views\\elastic_charts\\pie_example.js","mtime":1649070093150},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src-docs/src/views/elastic_charts/pie_example.js"],"names":["React","Fragment","renderToHtml","GuideSectionTypes","ExternalBadge","pieSliceOrderImg","EuiSpacer","EuiCard","EuiIcon","EuiFlexGroup","EuiFlexItem","EuiLink","EuiIconTip","EuiToolTip","EuiCallOut","EuiCode","EuiImage","PieChart","pieSource","require","pieHtml","PieSlices","Treemaps","treemapsSource","treemapsHtml","PieAlts","introCards","title","iconType","iconColor","description","unsupportedTooltip","className","orderingTooltip","ElasticChartsPieExample","intro","map","card","minWidth","sections","source","type","JS","code","HTML","text","demo","snippet"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport { renderToHtml } from '../../services';\nimport { GuideSectionTypes } from '../../components';\n\nimport { ExternalBadge } from './shared';\nimport pieSliceOrderImg from '../../images/pie_slice_order.png';\n\nimport {\n  EuiSpacer,\n  EuiCard,\n  EuiIcon,\n  EuiFlexGroup,\n  EuiFlexItem,\n  EuiLink,\n  EuiIconTip,\n  EuiToolTip,\n  EuiCallOut,\n  EuiCode,\n  EuiImage,\n} from '../../../../src/components';\n\nimport PieChart from './pie';\nconst pieSource = require('!!raw-loader!./pie');\nconst pieHtml = renderToHtml(PieChart);\n\nimport PieSlices from './pie_slices';\n\nimport Treemaps from './treemap';\nconst treemapsSource = require('!!raw-loader!./treemap');\nconst treemapsHtml = renderToHtml(Treemaps);\n\nimport PieAlts from './pie_alts';\n\nconst introCards = [\n  {\n    title: 'Use',\n    iconType: 'checkInCircleFilled',\n    iconColor: 'success',\n    description: (\n      <>\n        When categorical data is being <strong>compared to a whole</strong>{' '}\n        (usually 100%).\n      </>\n    ),\n  },\n  {\n    title: \"Don't use\",\n    iconType: 'crossInACircleFilled',\n    iconColor: 'danger',\n    description: (\n      <>\n        With relational data or when needing to compare categories to{' '}\n        <strong>each other</strong>.\n      </>\n    ),\n  },\n  {\n    title: 'Tip',\n    iconType: 'help',\n    iconColor: 'primary',\n    description: (\n      <>\n        Each subdivision or category must be <strong>mutually exclusive</strong>{' '}\n        and sum up to a meaningful whole.\n      </>\n    ),\n  },\n  {\n    title: 'Be careful',\n    iconType: 'alert',\n    iconColor: 'warning',\n    description: (\n      <>\n        <strong>Don&apos;t leave out sub-sections</strong> as this would render\n        the whole as artificial.\n      </>\n    ),\n  },\n];\n\nconst unsupportedTooltip = (\n  <EuiIconTip\n    type=\"iInCircle\"\n    color=\"subdued\"\n    content=\"Elastic Charts doesn’t provide this functionality yet.\"\n    iconProps={{\n      className: 'eui-alignTop',\n    }}\n  />\n);\n\nconst orderingTooltip = (\n  <EuiIconTip\n    type=\"iInCircle\"\n    color=\"subdued\"\n    content={\n      <EuiImage\n        url={pieSliceOrderImg}\n        alt=\"Photo of a page in the book referencing the ordering of largest slice on top.\"\n        caption={\n          <small>\n            Wong, Donna M.{' '}\n            <em>\n              The Wall Street Journal Guide to Information Graphics: The Dos and\n              Don&apos;ts of Presenting Data, Facts, and Figures.\n            </em>{' '}\n            W. W. Norton & Company, 2013.\n          </small>\n        }\n      />\n    }\n    iconProps={{\n      className: 'eui-alignTop',\n    }}\n  />\n);\n\nexport const ElasticChartsPieExample = {\n  title: 'Part to whole comparisons',\n  intro: (\n    <Fragment>\n      <ExternalBadge />\n      <EuiSpacer size=\"l\" />\n      <EuiFlexGroup responsive={false} wrap>\n        {introCards.map((card) => (\n          <EuiFlexItem key={card.title} style={{ minWidth: 170 }}>\n            <EuiCard\n              layout=\"horizontal\"\n              title={\n                <EuiFlexGroup\n                  gutterSize=\"s\"\n                  responsive={false}\n                  alignItems=\"center\">\n                  <EuiFlexItem grow={false}>\n                    <EuiIcon type={card.iconType} color={card.iconColor} />\n                  </EuiFlexItem>\n                  <EuiFlexItem>{card.title}</EuiFlexItem>\n                </EuiFlexGroup>\n              }\n              titleElement=\"h2\"\n              description={card.description}\n            />\n          </EuiFlexItem>\n        ))}\n      </EuiFlexGroup>\n    </Fragment>\n  ),\n  sections: [\n    {\n      title: 'Pie and donut charts',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: pieSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: pieHtml,\n        },\n      ],\n      text: (\n        <>\n          <p>\n            A common argument is made that pie charts are not usually the best\n            representation for understanding data. However there are situations\n            where pie charts are useful. Like when:\n          </p>\n          <ul>\n            <li>There are a maximum of 6 slices (divisions)</li>\n            <li>The values are around 25%, 50% or 75%</li>\n            <li>One of the categories is much bigger than the others</li>\n          </ul>\n          <p>\n            The guidelines for{' '}\n            <EuiToolTip\n              title=\"Yes, donut charts are ok.\"\n              content={\n                <>\n                  It was originally thought that comparing the angles of the\n                  center vertices of the slices were how viewers read pie\n                  charts. However, certain research shows that it is the arc and\n                  area that are the crucial parts to understanding giving donut\n                  charts a firm foothold in the circular graph category.\n                  <br />\n                  <br />\n                  Click the link to read more on the study.\n                </>\n              }>\n              <EuiLink href=\"http://kosara.net/publications/Skau-EuroVis-2016.html\">\n                donut charts\n              </EuiLink>\n            </EuiToolTip>{' '}\n            are the same for pie charts. The empty center of donut charts can\n            provide a place to display additional/related information\n            <EuiIconTip\n              type=\"iInCircle\"\n              color=\"subdued\"\n              content=\"Elastic Charts doesn’t provide this functionality directly, but there is a workaround. See the 'Sunbursts and treemaps' example further down the page.\"\n              iconProps={{\n                className: 'eui-alignTop',\n              }}\n            />\n            .\n          </p>\n          <EuiCallOut\n            color=\"warning\"\n            title={\n              <>\n                Elastic Charts&apos;{' '}\n                <EuiLink href=\"https://github.com/elastic/elastic-charts/issues/518\">\n                  partition charts do not currently support theming\n                </EuiLink>{' '}\n                through the <EuiCode>{'<Settings />'}</EuiCode> component.\n              </>\n            }>\n            <p>\n              {' '}\n              EUI provides a separate key for use with\n              <EuiCode language=\"ts\">\n                {'Partition.config={{...EUI_CHARTS_THEME_LIGHT.partition}}'}\n              </EuiCode>\n              . The chart colors also need to be passed a different way via{' '}\n              <EuiCode language=\"ts\">\n                {'Partition.layers.shape.fillColor'}\n              </EuiCode>\n              . See the snippet for full details.\n            </p>\n          </EuiCallOut>\n        </>\n      ),\n      demo: <PieChart />,\n      snippet: `import { EUI_CHARTS_THEME_DARK, EUI_CHARTS_THEME_LIGHT } from '@elastic/eui/dist/eui_charts_theme';\n\nconst euiChartTheme = isDarkTheme ? EUI_CHARTS_THEME_DARK : EUI_CHARTS_THEME_LIGHT;\nconst euiPartitionConfig = euiChartTheme.partition;\n\n<Chart size={{height: 200}}>\n  <Partition\n    data={[\n      {\n        category: 'Name',\n        percent: 50,\n      },\n    ]}\n    valueAccessor={d => Number(d.percent)}\n    valueFormatter={() => ''} // Hide the slice value if data values are already in percentages\n    layers={[\n      {\n        groupByRollup: d => d.category,\n        shape: {\n          fillColor: d => euiChartTheme.theme.colors.vizColors[d.sortIndex],\n        },\n      },\n    ]}\n    config={{\n      ...euiPartitionConfig,\n      emptySizeRatio: 0.4, // To create a donut chart\n      clockwiseSectors: false, // For correct slice order\n    }}\n  />\n</Chart>`,\n    },\n    {\n      title: 'Slices and labelling',\n      text: (\n        <>\n          <p>\n            Try to keep the labels <strong>within the slices</strong> (or just\n            outside)\n            <EuiIconTip\n              type=\"iInCircle\"\n              color=\"subdued\"\n              content=\"Elastic charts will do this automatically.\"\n              iconProps={{\n                className: 'eui-alignTop',\n              }}\n            />{' '}\n            and consider appending their values. However, if there are many\n            small slices or long labels, use a legend, especially one that\n            displays the values in a table format with right aligned values.\n          </p>\n          <h3>Other slices</h3>\n          <p>\n            Again, pie charts should have no more than six slices. However, it\n            can be beneficial to <strong>group smaller/overflow slices</strong>{' '}\n            into a single “Other” category. Careful consideration should be\n            given when doing so as this could end up being the largest category\n            and therefore obscuring the meaning of the chart.\n          </p>\n          <h3>Slice order</h3>\n          <p>\n            The order of the slices should always{' '}\n            <strong>start from the 12 o’clock position</strong>, showing the\n            largest slice in the clockwise position then the rest ordering\n            counterclockwise in descending order.{orderingTooltip} However,\n            categories that have a natural order, should follow this natural\n            order, be it low to high or good to bad.{unsupportedTooltip}\n          </p>\n        </>\n      ),\n      demo: <PieSlices />,\n    },\n    {\n      title: 'Sunbursts and treemaps',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: treemapsSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: treemapsHtml,\n        },\n      ],\n      text: (\n        <>\n          <p>\n            Multi-level pie charts (also known as sunbursts) and treemaps are\n            great for visualizing hierarchical relationships and for quickly\n            referencing the overall data comparison. However, they’re not meant\n            to represent trends or explicit/detailed value comparison.\n          </p>\n          <p>\n            Below are some basic examples and how EUI supports them with\n            theming. However, this site will not document the best uses of these\n            chart types. For more guidance, go to the{' '}\n            <EuiLink href=\"https://elastic.github.io/elastic-charts\">\n              Elastic Charts documentation\n            </EuiLink>\n            .\n          </p>\n        </>\n      ),\n      demo: <Treemaps />,\n    },\n    {\n      title: 'Alternatives',\n      text: (\n        <>\n          <p>\n            Most pie/donut/sunburst chart data can be <strong>better</strong>{' '}\n            explained using bar charts with different configurations. You should\n            definitely <strong>not</strong> use pie charts when:\n          </p>\n          <ul>\n            <li>\n              You want users to <strong>compare</strong> the size of slices\n            </li>\n            <li>You have more than 6 slices</li>\n            <li>\n              You need multiple pie charts to compare multiple data sets, use\n              part-to-whole bar charts with <strong>percentages</strong>\n            </li>\n            <li>You have negative values</li>\n          </ul>\n          <p>\n            And under no circumstances should you enlarge or explode slices.\n            This leads to{' '}\n            <EuiLink href=\"https://digitalblog.ons.gov.uk/2017/02/28/the-humble-pie-chart-part2/\">\n              errors in understanding\n            </EuiLink>\n            .\n          </p>\n        </>\n      ),\n      demo: <PieAlts />,\n    },\n  ],\n};\n"]}]}