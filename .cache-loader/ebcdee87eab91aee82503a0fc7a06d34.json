{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\notification\\notification_event_messages.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\notification\\notification_event_messages.tsx","mtime":1649070093712},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/notification/notification_event_messages.tsx"],"names":["React","useState","EuiAccordion","htmlIdGenerator","useEuiI18n","EuiText","EuiNotificationEventMessages","messages","eventName","isOpen","setIsOpen","messagesLength","length","accordionButtonText","accordionAriaLabelButtonText","accordionHideText","buttonContentText","map","notification","index","slice"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAmCC,QAAnC,QAAmD,OAAnD;;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,UAAT,QAA2B,SAA3B;AACA,SAASC,OAAT,QAAwB,SAAxB;AAaA,OAAO,IAAMC,4BAAkF,GAAG,SAArFA,4BAAqF,OAG5F;AAAA,MAFJC,QAEI,QAFJA,QAEI;AAAA,MADJC,SACI,QADJA,SACI;;AAAA,kBACwBP,QAAQ,CAAC,KAAD,CADhC;AAAA;AAAA,MACGQ,MADH;AAAA,MACWC,SADX;;AAEJ,MAAMC,cAAc,GAAGJ,QAAQ,CAACK,MAAhC;AAEA,MAAMC,mBAAmB,GAAGT,UAAU,CACpC,kDADoC,EAEpC,yBAFoC,EAGpC;AAAEO,IAAAA,cAAc,EAAEA,cAAc,GAAG;AAAnC,GAHoC,CAAtC;AAMA,MAAMG,4BAA4B,GAAGV,UAAU,CAC7C,2DAD6C,EAE7C,6CAF6C,EAG7C;AACEO,IAAAA,cAAc,EAAEA,cAAc,GAAG,CADnC;AAEEH,IAAAA,SAAS,EAATA;AAFF,GAH6C,CAA/C;AASA,MAAMO,iBAAiB,GAAGX,UAAU,CAClC,gDADkC,EAElC,MAFkC,CAApC;AAKA,MAAMY,iBAAiB,GAAGP,MAAM,aACzBI,mBADyB,eACDE,iBADC,SAE5BF,mBAFJ;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGN,QAAQ,IAAII,cAAc,KAAK,CAA/B,gBACC,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,GAAd;AAAkB,IAAA,KAAK,EAAC;AAAxB,kBACE,+BAAIJ,QAAJ,CADF,CADD,gBAKC,uDACE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,GAAd;AAAkB,IAAA,KAAK,EAAC;AAAxB,kBACE,+BAAIA,QAAQ,CAAC,CAAD,CAAZ,CADF,CADF,eAKE,oBAAC,YAAD;AACE,IAAA,QAAQ,EAAEG,SADZ;AAEE,IAAA,WAAW,EAAE;AAAE,oBAAcI;AAAhB,KAFf;AAGE,IAAA,EAAE,EAAEX,eAAe,CAAC,uCAAD,CAAf,EAHN;AAIE,IAAA,SAAS,EAAC,yCAJZ;AAKE,IAAA,aAAa,EAAEa,iBALjB;AAME,IAAA,eAAe,EAAC,+CANlB;AAOE,IAAA,YAAY,EAAC;AAPf,kBAQE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGT,QAAQ,CACNU,GADF,CACM,UAACC,YAAD,EAAeC,KAAf;AAAA,wBACH,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAC,GAAd;AAAkB,MAAA,GAAG,EAAEA,KAAvB;AAA8B,MAAA,KAAK,EAAC;AAApC,oBACE,+BAAID,YAAJ,CADF,CADG;AAAA,GADN,EAMEE,KANF,CAMQ,CANR,CADH,CARF,CALF,CANJ,CADF;AAkCD,CAjEM;;;AApCP;AACA;;;;AADA;AACA","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport PropTypes from \"prop-types\";\nimport { EuiAccordion } from '../accordion';\nimport { htmlIdGenerator } from '../../services';\nimport { useEuiI18n } from '../i18n';\nimport { EuiText } from '../text';\nexport var EuiNotificationEventMessages = ({\n  messages,\n  eventName\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const messagesLength = messages.length;\n  const accordionButtonText = useEuiI18n('euiNotificationEventMessages.accordionButtonText', '+ {messagesLength} more', {\n    messagesLength: messagesLength - 1\n  });\n  const accordionAriaLabelButtonText = useEuiI18n('euiNotificationEventMessages.accordionAriaLabelButtonText', '+ {messagesLength} messages for {eventName}', {\n    messagesLength: messagesLength - 1,\n    eventName\n  });\n  const accordionHideText = useEuiI18n('euiNotificationEventMessages.accordionHideText', 'hide');\n  const buttonContentText = isOpen ? `${accordionButtonText} (${accordionHideText})` : accordionButtonText;\n  return <div className=\"euiNotificationEventMessages\">\n      {messages && messagesLength === 1 ? <EuiText size=\"s\" color=\"subdued\">\n          <p>{messages}</p>\n        </EuiText> : <>\n          <EuiText size=\"s\" color=\"subdued\">\n            <p>{messages[0]}</p>\n          </EuiText>\n\n          <EuiAccordion onToggle={setIsOpen} buttonProps={{\n        'aria-label': accordionAriaLabelButtonText\n      }} id={htmlIdGenerator('euiNotificationEventMessagesAccordion')()} className=\"euiNotificationEventMessages__accordion\" buttonContent={buttonContentText} buttonClassName=\"euiNotificationEventMessages__accordionButton\" arrowDisplay=\"none\">\n            <div className=\"euiNotificationEventMessages__accordionContent\">\n              {messages.map((notification, index) => <EuiText size=\"s\" key={index} color=\"subdued\">\n                    <p>{notification}</p>\n                  </EuiText>).slice(1)}\n            </div>\n          </EuiAccordion>\n        </>}\n    </div>;\n};\nEuiNotificationEventMessages.propTypes = {\n  /*\n     * An array of strings that get individually wrapped in `<p>` tags\n     */\n  messages: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n\n  /**\n     * A unique, human-friendly name for the event to be used in aria attributes (e.g. \"alert-critical-01\", \"cloud-no-severity-12\", etc..).\n     */\n  eventName: PropTypes.string.isRequired\n};\n\ntry {\n  EuiNotificationEventMessages.__docgenInfo = {\n    description: '',\n    displayName: 'EuiNotificationEventMessages',\n    methods: [],\n    props: {\n      messages: {\n        defaultValue: null,\n        description: '',\n        name: 'messages',\n        parent: undefined,\n        required: true,\n        type: {\n          name: 'string[]'\n        }\n      },\n      eventName: {\n        defaultValue: null,\n        description: 'A unique, human-friendly name for the event to be used in aria attributes (e.g. \"alert-critical-01\", \"cloud-no-severity-12\", etc..).',\n        name: 'eventName',\n        parent: undefined,\n        required: true,\n        type: {\n          name: 'string'\n        }\n      }\n    },\n    extendedInterfaces: []\n  };\n} catch (e) {}"]}]}