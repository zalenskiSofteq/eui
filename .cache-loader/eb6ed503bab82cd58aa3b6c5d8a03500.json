{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src-docs\\src\\views\\selectable\\props.tsx","dependencies":[{"path":"D:\\work\\eui\\src-docs\\src\\views\\selectable\\props.tsx","mtime":1649070093238},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src-docs/src/views/selectable/props.tsx"],"names":["React","EuiSelectableOptionProps","EuiSelectableOptionsList","Options","MetaData"],"mappings":"AAAA,OAAOA,KAAP,MAAyC,OAAzC;;AAWA,OAAO,IAAMC,wBAAgE,GAAG,SAAnEA,wBAAmE;AAAA,sBAC9E,gCAD8E;AAAA,CAAzE;;;AAXP;AACA;AACA;;;;;;;AAFA;AACA;AACA;;;;AAFA;AACA;AACA;;;;AAFA;AACA;AACA;;;;AAFA;AACA;AACA;AACA;;;;;AAHA;AACA;;;;AADA;AACA;;;;AAcA,OAAO,IAAMC,wBAA0E,GAAG,SAA7EA,wBAA6E;AAAA,sBACxF,gCADwF;AAAA,CAAnF;;;;;;;AAfP;AACA;AACA;AACA;;;;AAHA;AACA;;;;AADA;AACA;;;;;AADA;AACA;;;;AADA;AACA;AACA;;;;AAFA;AACA;AACA;AACA;;;AAHA;AACA;;;;AADA;AACA;;;;AADA;AACA;AACA;;;;AAFA;AACA;;;;AADA;AACA;;;;;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;;;;;;;AAkBA,OAAO,IAAMC,OAA+D,GAAG,SAAlEA,OAAkE;AAAA,sBAC7E,gCAD6E;AAAA,CAAxE;;;AAnBP;AACA;AACA;;;;;;;AAFA;AACA;;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;;;;;AADA;AACA;AACA;;;;;;;AAFA;AACA;AACA;;;;AAFA;AACA;AACA;;;;AAFA;AACA;;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;AACA;;;;AAFA;AACA;AACA;AACA;;;;;AAHA;AACA;;;;;AADA;AACA;;;AADA;AACA;;;;AADA;AACA;AACA;AACA;AACA;;;;AAJA;AACA;;;;;;;;AADA;AACA;AACA;;;;;;;AAFA;AACA;AACA;;;;AAFA;AACA;AACA;;;;AAFA;AACA;AACA;;;;AAFA;AACA;AACA;AACA;;;;;AAHA;AACA;;;;AADA;AACA;;;;AAsBA,OAAO,IAAMC,QAAkE,GAAG,SAArEA,QAAqE;AAAA,sBAChF,gCADgF;AAAA,CAA3E;;;AAvBP;AACA;;;;AADA;AACA;AACA;AACA;AACA;;;;AAJA;AACA","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\nexport var EuiSelectableOptionProps = function EuiSelectableOptionProps() {\n  return /*#__PURE__*/React.createElement(\"div\", null);\n};\nEuiSelectableOptionProps.propTypes = {\n  /**\n     * Optional `boolean`.\n     * Set to `true` to indicate object is just a grouping label, not a selectable item\n     */\n  isGroupLabel: PropTypes.oneOfType([PropTypes.oneOf([true]).isRequired, PropTypes.oneOf([false])]),\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n\n  /**\n     * Visible label of option.\n     * Must be unique across items if `key` is not supplied\n     */\n  label: PropTypes.string,\n\n  /**\n     * Optionally change the searchable term by passing a different string other than the `label`.\n     * Best used when creating a custom `optionRender` to separate the label from metadata but allowing to search on both\n     */\n  searchableLabel: PropTypes.string,\n\n  /**\n     * Must be unique across items.\n     * Will be used to match options instead of `label`\n     */\n  key: PropTypes.string,\n\n  /**\n     * Leave `undefined` to indicate not selected,\n     * 'on' to indicate inclusion and\n     * 'off' to indicate exclusion\n     */\n  checked: PropTypes.oneOf([\"on\", \"off\", undefined]),\n  disabled: PropTypes.bool,\n\n  /**\n     * Node to add between the selection icon and the label\n     */\n  prepend: PropTypes.node,\n\n  /**\n     * Node to add to the far right of the item\n     */\n  append: PropTypes.node,\n  ref: PropTypes.func\n};\nexport var EuiSelectableOptionsList = function EuiSelectableOptionsList() {\n  return /*#__PURE__*/React.createElement(\"div\", null);\n};\nEuiSelectableOptionsList.propTypes = {\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n\n  /**\n       * The index of the option to be highlighted as pseudo-focused;\n       * Good for use when only one selection is allowed and needing to open\n       * directly to that option\n       */\n  activeOptionIndex: PropTypes.number,\n\n  /**\n       *  The height of each option in pixels. Defaults to `32`\n       */\n  rowHeight: PropTypes.number.isRequired,\n\n  /**\n       * Show the check/cross selection indicator icons\n       */\n  showIcons: PropTypes.bool,\n  singleSelection: PropTypes.oneOfType([PropTypes.oneOf([\"always\"]), PropTypes.bool.isRequired]),\n\n  /**\n       * Any props to send specifically to the react-window `FixedSizeList`\n       */\n  windowProps: PropTypes.any,\n\n  /**\n       * Adds a border around the list to indicate the bounds;\n       * Useful when the list scrolls, otherwise use your own container\n       */\n  bordered: PropTypes.bool,\n\n  /**\n       * When enabled by setting to either `true` or passing custom text,\n       * shows a hollow badge as an append (far right) when the item is focused.\n       * The default content when `true` is `↩ to select/deselect/include/exclude`\n       */\n  onFocusBadge: PropTypes.oneOfType([PropTypes.bool.isRequired, PropTypes.shape({\n    /**\n       * Accepts any string from our icon library\n       */\n    iconType: PropTypes.oneOfType([PropTypes.oneOf([\"accessibility\", \"addDataApp\", \"advancedSettingsApp\", \"aggregate\", \"alert\", \"analyzeEvent\", \"annotation\", \"apmApp\", \"apmTrace\", \"apps\", \"appSearchApp\", \"arrowDown\", \"arrowLeft\", \"arrowRight\", \"arrowUp\", \"asterisk\", \"auditbeatApp\", \"beaker\", \"bell\", \"bellSlash\", \"bolt\", \"boxesHorizontal\", \"boxesVertical\", \"branch\", \"broom\", \"brush\", \"bug\", \"bullseye\", \"calendar\", \"canvasApp\", \"codeApp\", \"check\", \"checkInCircleFilled\", \"cheer\", \"classificationJob\", \"clock\", \"cloudDrizzle\", \"cloudStormy\", \"cloudSunny\", \"color\", \"compute\", \"console\", \"consoleApp\", \"continuityAbove\", \"continuityAboveBelow\", \"continuityBelow\", \"continuityWithin\", \"controlsHorizontal\", \"controlsVertical\", \"copy\", \"copyClipboard\", \"createAdvancedJob\", \"createMultiMetricJob\", \"createPopulationJob\", \"createSingleMetricJob\", \"cross\", \"crossClusterReplicationApp\", \"crosshairs\", \"crossInACircleFilled\", \"currency\", \"cut\", \"dashboardApp\", \"database\", \"dataVisualizer\", \"devToolsApp\", \"discoverApp\", \"document\", \"documentation\", \"documentEdit\", \"documents\", \"dot\", \"download\", \"editorAlignCenter\", \"editorAlignLeft\", \"editorAlignRight\", \"editorBold\", \"editorCodeBlock\", \"editorComment\", \"editorDistributeHorizontal\", \"editorDistributeVertical\", \"editorHeading\", \"editorItalic\", \"editorItemAlignLeft\", \"editorItemAlignBottom\", \"editorItemAlignCenter\", \"editorItemAlignMiddle\", \"editorItemAlignRight\", \"editorItemAlignTop\", \"editorLink\", \"editorOrderedList\", \"editorPositionBottomLeft\", \"editorPositionBottomRight\", \"editorPositionTopLeft\", \"editorPositionTopRight\", \"editorRedo\", \"editorStrike\", \"editorTable\", \"editorUnderline\", \"editorUndo\", \"editorUnorderedList\", \"email\", \"empty\", \"emsApp\", \"eql\", \"eraser\", \"exit\", \"expand\", \"expandMini\", \"exportAction\", \"eye\", \"eyeClosed\", \"faceHappy\", \"faceNeutral\", \"faceSad\", \"filebeatApp\", \"filter\", \"flag\", \"fold\", \"folderCheck\", \"folderClosed\", \"folderExclamation\", \"folderOpen\", \"frameNext\", \"framePrevious\", \"fullScreen\", \"fullScreenExit\", \"function\", \"gear\", \"gisApp\", \"glasses\", \"globe\", \"grab\", \"grabHorizontal\", \"graphApp\", \"grid\", \"grokApp\", \"heart\", \"heartbeatApp\", \"heatmap\", \"help\", \"home\", \"iInCircle\", \"image\", \"importAction\", \"indexClose\", \"indexEdit\", \"indexFlush\", \"indexManagementApp\", \"indexMapping\", \"indexOpen\", \"indexPatternApp\", \"indexRollupApp\", \"indexRuntime\", \"indexSettings\", \"inputOutput\", \"inspect\", \"invert\", \"ip\", \"keyboardShortcut\", \"kqlField\", \"kqlFunction\", \"kqlOperand\", \"kqlSelector\", \"kqlValue\", \"layers\", \"lensApp\", \"link\", \"list\", \"listAdd\", \"lock\", \"lockOpen\", \"logsApp\", \"logoAerospike\", \"logoApache\", \"logoAppSearch\", \"logoAWS\", \"logoAWSMono\", \"logoAzure\", \"logoAzureMono\", \"logoBeats\", \"logoBusinessAnalytics\", \"logoCeph\", \"logoCloud\", \"logoCloudEnterprise\", \"logoCode\", \"logoCodesandbox\", \"logoCouchbase\", \"logoDocker\", \"logoDropwizard\", \"logoElastic\", \"logoElasticsearch\", \"logoElasticStack\", \"logoEnterpriseSearch\", \"logoEtcd\", \"logoGCP\", \"logoGCPMono\", \"logoGithub\", \"logoGmail\", \"logoGolang\", \"logoGoogleG\", \"logoHAproxy\", \"logoIBM\", \"logoIBMMono\", \"logoKafka\", \"logoKibana\", \"logoKubernetes\", \"logoLogging\", \"logoLogstash\", \"logoMaps\", \"logoMemcached\", \"logoMetrics\", \"logoMongodb\", \"logoMySQL\", \"logoNginx\", \"logoObservability\", \"logoOsquery\", \"logoPhp\", \"logoPostgres\", \"logoPrometheus\", \"logoRabbitmq\", \"logoRedis\", \"logoSecurity\", \"logoSiteSearch\", \"logoSketch\", \"logoSlack\", \"logoUptime\", \"logoWebhook\", \"logoWindows\", \"logoWorkplaceSearch\", \"logstashFilter\", \"logstashIf\", \"logstashInput\", \"logstashOutput\", \"logstashQueue\", \"machineLearningApp\", \"magnet\", \"magnifyWithMinus\", \"magnifyWithPlus\", \"managementApp\", \"mapMarker\", \"memory\", \"menu\", \"menuDown\", \"menuLeft\", \"menuRight\", \"menuUp\", \"merge\", \"metricbeatApp\", \"metricsApp\", \"minimize\", \"minus\", \"minusInCircle\", \"minusInCircleFilled\", \"mobile\", \"monitoringApp\", \"moon\", \"nested\", \"node\", \"notebookApp\", \"number\", \"offline\", \"online\", \"outlierDetectionJob\", \"package\", \"packetbeatApp\", \"pageSelect\", \"pagesSelect\", \"partial\", \"paperClip\", \"pause\", \"pencil\", \"percent\", \"pin\", \"pinFilled\", \"pipelineApp\", \"play\", \"playFilled\", \"plus\", \"plusInCircle\", \"plusInCircleFilled\", \"popout\", \"push\", \"questionInCircle\", \"quote\", \"recentlyViewedApp\", \"refresh\", \"regressionJob\", \"reporter\", \"reportingApp\", \"returnKey\", \"save\", \"savedObjectsApp\", \"scale\", \"search\", \"searchProfilerApp\", \"securityAnalyticsApp\", \"securityApp\", \"securitySignal\", \"securitySignalDetected\", \"securitySignalResolved\", \"shard\", \"share\", \"snowflake\", \"sortable\", \"sortDown\", \"sortLeft\", \"sortRight\", \"sortUp\", \"spacesApp\", \"sqlApp\", \"starEmpty\", \"starEmptySpace\", \"starFilled\", \"starFilledSpace\", \"starMinusEmpty\", \"starMinusFilled\", \"starPlusEmpty\", \"starPlusFilled\", \"stats\", \"stop\", \"stopFilled\", \"stopSlash\", \"storage\", \"string\", \"submodule\", \"swatchInput\", \"symlink\", \"tableOfContents\", \"tableDensityExpanded\", \"tableDensityCompact\", \"tableDensityNormal\", \"tag\", \"tear\", \"temperature\", \"timeline\", \"timelionApp\", \"timeslider\", \"training\", \"trash\", \"upgradeAssistantApp\", \"uptimeApp\", \"unfold\", \"unlink\", \"user\", \"users\", \"usersRolesApp\", \"vector\", \"videoPlayer\", \"visArea\", \"visAreaStacked\", \"visBarHorizontal\", \"visBarHorizontalStacked\", \"visBarVertical\", \"visBarVerticalStacked\", \"visGauge\", \"visGoal\", \"visLine\", \"visMapCoordinate\", \"visMapRegion\", \"visMetric\", \"visPie\", \"visTable\", \"visTagCloud\", \"visText\", \"visTimelion\", \"visualizeApp\", \"visVega\", \"visVisualBuilder\", \"watchesApp\", \"wordWrap\", \"wordWrapDisabled\", \"workplaceSearchApp\", \"wrench\", \"tokenClass\", \"tokenProperty\", \"tokenEnum\", \"tokenVariable\", \"tokenMethod\", \"tokenAnnotation\", \"tokenException\", \"tokenInterface\", \"tokenParameter\", \"tokenField\", \"tokenElement\", \"tokenFunction\", \"tokenBoolean\", \"tokenString\", \"tokenArray\", \"tokenNumber\", \"tokenConstant\", \"tokenObject\", \"tokenEvent\", \"tokenKey\", \"tokenNull\", \"tokenStruct\", \"tokenPackage\", \"tokenOperator\", \"tokenEnumMember\", \"tokenRepo\", \"tokenSymbol\", \"tokenFile\", \"tokenModule\", \"tokenNamespace\", \"tokenDate\", \"tokenIP\", \"tokenNested\", \"tokenAlias\", \"tokenShape\", \"tokenGeo\", \"tokenRange\", \"tokenBinary\", \"tokenJoin\", \"tokenPercolator\", \"tokenFlattened\", \"tokenRankFeature\", \"tokenRankFeatures\", \"tokenKeyword\", \"tokenCompletionSuggester\", \"tokenDenseVector\", \"tokenText\", \"tokenTokenCount\", \"tokenSearchType\", \"tokenHistogram\"]).isRequired, PropTypes.string.isRequired, PropTypes.elementType.isRequired]),\n\n    /**\n       * The side of the badge the icon should sit\n       */\n    iconSide: PropTypes.oneOf([\"left\", \"right\"]),\n\n    /**\n       * Accepts either our palette colors (primary, success ..etc) or a hex value `#FFFFFF`, `#000`.\n       * **`secondary` color is DEPRECATED, use `success` instead**\n       */\n    color: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.oneOf([\"default\", \"primary\", \"secondary\", \"success\", \"accent\", \"warning\", \"danger\", \"text\", \"subdued\", \"ghost\", \"inherit\"]).isRequired]),\n\n    /**\n       * Will override any color passed through the `color` prop.\n       */\n    isDisabled: PropTypes.bool,\n\n    /**\n       * Props passed to the close button.\n       */\n    closeButtonProps: PropTypes.any,\n    className: PropTypes.string,\n    \"aria-label\": PropTypes.string,\n    \"data-test-subj\": PropTypes.string,\n\n    /**\n       * Will apply an onclick to icon within the badge\n       */\n    iconOnClick: PropTypes.func,\n\n    /**\n       * Aria label applied to the iconOnClick button\n       */\n    iconOnClickAriaLabel: PropTypes.any,\n\n    /**\n       * Will apply an onclick to the badge itself\n       */\n    onClick: PropTypes.func,\n\n    /**\n       * Aria label applied to the onClick button\n       */\n    onClickAriaLabel: PropTypes.any,\n    href: PropTypes.string,\n    target: PropTypes.string,\n    rel: PropTypes.string\n  }).isRequired])\n};\nexport var Options = function Options() {\n  return /*#__PURE__*/React.createElement(\"div\", null);\n};\nOptions.propTypes = {\n  /**\n     * Displayed on the left (`prepend`).\n     * Object of `EuiIconProps` for display of the solution/application's logo\n     */\n  icon: PropTypes.shape({\n    className: PropTypes.string,\n    \"aria-label\": PropTypes.string,\n    \"data-test-subj\": PropTypes.string,\n\n    /**\n         * Descriptive title for naming the icon based on its use\n         */\n    title: PropTypes.string,\n\n    /**\n         * A unique identifier for the title element\n         */\n    titleId: PropTypes.string,\n\n    /**\n         * Its value should be one or more element IDs\n         */\n    \"aria-labelledby\": PropTypes.string,\n\n    /**\n         * Callback when the icon has been loaded & rendered\n         */\n    onIconLoad: PropTypes.func\n  }),\n\n  /**\n     * Displayed on the right (`append`).\n     * Object of `EuiAvatarProps` for display of the space (default) or user\n     */\n  avatar: PropTypes.shape({\n    className: PropTypes.string,\n    \"aria-label\": PropTypes.string,\n    \"data-test-subj\": PropTypes.string,\n\n    /**\n           * Custom initials (max 2 characters).\n           * By default will take the first character (of each word).\n           */\n    initials: PropTypes.string,\n\n    /**\n           * Specify how many characters to show (1 or 2).\n           * By default, will show based on number of words (max first 2).\n           */\n    initialsLength: PropTypes.oneOf([1, 2]),\n\n    /**\n           * Path to an image to display instead of initials\n           */\n    imageUrl: PropTypes.string,\n\n    /**\n         * Any EUI glyph, logo or custom icon to display instead of initials\n         */\n    iconType: PropTypes.oneOfType([PropTypes.oneOf([\"accessibility\", \"addDataApp\", \"advancedSettingsApp\", \"aggregate\", \"alert\", \"analyzeEvent\", \"annotation\", \"apmApp\", \"apmTrace\", \"apps\", \"appSearchApp\", \"arrowDown\", \"arrowLeft\", \"arrowRight\", \"arrowUp\", \"asterisk\", \"auditbeatApp\", \"beaker\", \"bell\", \"bellSlash\", \"bolt\", \"boxesHorizontal\", \"boxesVertical\", \"branch\", \"broom\", \"brush\", \"bug\", \"bullseye\", \"calendar\", \"canvasApp\", \"codeApp\", \"check\", \"checkInCircleFilled\", \"cheer\", \"classificationJob\", \"clock\", \"cloudDrizzle\", \"cloudStormy\", \"cloudSunny\", \"color\", \"compute\", \"console\", \"consoleApp\", \"continuityAbove\", \"continuityAboveBelow\", \"continuityBelow\", \"continuityWithin\", \"controlsHorizontal\", \"controlsVertical\", \"copy\", \"copyClipboard\", \"createAdvancedJob\", \"createMultiMetricJob\", \"createPopulationJob\", \"createSingleMetricJob\", \"cross\", \"crossClusterReplicationApp\", \"crosshairs\", \"crossInACircleFilled\", \"currency\", \"cut\", \"dashboardApp\", \"database\", \"dataVisualizer\", \"devToolsApp\", \"discoverApp\", \"document\", \"documentation\", \"documentEdit\", \"documents\", \"dot\", \"download\", \"editorAlignCenter\", \"editorAlignLeft\", \"editorAlignRight\", \"editorBold\", \"editorCodeBlock\", \"editorComment\", \"editorDistributeHorizontal\", \"editorDistributeVertical\", \"editorHeading\", \"editorItalic\", \"editorItemAlignLeft\", \"editorItemAlignBottom\", \"editorItemAlignCenter\", \"editorItemAlignMiddle\", \"editorItemAlignRight\", \"editorItemAlignTop\", \"editorLink\", \"editorOrderedList\", \"editorPositionBottomLeft\", \"editorPositionBottomRight\", \"editorPositionTopLeft\", \"editorPositionTopRight\", \"editorRedo\", \"editorStrike\", \"editorTable\", \"editorUnderline\", \"editorUndo\", \"editorUnorderedList\", \"email\", \"empty\", \"emsApp\", \"eql\", \"eraser\", \"exit\", \"expand\", \"expandMini\", \"exportAction\", \"eye\", \"eyeClosed\", \"faceHappy\", \"faceNeutral\", \"faceSad\", \"filebeatApp\", \"filter\", \"flag\", \"fold\", \"folderCheck\", \"folderClosed\", \"folderExclamation\", \"folderOpen\", \"frameNext\", \"framePrevious\", \"fullScreen\", \"fullScreenExit\", \"function\", \"gear\", \"gisApp\", \"glasses\", \"globe\", \"grab\", \"grabHorizontal\", \"graphApp\", \"grid\", \"grokApp\", \"heart\", \"heartbeatApp\", \"heatmap\", \"help\", \"home\", \"iInCircle\", \"image\", \"importAction\", \"indexClose\", \"indexEdit\", \"indexFlush\", \"indexManagementApp\", \"indexMapping\", \"indexOpen\", \"indexPatternApp\", \"indexRollupApp\", \"indexRuntime\", \"indexSettings\", \"inputOutput\", \"inspect\", \"invert\", \"ip\", \"keyboardShortcut\", \"kqlField\", \"kqlFunction\", \"kqlOperand\", \"kqlSelector\", \"kqlValue\", \"layers\", \"lensApp\", \"link\", \"list\", \"listAdd\", \"lock\", \"lockOpen\", \"logsApp\", \"logoAerospike\", \"logoApache\", \"logoAppSearch\", \"logoAWS\", \"logoAWSMono\", \"logoAzure\", \"logoAzureMono\", \"logoBeats\", \"logoBusinessAnalytics\", \"logoCeph\", \"logoCloud\", \"logoCloudEnterprise\", \"logoCode\", \"logoCodesandbox\", \"logoCouchbase\", \"logoDocker\", \"logoDropwizard\", \"logoElastic\", \"logoElasticsearch\", \"logoElasticStack\", \"logoEnterpriseSearch\", \"logoEtcd\", \"logoGCP\", \"logoGCPMono\", \"logoGithub\", \"logoGmail\", \"logoGolang\", \"logoGoogleG\", \"logoHAproxy\", \"logoIBM\", \"logoIBMMono\", \"logoKafka\", \"logoKibana\", \"logoKubernetes\", \"logoLogging\", \"logoLogstash\", \"logoMaps\", \"logoMemcached\", \"logoMetrics\", \"logoMongodb\", \"logoMySQL\", \"logoNginx\", \"logoObservability\", \"logoOsquery\", \"logoPhp\", \"logoPostgres\", \"logoPrometheus\", \"logoRabbitmq\", \"logoRedis\", \"logoSecurity\", \"logoSiteSearch\", \"logoSketch\", \"logoSlack\", \"logoUptime\", \"logoWebhook\", \"logoWindows\", \"logoWorkplaceSearch\", \"logstashFilter\", \"logstashIf\", \"logstashInput\", \"logstashOutput\", \"logstashQueue\", \"machineLearningApp\", \"magnet\", \"magnifyWithMinus\", \"magnifyWithPlus\", \"managementApp\", \"mapMarker\", \"memory\", \"menu\", \"menuDown\", \"menuLeft\", \"menuRight\", \"menuUp\", \"merge\", \"metricbeatApp\", \"metricsApp\", \"minimize\", \"minus\", \"minusInCircle\", \"minusInCircleFilled\", \"mobile\", \"monitoringApp\", \"moon\", \"nested\", \"node\", \"notebookApp\", \"number\", \"offline\", \"online\", \"outlierDetectionJob\", \"package\", \"packetbeatApp\", \"pageSelect\", \"pagesSelect\", \"partial\", \"paperClip\", \"pause\", \"pencil\", \"percent\", \"pin\", \"pinFilled\", \"pipelineApp\", \"play\", \"playFilled\", \"plus\", \"plusInCircle\", \"plusInCircleFilled\", \"popout\", \"push\", \"questionInCircle\", \"quote\", \"recentlyViewedApp\", \"refresh\", \"regressionJob\", \"reporter\", \"reportingApp\", \"returnKey\", \"save\", \"savedObjectsApp\", \"scale\", \"search\", \"searchProfilerApp\", \"securityAnalyticsApp\", \"securityApp\", \"securitySignal\", \"securitySignalDetected\", \"securitySignalResolved\", \"shard\", \"share\", \"snowflake\", \"sortable\", \"sortDown\", \"sortLeft\", \"sortRight\", \"sortUp\", \"spacesApp\", \"sqlApp\", \"starEmpty\", \"starEmptySpace\", \"starFilled\", \"starFilledSpace\", \"starMinusEmpty\", \"starMinusFilled\", \"starPlusEmpty\", \"starPlusFilled\", \"stats\", \"stop\", \"stopFilled\", \"stopSlash\", \"storage\", \"string\", \"submodule\", \"swatchInput\", \"symlink\", \"tableOfContents\", \"tableDensityExpanded\", \"tableDensityCompact\", \"tableDensityNormal\", \"tag\", \"tear\", \"temperature\", \"timeline\", \"timelionApp\", \"timeslider\", \"training\", \"trash\", \"upgradeAssistantApp\", \"uptimeApp\", \"unfold\", \"unlink\", \"user\", \"users\", \"usersRolesApp\", \"vector\", \"videoPlayer\", \"visArea\", \"visAreaStacked\", \"visBarHorizontal\", \"visBarHorizontalStacked\", \"visBarVertical\", \"visBarVerticalStacked\", \"visGauge\", \"visGoal\", \"visLine\", \"visMapCoordinate\", \"visMapRegion\", \"visMetric\", \"visPie\", \"visTable\", \"visTagCloud\", \"visText\", \"visTimelion\", \"visualizeApp\", \"visVega\", \"visVisualBuilder\", \"watchesApp\", \"wordWrap\", \"wordWrapDisabled\", \"workplaceSearchApp\", \"wrench\", \"tokenClass\", \"tokenProperty\", \"tokenEnum\", \"tokenVariable\", \"tokenMethod\", \"tokenAnnotation\", \"tokenException\", \"tokenInterface\", \"tokenParameter\", \"tokenField\", \"tokenElement\", \"tokenFunction\", \"tokenBoolean\", \"tokenString\", \"tokenArray\", \"tokenNumber\", \"tokenConstant\", \"tokenObject\", \"tokenEvent\", \"tokenKey\", \"tokenNull\", \"tokenStruct\", \"tokenPackage\", \"tokenOperator\", \"tokenEnumMember\", \"tokenRepo\", \"tokenSymbol\", \"tokenFile\", \"tokenModule\", \"tokenNamespace\", \"tokenDate\", \"tokenIP\", \"tokenNested\", \"tokenAlias\", \"tokenShape\", \"tokenGeo\", \"tokenRange\", \"tokenBinary\", \"tokenJoin\", \"tokenPercolator\", \"tokenFlattened\", \"tokenRankFeature\", \"tokenRankFeatures\", \"tokenKeyword\", \"tokenCompletionSuggester\", \"tokenDenseVector\", \"tokenText\", \"tokenTokenCount\", \"tokenSearchType\", \"tokenHistogram\"]).isRequired, PropTypes.string.isRequired, PropTypes.elementType.isRequired]),\n\n    /**\n         * Manually change icon size\n         */\n    iconSize: PropTypes.oneOf([\"original\", \"s\", \"m\", \"l\", \"xl\", \"xxl\"]),\n\n    /**\n         * Manually change icon color\n         */\n    iconColor: PropTypes.oneOfType([PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.oneOf([\"default\", \"primary\", \"secondary\", \"success\", \"accent\", \"warning\", \"danger\", \"text\", \"subdued\", \"ghost\", \"inherit\"]).isRequired]).isRequired, PropTypes.oneOf([null])]),\n\n    /**\n         * Full name of avatar for title attribute and calculating initial if not provided\n         */\n    name: PropTypes.string.isRequired,\n\n    /**\n         * Accepts hex values like `#FFFFFF`, `#000` otherwise a viz palette color will be assigned.\n         * Or pass `'plain'` for an empty shade or `null` to remove entirely and the text/icon color will `inherit`\n         */\n    color: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.oneOf([\"plain\", null])]),\n\n    /**\n         * The type of avatar mainly controlling the shape.\n         * `user` = circle\n         * `space` = rounded square\n         */\n    type: PropTypes.oneOf([\"space\", \"user\"]),\n    size: PropTypes.oneOf([\"s\", \"m\", \"l\", \"xl\"]),\n\n    /**\n         * Grays out the avatar to simulate being disabled\n         */\n    isDisabled: PropTypes.bool\n  }),\n\n  /**\n     * An array of inline #MetaData displayed beneath the label and separated by bullets.\n     */\n  meta: PropTypes.arrayOf(PropTypes.shape({\n    /**\n       * Required to display the metadata\n       */\n    text: PropTypes.string.isRequired,\n\n    /**\n       * Styles the metadata according to Elastic's schema.\n       * Can be one of 'application', 'deployment', 'article', 'case', 'platform',\n       * or a custom string to associate with your own schema.\n       * Appends the string to the class name as `euiSelectableTemplateSitewide__optionMeta--[type]`\n       */\n    type: PropTypes.oneOfType([PropTypes.oneOf([\"application\", \"deployment\", \"article\", \"case\", \"platform\"]), PropTypes.string.isRequired]),\n\n    /**\n       * Will wrap the meta tag in EuiHighlight to mark the portions that match the search text\n       */\n    highlightSearchString: PropTypes.bool,\n    className: PropTypes.string,\n    \"aria-label\": PropTypes.string,\n    \"data-test-subj\": PropTypes.string\n  }).isRequired),\n\n  /**\n     * Optional `boolean`.\n     * Set to `true` to indicate object is just a grouping label, not a selectable item\n     */\n  isGroupLabel: PropTypes.oneOfType([PropTypes.oneOf([true]).isRequired, PropTypes.oneOf([false])]),\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n\n  /**\n     * Visible label of option.\n     * Must be unique across items if `key` is not supplied\n     */\n  label: PropTypes.string,\n\n  /**\n     * Optionally change the searchable term by passing a different string other than the `label`.\n     * Best used when creating a custom `optionRender` to separate the label from metadata but allowing to search on both\n     */\n  searchableLabel: PropTypes.string,\n\n  /**\n     * Must be unique across items.\n     * Will be used to match options instead of `label`\n     */\n  key: PropTypes.string,\n\n  /**\n     * Leave `undefined` to indicate not selected,\n     * 'on' to indicate inclusion and\n     * 'off' to indicate exclusion\n     */\n  checked: PropTypes.oneOf([\"on\", \"off\", undefined]),\n  disabled: PropTypes.bool,\n\n  /**\n     * Node to add between the selection icon and the label\n     */\n  prepend: PropTypes.node,\n\n  /**\n     * Node to add to the far right of the item\n     */\n  append: PropTypes.node,\n  ref: PropTypes.func\n};\nexport var MetaData = () => <div />;\nMetaData.propTypes = {\n  /**\n     * Required to display the metadata\n     */\n  text: PropTypes.string.isRequired,\n\n  /**\n     * Styles the metadata according to Elastic's schema.\n     * Can be one of 'application', 'deployment', 'article', 'case', 'platform',\n     * or a custom string to associate with your own schema.\n     * Appends the string to the class name as `euiSelectableTemplateSitewide__optionMeta--[type]`\n     */\n  type: PropTypes.oneOfType([PropTypes.oneOf([\"application\", \"deployment\", \"article\", \"case\", \"platform\"]), PropTypes.string.isRequired]),\n\n  /**\n     * Will wrap the meta tag in EuiHighlight to mark the portions that match the search text\n     */\n  highlightSearchString: PropTypes.bool,\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string\n};\n\ntry {\n  EuiSelectableOptionProps.__docgenInfo = {\n    description: '',\n    displayName: 'EuiSelectableOptionProps',\n    methods: [],\n    props: {\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: 'Defines a string value that labels the current element.\\n' + '@see aria-labelledby.',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'data-test-subj': {\n        defaultValue: null,\n        description: '',\n        name: 'data-test-subj',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      label: {\n        defaultValue: null,\n        description: 'Visible label of option.\\n' + 'Must be unique across items if `key` is not supplied',\n        name: 'label',\n        parent: undefined,\n        required: true,\n        type: {\n          name: 'string'\n        }\n      },\n      searchableLabel: {\n        defaultValue: null,\n        description: 'Optionally change the searchable term by passing a different string other than the `label`.\\n' + 'Best used when creating a custom `optionRender` to separate the label from metadata but allowing to search on both',\n        name: 'searchableLabel',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      key: {\n        defaultValue: null,\n        description: 'Must be unique across items.\\n' + 'Will be used to match options instead of `label`',\n        name: 'key',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      checked: {\n        defaultValue: null,\n        description: 'Leave `undefined` to indicate not selected,\\n' + \"'on' to indicate inclusion and\\n\" + \"'off' to indicate exclusion\",\n        name: 'checked',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"on\" | \"off\"',\n          value: [{\n            value: '\"on\"'\n          }, {\n            value: '\"off\"'\n          }]\n        }\n      },\n      disabled: {\n        defaultValue: null,\n        description: '',\n        name: 'disabled',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      isGroupLabel: {\n        defaultValue: null,\n        description: 'Optional `boolean`.\\n' + 'Set to `true` to indicate object is just a grouping label, not a selectable item',\n        name: 'isGroupLabel',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      prepend: {\n        defaultValue: null,\n        description: 'Node to add between the selection icon and the label',\n        name: 'prepend',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'any'\n        }\n      },\n      append: {\n        defaultValue: null,\n        description: 'Node to add to the far right of the item',\n        name: 'append',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'any'\n        }\n      },\n      ref: {\n        defaultValue: null,\n        description: '',\n        name: 'ref',\n        parent: undefined,\n        required: false,\n        type: {\n          name: '(optionIndex: number) => void'\n        }\n      },\n      id: {\n        defaultValue: null,\n        description: 'Disallow `id` from being set.\\n' + 'Option item `id`s are coordinated at a higher level for a11y reasons.',\n        name: 'id',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'never'\n        }\n      }\n    },\n    extendedInterfaces: ['CommonProps', 'HTMLAttributes', 'AriaAttributes', 'DOMAttributes', 'EuiSelectableTemplateSitewideMetaData']\n  };\n} catch (e) {}\n\ntry {\n  EuiSelectableOptionsList.__docgenInfo = {\n    description: '',\n    displayName: 'EuiSelectableOptionsList',\n    methods: [],\n    props: {\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: 'Defines a string value that labels the current element.\\n' + '@see aria-labelledby.',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'data-test-subj': {\n        defaultValue: null,\n        description: '',\n        name: 'data-test-subj',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      activeOptionIndex: {\n        defaultValue: null,\n        description: 'The index of the option to be highlighted as pseudo-focused;\\n' + 'Good for use when only one selection is allowed and needing to open\\n' + 'directly to that option',\n        name: 'activeOptionIndex',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'number'\n        }\n      },\n      rowHeight: {\n        defaultValue: null,\n        description: 'The height of each option in pixels. Defaults to `32`',\n        name: 'rowHeight',\n        parent: undefined,\n        required: true,\n        type: {\n          name: 'number'\n        }\n      },\n      showIcons: {\n        defaultValue: null,\n        description: 'Show the check/cross selection indicator icons',\n        name: 'showIcons',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      singleSelection: {\n        defaultValue: null,\n        description: '',\n        name: 'singleSelection',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean | \"always\"'\n        }\n      },\n      windowProps: {\n        defaultValue: null,\n        description: 'Any props to send specifically to the react-window `FixedSizeList`',\n        name: 'windowProps',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'Partial<ListProps>'\n        }\n      },\n      bordered: {\n        defaultValue: null,\n        description: 'Adds a border around the list to indicate the bounds;\\n' + 'Useful when the list scrolls, otherwise use your own container',\n        name: 'bordered',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      onFocusBadge: {\n        defaultValue: null,\n        description: 'When enabled by setting to either `true` or passing custom text,\\n' + 'shows a hollow badge as an append (far right) when the item is focused.\\n' + 'The default content when `true` is `↩ to select/deselect/include/exclude`',\n        name: 'onFocusBadge',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean | ({ iconType?: IconType; iconSide?: ToastSide; color?: string; isDisabled?: boolean; closeButtonProps?: Partial<EuiIconProps>; } & CommonProps & DisambiguateSet<...> & DisambiguateSet<...> & Pick<...>) | ... 4 more ... | ({ ...; } & ... 6 more ... & Pick<...>)'\n        }\n      }\n    },\n    extendedInterfaces: ['CommonProps', 'HTMLAttributes', 'AriaAttributes', 'DOMAttributes', 'EuiSelectableTemplateSitewideMetaData']\n  };\n} catch (e) {}\n\ntry {\n  Options.__docgenInfo = {\n    description: '',\n    displayName: 'Options',\n    methods: [],\n    props: {\n      icon: {\n        defaultValue: null,\n        description: 'Displayed on the left (`prepend`).\\n' + \"Object of `EuiIconProps` for display of the solution/application's logo\",\n        name: 'icon',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'EuiIconProps'\n        }\n      },\n      avatar: {\n        defaultValue: null,\n        description: 'Displayed on the right (`append`).\\n' + 'Object of `EuiAvatarProps` for display of the space (default) or user',\n        name: 'avatar',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'EuiAvatarProps'\n        }\n      },\n      meta: {\n        defaultValue: null,\n        description: 'An array of inline #MetaData displayed beneath the label and separated by bullets.',\n        name: 'meta',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'EuiSelectableTemplateSitewideMetaData[]'\n        }\n      },\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: 'Defines a string value that labels the current element.\\n' + '@see aria-labelledby.',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'data-test-subj': {\n        defaultValue: null,\n        description: '',\n        name: 'data-test-subj',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      label: {\n        defaultValue: null,\n        description: 'Visible label of option.\\n' + 'Must be unique across items if `key` is not supplied',\n        name: 'label',\n        parent: undefined,\n        required: true,\n        type: {\n          name: 'string'\n        }\n      },\n      searchableLabel: {\n        defaultValue: null,\n        description: 'Optionally change the searchable term by passing a different string other than the `label`.\\n' + 'Best used when creating a custom `optionRender` to separate the label from metadata but allowing to search on both',\n        name: 'searchableLabel',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      key: {\n        defaultValue: null,\n        description: 'Must be unique across items.\\n' + 'Will be used to match options instead of `label`',\n        name: 'key',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      checked: {\n        defaultValue: null,\n        description: 'Leave `undefined` to indicate not selected,\\n' + \"'on' to indicate inclusion and\\n\" + \"'off' to indicate exclusion\",\n        name: 'checked',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"on\" | \"off\"',\n          value: [{\n            value: '\"on\"'\n          }, {\n            value: '\"off\"'\n          }]\n        }\n      },\n      disabled: {\n        defaultValue: null,\n        description: '',\n        name: 'disabled',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      isGroupLabel: {\n        defaultValue: null,\n        description: 'Optional `boolean`.\\n' + 'Set to `true` to indicate object is just a grouping label, not a selectable item',\n        name: 'isGroupLabel',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      prepend: {\n        defaultValue: null,\n        description: 'Node to add between the selection icon and the label',\n        name: 'prepend',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'any'\n        }\n      },\n      append: {\n        defaultValue: null,\n        description: 'Node to add to the far right of the item',\n        name: 'append',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'any'\n        }\n      },\n      ref: {\n        defaultValue: null,\n        description: '',\n        name: 'ref',\n        parent: undefined,\n        required: false,\n        type: {\n          name: '(optionIndex: number) => void'\n        }\n      },\n      id: {\n        defaultValue: null,\n        description: 'Disallow `id` from being set.\\n' + 'Option item `id`s are coordinated at a higher level for a11y reasons.',\n        name: 'id',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'never'\n        }\n      }\n    },\n    extendedInterfaces: ['CommonProps', 'HTMLAttributes', 'AriaAttributes', 'DOMAttributes', 'EuiSelectableTemplateSitewideMetaData']\n  };\n} catch (e) {}\n\ntry {\n  MetaData.__docgenInfo = {\n    description: '',\n    displayName: 'MetaData',\n    methods: [],\n    props: {\n      text: {\n        defaultValue: null,\n        description: 'Required to display the metadata',\n        name: 'text',\n        parent: {\n          fileName: 'eui/src/components/selectable/selectable_templates/selectable_template_sitewide_option.tsx',\n          name: 'EuiSelectableTemplateSitewideMetaData'\n        },\n        required: true,\n        type: {\n          name: 'string'\n        }\n      },\n      type: {\n        defaultValue: null,\n        description: \"Styles the metadata according to Elastic's schema.\\n\" + \"Can be one of 'application', 'deployment', 'article', 'case', 'platform',\\n\" + 'or a custom string to associate with your own schema.\\n' + 'Appends the string to the class name as `euiSelectableTemplateSitewide__optionMeta--[type]`',\n        name: 'type',\n        parent: {\n          fileName: 'eui/src/components/selectable/selectable_templates/selectable_template_sitewide_option.tsx',\n          name: 'EuiSelectableTemplateSitewideMetaData'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      highlightSearchString: {\n        defaultValue: null,\n        description: 'Will wrap the meta tag in EuiHighlight to mark the portions that match the search text',\n        name: 'highlightSearchString',\n        parent: {\n          fileName: 'eui/src/components/selectable/selectable_templates/selectable_template_sitewide_option.tsx',\n          name: 'EuiSelectableTemplateSitewideMetaData'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: '',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'data-test-subj': {\n        defaultValue: null,\n        description: '',\n        name: 'data-test-subj',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      }\n    },\n    extendedInterfaces: ['CommonProps', 'HTMLAttributes', 'AriaAttributes', 'DOMAttributes', 'EuiSelectableTemplateSitewideMetaData']\n  };\n} catch (e) {}"]}]}