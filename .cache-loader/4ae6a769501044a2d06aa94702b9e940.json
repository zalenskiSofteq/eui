{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src-docs\\src\\views\\selectable\\selectable_example.js","dependencies":[{"path":"D:\\work\\eui\\src-docs\\src\\views\\selectable\\selectable_example.js","mtime":1649070093238},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src-docs/src/views/selectable/selectable_example.js"],"names":["React","Fragment","Link","renderToHtml","GuideSectionTypes","EuiCode","EuiSelectable","EuiSelectableMessage","EuiText","EuiSpacer","EuiSelectableTemplateSitewide","EuiCodeBlock","EuiAccordion","EuiSelectableOptionProps","EuiSelectableOptionsList","Options","MetaData","Selectable","selectableSource","require","selectableHtml","SelectablePopover","selectablePopoverSource","selectablePopoverHtml","SelectableSearch","selectableSearchSource","selectableSearchHtml","SelectableSingle","selectableSingleSource","selectableSingleHtml","SelectableExclusion","selectableExclusionSource","selectableExclusionHtml","SelectableMessages","selectableMessagesSource","selectableMessagesHtml","SelectableCustomRender","selectableCustomRenderSource","selectableCustomRenderHtml","SearchOption","Search","EuiCallOut","searchSource","searchHtml","SelectableExample","title","intro","sections","source","type","JS","code","HTML","text","props","demo","snippet","listStyleType"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { renderToHtml } from '../../services';\n\nimport { GuideSectionTypes } from '../../components';\n\nimport {\n  EuiCode,\n  EuiSelectable,\n  EuiSelectableMessage,\n  EuiText,\n  EuiSpacer,\n  EuiSelectableTemplateSitewide,\n  EuiCodeBlock,\n  EuiAccordion,\n} from '../../../../src/components';\n\nimport {\n  EuiSelectableOptionProps,\n  EuiSelectableOptionsList,\n  Options,\n  MetaData,\n} from './props';\n\nimport Selectable from './selectable';\nconst selectableSource = require('!!raw-loader!./selectable');\nconst selectableHtml = renderToHtml(Selectable);\n\nimport SelectablePopover from './selectable_popover';\nconst selectablePopoverSource = require('!!raw-loader!./selectable_popover');\nconst selectablePopoverHtml = renderToHtml(SelectablePopover);\n\nimport SelectableSearch from './selectable_search';\nconst selectableSearchSource = require('!!raw-loader!./selectable_search');\nconst selectableSearchHtml = renderToHtml(SelectableSearch);\n\nimport SelectableSingle from './selectable_single';\nconst selectableSingleSource = require('!!raw-loader!./selectable_single');\nconst selectableSingleHtml = renderToHtml(SelectableSingle);\n\nimport SelectableExclusion from './selectable_exclusion';\nconst selectableExclusionSource = require('!!raw-loader!./selectable_exclusion');\nconst selectableExclusionHtml = renderToHtml(SelectableExclusion);\n\nimport SelectableMessages from './selectable_messages';\nconst selectableMessagesSource = require('!!raw-loader!./selectable_messages');\nconst selectableMessagesHtml = renderToHtml(SelectableMessages);\n\nimport SelectableCustomRender from './selectable_custom_render';\nconst selectableCustomRenderSource = require('!!raw-loader!./selectable_custom_render');\nconst selectableCustomRenderHtml = renderToHtml(SelectableCustomRender);\n\nimport SearchOption from './sitewide_option';\nimport Search from './search';\nimport { EuiCallOut } from '../../../../src/components/call_out';\nconst searchSource = require('!!raw-loader!./search');\nconst searchHtml = renderToHtml(Search);\n\nexport const SelectableExample = {\n  title: 'Selectable',\n  intro: (\n    <EuiText>\n      <p>\n        <strong>EuiSelectable</strong> aims to make the pattern of a selectable\n        list (with or without search) consistent across implementations. It is\n        the same concept used in{' '}\n        <Link to=\"/forms/combo-box\">\n          <strong>EuiComboBox</strong>\n        </Link>{' '}\n        and{' '}\n        <Link to=\"/forms/filter-group\">\n          <strong>EuiFilterGroup</strong>\n        </Link>\n        .{' '}\n        <strong>\n          This is not intended for{' '}\n          <Link to=\"/display/list-group\">primary navigation</Link>\n        </strong>{' '}\n        but can be used to simplify the construction of popover navigational\n        menus; i.e. the spaces menu in the{' '}\n        <Link to=\"/layout/header\">header</Link>.\n      </p>\n    </EuiText>\n  ),\n  sections: [\n    {\n      title: 'The basics',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: selectableSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: selectableHtml,\n        },\n      ],\n      text: (\n        <Fragment>\n          <p>\n            At its simplest, <strong>EuiSelectable</strong> requires an array of{' '}\n            <EuiCode>options</EuiCode> and an <EuiCode>onChange</EuiCode>{' '}\n            handler which passes back the altered{' '}\n            <EuiCode>selectedOptions</EuiCode> array. The{' '}\n            <EuiCode>children</EuiCode> is a function that return the{' '}\n            <EuiCode>list</EuiCode> and <EuiCode>search</EuiCode> nodes.\n          </p>\n          <EuiCallOut\n            iconType=\"check\"\n            title=\"Selected options are based on the checked = on property\">\n            <p>\n              <strong>EuiSelectable</strong> offers the ability to{' '}\n              <strong>exclude</strong> selections. Therefore, the{' '}\n              <EuiCode>checked</EuiCode> property is one of{' '}\n              <EuiCode>{\"undefined | 'on' | 'off'\"}</EuiCode>,{' '}\n              <EuiCode>{\"'on'\"}</EuiCode> being the default for selected options\n              when <EuiCode>allowExclusions = false</EuiCode>.\n            </p>\n          </EuiCallOut>\n        </Fragment>\n      ),\n      props: {\n        EuiSelectable,\n        EuiSelectableOptionProps,\n        EuiSelectableOptionsList,\n      },\n      demo: <Selectable />,\n      snippet: `<EuiSelectable\n  aria-label=\"Basic example\"\n  options={[{ label: '' }, { label: '' }]}\n  onChange={newOptions => setOptions(newOptions)}\n  listProps={{ bordered: true }}>\n  {list => list}\n</EuiSelectable>`,\n    },\n    {\n      title: 'Searchable',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: selectableSearchSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: selectableSearchHtml,\n        },\n      ],\n      text: (\n        <Fragment>\n          <p>\n            To add a search component to the list, simply add the{' '}\n            <EuiCode>searchable</EuiCode> prop. You can optionally pass in a{' '}\n            <EuiCode>searchProps</EuiCode> object which will get passed down to\n            the actual <strong>EuiFieldSearch</strong> used.\n          </p>\n          <EuiCallOut\n            iconType=\"search\"\n            title={\n              <>\n                The search is performed as a string match against the{' '}\n                <EuiCode>option.label</EuiCode> unless a separate{' '}\n                <EuiCode>option.searchableLabel</EuiCode> is provided.\n              </>\n            }\n          />\n        </Fragment>\n      ),\n      props: {\n        EuiSelectable,\n        EuiSelectableOptionProps,\n        EuiSelectableOptionsList,\n      },\n      demo: <SelectableSearch />,\n      snippet: `<EuiSelectable\n  aria-label=\"Searchable example\"\n  searchable\n  searchProps={{\n    'data-test-subj': dataTestSubj,\n  }}\n  options={[]}\n  onChange={newOptions => setOptions(newOptions)}>\n  {(list, search) => (\n    <Fragment>\n      {search}\n      {list}\n    </Fragment>\n  )}\n</EuiSelectable>`,\n    },\n    {\n      title: 'Single selection',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: selectableSingleSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: selectableSingleHtml,\n        },\n      ],\n      text: (\n        <Fragment>\n          <p>\n            Selection can be restricted to a single option at a time with the{' '}\n            <EuiCode>singleSelection</EuiCode> prop. Passing{' '}\n            <EuiCode>true</EuiCode> allows for 0 or 1 option to be selected,\n            while <EuiCode language=\"js\">{'\"always\"'}</EuiCode> requires 1\n            option to be selected at all times. The default value is{' '}\n            <EuiCode>false</EuiCode>.\n          </p>\n        </Fragment>\n      ),\n      props: { EuiSelectable },\n      demo: <SelectableSingle />,\n      snippet: `\n      <EuiSelectable\n  aria-label=\"Single selection example\"\n  options={options}\n  onChange={newOptions => setOptions(newOptions)}\n  singleSelection={true}\n  listProps={{ bordered: true }}>\n  {list => list}\n</EuiSelectable>`,\n    },\n    {\n      title: 'Sizing and containers',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: selectablePopoverSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: selectablePopoverHtml,\n        },\n      ],\n      text: (\n        <Fragment>\n          <p>\n            The component&apos;s children, <EuiCode>list, search</EuiCode>, are\n            returned via the <EuiCode>children</EuiCode> function, which means\n            you can wrap the indivial elements in anything you want.\n          </p>\n          <h3>Width and height</h3>\n          <p>\n            The width has been made to always be 100% of its container,\n            including stretching the search input. By default, the height is\n            capped at showing up to 7.5 items. It shows half of the last one to\n            help indicate that there are more options to scroll to. To stretch\n            the box to fill its container, pass &apos;full&apos; to the{' '}\n            <EuiCode>height</EuiCode> prop.\n          </p>\n          <h3>Flexbox</h3>\n          <p>\n            Be aware that <EuiCode language=\"sass\">display: flex</EuiCode> with\n            column layout is applied to the wrapping container. This is so that\n            you can opt in to allow the height of the list stretch to fill its\n            container. See the flyout example.\n          </p>\n        </Fragment>\n      ),\n      props: { EuiSelectable },\n      demo: <SelectablePopover />,\n    },\n    {\n      title: 'Options can be excluded',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: selectableExclusionSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: selectableExclusionHtml,\n        },\n      ],\n      text: (\n        <Fragment>\n          <p>\n            Currently, adding <EuiCode>allowExclusions</EuiCode> simply allows\n            cycling through the checked options (on {'-> off ->'} undefined).\n            Should this be allowed by holding down a modifier key instead?\n          </p>\n        </Fragment>\n      ),\n      props: { EuiSelectable },\n      demo: <SelectableExclusion />,\n      snippet: `<EuiSelectable\n  aria-label=\"Example supporting exclusions\"\n  allowExclusions\n  options={[]}\n  onChange={newOptions => setOptions(newOptions)}>\n  {list => list}\n</EuiSelectable>`,\n    },\n    {\n      title: 'Messages and loading',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: selectableMessagesSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: selectableMessagesHtml,\n        },\n      ],\n      text: (\n        <Fragment>\n          <p>\n            The component comes with pre-composed messages for loading, empty,\n            and no search result states. To display your own messages, pass{' '}\n            <EuiCode>loadingMessage</EuiCode>, <EuiCode>emptyMessage</EuiCode>,\n            or <EuiCode>noMatchesMessage</EuiCode> respectively. Alternatively,\n            you can replace the entire <EuiCode>list</EuiCode> display with your\n            own message for any state. In which case, we recommend wrapping your\n            custom message in an <strong>EuiSelectableMessage</strong>{' '}\n            component.\n          </p>\n        </Fragment>\n      ),\n      props: { EuiSelectable, EuiSelectableMessage },\n      demo: <SelectableMessages />,\n      snippet: [\n        `<EuiSelectable\n  aria-label=\"Messaging example\"\n  options={[]}\n  listProps={{ bordered: true }}\n  isLoading={isLoading}\n  loadingMessage={customLoadingMessage}\n  emptyMessage={customEmptyMessage}\n  noMatchesMessage={customNoMatchesMessage}>\n  {list => list}\n</EuiSelectable>`,\n        `<EuiSelectable\n  aria-label=\"Messaging example\"\n  options={[]}\n  listProps={{ bordered: true }}\n  isLoading={isLoading}>\n  {list => isLoading ? <EuiSelectableMessage bordered={true}>You have no spice</EuiSelectableMessage> : list}\n</EuiSelectable>`,\n      ],\n    },\n    {\n      title: 'Rendering the options',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: selectableCustomRenderSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: selectableCustomRenderHtml,\n        },\n      ],\n      text: (\n        <Fragment>\n          <p>\n            There are two object properties you can add to enhance the content\n            of you options, <EuiCode>option.prepend</EuiCode> and{' '}\n            <EuiCode>option.append</EuiCode>. These will add nodes before and\n            after the option label respectively. They will not be included in\n            the searchable content as this only matches against the label\n            property.\n          </p>\n          <h3>Selection icons</h3>\n          <p>\n            You can choose not to display the check and cross icons indicating\n            selection by passing{' '}\n            <EuiCode language=\"js\">showIcons=false</EuiCode>. This is useful for\n            instances that navigate elsewhere on selection or hide their\n            selected options from the list.\n          </p>\n          <h3>Group labels</h3>\n          <p>\n            An option is allowed to be passed that is just a header for the\n            options that follow it. It takes no mouse handlers and renders\n            similar to a title. Add one of these by setting the{' '}\n            <EuiCode>option.isGroupLabel</EuiCode> to true.{' '}\n          </p>\n          <h3>Custom content</h3>\n          <p>\n            While it is best to stick to the{' '}\n            <EuiCode>option.label, option.append, option.prepend</EuiCode> and{' '}\n            <EuiCode>showIcons</EuiCode> props, you can pass a custom{' '}\n            <EuiCode>renderOption</EuiCode> function which will pass back the\n            single <EuiCode>option</EuiCode> object and the{' '}\n            <EuiCode>searchValue</EuiCode> to use for highlighting.\n          </p>\n          <p>\n            In order for the list to know how to scroll to the selected or\n            highlighted option, it must also know the height of the rows. It\n            applies this pixel height directly to options. If your custom\n            content is taller than the default of <EuiCode>32px</EuiCode> tall,\n            you will need to recalculate this height and apply it via{' '}\n            <EuiCode>listProps.rowHeight</EuiCode>.\n          </p>\n          <p>\n            <strong>Every row must be the same height.</strong>\n          </p>\n        </Fragment>\n      ),\n      demo: <SelectableCustomRender />,\n      snippet: `<EuiSelectable\n  searchable\n  options={[]}\n  onChange={newOptions => setOptions(newOptions)}\n  height={240}\n  renderOption={renderCountryOption}\n  listProps={{\n    rowHeight: 50,\n    showIcons: false,\n  }}\n>\n  {(list, search) => (\n    <Fragment>\n      {search}\n      {list}\n    </Fragment>\n  )}\n</EuiSelectable>`,\n    },\n    {\n      title: 'Sitewide search template',\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: searchSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: searchHtml,\n        },\n      ],\n      text: (\n        <Fragment>\n          <p>\n            <strong>EuiSelectableTemplateSitewide</strong> is an opinionated\n            wrapper around <strong>EuiSelectable</strong> to provide a reusable\n            template across the Elastic products that will share the same global\n            search capabilities. It creates the search input that triggers a\n            popover containing the list of options.\n          </p>\n          <h3>Search input</h3>\n          <p>\n            The search ability of EuiSelectable is still hooked up to the\n            options provided. It will highlight the portion of the label that\n            matches the search string.\n          </p>\n          <EuiCallOut\n            size=\"s\"\n            iconType=\"keyboardShortcut\"\n            title=\"The demo showcases the possibility to allow a keyboard shortcut (command + K) to trigger the search input focus, but the template does not come with this ability.\"\n          />\n          <h3>Popover</h3>\n          <p>\n            The popover itself allows you to display a{' '}\n            <EuiCode>popoverTitle</EuiCode> node,{' '}\n            <EuiCode>popoverFooter</EuiCode> node, or pass any of the{' '}\n            <EuiCode>popoverProps</EuiCode> to the{' '}\n            <Link to=\"/layout/popover\">\n              <strong>EuiPopover</strong>\n            </Link>{' '}\n            component.\n          </p>\n          <h3>Options</h3>\n          <p>\n            The <EuiCode>options</EuiCode> are the most opinionated portion of\n            the template. Their display is determined by the props passed in and\n            extends the normal <EuiCode>EuiSelectable.option</EuiCode> type. All\n            parts are optional with the exception of the label (B).\n          </p>\n\n          <SearchOption />\n          <EuiSpacer size=\"xs\" />\n          <EuiAccordion\n            id=\"optionSnippet\"\n            buttonContent={<small>Code snippet</small>}>\n            <EuiSpacer size=\"xs\" />\n            <EuiCodeBlock language=\"ts\" isCopyable paddingSize=\"s\">\n              {`const options: EuiSelectableTemplateSitewideOption[] = [\n  {\n    label: 'Label',\n    icon: {\n      type: 'logoKibana'\n    }\n    avatar: {\n      name: 'Default',\n    },\n    meta: [\n      {\n        text: 'Meta',\n        type: 'application',\n      },\n      {\n        text: 'Deployment',\n        type: 'deployment',\n      },\n      {\n        text: 'Default display',\n      },\n    ],\n  }\n]`}\n            </EuiCodeBlock>\n          </EuiAccordion>\n          <EuiSpacer />\n          <ul style={{ listStyleType: 'upper-alpha' }}>\n            <li>\n              <EuiCode>label</EuiCode> (required): The name of the item itself.\n              By default, the search box will only use this to match the search\n              term against, but you can supply a separate{' '}\n              <EuiCode>searchableLabel</EuiCode> that combines the label and\n              meta data to search on.\n            </li>\n            <li>\n              <EuiCode>icon</EuiCode>: Only display the solution or\n              application&apos;s logo when the option links to the application\n              itself (Dashboard app) and not lower-level items such as\n              individual dashboards. Size and color are predetermined but can be\n              overridden.\n            </li>\n            <li>\n              <EuiCode>avatar</EuiCode>: Represents the Kibana Space that the\n              item is located in, <strong>if</strong> multiple spaces are\n              present. Type and size are predetermined but can be overridden.\n            </li>\n            <li>\n              <EuiCode>meta</EuiCode>: This bottom line should only contain\n              items if the option is a lower-level item (individual dashboard).\n              The display of which defaults to simple text, but if you pass one\n              of the predetermined <EuiCode>types</EuiCode>, they will be styled\n              according to the design pattern.\n            </li>\n          </ul>\n          <EuiCallOut\n            size=\"s\"\n            iconType=\"clock\"\n            title=\"The demo shows how you can temporarily replace the icon for a subset of options to display a short list of recently viewed options.\"\n          />\n          <h3>Selection</h3>\n          <p>\n            The options themselves are simply rendered as list items with no\n            interactive behavior like buttons or links. You must handle the\n            interaction when the component passes back the altered array of\n            options with the selected option having{' '}\n            <EuiCode>{\"checked: 'on'\"}</EuiCode>.\n          </p>\n          <h3>Popover toggle and responsiveness</h3>\n          <p>\n            The default display is to render the search input inline which\n            triggers a popover with the results. Or you can decide to trigger\n            the whole selectable component from a single button. By passing your\n            own button to <EuiCode>popoverButton</EuiCode>, the component will\n            use this to trigger the popover, putting the search inside.\n          </p>\n          <p>\n            This is a great way to handle reducing the size of the component for\n            smaller screens. The component offers a helper prop called{' '}\n            <EuiCode>popoverButtonBreakpoints</EuiCode> which will only render\n            the <EuiCode>popoverButton</EuiCode> if the window size matches\n            named breakpoint(s).\n          </p>\n        </Fragment>\n      ),\n      props: { EuiSelectableTemplateSitewide, Options, MetaData },\n      demo: <Search />,\n    },\n  ],\n};\n"]}]}