{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\form\\checkbox\\checkbox.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\form\\checkbox\\checkbox.tsx","mtime":1649070093414},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/form/checkbox/checkbox.tsx"],"names":["React","Component","classNames","keysOf","typeToClassNameMap","inList","TYPES","EuiCheckbox","undefined","input","inputRef","props","invalidateIndeterminate","className","id","checked","label","onChange","type","disabled","compressed","indeterminate","labelProps","rest","classes","labelClasses","optionalLabel","setInputRef"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IACEC,SADF,QAMO,OANP;;AAOA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,MAAT,QAAoC,cAApC;AAEA,IAAMC,kBAAkB,GAAG;AACzBC,EAAAA,MAAM,EAAE;AADiB,CAA3B;AAIA,OAAO,IAAMC,KAAK,GAAGH,MAAM,CAACC,kBAAD,CAApB;AAyBP,WAAaG,WAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,+DAQgCC,SARhC;;AAAA,kEA6EgB,UAACC,KAAD,EAA6B;AACzC,YAAKC,QAAL,GAAgBD,KAAhB;;AAEA,UAAI,MAAKE,KAAL,CAAWD,QAAf,EAAyB;AACvB,cAAKC,KAAL,CAAWD,QAAX,CAAoBD,KAApB;AACD;;AAED,YAAKG,uBAAL;AACD,KArFH;;AAAA;AAAA;;AAAA;AAAA;AAAA,wCAUsB;AAClB,WAAKA,uBAAL;AACD;AAZH;AAAA;AAAA,yCAcuB;AACnB,WAAKA,uBAAL;AACD;AAhBH;AAAA;AAAA,6BAkBW;AAAA,wBAcH,KAAKD,KAdF;AAAA,UAELE,SAFK,eAELA,SAFK;AAAA,UAGLC,EAHK,eAGLA,EAHK;AAAA,UAILC,OAJK,eAILA,OAJK;AAAA,UAKLC,KALK,eAKLA,KALK;AAAA,UAMLC,QANK,eAMLA,QANK;AAAA,UAOLC,IAPK,eAOLA,IAPK;AAAA,UAQLC,QARK,eAQLA,QARK;AAAA,UASLC,UATK,eASLA,UATK;AAAA,UAULC,aAVK,eAULA,aAVK;AAAA,UAWLX,QAXK,eAWLA,QAXK;AAAA,UAYLY,UAZK,eAYLA,UAZK;AAAA,UAaFC,IAbE;;AAgBP,UAAMC,OAAO,GAAGtB,UAAU,CACxB,aADwB,EAExBgB,IAAI,IAAId,kBAAkB,CAACc,IAAD,CAFF,EAGxB;AACE,gCAAwB,CAACF,KAD3B;AAEE,mCAA2BI;AAF7B,OAHwB,EAOxBP,SAPwB,CAA1B;AASA,UAAMY,YAAY,GAAGvB,UAAU,CAC7B,oBAD6B,EAE7BoB,UAF6B,aAE7BA,UAF6B,uBAE7BA,UAAU,CAAET,SAFiB,CAA/B;AAIA,UAAIa,aAAJ;;AAEA,UAAIV,KAAJ,EAAW;AACTU,QAAAA,aAAa,gBACX,0CAAWJ,UAAX;AAAuB,UAAA,SAAS,EAAEG,YAAlC;AAAgD,UAAA,OAAO,EAAEX;AAAzD,YACGE,KADH,CADF;AAKD;;AAED,0BACE;AAAK,QAAA,SAAS,EAAEQ;AAAhB,sBACE;AACE,QAAA,SAAS,EAAC,oBADZ;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,EAAE,EAAEV,EAHN;AAIE,QAAA,OAAO,EAAEC,OAJX;AAKE,QAAA,QAAQ,EAAEE,QALZ;AAME,QAAA,QAAQ,EAAEE,QANZ;AAOE,QAAA,GAAG,EAAE,KAAKQ;AAPZ,SAQMJ,IARN,EADF,eAYE;AAAK,QAAA,SAAS,EAAC;AAAf,QAZF,EAcGG,aAdH,CADF;AAkBD;AA3EH;AAAA;AAAA,8CAuF4B;AACxB,UAAI,KAAKhB,QAAT,EAAmB;AACjB,aAAKA,QAAL,CAAcW,aAAd,GAA8B,KAAKV,KAAL,CAAWU,aAAzC;AACD;AACF;AA3FH;;AAAA;AAAA,EAAiCpB,SAAjC;;gBAAaM,W,kBACW;AACpBQ,EAAAA,OAAO,EAAE,KADW;AAEpBI,EAAAA,QAAQ,EAAE,KAFU;AAGpBE,EAAAA,aAAa,EAAE,KAHK;AAIpBD,EAAAA,UAAU,EAAE;AAJQ,C;;;;;;;;;;;;;AA5DxB;AACA;;;;;AADA;AACA","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { keysOf } from '../../common';\nvar typeToClassNameMap = {\n  inList: 'euiCheckbox--inList'\n};\nexport var TYPES = keysOf(typeToClassNameMap);\nexport class EuiCheckbox extends Component {\n  static defaultProps = {\n    checked: false,\n    disabled: false,\n    indeterminate: false,\n    compressed: false\n  };\n  inputRef = undefined;\n\n  componentDidMount() {\n    this.invalidateIndeterminate();\n  }\n\n  componentDidUpdate() {\n    this.invalidateIndeterminate();\n  }\n\n  render() {\n    const {\n      className,\n      id,\n      checked,\n      label,\n      onChange,\n      type,\n      disabled,\n      compressed,\n      indeterminate,\n      inputRef,\n      labelProps,\n      ...rest\n    } = this.props;\n    const classes = classNames('euiCheckbox', type && typeToClassNameMap[type], {\n      'euiCheckbox--noLabel': !label,\n      'euiCheckbox--compressed': compressed\n    }, className);\n    const labelClasses = classNames('euiCheckbox__label', labelProps?.className);\n    let optionalLabel;\n\n    if (label) {\n      optionalLabel = <label {...labelProps} className={labelClasses} htmlFor={id}>\n          {label}\n        </label>;\n    }\n\n    return <div className={classes}>\n        <input className=\"euiCheckbox__input\" type=\"checkbox\" id={id} checked={checked} onChange={onChange} disabled={disabled} ref={this.setInputRef} {...rest} />\n\n        <div className=\"euiCheckbox__square\" />\n\n        {optionalLabel}\n      </div>;\n  }\n\n  setInputRef = input => {\n    this.inputRef = input;\n\n    if (this.props.inputRef) {\n      this.props.inputRef(input);\n    }\n\n    this.invalidateIndeterminate();\n  };\n\n  invalidateIndeterminate() {\n    if (this.inputRef) {\n      this.inputRef.indeterminate = this.props.indeterminate;\n    }\n  }\n\n}\nEuiCheckbox.propTypes = {\n  id: PropTypes.string.isRequired,\n  checked: PropTypes.bool,\n  onChange: PropTypes.any.isRequired,\n  // overriding to make it required\n  inputRef: PropTypes.func,\n  label: PropTypes.node,\n  type: PropTypes.oneOf([\"inList\"]),\n  disabled: PropTypes.bool,\n\n  /**\n     * when `true` creates a shorter height checkbox row\n     */\n  compressed: PropTypes.bool,\n  indeterminate: PropTypes.bool,\n\n  /**\n     * Object of props passed to the <label/>\n     */\n  labelProps: PropTypes.shape({\n    className: PropTypes.string,\n    \"aria-label\": PropTypes.string,\n    \"data-test-subj\": PropTypes.string\n  }),\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string\n};\n\ntry {\n  EuiCheckbox.__docgenInfo = {\n    description: '',\n    displayName: 'EuiCheckbox',\n    methods: [],\n    props: {\n      id: {\n        defaultValue: null,\n        description: '',\n        name: 'id',\n        parent: {\n          fileName: 'eui/src/components/form/checkbox/checkbox.tsx',\n          name: 'EuiCheckboxProps'\n        },\n        required: true,\n        type: {\n          name: 'string'\n        }\n      },\n      checked: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: '',\n        name: 'checked',\n        parent: {\n          fileName: 'eui/src/components/form/checkbox/checkbox.tsx',\n          name: 'EuiCheckboxProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      onChange: {\n        defaultValue: null,\n        description: '',\n        name: 'onChange',\n        parent: {\n          fileName: 'eui/src/components/form/checkbox/checkbox.tsx',\n          name: 'EuiCheckboxProps'\n        },\n        required: true,\n        type: {\n          name: '(event: ChangeEvent<HTMLInputElement>) => void'\n        }\n      },\n      inputRef: {\n        defaultValue: null,\n        description: '',\n        name: 'inputRef',\n        parent: {\n          fileName: 'eui/src/components/form/checkbox/checkbox.tsx',\n          name: 'EuiCheckboxProps'\n        },\n        required: false,\n        type: {\n          name: '(element: HTMLInputElement) => void'\n        }\n      },\n      label: {\n        defaultValue: null,\n        description: '',\n        name: 'label',\n        parent: {\n          fileName: 'eui/src/components/form/checkbox/checkbox.tsx',\n          name: 'EuiCheckboxProps'\n        },\n        required: false,\n        type: {\n          name: 'ReactNode'\n        }\n      },\n      type: {\n        defaultValue: null,\n        description: '',\n        name: 'type',\n        parent: {\n          fileName: 'eui/src/components/form/checkbox/checkbox.tsx',\n          name: 'EuiCheckboxProps'\n        },\n        required: false,\n        type: {\n          name: '\"inList\"'\n        }\n      },\n      disabled: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: '',\n        name: 'disabled',\n        parent: {\n          fileName: 'eui/src/components/form/checkbox/checkbox.tsx',\n          name: 'EuiCheckboxProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      compressed: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: 'when `true` creates a shorter height checkbox row',\n        name: 'compressed',\n        parent: {\n          fileName: 'eui/src/components/form/checkbox/checkbox.tsx',\n          name: 'EuiCheckboxProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      indeterminate: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: '',\n        name: 'indeterminate',\n        parent: {\n          fileName: 'eui/src/components/form/checkbox/checkbox.tsx',\n          name: 'EuiCheckboxProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      labelProps: {\n        defaultValue: null,\n        description: 'Object of props passed to the <label/>',\n        name: 'labelProps',\n        parent: {\n          fileName: 'eui/src/components/form/checkbox/checkbox.tsx',\n          name: 'EuiCheckboxProps'\n        },\n        required: false,\n        type: {\n          name: 'CommonProps & LabelHTMLAttributes<HTMLLabelElement>'\n        }\n      },\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: '',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'data-test-subj': {\n        defaultValue: null,\n        description: '',\n        name: 'data-test-subj',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      }\n    },\n    extendedInterfaces: ['EuiCheckboxProps', 'CommonProps', 'InputHTMLAttributes', 'HTMLAttributes', 'AriaAttributes', 'DOMAttributes']\n  };\n} catch (e) {}"]}]}