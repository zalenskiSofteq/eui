{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\selectable\\selectable_list\\selectable_list.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\selectable\\selectable_list\\selectable_list.tsx","mtime":1649070093760},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/selectable/selectable_list/selectable_list.tsx"],"names":["React","Component","memo","classNames","EuiSelectableListItem","EuiHighlight","AutoSizer","FixedSizeList","areEqual","EuiSelectableList","activeOptionIndex","props","listBoxRef","searchable","setAttribute","makeOptionId","listRef","scrollToItem","ref","listId","singleSelection","ariaLabel","ariaLabelledby","ariaDescribedby","data","index","style","option","label","isGroupLabel","checked","disabled","prepend","append","key","searchableLabel","optionRest","labelCount","filter","length","toLowerCase","setActiveOptionIndex","onAddOrRemoveOption","bind","undefined","onFocusBadge","allowExclusions","showIcons","renderOption","searchValue","options","visibleOptions","findIndex","onExcludeOption","onRemoveOption","onAddOption","addedOption","onOptionClick","updatedOptions","map","updatedOption","removedOption","excludedOption","className","forcedHeight","height","windowProps","rowHeight","bordered","rest","optionArray","heightIsFull","calculatedHeight","maxVisibleOptions","numVisibleOptions","numVisibleMoreThanMax","classes","width","setListRef","removeScrollableTabStop","setListBoxRef","ListRow"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component, memo } from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { EuiSelectableListItem } from './selectable_list_item';\nimport { EuiHighlight } from '../../highlight';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { FixedSizeList, areEqual } from 'react-window';\nexport class EuiSelectableList extends Component {\n  static defaultProps = {\n    rowHeight: 32,\n    searchValue: ''\n  };\n  listRef = null;\n  listBoxRef = null;\n  setListRef = ref => {\n    this.listRef = ref;\n\n    if (ref && this.props.activeOptionIndex) {\n      ref.scrollToItem(this.props.activeOptionIndex, 'auto');\n    }\n  };\n  removeScrollableTabStop = ref => {\n    // Firefox adds a tab stop for scrollable containers\n    // We handle this inside so need to stop firefox from doing its thing\n    if (ref) {\n      ref.setAttribute('tabindex', '-1');\n    }\n  };\n  setListBoxRef = ref => {\n    this.listBoxRef = ref;\n    const {\n      listId,\n      searchable,\n      singleSelection,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledby,\n      'aria-describedby': ariaDescribedby\n    } = this.props;\n\n    if (ref) {\n      ref.setAttribute('id', listId);\n      ref.setAttribute('role', 'listbox');\n\n      if (searchable !== true) {\n        ref.setAttribute('tabindex', '0');\n\n        if (singleSelection !== 'always' && singleSelection !== true) {\n          ref.setAttribute('aria-multiselectable', 'true');\n        }\n      }\n\n      if (typeof ariaLabel === 'string') {\n        ref.setAttribute('aria-label', ariaLabel);\n      } else if (typeof ariaLabelledby === 'string') {\n        ref.setAttribute('aria-labelledby', ariaLabelledby);\n      }\n\n      if (typeof ariaDescribedby === 'string') {\n        ref.setAttribute('aria-labelledby', ariaDescribedby);\n      }\n    }\n  };\n\n  componentDidUpdate() {\n    const {\n      activeOptionIndex\n    } = this.props;\n\n    if (this.listBoxRef && this.props.searchable !== true) {\n      this.listBoxRef.setAttribute('aria-activedescendant', `${this.props.makeOptionId(activeOptionIndex)}`);\n    }\n\n    if (this.listRef && typeof this.props.activeOptionIndex !== 'undefined') {\n      this.listRef.scrollToItem(this.props.activeOptionIndex, 'auto');\n    }\n  }\n\n  constructor(props) {\n    super(props);\n  }\n\n  ListRow = memo(({\n    data,\n    index,\n    style\n  }) => {\n    const option = data[index];\n    const {\n      label,\n      isGroupLabel,\n      checked,\n      disabled,\n      prepend,\n      append,\n      ref,\n      key,\n      searchableLabel,\n      ...optionRest\n    } = option;\n\n    if (isGroupLabel) {\n      return <li role=\"presentation\" className=\"euiSelectableList__groupLabel\" style={style} // @ts-ignore complex\n      {...optionRest}>\n          {prepend}\n          {label}\n          {append}\n        </li>;\n    }\n\n    const labelCount = data.filter(option => option.isGroupLabel).length;\n    return <EuiSelectableListItem id={this.props.makeOptionId(index)} style={style} key={key || label.toLowerCase()} onMouseDown={() => {\n      this.props.setActiveOptionIndex(index);\n    }} onClick={() => this.onAddOrRemoveOption(option)} ref={ref ? ref.bind(null, index) : undefined} isFocused={this.props.activeOptionIndex === index} title={searchableLabel || label} checked={checked} disabled={disabled} prepend={prepend} append={append} aria-posinset={index + 1 - labelCount} aria-setsize={data.length - labelCount} onFocusBadge={this.props.onFocusBadge} allowExclusions={this.props.allowExclusions} showIcons={this.props.showIcons} {...optionRest}>\n        {this.props.renderOption ? this.props.renderOption(option, this.props.searchValue) : <EuiHighlight search={this.props.searchValue}>{label}</EuiHighlight>}\n      </EuiSelectableListItem>;\n  }, areEqual);\n\n  render() {\n    const {\n      className,\n      options,\n      searchValue,\n      onOptionClick,\n      renderOption,\n      height: forcedHeight,\n      windowProps,\n      rowHeight,\n      activeOptionIndex,\n      makeOptionId,\n      showIcons,\n      singleSelection,\n      visibleOptions,\n      allowExclusions,\n      bordered,\n      searchable,\n      onFocusBadge,\n      listId,\n      setActiveOptionIndex,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledby,\n      'aria-describedby': ariaDescribedby,\n      ...rest\n    } = this.props;\n    const optionArray = visibleOptions || options;\n    const heightIsFull = forcedHeight === 'full';\n    let calculatedHeight = heightIsFull ? false : forcedHeight; // If calculatedHeight is still undefined, then calculate it\n\n    if (calculatedHeight === undefined) {\n      const maxVisibleOptions = 7;\n      const numVisibleOptions = optionArray.length;\n      const numVisibleMoreThanMax = optionArray.length > maxVisibleOptions;\n\n      if (numVisibleMoreThanMax) {\n        // Show only half of the last one to indicate there's more to scroll to\n        calculatedHeight = (maxVisibleOptions - 0.5) * rowHeight;\n      } else {\n        calculatedHeight = numVisibleOptions * rowHeight;\n      }\n    }\n\n    const classes = classNames('euiSelectableList', {\n      'euiSelectableList-fullHeight': heightIsFull,\n      'euiSelectableList-bordered': bordered\n    }, className);\n    return <div className={classes} {...rest}>\n        <AutoSizer disableHeight={!heightIsFull}>\n          {({\n          width,\n          height\n        }) => <FixedSizeList ref={this.setListRef} outerRef={this.removeScrollableTabStop} className=\"euiSelectableList__list\" data-skip-axe=\"scrollable-region-focusable\" width={width} height={calculatedHeight || height} itemCount={optionArray.length} itemData={optionArray} itemSize={rowHeight} innerElementType=\"ul\" innerRef={this.setListBoxRef} {...windowProps}>\n              {this.ListRow}\n            </FixedSizeList>}\n        </AutoSizer>\n      </div>;\n  }\n\n  onAddOrRemoveOption = option => {\n    if (option.disabled) {\n      return;\n    }\n\n    const {\n      allowExclusions,\n      options,\n      visibleOptions = options\n    } = this.props;\n    this.props.setActiveOptionIndex(visibleOptions.findIndex(({\n      label\n    }) => label === option.label), () => {\n      if (option.checked === 'on' && allowExclusions) {\n        this.onExcludeOption(option);\n      } else if (option.checked === 'on' || option.checked === 'off') {\n        this.onRemoveOption(option);\n      } else {\n        this.onAddOption(option);\n      }\n    });\n  };\n  onAddOption = addedOption => {\n    const {\n      onOptionClick,\n      options,\n      singleSelection\n    } = this.props;\n    const updatedOptions = options.map(option => {\n      // if singleSelection is enabled, uncheck any selected option(s)\n      const updatedOption = { ...option\n      };\n\n      if (singleSelection) {\n        delete updatedOption.checked;\n      } // if this is the now-selected option, check it\n\n\n      if (option === addedOption) {\n        updatedOption.checked = 'on';\n      }\n\n      return updatedOption;\n    });\n    onOptionClick(updatedOptions);\n  };\n  onRemoveOption = removedOption => {\n    const {\n      onOptionClick,\n      singleSelection,\n      options\n    } = this.props;\n    const updatedOptions = options.map(option => {\n      const updatedOption = { ...option\n      };\n\n      if (option === removedOption && singleSelection !== 'always') {\n        delete updatedOption.checked;\n      }\n\n      return updatedOption;\n    });\n    onOptionClick(updatedOptions);\n  };\n  onExcludeOption = excludedOption => {\n    const {\n      onOptionClick,\n      options\n    } = this.props;\n    excludedOption.checked = 'off';\n    const updatedOptions = options.map(option => {\n      const updatedOption = { ...option\n      };\n\n      if (option === excludedOption) {\n        updatedOption.checked = 'off';\n      }\n\n      return updatedOption;\n    });\n    onOptionClick(updatedOptions);\n  };\n}\nEuiSelectableList.propTypes = {\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n\n  /**\n       * The index of the option to be highlighted as pseudo-focused;\n       * Good for use when only one selection is allowed and needing to open\n       * directly to that option\n       */\n  activeOptionIndex: PropTypes.number,\n\n  /**\n       *  The height of each option in pixels. Defaults to `32`\n       */\n  rowHeight: PropTypes.number.isRequired,\n\n  /**\n       * Show the check/cross selection indicator icons\n       */\n  showIcons: PropTypes.bool,\n  singleSelection: PropTypes.oneOfType([PropTypes.oneOf([\"always\"]), PropTypes.bool.isRequired]),\n\n  /**\n       * Any props to send specifically to the react-window `FixedSizeList`\n       */\n  windowProps: PropTypes.any,\n\n  /**\n       * Adds a border around the list to indicate the bounds;\n       * Useful when the list scrolls, otherwise use your own container\n       */\n  bordered: PropTypes.bool,\n\n  /**\n       * When enabled by setting to either `true` or passing custom text,\n       * shows a hollow badge as an append (far right) when the item is focused.\n       * The default content when `true` is `↩ to select/deselect/include/exclude`\n       */\n  onFocusBadge: PropTypes.oneOfType([PropTypes.bool.isRequired, PropTypes.shape({\n    /**\n       * Accepts any string from our icon library\n       */\n    iconType: PropTypes.oneOfType([PropTypes.oneOf([\"accessibility\", \"addDataApp\", \"advancedSettingsApp\", \"aggregate\", \"alert\", \"analyzeEvent\", \"annotation\", \"apmApp\", \"apmTrace\", \"apps\", \"appSearchApp\", \"arrowDown\", \"arrowLeft\", \"arrowRight\", \"arrowUp\", \"asterisk\", \"auditbeatApp\", \"beaker\", \"bell\", \"bellSlash\", \"bolt\", \"boxesHorizontal\", \"boxesVertical\", \"branch\", \"broom\", \"brush\", \"bug\", \"bullseye\", \"calendar\", \"canvasApp\", \"codeApp\", \"check\", \"checkInCircleFilled\", \"cheer\", \"classificationJob\", \"clock\", \"cloudDrizzle\", \"cloudStormy\", \"cloudSunny\", \"color\", \"compute\", \"console\", \"consoleApp\", \"continuityAbove\", \"continuityAboveBelow\", \"continuityBelow\", \"continuityWithin\", \"controlsHorizontal\", \"controlsVertical\", \"copy\", \"copyClipboard\", \"createAdvancedJob\", \"createMultiMetricJob\", \"createPopulationJob\", \"createSingleMetricJob\", \"cross\", \"crossClusterReplicationApp\", \"crosshairs\", \"crossInACircleFilled\", \"currency\", \"cut\", \"dashboardApp\", \"database\", \"dataVisualizer\", \"devToolsApp\", \"discoverApp\", \"document\", \"documentation\", \"documentEdit\", \"documents\", \"dot\", \"download\", \"editorAlignCenter\", \"editorAlignLeft\", \"editorAlignRight\", \"editorBold\", \"editorCodeBlock\", \"editorComment\", \"editorDistributeHorizontal\", \"editorDistributeVertical\", \"editorHeading\", \"editorItalic\", \"editorItemAlignLeft\", \"editorItemAlignBottom\", \"editorItemAlignCenter\", \"editorItemAlignMiddle\", \"editorItemAlignRight\", \"editorItemAlignTop\", \"editorLink\", \"editorOrderedList\", \"editorPositionBottomLeft\", \"editorPositionBottomRight\", \"editorPositionTopLeft\", \"editorPositionTopRight\", \"editorRedo\", \"editorStrike\", \"editorTable\", \"editorUnderline\", \"editorUndo\", \"editorUnorderedList\", \"email\", \"empty\", \"emsApp\", \"eql\", \"eraser\", \"exit\", \"expand\", \"expandMini\", \"exportAction\", \"eye\", \"eyeClosed\", \"faceHappy\", \"faceNeutral\", \"faceSad\", \"filebeatApp\", \"filter\", \"flag\", \"fold\", \"folderCheck\", \"folderClosed\", \"folderExclamation\", \"folderOpen\", \"frameNext\", \"framePrevious\", \"fullScreen\", \"fullScreenExit\", \"function\", \"gear\", \"gisApp\", \"glasses\", \"globe\", \"grab\", \"grabHorizontal\", \"graphApp\", \"grid\", \"grokApp\", \"heart\", \"heartbeatApp\", \"heatmap\", \"help\", \"home\", \"iInCircle\", \"image\", \"importAction\", \"indexClose\", \"indexEdit\", \"indexFlush\", \"indexManagementApp\", \"indexMapping\", \"indexOpen\", \"indexPatternApp\", \"indexRollupApp\", \"indexRuntime\", \"indexSettings\", \"inputOutput\", \"inspect\", \"invert\", \"ip\", \"keyboardShortcut\", \"kqlField\", \"kqlFunction\", \"kqlOperand\", \"kqlSelector\", \"kqlValue\", \"layers\", \"lensApp\", \"link\", \"list\", \"listAdd\", \"lock\", \"lockOpen\", \"logsApp\", \"logoAerospike\", \"logoApache\", \"logoAppSearch\", \"logoAWS\", \"logoAWSMono\", \"logoAzure\", \"logoAzureMono\", \"logoBeats\", \"logoBusinessAnalytics\", \"logoCeph\", \"logoCloud\", \"logoCloudEnterprise\", \"logoCode\", \"logoCodesandbox\", \"logoCouchbase\", \"logoDocker\", \"logoDropwizard\", \"logoElastic\", \"logoElasticsearch\", \"logoElasticStack\", \"logoEnterpriseSearch\", \"logoEtcd\", \"logoGCP\", \"logoGCPMono\", \"logoGithub\", \"logoGmail\", \"logoGolang\", \"logoGoogleG\", \"logoHAproxy\", \"logoIBM\", \"logoIBMMono\", \"logoKafka\", \"logoKibana\", \"logoKubernetes\", \"logoLogging\", \"logoLogstash\", \"logoMaps\", \"logoMemcached\", \"logoMetrics\", \"logoMongodb\", \"logoMySQL\", \"logoNginx\", \"logoObservability\", \"logoOsquery\", \"logoPhp\", \"logoPostgres\", \"logoPrometheus\", \"logoRabbitmq\", \"logoRedis\", \"logoSecurity\", \"logoSiteSearch\", \"logoSketch\", \"logoSlack\", \"logoUptime\", \"logoWebhook\", \"logoWindows\", \"logoWorkplaceSearch\", \"logstashFilter\", \"logstashIf\", \"logstashInput\", \"logstashOutput\", \"logstashQueue\", \"machineLearningApp\", \"magnet\", \"magnifyWithMinus\", \"magnifyWithPlus\", \"managementApp\", \"mapMarker\", \"memory\", \"menu\", \"menuDown\", \"menuLeft\", \"menuRight\", \"menuUp\", \"merge\", \"metricbeatApp\", \"metricsApp\", \"minimize\", \"minus\", \"minusInCircle\", \"minusInCircleFilled\", \"mobile\", \"monitoringApp\", \"moon\", \"nested\", \"node\", \"notebookApp\", \"number\", \"offline\", \"online\", \"outlierDetectionJob\", \"package\", \"packetbeatApp\", \"pageSelect\", \"pagesSelect\", \"partial\", \"paperClip\", \"pause\", \"pencil\", \"percent\", \"pin\", \"pinFilled\", \"pipelineApp\", \"play\", \"playFilled\", \"plus\", \"plusInCircle\", \"plusInCircleFilled\", \"popout\", \"push\", \"questionInCircle\", \"quote\", \"recentlyViewedApp\", \"refresh\", \"regressionJob\", \"reporter\", \"reportingApp\", \"returnKey\", \"save\", \"savedObjectsApp\", \"scale\", \"search\", \"searchProfilerApp\", \"securityAnalyticsApp\", \"securityApp\", \"securitySignal\", \"securitySignalDetected\", \"securitySignalResolved\", \"shard\", \"share\", \"snowflake\", \"sortable\", \"sortDown\", \"sortLeft\", \"sortRight\", \"sortUp\", \"spacesApp\", \"sqlApp\", \"starEmpty\", \"starEmptySpace\", \"starFilled\", \"starFilledSpace\", \"starMinusEmpty\", \"starMinusFilled\", \"starPlusEmpty\", \"starPlusFilled\", \"stats\", \"stop\", \"stopFilled\", \"stopSlash\", \"storage\", \"string\", \"submodule\", \"swatchInput\", \"symlink\", \"tableOfContents\", \"tableDensityExpanded\", \"tableDensityCompact\", \"tableDensityNormal\", \"tag\", \"tear\", \"temperature\", \"timeline\", \"timelionApp\", \"timeslider\", \"training\", \"trash\", \"upgradeAssistantApp\", \"uptimeApp\", \"unfold\", \"unlink\", \"user\", \"users\", \"usersRolesApp\", \"vector\", \"videoPlayer\", \"visArea\", \"visAreaStacked\", \"visBarHorizontal\", \"visBarHorizontalStacked\", \"visBarVertical\", \"visBarVerticalStacked\", \"visGauge\", \"visGoal\", \"visLine\", \"visMapCoordinate\", \"visMapRegion\", \"visMetric\", \"visPie\", \"visTable\", \"visTagCloud\", \"visText\", \"visTimelion\", \"visualizeApp\", \"visVega\", \"visVisualBuilder\", \"watchesApp\", \"wordWrap\", \"wordWrapDisabled\", \"workplaceSearchApp\", \"wrench\", \"tokenClass\", \"tokenProperty\", \"tokenEnum\", \"tokenVariable\", \"tokenMethod\", \"tokenAnnotation\", \"tokenException\", \"tokenInterface\", \"tokenParameter\", \"tokenField\", \"tokenElement\", \"tokenFunction\", \"tokenBoolean\", \"tokenString\", \"tokenArray\", \"tokenNumber\", \"tokenConstant\", \"tokenObject\", \"tokenEvent\", \"tokenKey\", \"tokenNull\", \"tokenStruct\", \"tokenPackage\", \"tokenOperator\", \"tokenEnumMember\", \"tokenRepo\", \"tokenSymbol\", \"tokenFile\", \"tokenModule\", \"tokenNamespace\", \"tokenDate\", \"tokenIP\", \"tokenNested\", \"tokenAlias\", \"tokenShape\", \"tokenGeo\", \"tokenRange\", \"tokenBinary\", \"tokenJoin\", \"tokenPercolator\", \"tokenFlattened\", \"tokenRankFeature\", \"tokenRankFeatures\", \"tokenKeyword\", \"tokenCompletionSuggester\", \"tokenDenseVector\", \"tokenText\", \"tokenTokenCount\", \"tokenSearchType\", \"tokenHistogram\"]).isRequired, PropTypes.string.isRequired, PropTypes.elementType.isRequired]),\n\n    /**\n       * The side of the badge the icon should sit\n       */\n    iconSide: PropTypes.oneOf([\"left\", \"right\"]),\n\n    /**\n       * Accepts either our palette colors (primary, success ..etc) or a hex value `#FFFFFF`, `#000`.\n       * **`secondary` color is DEPRECATED, use `success` instead**\n       */\n    color: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.oneOf([\"default\", \"primary\", \"secondary\", \"success\", \"accent\", \"warning\", \"danger\", \"text\", \"subdued\", \"ghost\", \"inherit\"]).isRequired]),\n\n    /**\n       * Will override any color passed through the `color` prop.\n       */\n    isDisabled: PropTypes.bool,\n\n    /**\n       * Props passed to the close button.\n       */\n    closeButtonProps: PropTypes.any,\n    className: PropTypes.string,\n    \"aria-label\": PropTypes.string,\n    \"data-test-subj\": PropTypes.string,\n\n    /**\n       * Will apply an onclick to icon within the badge\n       */\n    iconOnClick: PropTypes.func,\n\n    /**\n       * Aria label applied to the iconOnClick button\n       */\n    iconOnClickAriaLabel: PropTypes.any,\n\n    /**\n       * Will apply an onclick to the badge itself\n       */\n    onClick: PropTypes.func,\n\n    /**\n       * Aria label applied to the onClick button\n       */\n    onClickAriaLabel: PropTypes.any,\n    href: PropTypes.string,\n    target: PropTypes.string,\n    rel: PropTypes.string\n  }).isRequired]),\n\n  /**\n     * All possible options\n     */\n  options: PropTypes.arrayOf(PropTypes.shape({\n    /**\n       * Optional `boolean`.\n       * Set to `true` to indicate object is just a grouping label, not a selectable item\n       */\n    isGroupLabel: PropTypes.oneOfType([PropTypes.oneOf([true]).isRequired, PropTypes.oneOf([false])]),\n    className: PropTypes.string,\n    \"aria-label\": PropTypes.string,\n    \"data-test-subj\": PropTypes.string,\n\n    /**\n       * Visible label of option.\n       * Must be unique across items if `key` is not supplied\n       */\n    label: PropTypes.string,\n\n    /**\n       * Optionally change the searchable term by passing a different string other than the `label`.\n       * Best used when creating a custom `optionRender` to separate the label from metadata but allowing to search on both\n       */\n    searchableLabel: PropTypes.string,\n\n    /**\n       * Must be unique across items.\n       * Will be used to match options instead of `label`\n       */\n    key: PropTypes.string,\n\n    /**\n       * Leave `undefined` to indicate not selected,\n       * 'on' to indicate inclusion and\n       * 'off' to indicate exclusion\n       */\n    checked: PropTypes.oneOf([\"on\", \"off\", undefined]),\n    disabled: PropTypes.bool,\n\n    /**\n       * Node to add between the selection icon and the label\n       */\n    prepend: PropTypes.node,\n\n    /**\n       * Node to add to the far right of the item\n       */\n    append: PropTypes.node,\n    ref: PropTypes.func\n  }).isRequired).isRequired,\n\n  /**\n     * Filtered options list (if applicable)\n     */\n  visibleOptions: PropTypes.arrayOf(PropTypes.shape({\n    isGroupLabel: PropTypes.oneOfType([PropTypes.oneOf([true]).isRequired, PropTypes.oneOf([false])]),\n    className: PropTypes.string,\n    \"aria-label\": PropTypes.string,\n    \"data-test-subj\": PropTypes.string,\n    label: PropTypes.string,\n    searchableLabel: PropTypes.string,\n    key: PropTypes.string,\n    checked: PropTypes.oneOf([\"on\", \"off\", undefined]),\n    disabled: PropTypes.bool,\n    prepend: PropTypes.node,\n    append: PropTypes.node,\n    ref: PropTypes.func\n  }).isRequired),\n\n  /**\n     * Search value to highlight on the option render\n     */\n  searchValue: PropTypes.string.isRequired,\n\n  /**\n     * Returns the array of options with altered checked state\n     */\n  onOptionClick: PropTypes.func.isRequired,\n\n  /**\n     * Custom render for the label portion of the option;\n     * Takes (option, searchValue), returns ReactNode\n     */\n  renderOption: PropTypes.func,\n\n  /**\n     * Sets the max height in pixels or pass `full` to allow\n     * the whole group to fill the height of its container and\n     * allows the list grow as well\n     */\n  height: PropTypes.oneOfType([PropTypes.number.isRequired, PropTypes.oneOf([\"full\"])]),\n\n  /**\n     * Allow cycling through the on, off and undefined state of option.checked\n     * and not just on and undefined\n     */\n  allowExclusions: PropTypes.bool,\n  searchable: PropTypes.bool,\n  makeOptionId: PropTypes.func.isRequired,\n  listId: PropTypes.string.isRequired,\n  setActiveOptionIndex: PropTypes.func.isRequired\n};\n\ntry {\n  EuiSelectableList.__docgenInfo = {\n    description: '',\n    displayName: 'EuiSelectableList',\n    methods: [],\n    props: {\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: 'Defines a string value that labels the current element.\\n' + '@see aria-labelledby.',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'data-test-subj': {\n        defaultValue: null,\n        description: '',\n        name: 'data-test-subj',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      activeOptionIndex: {\n        defaultValue: null,\n        description: 'The index of the option to be highlighted as pseudo-focused;\\n' + 'Good for use when only one selection is allowed and needing to open\\n' + 'directly to that option',\n        name: 'activeOptionIndex',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'number'\n        }\n      },\n      rowHeight: {\n        defaultValue: {\n          value: '32'\n        },\n        description: 'The height of each option in pixels. Defaults to `32`',\n        name: 'rowHeight',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'number'\n        }\n      },\n      showIcons: {\n        defaultValue: null,\n        description: 'Show the check/cross selection indicator icons',\n        name: 'showIcons',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      singleSelection: {\n        defaultValue: null,\n        description: '',\n        name: 'singleSelection',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean | \"always\"'\n        }\n      },\n      windowProps: {\n        defaultValue: null,\n        description: 'Any props to send specifically to the react-window `FixedSizeList`',\n        name: 'windowProps',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'Partial<ListProps>'\n        }\n      },\n      bordered: {\n        defaultValue: null,\n        description: 'Adds a border around the list to indicate the bounds;\\n' + 'Useful when the list scrolls, otherwise use your own container',\n        name: 'bordered',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      onFocusBadge: {\n        defaultValue: null,\n        description: 'When enabled by setting to either `true` or passing custom text,\\n' + 'shows a hollow badge as an append (far right) when the item is focused.\\n' + 'The default content when `true` is `↩ to select/deselect/include/exclude`',\n        name: 'onFocusBadge',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean | ({ iconType?: IconType; iconSide?: ToastSide; color?: string; isDisabled?: boolean; closeButtonProps?: Partial<EuiIconProps>; } & CommonProps & DisambiguateSet<...> & DisambiguateSet<...> & Pick<...>) | ... 4 more ... | ({ ...; } & ... 6 more ... & Pick<...>)'\n        }\n      },\n      options: {\n        defaultValue: null,\n        description: 'All possible options',\n        name: 'options',\n        parent: undefined,\n        required: true,\n        type: {\n          name: 'ExclusiveUnion<EuiSelectableGroupLabelOption<T>, EuiSelectableLIOption<T>>[]'\n        }\n      },\n      visibleOptions: {\n        defaultValue: null,\n        description: 'Filtered options list (if applicable)',\n        name: 'visibleOptions',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'ExclusiveUnion<EuiSelectableGroupLabelOption<T>, EuiSelectableLIOption<T>>[]'\n        }\n      },\n      searchValue: {\n        defaultValue: {\n          value: ''\n        },\n        description: 'Search value to highlight on the option render',\n        name: 'searchValue',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      onOptionClick: {\n        defaultValue: null,\n        description: 'Returns the array of options with altered checked state',\n        name: 'onOptionClick',\n        parent: undefined,\n        required: true,\n        type: {\n          name: '(options: ExclusiveUnion<EuiSelectableGroupLabelOption<T>, EuiSelectableLIOption<T>>[]) => void'\n        }\n      },\n      renderOption: {\n        defaultValue: null,\n        description: 'Custom render for the label portion of the option;\\n' + 'Takes (option, searchValue), returns ReactNode',\n        name: 'renderOption',\n        parent: undefined,\n        required: false,\n        type: {\n          name: '(option: ExclusiveUnion<EuiSelectableGroupLabelOption<T>, EuiSelectableLIOption<T>>, searchValue: string) => ReactNode'\n        }\n      },\n      height: {\n        defaultValue: null,\n        description: 'Sets the max height in pixels or pass `full` to allow\\n' + 'the whole group to fill the height of its container and\\n' + 'allows the list grow as well',\n        name: 'height',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'number | \"full\"'\n        }\n      },\n      allowExclusions: {\n        defaultValue: null,\n        description: 'Allow cycling through the on, off and undefined state of option.checked\\n' + 'and not just on and undefined',\n        name: 'allowExclusions',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      searchable: {\n        defaultValue: null,\n        description: '',\n        name: 'searchable',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      makeOptionId: {\n        defaultValue: null,\n        description: '',\n        name: 'makeOptionId',\n        parent: undefined,\n        required: true,\n        type: {\n          name: '(index: number) => string'\n        }\n      },\n      listId: {\n        defaultValue: null,\n        description: '',\n        name: 'listId',\n        parent: undefined,\n        required: true,\n        type: {\n          name: 'string'\n        }\n      },\n      setActiveOptionIndex: {\n        defaultValue: null,\n        description: '',\n        name: 'setActiveOptionIndex',\n        parent: undefined,\n        required: true,\n        type: {\n          name: '(index: number, cb?: () => void) => void'\n        }\n      }\n    },\n    extendedInterfaces: ['CommonProps', 'HTMLAttributes', 'AriaAttributes', 'DOMAttributes']\n  };\n} catch (e) {}"]}]}