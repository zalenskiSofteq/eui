{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\basic_table\\in_memory_table.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\basic_table\\in_memory_table.tsx","mtime":1649070093297},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/basic_table/in_memory_table.tsx"],"names":["React","Component","EuiBasicTable","defaults","paginationBarDefaults","isString","Comparators","EuiSearchBar","EuiSpacer","isEuiSearchBarProps","x","getQueryFromSearch","search","defaultQuery","query","Query","parse","getInitialPagination","pagination","pageIndex","undefined","pageSize","pageSizeOptions","hidePerPageOptions","defaultPageSize","initialPageIndex","initialPageSize","includes","Error","findColumnByProp","columns","prop","value","i","length","column","getInitialSorting","sorting","sort","sortName","sortDirection","sortable","field","direction","sortColumn","name","EuiInMemoryTable","nextProps","prevState","updatedPrevState","items","prevProps","nextPageIndex","nextQuery","prevQuery","props","page","index","size","reportedSortName","state","allowNeutralSort","onTableChange","setState","queryText","error","onChange","shouldQueryInMemory","tableRef","createRef","newSelection","current","setSelection","searchBarProps","_searchBarProps","box","schema","resolveSearchSchema","onQueryChange","reduce","dataType","type","fields","strict","find","default","property","executeQueryOptions","totalItemCount","matchingItems","execute","sortedItems","slice","getItemSorter","visibleItems","startIndex","Math","min","loading","message","selection","isSelectable","hasActions","compressed","hasPagination","hasSorting","itemIdToExpandedRowMap","itemId","rowProps","cellProps","tableLayout","_unuseditems","childrenBetween","rest","getItems","searchBar","renderSearchBar","table","responsive"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAA4C,OAA5C;;AACA,SACEC,aADF,QAMO,eANP;AAaA,SACEC,QAAQ,IAAIC,qBADd,QAGO,kBAHP;AAIA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,WAAT,QAAuC,qBAAvC;AACA,SAASC,YAAT,QAAoC,eAApC;AACA,SAASC,SAAT,QAA0B,WAA1B;;AAWA,SAASC,mBAAT,CACEC,CADF,EAE0B;AACxB,SAAO,OAAOA,CAAP,KAAa,SAApB;AACD;;AAgFD,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CACzBC,MADyB,EAEzBC,YAFyB,EAGtB;AACH,MAAIC,KAAJ;;AACA,MAAI,CAACF,MAAL,EAAa;AACXE,IAAAA,KAAK,GAAG,EAAR;AACD,GAFD,MAEO;AACLA,IAAAA,KAAK,GACH,CAACD,YAAY,GACRD,MAAD,CAA8BC,YAA9B,IACCD,MAAD,CAA8BE,KAD9B,IAEA,EAHS,GAIRF,MAAD,CAA8BE,KAJlC,KAI4C,EAL9C;AAMD;;AAED,SAAOT,QAAQ,CAACS,KAAD,CAAR,GAAkBP,YAAY,CAACQ,KAAb,CAAmBC,KAAnB,CAAyBF,KAAzB,CAAlB,GAAoDA,KAA3D;AACD,CAjBD;;AAmBA,IAAMG,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,UAAD,EAAwC;AACnE,MAAI,CAACA,UAAL,EAAiB;AACf,WAAO;AACLC,MAAAA,SAAS,EAAEC,SADN;AAELC,MAAAA,QAAQ,EAAED;AAFL,KAAP;AAID;;AANkE,aAW/DF,UAX+D;AAAA,kCASjEI,eATiE;AAAA,MASjEA,eATiE,qCAS/ClB,qBAAqB,CAACkB,eATyB;AAAA,MAUjEC,kBAViE,QAUjEA,kBAViE;AAanE,MAAMC,eAAe,GAAGF,eAAe,GACnCA,eAAe,CAAC,CAAD,CADoB,GAEnClB,qBAAqB,CAACkB,eAAtB,CAAsC,CAAtC,CAFJ;AAIA,MAAMG,gBAAgB,GACpBP,UAAU,KAAK,IAAf,GACI,CADJ,GAEIA,UAAU,CAACC,SAAX,IAAwBD,UAAU,CAACO,gBAAnC,IAAuD,CAH7D;AAIA,MAAMC,eAAe,GACnBR,UAAU,KAAK,IAAf,GACIM,eADJ,GAEIN,UAAU,CAACG,QAAX,IAAuBH,UAAU,CAACQ,eAAlC,IAAqDF,eAH3D;;AAKA,MACE,CAACD,kBAAD,IACAG,eADA,KAEC,CAACJ,eAAD,IAAoB,CAACA,eAAe,CAACK,QAAhB,CAAyBD,eAAzB,CAFtB,CADF,EAIE;AACA,UAAM,IAAIE,KAAJ,qDACyCF,eADzC,qDAAN;AAGD;;AAED,SAAO;AACLP,IAAAA,SAAS,EAAEM,gBADN;AAELJ,IAAAA,QAAQ,EAAEK,eAFL;AAGLJ,IAAAA,eAAe,EAAfA,eAHK;AAILC,IAAAA,kBAAkB,EAAlBA;AAJK,GAAP;AAMD,CA1CD;;AA4CA,SAASM,gBAAT,CACEC,OADF,EAEEC,IAFF,EAGEC,KAHF,EAIE;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,OAAO,CAACI,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,QAAME,MAAM,GAAGL,OAAO,CAACG,CAAD,CAAtB;;AACA,QACGE,MAAD,CACEJ,IADF,MAEMC,KAHR,EAIE;AACA,aAAOG,MAAP;AACD;AACF;AACF;;AAED,SAASC,iBAAT,CACEN,OADF,EAEEO,OAFF,EAGE;AACA,MAAI,CAACA,OAAD,IAAY,CAAEA,OAAD,CAA4BC,IAA7C,EAAmD;AACjD,WAAO;AACLC,MAAAA,QAAQ,EAAEnB,SADL;AAELoB,MAAAA,aAAa,EAAEpB;AAFV,KAAP;AAID;;AAND,cAWKiB,OAAD,CAA4BC,IAXhC;AAAA,MASSG,QATT,SASEC,KATF;AAAA,MAUaF,aAVb,SAUEG,SAVF,EAaA;AACA;;AACA,MAAIC,UAAU,GAAGf,gBAAgB,CAACC,OAAD,EAAU,OAAV,EAAmBW,QAAnB,CAAjC;;AACA,MAAIG,UAAU,IAAI,IAAlB,EAAwB;AACtBA,IAAAA,UAAU,GAAGf,gBAAgB,CAACC,OAAD,EAAU,MAAV,EAAkBW,QAAlB,CAA7B;AACD;;AAED,MAAIG,UAAU,IAAI,IAAlB,EAAwB;AACtB,WAAO;AACLL,MAAAA,QAAQ,EAAEnB,SADL;AAELoB,MAAAA,aAAa,EAAEpB;AAFV,KAAP;AAID;;AAED,MAAMmB,QAAQ,GAAGK,UAAU,CAACC,IAA5B;AAEA,SAAO;AACLN,IAAAA,QAAQ,EAARA,QADK;AAELC,IAAAA,aAAa,EAAbA;AAFK,GAAP;AAID;;AAED,WAAaM,gBAAb;AAAA;;AAAA;;AAAA;AAAA;AAAA,6CAWIC,SAXJ,EAYIC,SAZJ,EAaI;AACA,UAAIC,gBAAgB,GAAGD,SAAvB;;AACA,UAAID,SAAS,CAACG,KAAV,KAAoBF,SAAS,CAACG,SAAV,CAAoBD,KAA5C,EAAmD;AACjD;AAEA,YAAIE,aAAa,GAAG,CAApB;;AACA,YACEL,SAAS,CAAC7B,UAAV,IAAwB,IAAxB,IACA,OAAO6B,SAAS,CAAC7B,UAAjB,KAAgC,SAFlC,EAGE;AACAkC,UAAAA,aAAa,GAAGL,SAAS,CAAC7B,UAAV,CAAqBC,SAArB,IAAkC,CAAlD;AACD;;AAED8B,QAAAA,gBAAgB,mCACXA,gBADW;AAEdE,UAAAA,SAAS,kCACJF,gBAAgB,CAACE,SADb;AAEPD,YAAAA,KAAK,EAAEH,SAAS,CAACG;AAFV,YAFK;AAMd/B,UAAAA,SAAS,EAAEiC;AANG,UAAhB;AAQD,OArBD,CAuBA;;;AACA,UACEL,SAAS,CAAC7B,UAAV,IAAwB,IAAxB,IACA,OAAO6B,SAAS,CAAC7B,UAAjB,KAAgC,SAFlC,EAGE;AACA,YACE6B,SAAS,CAAC7B,UAAV,CAAqBG,QAArB,IAAiC,IAAjC,IACA0B,SAAS,CAAC7B,UAAV,CAAqBG,QAArB,KAAkC4B,gBAAgB,CAAC9B,SAFrD,EAGE;AACA8B,UAAAA,gBAAgB,mCACXA,gBADW;AAEd5B,YAAAA,QAAQ,EAAE0B,SAAS,CAAC7B,UAAV,CAAqBG;AAFjB,YAAhB;AAID;;AACD,YACE0B,SAAS,CAAC7B,UAAV,CAAqBC,SAArB,IAAkC,IAAlC,IACA4B,SAAS,CAAC7B,UAAV,CAAqBC,SAArB,KAAmC8B,gBAAgB,CAAC9B,SAFtD,EAGE;AACA8B,UAAAA,gBAAgB,mCACXA,gBADW;AAEd9B,YAAAA,SAAS,EAAE4B,SAAS,CAAC7B,UAAV,CAAqBC;AAFlB,YAAhB;AAID;AACF;;AA9CD,+BAgDoCiB,iBAAiB,CACnDW,SAAS,CAACjB,OADyC,EAEnDiB,SAAS,CAACV,OAFyC,CAhDrD;AAAA,UAgDQE,QAhDR,sBAgDQA,QAhDR;AAAA,UAgDkBC,aAhDlB,sBAgDkBA,aAhDlB;;AAoDA,UACED,QAAQ,KAAKS,SAAS,CAACG,SAAV,CAAoBZ,QAAjC,IACAC,aAAa,KAAKQ,SAAS,CAACG,SAAV,CAAoBX,aAFxC,EAGE;AACAS,QAAAA,gBAAgB,mCACXA,gBADW;AAEdV,UAAAA,QAAQ,EAARA,QAFc;AAGdC,UAAAA,aAAa,EAAbA;AAHc,UAAhB;AAKD;;AAED,UAAMa,SAAS,GAAGN,SAAS,CAACnC,MAAV,GACbmC,SAAS,CAACnC,MAAX,CAAwCE,KAD1B,GAEd,EAFJ;AAGA,UAAMwC,SAAS,GAAGN,SAAS,CAACG,SAAV,CAAoBvC,MAApB,GACboC,SAAS,CAACG,SAAV,CAAoBvC,MAArB,CAAkDE,KADpC,GAEd,EAFJ;;AAIA,UAAIuC,SAAS,KAAKC,SAAlB,EAA6B;AAC3BL,QAAAA,gBAAgB,mCACXA,gBADW;AAEdE,UAAAA,SAAS,kCACJF,gBAAgB,CAACE,SADb;AAEPvC,YAAAA,MAAM,EAAEmC,SAAS,CAACnC;AAFX,YAFK;AAMdE,UAAAA,KAAK,EAAEH,kBAAkB,CAACoC,SAAS,CAACnC,MAAX,EAAmB,KAAnB;AANX,UAAhB;AAQD;;AACD,UAAIqC,gBAAgB,KAAKD,SAAzB,EAAoC;AAClC,eAAOC,gBAAP;AACD;;AACD,aAAO,IAAP;AACD;AAjGH;;AAmGE,4BAAYM,KAAZ,EAA6C;AAAA;;AAAA;;AAC3C,8BAAMA,KAAN;;AAD2C;;AAAA,oEAuC7B,iBAAiC;AAAA,UAA9BC,IAA8B,SAA9BA,IAA8B;AAAA,UAAxBlB,IAAwB,SAAxBA,IAAwB;;AAAA,kBACHkB,IAAI,IAAI,EADL;AAAA,UAClCrC,SADkC,SACzCsC,KADyC;AAAA,UACjBpC,QADiB,SACvBqC,IADuB,EAM/C;AACA;;;AAP+C,UAQvCxC,UARuC,GAQxB,MAAKqC,KARmB,CAQvCrC,UARuC;;AAS/C,UAAIA,UAAU,IAAI,IAAd,IAAsB,OAAOA,UAAP,KAAsB,SAAhD,EAA2D;AACzD,YAAIA,UAAU,CAACG,QAAX,IAAuB,IAA3B,EAAiCA,QAAQ,GAAGH,UAAU,CAACG,QAAtB;AACjC,YAAIH,UAAU,CAACC,SAAX,IAAwB,IAA5B,EAAkCA,SAAS,GAAGD,UAAU,CAACC,SAAvB;AACnC;;AAZ8C,kBAcMmB,IAAI,IAAI,EAdd;AAAA,UAclCC,QAdkC,SAczCG,KAdyC;AAAA,UAcbF,aAda,SAcxBG,SAdwB,EAmB/C;AACA;;;AACA,UAAIgB,gBAAgB,GAAGpB,QAAvB,CArB+C,CAuB/C;AACA;;AACA,WAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,MAAKsB,KAAL,CAAWzB,OAAX,CAAmBI,MAAvC,EAA+CD,CAAC,EAAhD,EAAoD;AAClD,YAAME,MAAM,GAAG,MAAKoB,KAAL,CAAWzB,OAAX,CAAmBG,CAAnB,CAAf;;AACA,YACE,WAAWE,MAAX,IACCA,MAAD,CAA2CO,KAA3C,KAAqDH,QAFvD,EAGE;AACAA,UAAAA,QAAQ,GAAGJ,MAAM,CAACU,IAAlB;AACA;AACD;AACF,OAlC8C,CAoC/C;;;AACA,UACE,MAAKe,KAAL,CAAWC,gBAAX,IACA,MAAKD,KAAL,CAAWrB,QAAX,KAAwBA,QADxB,IAEA,MAAKqB,KAAL,CAAWpB,aAAX,KAA6B,MAF7B,IAGAA,aAAa,KAAK,KAJpB,EAKE;AACAD,QAAAA,QAAQ,GAAG,EAAX;AACAoB,QAAAA,gBAAgB,GAAG,EAAnB;AACAnB,QAAAA,aAAa,GAAG,KAAhB,CAHA,CAGuB;AACxB;;AAED,UAAI,MAAKe,KAAL,CAAWO,aAAf,EAA8B;AAC5B,cAAKP,KAAL,CAAWO,aAAX,CAAyB;AACvB;AACAN,UAAAA,IAAI,EAAJA,IAFuB;AAGvBlB,UAAAA,IAAI,EAAE;AACJI,YAAAA,KAAK,EAAEiB,gBADH;AAEJhB,YAAAA,SAAS,EAAEH;AAFP;AAHiB,SAAzB;AAQD;;AAED,YAAKuB,QAAL,CAAc;AACZ5C,QAAAA,SAAS,EAATA,SADY;AAEZE,QAAAA,QAAQ,EAARA,QAFY;AAGZkB,QAAAA,QAAQ,EAARA,QAHY;AAIZC,QAAAA,aAAa,EAAbA;AAJY,OAAd;AAMD,KAxG4C;;AAAA,oEA0G7B,iBAAmD;AAAA,UAAhD1B,KAAgD,SAAhDA,KAAgD;AAAA,UAAzCkD,SAAyC,SAAzCA,SAAyC;AAAA,UAA9BC,KAA8B,SAA9BA,KAA8B;AAAA,UACzDrD,MADyD,GAC9C,MAAK2C,KADyC,CACzD3C,MADyD;;AAEjE,UAAIH,mBAAmB,CAACG,MAAD,CAAvB,EAAiC;AAC/B,YAAIA,MAAM,CAACsD,QAAX,EAAqB;AACnB,cAAMC,mBAAmB,GACvBF,KAAK,IAAI,IAAT,GACIrD,MAAM,CAACsD,QAAP,CAAgB;AACdpD,YAAAA,KAAK,EAAEA,KADO;AAEdkD,YAAAA,SAAS,EAATA,SAFc;AAGdC,YAAAA,KAAK,EAAE;AAHO,WAAhB,CADJ,GAMIrD,MAAM,CAACsD,QAAP,CAAgB;AACdpD,YAAAA,KAAK,EAAE,IADO;AAEdkD,YAAAA,SAAS,EAATA,SAFc;AAGdC,YAAAA,KAAK,EAALA;AAHc,WAAhB,CAPN;;AAYA,cAAI,CAACE,mBAAL,EAA0B;AACxB;AACD;AACF;AACF,OApBgE,CAsBjE;;;AACA,YAAKJ,QAAL,CAAc,UAACH,KAAD;AAAA,eAAY;AACxBT,UAAAA,SAAS,kCACJS,KAAK,CAACT,SADF;AAEPvC,YAAAA,MAAM,EAANA;AAFO,YADe;AAKxBE,UAAAA,KAAK,EAALA,KALwB;AAMxBK,UAAAA,SAAS,EAAE;AANa,SAAZ;AAAA,OAAd;AAQD,KAzI4C;;AAAA,QAGnCW,OAHmC,GAGwByB,KAHxB,CAGnCzB,OAHmC;AAAA,QAG1BlB,OAH0B,GAGwB2C,KAHxB,CAG1B3C,MAH0B;AAAA,QAGlBM,WAHkB,GAGwBqC,KAHxB,CAGlBrC,UAHkB;AAAA,QAGNmB,OAHM,GAGwBkB,KAHxB,CAGNlB,OAHM;AAAA,QAGGwB,gBAHH,GAGwBN,KAHxB,CAGGM,gBAHH;;AAAA,gCASvC5C,oBAAoB,CAACC,WAAD,CATmB;AAAA,QAKzCC,UALyC,yBAKzCA,SALyC;AAAA,QAMzCE,SANyC,yBAMzCA,QANyC;AAAA,QAOzCC,eAPyC,yBAOzCA,eAPyC;AAAA,QAQzCC,kBARyC,yBAQzCA,kBARyC;;AAAA,8BAUPa,iBAAiB,CAACN,OAAD,EAAUO,OAAV,CAVV;AAAA,QAUnCE,SAVmC,uBAUnCA,QAVmC;AAAA,QAUzBC,cAVyB,uBAUzBA,aAVyB;;AAY3C,UAAKoB,KAAL,GAAa;AACXT,MAAAA,SAAS,EAAE;AACTD,QAAAA,KAAK,EAAEK,KAAK,CAACL,KADJ;AAETX,QAAAA,QAAQ,EAARA,SAFS;AAGTC,QAAAA,aAAa,EAAbA,cAHS;AAIT5B,QAAAA,MAAM,EAANA;AAJS,OADA;AAOXA,MAAAA,MAAM,EAAEA,OAPG;AAQXE,MAAAA,KAAK,EAAEH,kBAAkB,CAACC,OAAD,EAAS,IAAT,CARd;AASXO,MAAAA,SAAS,EAAEA,UAAS,IAAI,CATb;AAUXE,MAAAA,QAAQ,EAARA,SAVW;AAWXC,MAAAA,eAAe,EAAfA,eAXW;AAYXiB,MAAAA,QAAQ,EAARA,SAZW;AAaXC,MAAAA,aAAa,EAAbA,cAbW;AAcXqB,MAAAA,gBAAgB,EAAEA,gBAAgB,KAAK,KAd5B;AAeXtC,MAAAA,kBAAkB,EAAlBA;AAfW,KAAb;AAkBA,UAAK6C,QAAL,gBAAgBpE,KAAK,CAACqE,SAAN,EAAhB;AA9B2C;AA+B5C;;AAlIH;AAAA;AAAA,iCAoIeC,YApIf,EAoIkC;AAC9B,UAAI,KAAKF,QAAL,CAAcG,OAAlB,EAA2B;AACzB,aAAKH,QAAL,CAAcG,OAAd,CAAsBC,YAAtB,CAAmCF,YAAnC;AACD;AACF;AAxIH;AAAA;AAAA,sCA8OoB;AAAA,UACR1D,MADQ,GACG,KAAK2C,KADR,CACR3C,MADQ;;AAEhB,UAAIA,MAAJ,EAAY;AACV,YAAI6D,cAAmD,GAAG,EAA1D;;AAEA,YAAIhE,mBAAmB,CAACG,MAAD,CAAvB,EAAiC;AAAA,cACvBsD,QADuB,GACUtD,MADV,CACvBsD,QADuB;AAAA,cACVQ,eADU,4BACU9D,MADV;;AAE/B6D,UAAAA,cAAc,GAAGC,eAAjB;;AAEA,cAAID,cAAc,CAACE,GAAf,IAAsBF,cAAc,CAACE,GAAf,CAAmBC,MAAnB,KAA8B,IAAxD,EAA8D;AAC5DH,YAAAA,cAAc,CAACE,GAAf,mCACKF,cAAc,CAACE,GADpB;AAEEC,cAAAA,MAAM,EAAE,KAAKC,mBAAL;AAFV;AAID;AACF;;AAED,4BACE,uDACE,oBAAC,YAAD;AAAc,UAAA,QAAQ,EAAE,KAAKC;AAA7B,WAAgDL,cAAhD,EADF,eAEE,oBAAC,SAAD;AAAW,UAAA,IAAI,EAAC;AAAhB,UAFF,CADF;AAMD;AACF;AAtQH;AAAA;AAAA,0CAwQoC;AAAA,UACxB3C,OADwB,GACZ,KAAKyB,KADO,CACxBzB,OADwB;AAEhC,aAAOA,OAAO,CAACiD,MAAR,CAIL,UAACH,MAAD,EAASzC,MAAT,EAAoB;AAAA,oBACUA,MADV;AAAA,YACVO,KADU,SACVA,KADU;AAAA,YACHsC,QADG,SACHA,QADG;;AAElB,YAAItC,KAAJ,EAAW;AACT,cAAMuC,IAAI,GAAGD,QAAQ,IAAI,QAAzB;AACAJ,UAAAA,MAAM,CAACM,MAAP,CAAcxC,KAAd,IAAiC;AAAEuC,YAAAA,IAAI,EAAJA;AAAF,WAAjC;AACD;;AACD,eAAOL,MAAP;AACD,OAXI,EAYL;AAAEO,QAAAA,MAAM,EAAE,IAAV;AAAgBD,QAAAA,MAAM,EAAE;AAAxB,OAZK,CAAP;AAcD;AAxRH;AAAA;AAAA,oCA0R0C;AAAA,wBACF,KAAKtB,KADH;AAAA,UAC9BrB,QAD8B,eAC9BA,QAD8B;AAAA,UACpBC,aADoB,eACpBA,aADoB;AAAA,UAG9BV,OAH8B,GAGlB,KAAKyB,KAHa,CAG9BzB,OAH8B;AAKtC,UAAMc,UAAU,GAAGd,OAAO,CAACsD,IAAR,CACjB;AAAA,YAAGvC,IAAH,SAAGA,IAAH;AAAA,eAAcA,IAAI,KAAKN,QAAvB;AAAA,OADiB,CAAnB;;AAIA,UAAIK,UAAU,IAAI,IAAlB,EAAwB;AACtB;AACA,eAAO;AAAA,iBAAM,CAAN;AAAA,SAAP;AACD;;AAED,UAAMH,QAAQ,GAAGG,UAAU,CAACH,QAA5B;;AAEA,UAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;AAClC,eAAOnC,WAAW,CAAC0B,KAAZ,CAAkBS,QAAlB,EAA4BnC,WAAW,CAAC+E,OAAZ,CAAoB7C,aAApB,CAA5B,CAAP;AACD;;AAED,aAAOlC,WAAW,CAACgF,QAAZ,CACL1C,UAAU,CAACF,KADN,EAELpC,WAAW,CAAC+E,OAAZ,CAAoB7C,aAApB,CAFK,CAAP;AAID;AAlTH;AAAA;AAAA,+BAoTa;AAAA,UACD+C,mBADC,GACuB,KAAKhC,KAD5B,CACDgC,mBADC;AAAA,UAGMrC,KAHN,GAIL,KAAKU,KAJA,CAGPT,SAHO,CAGMD,KAHN;;AAMT,UAAI,CAACA,KAAK,CAAChB,MAAX,EAAmB;AACjB,eAAO;AACLgB,UAAAA,KAAK,EAAE,EADF;AAELsC,UAAAA,cAAc,EAAE;AAFX,SAAP;AAID;;AAXQ,yBAawC,KAAK5B,KAb7C;AAAA,UAaD9C,KAbC,gBAaDA,KAbC;AAAA,UAaMyB,QAbN,gBAaMA,QAbN;AAAA,UAagBpB,SAbhB,gBAagBA,SAbhB;AAAA,UAa2BE,QAb3B,gBAa2BA,QAb3B;AAeT,UAAMoE,aAAa,GAAG3E,KAAK,GACvBP,YAAY,CAACQ,KAAb,CAAmB2E,OAAnB,CAA2B5E,KAA3B,EAAkCoC,KAAlC,EAAyCqC,mBAAzC,CADuB,GAEvBrC,KAFJ;AAIA,UAAMyC,WAAW,GAAGpD,QAAQ,GACxBkD,aAAa,CACVG,KADH,CACS,CADT,EACY;AADZ,OAEGtD,IAFH,CAEQ,KAAKuD,aAAL,EAFR,CADwB,CAGM;AAHN,QAIxBJ,aAJJ;AAMA,UAAMK,YAAY,GAChBzE,QAAQ,IAAI,KAAKkC,KAAL,CAAWrC,UAAvB,GACK,YAAM;AACL,YAAM6E,UAAU,GAAG5E,SAAS,GAAGE,QAA/B;AACA,eAAOsE,WAAW,CAACC,KAAZ,CACLG,UADK,EAELC,IAAI,CAACC,GAAL,CAASF,UAAU,GAAG1E,QAAtB,EAAgCsE,WAAW,CAACzD,MAA5C,CAFK,CAAP;AAID,OAND,EADJ,GAQIyD,WATN;AAWA,aAAO;AACLzC,QAAAA,KAAK,EAAE4C,YADF;AAELN,QAAAA,cAAc,EAAEC,aAAa,CAACvD;AAFzB,OAAP;AAID;AA5VH;AAAA;AAAA,6BA8VW;AAAA,wBAwBH,KAAKqB,KAxBF;AAAA,UAELzB,OAFK,eAELA,OAFK;AAAA,UAGLoE,OAHK,eAGLA,OAHK;AAAA,UAILC,OAJK,eAILA,OAJK;AAAA,UAKLlC,KALK,eAKLA,KALK;AAAA,UAMLmC,SANK,eAMLA,SANK;AAAA,UAOLC,YAPK,eAOLA,YAPK;AAAA,UAQLC,UARK,eAQLA,UARK;AAAA,UASLC,UATK,eASLA,UATK;AAAA,UAUOC,aAVP,eAULtF,UAVK;AAAA,UAWIuF,UAXJ,eAWLpE,OAXK;AAAA,UAYLqE,sBAZK,eAYLA,sBAZK;AAAA,UAaLC,MAbK,eAaLA,MAbK;AAAA,UAcLC,QAdK,eAcLA,QAdK;AAAA,UAeLC,SAfK,eAeLA,SAfK;AAAA,UAgBLC,WAhBK,eAgBLA,WAhBK;AAAA,UAiBEC,YAjBF,eAiBL7D,KAjBK;AAAA,UAkBLtC,MAlBK,eAkBLA,MAlBK;AAAA,UAmBLkD,aAnBK,eAmBLA,aAnBK;AAAA,UAoBLyB,mBApBK,eAoBLA,mBApBK;AAAA,UAqBL1B,gBArBK,eAqBLA,gBArBK;AAAA,UAsBLmD,eAtBK,eAsBLA,eAtBK;AAAA,UAuBFC,IAvBE;;AAAA,yBAiCH,KAAKrD,KAjCF;AAAA,UA2BLzC,SA3BK,gBA2BLA,SA3BK;AAAA,UA4BLE,QA5BK,gBA4BLA,QA5BK;AAAA,UA6BLC,eA7BK,gBA6BLA,eA7BK;AAAA,UA8BLiB,QA9BK,gBA8BLA,QA9BK;AAAA,UA+BLC,aA/BK,gBA+BLA,aA/BK;AAAA,UAgCLjB,kBAhCK,gBAgCLA,kBAhCK;;AAAA,2BAmC2B,KAAK2F,QAAL,EAnC3B;AAAA,UAmCChE,KAnCD,kBAmCCA,KAnCD;AAAA,UAmCQsC,cAnCR,kBAmCQA,cAnCR;;AAqCP,UAAMtE,UAAyC,GAAG,CAACsF,aAAD,GAC9CpF,SAD8C,GAE9C;AACED,QAAAA,SAAS,EAATA,SADF;AAEEE,QAAAA,QAAQ,EAAEA,QAAQ,IAAI,CAFxB;AAGEC,QAAAA,eAAe,EAAfA,eAHF;AAIEkE,QAAAA,cAAc,EAAdA,cAJF;AAKEjE,QAAAA,kBAAkB,EAAlBA;AALF,OAFJ,CArCO,CA+CP;AACA;AACA;;AACA,UAAMc,OAA2C,GAAG,CAACoE,UAAD,GAChDrF,SADgD,GAEhD;AACEkB,QAAAA,IAAI,EACF,CAACC,QAAD,IAAa,CAACC,aAAd,GACIpB,SADJ,GAEI;AACEsB,UAAAA,KAAK,EAAEH,QADT;AAEEI,UAAAA,SAAS,EAAEH;AAFb,SAJR;AAQEqB,QAAAA,gBAAgB,EAAE,KAAKD,KAAL,CAAWC;AAR/B,OAFJ;AAaA,UAAMsD,SAAS,GAAG,KAAKC,eAAL,EAAlB;AAEA,UAAMC,KAAK;AAAA;AACT;AACA,0BAAC,aAAD;AACE,QAAA,GAAG,EAAE,KAAKjD,QADZ;AAEE,QAAA,KAAK,EAAElB,KAFT;AAGE,QAAA,MAAM,EAAEyD,MAHV;AAIE,QAAA,QAAQ,EAAEC,QAJZ;AAKE,QAAA,SAAS,EAAEC,SALb;AAME,QAAA,OAAO,EAAE/E,OANX;AAOE,QAAA,UAAU,EAAEZ,UAPd;AAQE,QAAA,OAAO,EAAEmB,OARX;AASE,QAAA,SAAS,EAAE+D,SATb;AAUE,QAAA,YAAY,EAAEC,YAVhB;AAWE,QAAA,UAAU,EAAEC,UAXd;AAYE,QAAA,QAAQ,EAAE,KAAKxC,aAZjB;AAaE,QAAA,KAAK,EAAEG,KAbT;AAcE,QAAA,OAAO,EAAEiC,OAdX;AAeE,QAAA,cAAc,EAAEC,OAflB;AAgBE,QAAA,WAAW,EAAEW,WAhBf;AAiBE,QAAA,UAAU,EAAEP,UAjBd;AAkBE,QAAA,sBAAsB,EAAEG;AAlB1B,SAmBMO,IAnBN,EAFF;;AAyBA,UAAI,CAACE,SAAL,EAAgB;AACd,eAAOE,KAAP;AACD;;AAED,0BACE,iCACGF,SADH,EAEGH,eAFH,EAGGK,KAHH,CADF;AAOD;AAncH;;AAAA;AAAA,EAAyCpH,SAAzC;;gBAAa6C,gB,kBAIW;AACpBwE,EAAAA,UAAU,EAAE,IADQ;AAEpBR,EAAAA,WAAW,EAAE;AAFO,C;;;;;;;;AAjQxsourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { EuiBasicTable } from './basic_table';\nimport { defaults as paginationBarDefaults } from './pagination_bar';\nimport { isString } from '../../services/predicate';\nimport { Comparators } from '../../services/sort';\nimport { EuiSearchBar } from '../search_bar';\nimport { EuiSpacer } from '../spacer';\n\nfunction isEuiSearchBarProps(x) {\n  return typeof x !== 'boolean';\n}\n\nvar getQueryFromSearch = function getQueryFromSearch(search, defaultQuery) {\n  var query;\n\n  if (!search) {\n    query = '';\n  } else {\n    query = (defaultQuery ? search.defaultQuery || search.query || '' : search.query) || '';\n  }\n\n  return isString(query) ? EuiSearchBar.Query.parse(query) : query;\n};\n\nvar getInitialPagination = function getInitialPagination(pagination) {\n  if (!pagination) {\n    return {\n      pageIndex: undefined,\n      pageSize: undefined\n    };\n  }\n\n  var _ref = pagination,\n      _ref$pageSizeOptions = _ref.pageSizeOptions,\n      pageSizeOptions = _ref$pageSizeOptions === void 0 ? paginationBarDefaults.pageSizeOptions : _ref$pageSizeOptions,\n      hidePerPageOptions = _ref.hidePerPageOptions;\n  var defaultPageSize = pageSizeOptions ? pageSizeOptions[0] : paginationBarDefaults.pageSizeOptions[0];\n  var initialPageIndex = pagination === true ? 0 : pagination.pageIndex || pagination.initialPageIndex || 0;\n  var initialPageSize = pagination === true ? defaultPageSize : pagination.pageSize || pagination.initialPageSize || defaultPageSize;\n\n  if (!hidePerPageOptions && initialPageSize && (!pageSizeOptions || !pageSizeOptions.includes(initialPageSize))) {\n    throw new Error(\"EuiInMemoryTable received initialPageSize \".concat(initialPageSize, \", which wasn't provided within pageSizeOptions.\"));\n  }\n\n  return {\n    pageIndex: initialPageIndex,\n    pageSize: initialPageSize,\n    pageSizeOptions: pageSizeOptions,\n    hidePerPageOptions: hidePerPageOptions\n  };\n};\n\nfunction findColumnByProp(columns, prop, value) {\n  for (var i = 0; i < columns.length; i++) {\n    var column = columns[i];\n\n    if (column[prop] === value) {\n      return column;\n    }\n  }\n}\n\nfunction getInitialSorting(columns, sorting) {\n  if (!sorting || !sorting.sort) {\n    return {\n      sortName: undefined,\n      sortDirection: undefined\n    };\n  }\n\n  var _sort = sorting.sort,\n      sortable = _sort.field,\n      sortDirection = _sort.direction; // sortable could be a column's `field` or its `name`\n  // for backwards compatibility `field` must be checked first\n\n  var sortColumn = findColumnByProp(columns, 'field', sortable);\n\n  if (sortColumn == null) {\n    sortColumn = findColumnByProp(columns, 'name', sortable);\n  }\n\n  if (sortColumn == null) {\n    return {\n      sortName: undefined,\n      sortDirection: undefined\n    };\n  }\n\n  var sortName = sortColumn.name;\n  return {\n    sortName: sortName,\n    sortDirection: sortDirection\n  };\n}\n\nexport class EuiInMemoryTable extends Component {\n  static defaultProps = {\n    responsive: true,\n    tableLayout: 'fixed'\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let updatedPrevState = prevState;\n\n    if (nextProps.items !== prevState.prevProps.items) {\n      // We have new items because an external search has completed, so reset pagination state.\n      let nextPageIndex = 0;\n\n      if (nextProps.pagination != null && typeof nextProps.pagination !== 'boolean') {\n        nextPageIndex = nextProps.pagination.pageIndex || 0;\n      }\n\n      updatedPrevState = { ...updatedPrevState,\n        prevProps: { ...updatedPrevState.prevProps,\n          items: nextProps.items\n        },\n        pageIndex: nextPageIndex\n      };\n    } // apply changes to controlled pagination\n\n\n    if (nextProps.pagination != null && typeof nextProps.pagination !== 'boolean') {\n      if (nextProps.pagination.pageSize != null && nextProps.pagination.pageSize !== updatedPrevState.pageIndex) {\n        updatedPrevState = { ...updatedPrevState,\n          pageSize: nextProps.pagination.pageSize\n        };\n      }\n\n      if (nextProps.pagination.pageIndex != null && nextProps.pagination.pageIndex !== updatedPrevState.pageIndex) {\n        updatedPrevState = { ...updatedPrevState,\n          pageIndex: nextProps.pagination.pageIndex\n        };\n      }\n    }\n\n    const {\n      sortName,\n      sortDirection\n    } = getInitialSorting(nextProps.columns, nextProps.sorting);\n\n    if (sortName !== prevState.prevProps.sortName || sortDirection !== prevState.prevProps.sortDirection) {\n      updatedPrevState = { ...updatedPrevState,\n        sortName,\n        sortDirection\n      };\n    }\n\n    const nextQuery = nextProps.search ? nextProps.search.query : '';\n    const prevQuery = prevState.prevProps.search ? prevState.prevProps.search.query : '';\n\n    if (nextQuery !== prevQuery) {\n      updatedPrevState = { ...updatedPrevState,\n        prevProps: { ...updatedPrevState.prevProps,\n          search: nextProps.search\n        },\n        query: getQueryFromSearch(nextProps.search, false)\n      };\n    }\n\n    if (updatedPrevState !== prevState) {\n      return updatedPrevState;\n    }\n\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n    const {\n      columns,\n      search,\n      pagination,\n      sorting,\n      allowNeutralSort\n    } = props;\n    const {\n      pageIndex,\n      pageSize,\n      pageSizeOptions,\n      hidePerPageOptions\n    } = getInitialPagination(pagination);\n    const {\n      sortName,\n      sortDirection\n    } = getInitialSorting(columns, sorting);\n    this.state = {\n      prevProps: {\n        items: props.items,\n        sortName,\n        sortDirection,\n        search\n      },\n      search: search,\n      query: getQueryFromSearch(search, true),\n      pageIndex: pageIndex || 0,\n      pageSize,\n      pageSizeOptions,\n      sortName,\n      sortDirection,\n      allowNeutralSort: allowNeutralSort !== false,\n      hidePerPageOptions\n    };\n    this.tableRef = React.createRef();\n  }\n\n  setSelection(newSelection) {\n    if (this.tableRef.current) {\n      this.tableRef.current.setSelection(newSelection);\n    }\n  }\n\n  onTableChange = ({\n    page,\n    sort\n  }) => {\n    let {\n      index: pageIndex,\n      size: pageSize\n    } = page || {}; // don't apply pagination changes that are otherwise controlled\n    // `page` is left unchanged as it goes to the consumer's `onTableChange` callback, allowing the app to respond\n\n    const {\n      pagination\n    } = this.props;\n\n    if (pagination != null && typeof pagination !== 'boolean') {\n      if (pagination.pageSize != null) pageSize = pagination.pageSize;\n      if (pagination.pageIndex != null) pageIndex = pagination.pageIndex;\n    }\n\n    let {\n      field: sortName,\n      direction: sortDirection\n    } = sort || {}; // To keep backwards compatibility reportedSortName needs to be tracked separately\n    // from sortName; sortName gets stored internally while reportedSortName is sent to the callback\n\n    let reportedSortName = sortName; // EuiBasicTable returns the column's `field` if it exists instead of `name`,\n    // map back to `name` if this is the case\n\n    for (let i = 0; i < this.props.columns.length; i++) {\n      const column = this.props.columns[i];\n\n      if ('field' in column && column.field === sortName) {\n        sortName = column.name;\n        break;\n      }\n    } // Allow going back to 'neutral' sorting\n\n\n    if (this.state.allowNeutralSort && this.state.sortName === sortName && this.state.sortDirection === 'desc' && sortDirection === 'asc') {\n      sortName = '';\n      reportedSortName = '';\n      sortDirection = 'asc'; // Default sort direction.\n    }\n\n    if (this.props.onTableChange) {\n      this.props.onTableChange({\n        // @ts-ignore complex relationship between pagination's existence and criteria, the code logic ensures this is correctly maintained\n        page,\n        sort: {\n          field: reportedSortName,\n          direction: sortDirection\n        }\n      });\n    }\n\n    this.setState({\n      pageIndex,\n      pageSize,\n      sortName,\n      sortDirection\n    });\n  };\n  onQueryChange = ({\n    query,\n    queryText,\n    error\n  }) => {\n    const {\n      search\n    } = this.props;\n\n    if (isEuiSearchBarProps(search)) {\n      if (search.onChange) {\n        const shouldQueryInMemory = error == null ? search.onChange({\n          query: query,\n          queryText,\n          error: null\n        }) : search.onChange({\n          query: null,\n          queryText,\n          error\n        });\n\n        if (!shouldQueryInMemory) {\n          return;\n        }\n      }\n    } // Reset pagination state.\n\n\n    this.setState(state => ({\n      prevProps: { ...state.prevProps,\n        search\n      },\n      query,\n      pageIndex: 0\n    }));\n  };\n\n  renderSearchBar() {\n    const {\n      search\n    } = this.props;\n\n    if (search) {\n      let searchBarProps = {};\n\n      if (isEuiSearchBarProps(search)) {\n        const {\n          onChange,\n          ..._searchBarProps\n        } = search;\n        searchBarProps = _searchBarProps;\n\n        if (searchBarProps.box && searchBarProps.box.schema === true) {\n          searchBarProps.box = { ...searchBarProps.box,\n            schema: this.resolveSearchSchema()\n          };\n        }\n      }\n\n      return <>\n          <EuiSearchBar onChange={this.onQueryChange} {...searchBarProps} />\n          <EuiSpacer size=\"l\" />\n        </>;\n    }\n  }\n\n  resolveSearchSchema() {\n    const {\n      columns\n    } = this.props;\n    return columns.reduce((schema, column) => {\n      const {\n        field,\n        dataType\n      } = column;\n\n      if (field) {\n        const type = dataType || 'string';\n        schema.fields[field] = {\n          type\n        };\n      }\n\n      return schema;\n    }, {\n      strict: true,\n      fields: {}\n    });\n  }\n\n  getItemSorter() {\n    const {\n      sortName,\n      sortDirection\n    } = this.state;\n    const {\n      columns\n    } = this.props;\n    const sortColumn = columns.find(({\n      name\n    }) => name === sortName);\n\n    if (sortColumn == null) {\n      // can't return a non-function so return a function that says everything is the same\n      return () => 0;\n    }\n\n    const sortable = sortColumn.sortable;\n\n    if (typeof sortable === 'function') {\n      return Comparators.value(sortable, Comparators.default(sortDirection));\n    }\n\n    return Comparators.property(sortColumn.field, Comparators.default(sortDirection));\n  }\n\n  getItems() {\n    const {\n      executeQueryOptions\n    } = this.props;\n    const {\n      prevProps: {\n        items\n      }\n    } = this.state;\n\n    if (!items.length) {\n      return {\n        items: [],\n        totalItemCount: 0\n      };\n    }\n\n    const {\n      query,\n      sortName,\n      pageIndex,\n      pageSize\n    } = this.state;\n    const matchingItems = query ? EuiSearchBar.Query.execute(query, items, executeQueryOptions) : items;\n    const sortedItems = sortName ? matchingItems.slice(0) // avoid mutating the source array\n    .sort(this.getItemSorter()) // sort, causes mutation\n    : matchingItems;\n    const visibleItems = pageSize && this.props.pagination ? (() => {\n      const startIndex = pageIndex * pageSize;\n      return sortedItems.slice(startIndex, Math.min(startIndex + pageSize, sortedItems.length));\n    })() : sortedItems;\n    return {\n      items: visibleItems,\n      totalItemCount: matchingItems.length\n    };\n  }\n\n  render() {\n    const {\n      columns,\n      loading,\n      message,\n      error,\n      selection,\n      isSelectable,\n      hasActions,\n      compressed,\n      pagination: hasPagination,\n      sorting: hasSorting,\n      itemIdToExpandedRowMap,\n      itemId,\n      rowProps,\n      cellProps,\n      tableLayout,\n      items: _unuseditems,\n      search,\n      onTableChange,\n      executeQueryOptions,\n      allowNeutralSort,\n      childrenBetween,\n      ...rest\n    } = this.props;\n    const {\n      pageIndex,\n      pageSize,\n      pageSizeOptions,\n      sortName,\n      sortDirection,\n      hidePerPageOptions\n    } = this.state;\n    const {\n      items,\n      totalItemCount\n    } = this.getItems();\n    const pagination = !hasPagination ? undefined : {\n      pageIndex,\n      pageSize: pageSize || 1,\n      pageSizeOptions,\n      totalItemCount,\n      hidePerPageOptions\n    }; // Data loaded from a server can have a default sort order which is meaningful to the\n    // user, but can't be reproduced with client-side sort logic. So we allow the table to display\n    // rows in the order in which they're initially loaded by providing an undefined sorting prop.\n\n    const sorting = !hasSorting ? undefined : {\n      sort: !sortName && !sortDirection ? undefined : {\n        field: sortName,\n        direction: sortDirection\n      },\n      allowNeutralSort: this.state.allowNeutralSort\n    };\n    const searchBar = this.renderSearchBar();\n    const table = // @ts-ignore complex relationship between pagination's existence and criteria, the code logic ensures this is correctly maintained\n    <EuiBasicTable ref={this.tableRef} items={items} itemId={itemId} rowProps={rowProps} cellProps={cellProps} columns={columns} pagination={pagination} sorting={sorting} selection={selection} isSelectable={isSelectable} hasActions={hasActions} onChange={this.onTableChange} error={error} loading={loading} noItemsMessage={message} tableLayout={tableLayout} compressed={compressed} itemIdToExpandedRowMap={itemIdToExpandedRowMap} {...rest} />;\n\n    if (!searchBar) {\n      return table;\n    }\n\n    return <div>\n        {searchBar}\n        {childrenBetween}\n        {table}\n      </div>;\n  }\n\n}\nEuiInMemoryTable.propTypes = {\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n\n  /**\n     * Describes how to extract a unique ID from each item, used for selections & expanded rows\n     */\n\n  /**\n     * Describes how to extract a unique ID from each item, used for selections & expanded rows\n     */\n  itemId: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.number.isRequired, PropTypes.func.isRequired]),\n\n  /**\n     * Row expansion uses the itemId prop to identify each row\n     */\n\n  /**\n     * Row expansion uses the itemId prop to identify each row\n     */\n  itemIdToExpandedRowMap: PropTypes.shape({}),\n\n  /**\n     * A list of objects to who in the table - an item per row\n     */\n\n  /**\n     * A list of objects to who in the table - an item per row\n     */\n  items: PropTypes.arrayOf(PropTypes.any.isRequired),\n\n  /**\n     * Applied to `EuiTableRowCell`\n     */\n\n  /**\n     * Applied to `EuiTableRowCell`\n     */\n  cellProps: PropTypes.oneOfType([PropTypes.any.isRequired, PropTypes.func.isRequired]),\n\n  /**\n     * An array of one of the objects: #EuiTableFieldDataColumnType, #EuiTableComputedColumnType or #EuiTableActionsColumnType.\n     */\n\n  /**\n     * An array of one of the objects: #EuiTableFieldDataColumnType, #EuiTableComputedColumnType or #EuiTableActionsColumnType.\n     */\n  columns: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.shape({\n    /**\n       * A field of the item (may be a nested field)\n       */\n    field: PropTypes.oneOfType([PropTypes.any.isRequired, PropTypes.string.isRequired]).isRequired,\n    // supports outer.inner key paths\n\n    /**\n       * The display name of the column\n       */\n    name: PropTypes.node.isRequired,\n\n    /**\n       * A description of the column (will be presented as a title over the column header)\n       */\n    description: PropTypes.string,\n\n    /**\n       * Describes the data types of the displayed value (serves as a rendering hint for the table)\n       */\n    dataType: PropTypes.oneOf([\"auto\", \"string\", \"number\", \"boolean\", \"date\"]),\n\n    /**\n       * A CSS width property. Hints for the required width of the column (e.g. \"30%\", \"100px\", etc..)\n       */\n    width: PropTypes.string,\n\n    /**\n       * Defines whether the user can sort on this column. If a function is provided, this function returns the value to sort against\n       */\n    sortable: PropTypes.oneOfType([PropTypes.bool.isRequired, PropTypes.func.isRequired]),\n    isExpander: PropTypes.bool,\n    textOnly: PropTypes.bool,\n\n    /**\n       * Defines the horizontal alignment of the column\n       */\n    align: PropTypes.oneOf([\"left\", \"right\", \"center\"]),\n\n    /**\n       * Indicates whether this column should truncate its content when it doesn't fit\n       */\n    truncateText: PropTypes.bool,\n    isMobileHeader: PropTypes.bool,\n    mobileOptions: PropTypes.shape({\n      show: PropTypes.bool,\n      only: PropTypes.bool,\n      render: PropTypes.func,\n      header: PropTypes.bool\n    }),\n    hideForMobile: PropTypes.bool,\n\n    /**\n       * Describe a custom renderer function for the content\n       */\n    render: PropTypes.func,\n\n    /**\n       * Content to display in the footer beneath this column\n       */\n    footer: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.element.isRequired, PropTypes.func.isRequired]),\n\n    /**\n       * Disables the user's ability to change the sort but still shows the current direction\n       */\n    readOnly: PropTypes.bool,\n    className: PropTypes.string,\n    \"aria-label\": PropTypes.string,\n    \"data-test-subj\": PropTypes.string\n  }).isRequired, PropTypes.shape({\n    /**\n       * A function that computes the value for each item and renders it\n       */\n    render: PropTypes.func.isRequired,\n\n    /**\n       * The display name of the column\n       */\n    name: PropTypes.node,\n\n    /**\n       * A description of the column (will be presented as a title over the column header\n       */\n    description: PropTypes.string,\n\n    /**\n       * If provided, allows this column to be sorted on. Must return the value to sort against.\n       */\n    sortable: PropTypes.func,\n\n    /**\n       * A CSS width property. Hints for the required width of the column\n       */\n    width: PropTypes.string,\n\n    /**\n       * Indicates whether this column should truncate its content when it doesn't fit\n       */\n    truncateText: PropTypes.bool,\n    isExpander: PropTypes.bool,\n    align: PropTypes.oneOf([\"left\", \"right\", \"center\"]),\n\n    /**\n       * Disables the user's ability to change the sort but still shows the current direction\n       */\n    readOnly: PropTypes.bool,\n    className: PropTypes.string,\n    \"aria-label\": PropTypes.string,\n    \"data-test-subj\": PropTypes.string\n  }).isRequired, PropTypes.shape({\n    /**\n       * An array of one of the objects: #DefaultItemAction or #CustomItemAction\n       */\n    actions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.shape({\n      /**\n         * The type of action\n         */\n      type: PropTypes.oneOfType([PropTypes.oneOf([\"button\"]), PropTypes.oneOf([\"icon\"]).isRequired]),\n\n      /**\n         * Defines the color of the button\n         */\n      color: PropTypes.oneOfType([PropTypes.oneOfType([PropTypes.oneOf([\"primary\", \"danger\", \"text\", \"ghost\", \"success\", \"warning\"]).isRequired, PropTypes.func.isRequired]), PropTypes.oneOfType([PropTypes.oneOf([\"accent\", \"danger\", \"ghost\", \"primary\", \"subdued\", \"success\", \"text\", \"warning\"]).isRequired, PropTypes.func.isRequired])]),\n\n      /**\n         * The display name of the action (will be the button caption)\n         */\n\n      /**\n         * The display name of the action (will be the button caption)\n         */\n      name: PropTypes.oneOfType([PropTypes.node.isRequired, PropTypes.func.isRequired]).isRequired,\n\n      /**\n         * Describes the action (will be the button title)\n         */\n\n      /**\n         * Describes the action (will be the button title)\n         */\n      description: PropTypes.string.isRequired,\n\n      /**\n         * A handler function to execute the action\n         */\n\n      /**\n         * A handler function to execute the action\n         */\n      onClick: PropTypes.func,\n      href: PropTypes.string,\n      target: PropTypes.string,\n\n      /**\n         * A callback function that determines whether the action is available\n         */\n\n      /**\n         * A callback function that determines whether the action is available\n         */\n      available: PropTypes.func,\n\n      /**\n         * A callback function that determines whether the action is enabled\n         */\n\n      /**\n         * A callback function that determines whether the action is enabled\n         */\n      enabled: PropTypes.func,\n      isPrimary: PropTypes.bool,\n      \"data-test-subj\": PropTypes.string,\n\n      /**\n         * Associates an icon with the button\n         */\n      icon: PropTypes.oneOfType([PropTypes.oneOf([\"accessibility\", \"addDataApp\", \"advancedSettingsApp\", \"aggregate\", \"alert\", \"analyzeEvent\", \"annotation\", \"apmApp\", \"apmTrace\", \"apps\", \"appSearchApp\", \"arrowDown\", \"arrowLeft\", \"arrowRight\", \"arrowUp\", \"asterisk\", \"auditbeatApp\", \"beaker\", \"bell\", \"bellSlash\", \"bolt\", \"boxesHorizontal\", \"boxesVertical\", \"branch\", \"broom\", \"brush\", \"bug\", \"bullseye\", \"calendar\", \"canvasApp\", \"codeApp\", \"check\", \"checkInCircleFilled\", \"cheer\", \"classificationJob\", \"clock\", \"cloudDrizzle\", \"cloudStormy\", \"cloudSunny\", \"color\", \"compute\", \"console\", \"consoleApp\", \"continuityAbove\", \"continuityAboveBelow\", \"continuityBelow\", \"continuityWithin\", \"controlsHorizontal\", \"controlsVertical\", \"copy\", \"copyClipboard\", \"createAdvancedJob\", \"createMultiMetricJob\", \"createPopulationJob\", \"createSingleMetricJob\", \"cross\", \"crossClusterReplicationApp\", \"crosshairs\", \"crossInACircleFilled\", \"currency\", \"cut\", \"dashboardApp\", \"database\", \"dataVisualizer\", \"devToolsApp\", \"discoverApp\", \"document\", \"documentation\", \"documentEdit\", \"documents\", \"dot\", \"download\", \"editorAlignCenter\", \"editorAlignLeft\", \"editorAlignRight\", \"editorBold\", \"editorCodeBlock\", \"editorComment\", \"editorDistributeHorizontal\", \"editorDistributeVertical\", \"editorHeading\", \"editorItalic\", \"editorItemAlignLeft\", \"editorItemAlignBottom\", \"editorItemAlignCenter\", \"editorItemAlignMiddle\", \"editorItemAlignRight\", \"editorItemAlignTop\", \"editorLink\", \"editorOrderedList\", \"editorPositionBottomLeft\", \"editorPositionBottomRight\", \"editorPositionTopLeft\", \"editorPositionTopRight\", \"editorRedo\", \"editorStrike\", \"editorTable\", \"editorUnderline\", \"editorUndo\", \"editorUnorderedList\", \"email\", \"empty\", \"emsApp\", \"eql\", \"eraser\", \"exit\", \"expand\", \"expandMini\", \"exportAction\", \"eye\", \"eyeClosed\", \"faceHappy\", \"faceNeutral\", \"faceSad\", \"filebeatApp\", \"filter\", \"flag\", \"fold\", \"folderCheck\", \"folderClosed\", \"folderExclamation\", \"folderOpen\", \"frameNext\", \"framePrevious\", \"fullScreen\", \"fullScreenExit\", \"function\", \"gear\", \"gisApp\", \"glasses\", \"globe\", \"grab\", \"grabHorizontal\", \"graphApp\", \"grid\", \"grokApp\", \"heart\", \"heartbeatApp\", \"heatmap\", \"help\", \"home\", \"iInCircle\", \"image\", \"importAction\", \"indexClose\", \"indexEdit\", \"indexFlush\", \"indexManagementApp\", \"indexMapping\", \"indexOpen\", \"indexPatternApp\", \"indexRollupApp\", \"indexRuntime\", \"indexSettings\", \"inputOutput\", \"inspect\", \"invert\", \"ip\", \"keyboardShortcut\", \"kqlField\", \"kqlFunction\", \"kqlOperand\", \"kqlSelector\", \"kqlValue\", \"layers\", \"lensApp\", \"link\", \"list\", \"listAdd\", \"lock\", \"lockOpen\", \"logsApp\", \"logoAerospike\", \"logoApache\", \"logoAppSearch\", \"logoAWS\", \"logoAWSMono\", \"logoAzure\", \"logoAzureMono\", \"logoBeats\", \"logoBusinessAnalytics\", \"logoCeph\", \"logoCloud\", \"logoCloudEnterprise\", \"logoCode\", \"logoCodesandbox\", \"logoCouchbase\", \"logoDocker\", \"logoDropwizard\", \"logoElastic\", \"logoElasticsearch\", \"logoElasticStack\", \"logoEnterpriseSearch\", \"logoEtcd\", \"logoGCP\", \"logoGCPMono\", \"logoGithub\", \"logoGmail\", \"logoGolang\", \"logoGoogleG\", \"logoHAproxy\", \"logoIBM\", \"logoIBMMono\", \"logoKafka\", \"logoKibana\", \"logoKubernetes\", \"logoLogging\", \"logoLogstash\", \"logoMaps\", \"logoMemcached\", \"logoMetrics\", \"logoMongodb\", \"logoMySQL\", \"logoNginx\", \"logoObservability\", \"logoOsquery\", \"logoPhp\", \"logoPostgres\", \"logoPrometheus\", \"logoRabbitmq\", \"logoRedis\", \"logoSecurity\", \"logoSiteSearch\", \"logoSketch\", \"logoSlack\", \"logoUptime\", \"logoWebhook\", \"logoWindows\", \"logoWorkplaceSearch\", \"logstashFilter\", \"logstashIf\", \"logstashInput\", \"logstashOutput\", \"logstashQueue\", \"machineLearningApp\", \"magnet\", \"magnifyWithMinus\", \"magnifyWithPlus\", \"managementApp\", \"mapMarker\", \"memory\", \"menu\", \"menuDown\", \"menuLeft\", \"menuRight\", \"menuUp\", \"merge\", \"metricbeatApp\", \"metricsApp\", \"minimize\", \"minus\", \"minusInCircle\", \"minusInCircleFilled\", \"mobile\", \"monitoringApp\", \"moon\", \"nested\", \"node\", \"notebookApp\", \"number\", \"offline\", \"online\", \"outlierDetectionJob\", \"package\", \"packetbeatApp\", \"pageSelect\", \"pagesSelect\", \"partial\", \"paperClip\", \"pause\", \"pencil\", \"percent\", \"pin\", \"pinFilled\", \"pipelineApp\", \"play\", \"playFilled\", \"plus\", \"plusInCircle\", \"plusInCircleFilled\", \"popout\", \"push\", \"questionInCircle\", \"quote\", \"recentlyViewedApp\", \"refresh\", \"regressionJob\", \"reporter\", \"reportingApp\", \"returnKey\", \"save\", \"savedObjectsApp\", \"scale\", \"search\", \"searchProfilerApp\", \"securityAnalyticsApp\", \"securityApp\", \"securitySignal\", \"securitySignalDetected\", \"securitySignalResolved\", \"shard\", \"share\", \"snowflake\", \"sortable\", \"sortDown\", \"sortLeft\", \"sortRight\", \"sortUp\", \"spacesApp\", \"sqlApp\", \"starEmpty\", \"starEmptySpace\", \"starFilled\", \"starFilledSpace\", \"starMinusEmpty\", \"starMinusFilled\", \"starPlusEmpty\", \"starPlusFilled\", \"stats\", \"stop\", \"stopFilled\", \"stopSlash\", \"storage\", \"string\", \"submodule\", \"swatchInput\", \"symlink\", \"tableOfContents\", \"tableDensityExpanded\", \"tableDensityCompact\", \"tableDensityNormal\", \"tag\", \"tear\", \"temperature\", \"timeline\", \"timelionApp\", \"timeslider\", \"training\", \"trash\", \"upgradeAssistantApp\", \"uptimeApp\", \"unfold\", \"unlink\", \"user\", \"users\", \"usersRolesApp\", \"vector\", \"videoPlayer\", \"visArea\", \"visAreaStacked\", \"visBarHorizontal\", \"visBarHorizontalStacked\", \"visBarVertical\", \"visBarVerticalStacked\", \"visGauge\", \"visGoal\", \"visLine\", \"visMapCoordinate\", \"visMapRegion\", \"visMetric\", \"visPie\", \"visTable\", \"visTagCloud\", \"visText\", \"visTimelion\", \"visualizeApp\", \"visVega\", \"visVisualBuilder\", \"watchesApp\", \"wordWrap\", \"wordWrapDisabled\", \"workplaceSearchApp\", \"wrench\", \"tokenClass\", \"tokenProperty\", \"tokenEnum\", \"tokenVariable\", \"tokenMethod\", \"tokenAnnotation\", \"tokenException\", \"tokenInterface\", \"tokenParameter\", \"tokenField\", \"tokenElement\", \"tokenFunction\", \"tokenBoolean\", \"tokenString\", \"tokenArray\", \"tokenNumber\", \"tokenConstant\", \"tokenObject\", \"tokenEvent\", \"tokenKey\", \"tokenNull\", \"tokenStruct\", \"tokenPackage\", \"tokenOperator\", \"tokenEnumMember\", \"tokenRepo\", \"tokenSymbol\", \"tokenFile\", \"tokenModule\", \"tokenNamespace\", \"tokenDate\", \"tokenIP\", \"tokenNested\", \"tokenAlias\", \"tokenShape\", \"tokenGeo\", \"tokenRange\", \"tokenBinary\", \"tokenJoin\", \"tokenPercolator\", \"tokenFlattened\", \"tokenRankFeature\", \"tokenRankFeatures\", \"tokenKeyword\", \"tokenCompletionSuggester\", \"tokenDenseVector\", \"tokenText\", \"tokenTokenCount\", \"tokenSearchType\", \"tokenHistogram\"]).isRequired, PropTypes.func.isRequired])\n    }).isRequired, PropTypes.shape({\n      /**\n         * The function that renders the action. Note that the returned node is expected to have `onFocus` and `onBlur` functions\n         */\n      render: PropTypes.func.isRequired,\n\n      /**\n         * A callback that defines whether the action is available\n         */\n      available: PropTypes.func,\n\n      /**\n         * A callback that defines whether the action is enabled\n         */\n      enabled: PropTypes.func,\n      isPrimary: PropTypes.bool\n    }).isRequired]).isRequired).isRequired,\n\n    /**\n       * The display name of the column\n       */\n    name: PropTypes.node,\n\n    /**\n       * A description of the column (will be presented as a title over the column header\n       */\n    description: PropTypes.string,\n\n    /**\n       * A CSS width property. Hints for the required width of the column\n       */\n    width: PropTypes.string\n  }).isRequired]).isRequired),\n\n  /**\n     * Error message to display\n     */\n\n  /**\n     * Error message to display\n     */\n  error: PropTypes.string,\n\n  /**\n     * Describes the content of the table. If not specified, the caption will be \"This table contains {itemCount} rows.\"\n     */\n\n  /**\n     * Describes the content of the table. If not specified, the caption will be \"This table contains {itemCount} rows.\"\n     */\n  tableCaption: PropTypes.string,\n\n  /**\n     * Indicates which column should be used as the identifying cell in each row. Should match a \"field\" prop in FieldDataColumn\n     */\n\n  /**\n     * Indicates which column should be used as the identifying cell in each row. Should match a \"field\" prop in FieldDataColumn\n     */\n  rowHeader: PropTypes.string,\n  hasActions: PropTypes.bool,\n  isExpandable: PropTypes.bool,\n  isSelectable: PropTypes.bool,\n\n  /**\n     * Provides an infinite loading indicator\n     */\n\n  /**\n     * Provides an infinite loading indicator\n     */\n  loading: PropTypes.bool,\n\n  /**\n     * Called whenever pagination or sorting changes (this property is required when either pagination or sorting is configured). See #Criteria or #CriteriaWithPagination\n     */\n  onChange: PropTypes.func,\n\n  /**\n     * If true, will convert table to cards in mobile view\n     */\n\n  /**\n     * If true, will convert table to cards in mobile view\n     */\n  responsive: PropTypes.bool,\n\n  /**\n     * Applied to `EuiTableRow`\n     */\n\n  /**\n     * Applied to `EuiTableRow`\n     */\n  rowProps: PropTypes.oneOfType([PropTypes.any.isRequired, PropTypes.func.isRequired]),\n\n  /**\n     * Configures #EuiTableSelectionType\n     */\n\n  /**\n     * Configures #EuiTableSelectionType\n     */\n  selection: PropTypes.shape({\n    /**\n       * A callback that will be called whenever the item selection changes\n       */\n    onSelectionChange: PropTypes.func,\n\n    /**\n       * A callback that is called per item to indicate whether it is selectable\n       */\n    selectable: PropTypes.func,\n\n    /**\n       * A callback that is called per item to retrieve a message for its selectable state.We display these messages as a tooltip on an unselectable checkbox\n       */\n    selectableMessage: PropTypes.func,\n    initialSelected: PropTypes.arrayOf(PropTypes.any.isRequired)\n  }),\n\n  /**\n     * Sets the table-layout CSS property. Note that auto tableLayout prevents truncateText from working properly.\n     */\n\n  /**\n     * Sets the table-layout CSS property. Note that auto tableLayout prevents truncateText from working properly.\n     */\n  tableLayout: PropTypes.oneOf([\"fixed\", \"auto\"]),\n\n  /**\n     * Applied to table cells => Any cell using render function will set this to be false, leading to unnecessary word breaks. Apply textOnly: true in order to ensure it breaks properly\n     */\n\n  /**\n     * Applied to table cells => Any cell using render function will set this to be false, leading to unnecessary word breaks. Apply textOnly: true in order to ensure it breaks properly\n     */\n  textOnly: PropTypes.bool,\n  message: PropTypes.node,\n\n  /**\n     * Configures #Search.\n     */\n\n  /**\n     * Configures #Search.\n     */\n  search: PropTypes.oneOfType([PropTypes.bool.isRequired, PropTypes.shape({\n    onChange: PropTypes.func,\n\n    /**\n       The initial query the bar will hold when first mounted\n       */\n    defaultQuery: PropTypes.oneOfType([PropTypes.any.isRequired, PropTypes.string.isRequired]),\n\n    /**\n       If you wish to use the search bar as a controlled component, continuously pass the query via this prop.\n       */\n    query: PropTypes.oneOfType([PropTypes.any.isRequired, PropTypes.string.isRequired]),\n\n    /**\n       Configures the search box. Set `placeholder` to change the placeholder text in the box and `incremental` to support incremental (as you type) search.\n       */\n    box: PropTypes.shape({\n      name: PropTypes.string,\n      id: PropTypes.string,\n      placeholder: PropTypes.string,\n      value: PropTypes.string,\n      isInvalid: PropTypes.bool,\n      fullWidth: PropTypes.bool,\n      isLoading: PropTypes.bool,\n\n      /**\n         * Called when the user presses [Enter] OR on change if the incremental prop is `true`.\n         * If you don't need the on[Enter] functionality, prefer using onChange\n         */\n      onSearch: PropTypes.func,\n\n      /**\n         * When `true` the search will be executed (that is, the `onSearch` will be called) as the\n         * user types.\n         */\n      incremental: PropTypes.bool,\n\n      /**\n         * when `true` creates a shorter height input\n         */\n      compressed: PropTypes.bool,\n      inputRef: PropTypes.func,\n\n      /**\n         * Shows a button that quickly clears any input\n         */\n      isClearable: PropTypes.bool,\n\n      /**\n         * Creates an input group with element(s) coming before input\n         * `string` | `ReactElement` or an array of these\n         */\n      prepend: PropTypes.oneOfType([PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.element.isRequired]).isRequired, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.element.isRequired]).isRequired).isRequired]),\n\n      /**\n         * Creates an input group with element(s) coming after input.\n         * `string` | `ReactElement` or an array of these\n         */\n      append: PropTypes.oneOfType([PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.element.isRequired]).isRequired, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.element.isRequired]).isRequired).isRequired]),\n      className: PropTypes.string,\n      \"aria-label\": PropTypes.string,\n      \"data-test-subj\": PropTypes.string,\n      // Boolean values are not meaningful to this EuiSearchBox, but are allowed so that other\n      // components can use e.g. a true value to mean \"auto-derive a schema\". See EuiInMemoryTable.\n      // Admittedly, this is a bit of a hack.\n      schema: PropTypes.oneOfType([PropTypes.shape({\n        strict: PropTypes.bool,\n        fields: PropTypes.any,\n        flags: PropTypes.arrayOf(PropTypes.string.isRequired)\n      }).isRequired, PropTypes.bool.isRequired])\n    }),\n\n    /**\n       An array of search filters. See #SearchFilterConfig.\n       */\n    filters: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.shape({\n      type: PropTypes.oneOf([\"is\"]).isRequired,\n      field: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      negatedName: PropTypes.string,\n      available: PropTypes.func\n    }).isRequired, PropTypes.shape({\n      type: PropTypes.oneOf([\"field_value_selection\"]).isRequired,\n      field: PropTypes.string,\n      name: PropTypes.string.isRequired,\n\n      /**\n         * See #FieldValueOptionType\n         */\n      options: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.shape({\n        field: PropTypes.string,\n        value: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.number.isRequired, PropTypes.bool.isRequired, PropTypes.shape({\n          type: PropTypes.oneOf([\"date\"]).isRequired,\n          raw: PropTypes.any.isRequired,\n          granularity: PropTypes.oneOfType([PropTypes.shape({\n            es: PropTypes.oneOf([\"d\", \"w\", \"M\", \"y\"]).isRequired,\n            js: PropTypes.oneOf([\"day\", \"week\", \"month\", \"year\"]).isRequired,\n            isSame: PropTypes.func.isRequired,\n            start: PropTypes.func.isRequired,\n            startOfNext: PropTypes.func.isRequired,\n            iso8601: PropTypes.func.isRequired\n          }).isRequired, PropTypes.oneOf([undefined])]).isRequired,\n          text: PropTypes.string.isRequired,\n          resolve: PropTypes.func.isRequired\n        }).isRequired]).isRequired,\n        name: PropTypes.string,\n        view: PropTypes.node\n      }).isRequired).isRequired, PropTypes.func.isRequired]).isRequired,\n      filterWith: PropTypes.oneOfType([PropTypes.oneOf([\"prefix\", \"includes\"]), PropTypes.func.isRequired]),\n      cache: PropTypes.number,\n      multiSelect: PropTypes.oneOfType([PropTypes.bool.isRequired, PropTypes.oneOf([\"and\", \"or\"])]),\n      loadingMessage: PropTypes.string,\n      noOptionsMessage: PropTypes.string,\n      searchThreshold: PropTypes.number,\n      available: PropTypes.func,\n      autoClose: PropTypes.bool,\n      operator: PropTypes.oneOf([\"eq\", \"exact\", \"gt\", \"gte\", \"lt\", \"lte\"])\n    }).isRequired, PropTypes.shape({\n      type: PropTypes.oneOf([\"field_value_toggle\"]).isRequired,\n      field: PropTypes.string.isRequired,\n      value: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.number.isRequired, PropTypes.bool.isRequired, PropTypes.shape({\n        type: PropTypes.oneOf([\"date\"]).isRequired,\n        raw: PropTypes.any.isRequired,\n        granularity: PropTypes.oneOfType([PropTypes.shape({\n          es: PropTypes.oneOf([\"d\", \"w\", \"M\", \"y\"]).isRequired,\n          js: PropTypes.oneOf([\"day\", \"week\", \"month\", \"year\"]).isRequired,\n          isSame: PropTypes.func.isRequired,\n          start: PropTypes.func.isRequired,\n          startOfNext: PropTypes.func.isRequired,\n          iso8601: PropTypes.func.isRequired\n        }).isRequired, PropTypes.oneOf([undefined])]).isRequired,\n        text: PropTypes.string.isRequired,\n        resolve: PropTypes.func.isRequired\n      }).isRequired]).isRequired,\n      name: PropTypes.string.isRequired,\n      negatedName: PropTypes.string,\n      available: PropTypes.func,\n      operator: PropTypes.oneOf([\"eq\", \"exact\", \"gt\", \"gte\", \"lt\", \"lte\"])\n    }).isRequired, PropTypes.shape({\n      type: PropTypes.oneOf([\"field_value_toggle_group\"]).isRequired,\n      field: PropTypes.string.isRequired,\n\n      /**\n         * See #FieldValueToggleGroupFilterItemType\n         */\n      items: PropTypes.arrayOf(PropTypes.shape({\n        value: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.number.isRequired, PropTypes.bool.isRequired]).isRequired,\n        name: PropTypes.string.isRequired,\n        negatedName: PropTypes.string,\n        operator: PropTypes.oneOf([\"eq\", \"exact\", \"gt\", \"gte\", \"lt\", \"lte\"])\n      }).isRequired).isRequired,\n      available: PropTypes.func\n    }).isRequired]).isRequired),\n\n    /**\n       * Tools which go to the left of the search bar.\n       */\n    toolsLeft: PropTypes.oneOfType([PropTypes.element.isRequired, PropTypes.arrayOf(PropTypes.element.isRequired).isRequired]),\n\n    /**\n       * Tools which go to the right of the search bar.\n       */\n    toolsRight: PropTypes.oneOfType([PropTypes.element.isRequired, PropTypes.arrayOf(PropTypes.element.isRequired).isRequired]),\n\n    /**\n       * Date formatter to use when parsing date values\n       */\n    dateFormat: PropTypes.any,\n    className: PropTypes.string,\n    \"aria-label\": PropTypes.string,\n    \"data-test-subj\": PropTypes.string\n  }).isRequired]),\n  pagination: PropTypes.oneOfType([PropTypes.oneOf([undefined]), PropTypes.oneOfType([PropTypes.bool.isRequired, PropTypes.shape({\n    pageSizeOptions: PropTypes.arrayOf(PropTypes.number.isRequired),\n    hidePerPageOptions: PropTypes.bool,\n    initialPageIndex: PropTypes.number,\n    initialPageSize: PropTypes.number,\n    pageIndex: PropTypes.number,\n    pageSize: PropTypes.number\n  }).isRequired])]),\n  sorting: PropTypes.oneOfType([PropTypes.bool.isRequired, PropTypes.shape({\n    sort: PropTypes.shape({\n      field: PropTypes.string.isRequired,\n      direction: PropTypes.oneOfType([PropTypes.any.isRequired, PropTypes.any.isRequired]).isRequired\n    }).isRequired\n  }).isRequired]),\n\n  /**\n     * Set `allowNeutralSort` to false to force column sorting. Defaults to true.\n     */\n\n  /**\n     * Set `allowNeutralSort` to false to force column sorting. Defaults to true.\n     */\n  allowNeutralSort: PropTypes.bool,\n\n  /**\n     * Callback for when table pagination or sorting is changed. This is meant to be informational only, and not used to set any state as the in-memory table already manages this state. See #Criteria or #CriteriaWithPagination.\n     */\n  onTableChange: PropTypes.func,\n  executeQueryOptions: PropTypes.shape({\n    defaultFields: PropTypes.arrayOf(PropTypes.string.isRequired),\n    isClauseMatcher: PropTypes.func,\n    explain: PropTypes.bool\n  }),\n\n  /**\n     * Insert content between the search bar and table components.\n     */\n\n  /**\n     * Insert content between the search bar and table components.\n     */\n  childrenBetween: PropTypes.node\n};\n\ntry {\n  EuiInMemoryTable.__docgenInfo = {\n    description: '',\n    displayName: 'EuiInMemoryTable',\n    methods: [],\n    props: {\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: 'Defines a string value that labels the current element.\\n' + '@see aria-labelledby.',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'data-test-subj': {\n        defaultValue: null,\n        description: '',\n        name: 'data-test-subj',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      onChange: {\n        defaultValue: null,\n        description: 'Called whenever pagination or sorting changes (this property is required when either pagination or sorting is configured). See #Criteria or #CriteriaWithPagination',\n        name: 'onChange',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: '((criteria: Criteria<T>) => void) | ((criteria: CriteriaWithPagination<T>) => void)'\n        }\n      },\n      compressed: {\n        defaultValue: null,\n        description: '',\n        name: 'compressed',\n        parent: {\n          fileName: 'eui/src/components/table/table.tsx',\n          name: 'EuiTableProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      responsive: {\n        defaultValue: {\n          value: 'true'\n        },\n        description: 'If true, will convert table to cards in mobile view',\n        name: 'responsive',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      tableLayout: {\n        defaultValue: {\n          value: 'fixed'\n        },\n        description: 'Sets the table-layout CSS property. Note that auto tableLayout prevents truncateText from working properly.',\n        name: 'tableLayout',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"auto\" | \"fixed\"',\n          value: [{\n            value: '\"auto\"'\n          }, {\n            value: '\"fixed\"'\n          }]\n        }\n      },\n      itemId: {\n        defaultValue: null,\n        description: 'Describes how to extract a unique ID from each item, used for selections & expanded rows',\n        name: 'itemId',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: 'ItemId<T>'\n        }\n      },\n      itemIdToExpandedRowMap: {\n        defaultValue: null,\n        description: 'Row expansion uses the itemId prop to identify each row',\n        name: 'itemIdToExpandedRowMap',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: 'ItemIdToExpandedRowMap'\n        }\n      },\n      items: {\n        defaultValue: null,\n        description: 'A list of objects to who in the table - an item per row',\n        name: 'items',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: true,\n        type: {\n          name: 'T[]'\n        }\n      },\n      cellProps: {\n        defaultValue: null,\n        description: 'Applied to `EuiTableRowCell`',\n        name: 'cellProps',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: 'object | CellPropsCallback<T>'\n        }\n      },\n      columns: {\n        defaultValue: null,\n        description: 'An array of one of the objects: #EuiTableFieldDataColumnType, #EuiTableComputedColumnType or #EuiTableActionsColumnType.',\n        name: 'columns',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: true,\n        type: {\n          name: 'EuiBasicTableColumn<T>[]'\n        }\n      },\n      error: {\n        defaultValue: null,\n        description: 'Error message to display',\n        name: 'error',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      tableCaption: {\n        defaultValue: null,\n        description: 'Describes the content of the table. If not specified, the caption will be \"This table contains {itemCount} rows.\"',\n        name: 'tableCaption',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      rowHeader: {\n        defaultValue: null,\n        description: 'Indicates which column should be used as the identifying cell in each row. Should match a \"field\" prop in FieldDataColumn',\n        name: 'rowHeader',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      hasActions: {\n        defaultValue: null,\n        description: '',\n        name: 'hasActions',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      isExpandable: {\n        defaultValue: null,\n        description: '',\n        name: 'isExpandable',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      isSelectable: {\n        defaultValue: null,\n        description: '',\n        name: 'isSelectable',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      loading: {\n        defaultValue: null,\n        description: 'Provides an infinite loading indicator',\n        name: 'loading',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      rowProps: {\n        defaultValue: null,\n        description: 'Applied to `EuiTableRow`',\n        name: 'rowProps',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: 'object | RowPropsCallback<T>'\n        }\n      },\n      selection: {\n        defaultValue: null,\n        description: 'Configures #EuiTableSelectionType',\n        name: 'selection',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: 'EuiTableSelectionType<T>'\n        }\n      },\n      textOnly: {\n        defaultValue: null,\n        description: 'Applied to table cells => Any cell using render function will set this to be false, leading to unnecessary word breaks. Apply textOnly: true in order to ensure it breaks properly',\n        name: 'textOnly',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      message: {\n        defaultValue: null,\n        description: '',\n        name: 'message',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'ReactNode'\n        }\n      },\n      search: {\n        defaultValue: null,\n        description: 'Configures #Search.',\n        name: 'search',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'Search'\n        }\n      },\n      pagination: {\n        defaultValue: null,\n        description: '',\n        name: 'pagination',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'Pagination'\n        }\n      },\n      sorting: {\n        defaultValue: null,\n        description: '',\n        name: 'sorting',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'Sorting'\n        }\n      },\n      allowNeutralSort: {\n        defaultValue: null,\n        description: 'Set `allowNeutralSort` to false to force column sorting. Defaults to true.',\n        name: 'allowNeutralSort',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      onTableChange: {\n        defaultValue: null,\n        description: 'Callback for when table pagination or sorting is changed. This is meant to be informational only, and not used to set any state as the in-memory table already manages this state. See #Criteria or #CriteriaWithPagination.',\n        name: 'onTableChange',\n        parent: undefined,\n        required: false,\n        type: {\n          name: '((nextValues: Criteria<T>) => void) | ((nextValues: CriteriaWithPagination<T>) => void)'\n        }\n      },\n      executeQueryOptions: {\n        defaultValue: null,\n        description: '',\n        name: 'executeQueryOptions',\n        parent: undefined,\n        required: false,\n        type: {\n          name: '{ defaultFields?: string[]; isClauseMatcher?: (...args: any) => boolean; explain?: boolean; }'\n        }\n      },\n      childrenBetween: {\n        defaultValue: null,\n        description: 'Insert content between the search bar and table components.',\n        name: 'childrenBetween',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'ReactNode'\n        }\n      }\n    },\n    extendedInterfaces: ['CommonProps', 'HTMLAttributes', 'TableHTMLAttributes', 'AriaAttributes', 'DOMAttributes', 'BasicTableProps', 'EuiTableProps']\n  };\n} catch (e) {}"]}]}