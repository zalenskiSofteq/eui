{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\selectable\\selectable_list\\selectable_list_item.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\selectable\\selectable_list\\selectable_list_item.tsx","mtime":1649070093761},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/selectable/selectable_list/selectable_list_item.tsx"],"names":["classNames","React","Component","EuiI18n","EuiIcon","EuiScreenReaderOnly","EuiBadge","resolveIconAndColor","checked","icon","color","EuiSelectableListItem","props","children","className","disabled","isFocused","showIcons","prepend","append","allowExclusions","onFocusBadge","rest","classes","optionIcon","state","instruction","prependNode","appendNode","onFocusBadgeNode","defaultOnFocusBadgeProps","iconType","iconSide","restBadgeProps"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport classNames from 'classnames';\nimport PropTypes from \"prop-types\";\nimport React, { Component } from 'react';\nimport { EuiI18n } from '../../i18n';\nimport { EuiIcon } from '../../icon';\nimport { EuiScreenReaderOnly } from '../../accessibility';\nimport { EuiBadge } from '../../badge';\n\nfunction resolveIconAndColor(checked) {\n  if (!checked) {\n    return {\n      icon: 'empty'\n    };\n  }\n\n  return checked === 'on' ? {\n    icon: 'check',\n    color: 'text'\n  } : {\n    icon: 'cross',\n    color: 'text'\n  };\n} // eslint-disable-next-line react/prefer-stateless-function\n\n\nexport class EuiSelectableListItem extends Component {\n  static defaultProps = {\n    showIcons: true,\n    onFocusBadge: true\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      disabled,\n      checked,\n      isFocused,\n      showIcons,\n      prepend,\n      append,\n      allowExclusions,\n      onFocusBadge,\n      ...rest\n    } = this.props;\n    const classes = classNames('euiSelectableListItem', {\n      'euiSelectableListItem-isFocused': isFocused\n    }, className);\n    let optionIcon;\n\n    if (showIcons) {\n      const {\n        icon,\n        color\n      } = resolveIconAndColor(checked);\n      optionIcon = <EuiIcon className=\"euiSelectableListItem__icon\" color={color} type={icon} />;\n    }\n\n    let state;\n    let instruction;\n\n    if (allowExclusions && checked === 'on') {\n      state = <EuiScreenReaderOnly>\n          <span>\n            <EuiI18n token=\"euiSelectableListItem.includedOption\" default=\"Included option.\" />\n          </span>\n        </EuiScreenReaderOnly>;\n      instruction = <EuiScreenReaderOnly>\n          <span>\n            <EuiI18n token=\"euiSelectableListItem.includedOptionInstructions\" default=\"To exclude this option, press enter.\" />\n          </span>\n        </EuiScreenReaderOnly>;\n    } else if (allowExclusions && checked === 'off') {\n      state = <EuiScreenReaderOnly>\n          <span>\n            <EuiI18n token=\"euiSelectableListItem.excludedOption\" default=\"Excluded option.\" />\n          </span>\n        </EuiScreenReaderOnly>;\n      instruction = <EuiScreenReaderOnly>\n          <span>\n            <EuiI18n token=\"euiSelectableListItem.excludedOptionInstructions\" default=\"To deselect this option, press enter.\" />\n          </span>\n        </EuiScreenReaderOnly>;\n    }\n\n    let prependNode;\n\n    if (prepend) {\n      prependNode = <span className=\"euiSelectableListItem__prepend\">{prepend}</span>;\n    }\n\n    let appendNode;\n\n    if (append || !!onFocusBadge) {\n      let onFocusBadgeNode;\n      const defaultOnFocusBadgeProps = {\n        'aria-hidden': true,\n        iconType: 'returnKey',\n        iconSide: 'left',\n        color: 'hollow'\n      };\n\n      if (onFocusBadge === true) {\n        onFocusBadgeNode = <EuiBadge className=\"euiSelectableListItem__onFocusBadge\" {...defaultOnFocusBadgeProps} />;\n      } else if (!!onFocusBadge && onFocusBadge !== false) {\n        const {\n          children,\n          className,\n          ...restBadgeProps\n        } = onFocusBadge;\n        onFocusBadgeNode = <EuiBadge className={classNames('euiSelectableListItem__onFocusBadge', className)} {...defaultOnFocusBadgeProps} {...restBadgeProps}>\n            {children}\n          </EuiBadge>;\n      } // Only display the append wrapper if append exists or isFocused\n\n\n      if (append || isFocused && !disabled) {\n        appendNode = <span className=\"euiSelectableListItem__append\">\n            {append} {isFocused && !disabled ? onFocusBadgeNode : null}\n          </span>;\n      }\n    }\n\n    return <li // eslint-disable-next-line jsx-a11y/no-noninteractive-element-to-interactive-role\n    role=\"option\" aria-selected={!disabled && typeof checked === 'string'} className={classes} aria-disabled={disabled} {...rest}>\n        <span className=\"euiSelectableListItem__content\">\n          {optionIcon}\n          {prependNode}\n          <span className=\"euiSelectableListItem__text\">\n            {state}\n            {children}\n            {instruction}\n          </span>\n          {appendNode}\n        </span>\n      </li>;\n  }\n\n}\nEuiSelectableListItem.propTypes = {\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n  children: PropTypes.node,\n\n  /**\n       * Applies an icon and visual styling to activated items\n       */\n  checked: PropTypes.oneOf([\"on\", \"off\", undefined]),\n\n  /**\n       * Shows icons based on `checked` type\n       */\n  showIcons: PropTypes.bool,\n\n  /**\n       * Highlights the item for pseudo focus\n       */\n  isFocused: PropTypes.bool,\n  disabled: PropTypes.bool,\n  prepend: PropTypes.node,\n  append: PropTypes.node,\n  allowExclusions: PropTypes.bool,\n\n  /**\n       * When enabled by setting to either `true` or passing custom a custom badge,\n       * shows a hollow badge as an append (far right) when the item is focused.\n       * The default content when `true` is `↩ to select/deselect/include/exclude`\n       */\n  onFocusBadge: PropTypes.oneOfType([PropTypes.bool.isRequired, PropTypes.shape({\n    /**\n       * Accepts any string from our icon library\n       */\n    iconType: PropTypes.oneOfType([PropTypes.oneOf([\"accessibility\", \"addDataApp\", \"advancedSettingsApp\", \"aggregate\", \"alert\", \"analyzeEvent\", \"annotation\", \"apmApp\", \"apmTrace\", \"apps\", \"appSearchApp\", \"arrowDown\", \"arrowLeft\", \"arrowRight\", \"arrowUp\", \"asterisk\", \"auditbeatApp\", \"beaker\", \"bell\", \"bellSlash\", \"bolt\", \"boxesHorizontal\", \"boxesVertical\", \"branch\", \"broom\", \"brush\", \"bug\", \"bullseye\", \"calendar\", \"canvasApp\", \"codeApp\", \"check\", \"checkInCircleFilled\", \"cheer\", \"classificationJob\", \"clock\", \"cloudDrizzle\", \"cloudStormy\", \"cloudSunny\", \"color\", \"compute\", \"console\", \"consoleApp\", \"continuityAbove\", \"continuityAboveBelow\", \"continuityBelow\", \"continuityWithin\", \"controlsHorizontal\", \"controlsVertical\", \"copy\", \"copyClipboard\", \"createAdvancedJob\", \"createMultiMetricJob\", \"createPopulationJob\", \"createSingleMetricJob\", \"cross\", \"crossClusterReplicationApp\", \"crosshairs\", \"crossInACircleFilled\", \"currency\", \"cut\", \"dashboardApp\", \"database\", \"dataVisualizer\", \"devToolsApp\", \"discoverApp\", \"document\", \"documentation\", \"documentEdit\", \"documents\", \"dot\", \"download\", \"editorAlignCenter\", \"editorAlignLeft\", \"editorAlignRight\", \"editorBold\", \"editorCodeBlock\", \"editorComment\", \"editorDistributeHorizontal\", \"editorDistributeVertical\", \"editorHeading\", \"editorItalic\", \"editorItemAlignLeft\", \"editorItemAlignBottom\", \"editorItemAlignCenter\", \"editorItemAlignMiddle\", \"editorItemAlignRight\", \"editorItemAlignTop\", \"editorLink\", \"editorOrderedList\", \"editorPositionBottomLeft\", \"editorPositionBottomRight\", \"editorPositionTopLeft\", \"editorPositionTopRight\", \"editorRedo\", \"editorStrike\", \"editorTable\", \"editorUnderline\", \"editorUndo\", \"editorUnorderedList\", \"email\", \"empty\", \"emsApp\", \"eql\", \"eraser\", \"exit\", \"expand\", \"expandMini\", \"exportAction\", \"eye\", \"eyeClosed\", \"faceHappy\", \"faceNeutral\", \"faceSad\", \"filebeatApp\", \"filter\", \"flag\", \"fold\", \"folderCheck\", \"folderClosed\", \"folderExclamation\", \"folderOpen\", \"frameNext\", \"framePrevious\", \"fullScreen\", \"fullScreenExit\", \"function\", \"gear\", \"gisApp\", \"glasses\", \"globe\", \"grab\", \"grabHorizontal\", \"graphApp\", \"grid\", \"grokApp\", \"heart\", \"heartbeatApp\", \"heatmap\", \"help\", \"home\", \"iInCircle\", \"image\", \"importAction\", \"indexClose\", \"indexEdit\", \"indexFlush\", \"indexManagementApp\", \"indexMapping\", \"indexOpen\", \"indexPatternApp\", \"indexRollupApp\", \"indexRuntime\", \"indexSettings\", \"inputOutput\", \"inspect\", \"invert\", \"ip\", \"keyboardShortcut\", \"kqlField\", \"kqlFunction\", \"kqlOperand\", \"kqlSelector\", \"kqlValue\", \"layers\", \"lensApp\", \"link\", \"list\", \"listAdd\", \"lock\", \"lockOpen\", \"logsApp\", \"logoAerospike\", \"logoApache\", \"logoAppSearch\", \"logoAWS\", \"logoAWSMono\", \"logoAzure\", \"logoAzureMono\", \"logoBeats\", \"logoBusinessAnalytics\", \"logoCeph\", \"logoCloud\", \"logoCloudEnterprise\", \"logoCode\", \"logoCodesandbox\", \"logoCouchbase\", \"logoDocker\", \"logoDropwizard\", \"logoElastic\", \"logoElasticsearch\", \"logoElasticStack\", \"logoEnterpriseSearch\", \"logoEtcd\", \"logoGCP\", \"logoGCPMono\", \"logoGithub\", \"logoGmail\", \"logoGolang\", \"logoGoogleG\", \"logoHAproxy\", \"logoIBM\", \"logoIBMMono\", \"logoKafka\", \"logoKibana\", \"logoKubernetes\", \"logoLogging\", \"logoLogstash\", \"logoMaps\", \"logoMemcached\", \"logoMetrics\", \"logoMongodb\", \"logoMySQL\", \"logoNginx\", \"logoObservability\", \"logoOsquery\", \"logoPhp\", \"logoPostgres\", \"logoPrometheus\", \"logoRabbitmq\", \"logoRedis\", \"logoSecurity\", \"logoSiteSearch\", \"logoSketch\", \"logoSlack\", \"logoUptime\", \"logoWebhook\", \"logoWindows\", \"logoWorkplaceSearch\", \"logstashFilter\", \"logstashIf\", \"logstashInput\", \"logstashOutput\", \"logstashQueue\", \"machineLearningApp\", \"magnet\", \"magnifyWithMinus\", \"magnifyWithPlus\", \"managementApp\", \"mapMarker\", \"memory\", \"menu\", \"menuDown\", \"menuLeft\", \"menuRight\", \"menuUp\", \"merge\", \"metricbeatApp\", \"metricsApp\", \"minimize\", \"minus\", \"minusInCircle\", \"minusInCircleFilled\", \"mobile\", \"monitoringApp\", \"moon\", \"nested\", \"node\", \"notebookApp\", \"number\", \"offline\", \"online\", \"outlierDetectionJob\", \"package\", \"packetbeatApp\", \"pageSelect\", \"pagesSelect\", \"partial\", \"paperClip\", \"pause\", \"pencil\", \"percent\", \"pin\", \"pinFilled\", \"pipelineApp\", \"play\", \"playFilled\", \"plus\", \"plusInCircle\", \"plusInCircleFilled\", \"popout\", \"push\", \"questionInCircle\", \"quote\", \"recentlyViewedApp\", \"refresh\", \"regressionJob\", \"reporter\", \"reportingApp\", \"returnKey\", \"save\", \"savedObjectsApp\", \"scale\", \"search\", \"searchProfilerApp\", \"securityAnalyticsApp\", \"securityApp\", \"securitySignal\", \"securitySignalDetected\", \"securitySignalResolved\", \"shard\", \"share\", \"snowflake\", \"sortable\", \"sortDown\", \"sortLeft\", \"sortRight\", \"sortUp\", \"spacesApp\", \"sqlApp\", \"starEmpty\", \"starEmptySpace\", \"starFilled\", \"starFilledSpace\", \"starMinusEmpty\", \"starMinusFilled\", \"starPlusEmpty\", \"starPlusFilled\", \"stats\", \"stop\", \"stopFilled\", \"stopSlash\", \"storage\", \"string\", \"submodule\", \"swatchInput\", \"symlink\", \"tableOfContents\", \"tableDensityExpanded\", \"tableDensityCompact\", \"tableDensityNormal\", \"tag\", \"tear\", \"temperature\", \"timeline\", \"timelionApp\", \"timeslider\", \"training\", \"trash\", \"upgradeAssistantApp\", \"uptimeApp\", \"unfold\", \"unlink\", \"user\", \"users\", \"usersRolesApp\", \"vector\", \"videoPlayer\", \"visArea\", \"visAreaStacked\", \"visBarHorizontal\", \"visBarHorizontalStacked\", \"visBarVertical\", \"visBarVerticalStacked\", \"visGauge\", \"visGoal\", \"visLine\", \"visMapCoordinate\", \"visMapRegion\", \"visMetric\", \"visPie\", \"visTable\", \"visTagCloud\", \"visText\", \"visTimelion\", \"visualizeApp\", \"visVega\", \"visVisualBuilder\", \"watchesApp\", \"wordWrap\", \"wordWrapDisabled\", \"workplaceSearchApp\", \"wrench\", \"tokenClass\", \"tokenProperty\", \"tokenEnum\", \"tokenVariable\", \"tokenMethod\", \"tokenAnnotation\", \"tokenException\", \"tokenInterface\", \"tokenParameter\", \"tokenField\", \"tokenElement\", \"tokenFunction\", \"tokenBoolean\", \"tokenString\", \"tokenArray\", \"tokenNumber\", \"tokenConstant\", \"tokenObject\", \"tokenEvent\", \"tokenKey\", \"tokenNull\", \"tokenStruct\", \"tokenPackage\", \"tokenOperator\", \"tokenEnumMember\", \"tokenRepo\", \"tokenSymbol\", \"tokenFile\", \"tokenModule\", \"tokenNamespace\", \"tokenDate\", \"tokenIP\", \"tokenNested\", \"tokenAlias\", \"tokenShape\", \"tokenGeo\", \"tokenRange\", \"tokenBinary\", \"tokenJoin\", \"tokenPercolator\", \"tokenFlattened\", \"tokenRankFeature\", \"tokenRankFeatures\", \"tokenKeyword\", \"tokenCompletionSuggester\", \"tokenDenseVector\", \"tokenText\", \"tokenTokenCount\", \"tokenSearchType\", \"tokenHistogram\"]).isRequired, PropTypes.string.isRequired, PropTypes.elementType.isRequired]),\n\n    /**\n       * The side of the badge the icon should sit\n       */\n    iconSide: PropTypes.oneOf([\"left\", \"right\"]),\n\n    /**\n       * Accepts either our palette colors (primary, success ..etc) or a hex value `#FFFFFF`, `#000`.\n       * **`secondary` color is DEPRECATED, use `success` instead**\n       */\n    color: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.oneOf([\"default\", \"primary\", \"secondary\", \"success\", \"accent\", \"warning\", \"danger\", \"text\", \"subdued\", \"ghost\", \"inherit\"]).isRequired]),\n\n    /**\n       * Will override any color passed through the `color` prop.\n       */\n    isDisabled: PropTypes.bool,\n\n    /**\n       * Props passed to the close button.\n       */\n    closeButtonProps: PropTypes.any,\n    className: PropTypes.string,\n    \"aria-label\": PropTypes.string,\n    \"data-test-subj\": PropTypes.string,\n\n    /**\n       * Will apply an onclick to icon within the badge\n       */\n    iconOnClick: PropTypes.func,\n\n    /**\n       * Aria label applied to the iconOnClick button\n       */\n    iconOnClickAriaLabel: PropTypes.any,\n\n    /**\n       * Will apply an onclick to the badge itself\n       */\n    onClick: PropTypes.func,\n\n    /**\n       * Aria label applied to the onClick button\n       */\n    onClickAriaLabel: PropTypes.any,\n    href: PropTypes.string,\n    target: PropTypes.string,\n    rel: PropTypes.string\n  }).isRequired])\n};\n\ntry {\n  EuiSelectableListItem.__docgenInfo = {\n    description: '',\n    displayName: 'EuiSelectableListItem',\n    methods: [],\n    props: {\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/node_modules/@types/react/index.d.ts',\n          name: 'HTMLAttributes'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: 'Defines a string value that labels the current element.\\n' + '@see aria-labelledby.',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/node_modules/@types/react/index.d.ts',\n          name: 'AriaAttributes'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'data-test-subj': {\n        defaultValue: null,\n        description: '',\n        name: 'data-test-subj',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      checked: {\n        defaultValue: null,\n        description: 'Applies an icon and visual styling to activated items',\n        name: 'checked',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"on\" | \"off\"',\n          value: [{\n            value: '\"on\"'\n          }, {\n            value: '\"off\"'\n          }]\n        }\n      },\n      showIcons: {\n        defaultValue: {\n          value: 'true'\n        },\n        description: 'Shows icons based on `checked` type',\n        name: 'showIcons',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      isFocused: {\n        defaultValue: null,\n        description: 'Highlights the item for pseudo focus',\n        name: 'isFocused',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      disabled: {\n        defaultValue: null,\n        description: '',\n        name: 'disabled',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      prepend: {\n        defaultValue: null,\n        description: '',\n        name: 'prepend',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'any'\n        }\n      },\n      append: {\n        defaultValue: null,\n        description: '',\n        name: 'append',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'any'\n        }\n      },\n      allowExclusions: {\n        defaultValue: null,\n        description: '',\n        name: 'allowExclusions',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      onFocusBadge: {\n        defaultValue: {\n          value: 'true'\n        },\n        description: 'When enabled by setting to either `true` or passing custom a custom badge,\\n' + 'shows a hollow badge as an append (far right) when the item is focused.\\n' + 'The default content when `true` is `↩ to select/deselect/include/exclude`',\n        name: 'onFocusBadge',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean | ({ iconType?: IconType; iconSide?: ToastSide; color?: string; isDisabled?: boolean; closeButtonProps?: Partial<EuiIconProps>; } & CommonProps & DisambiguateSet<...> & DisambiguateSet<...> & Pick<...>) | ... 4 more ... | ({ ...; } & ... 6 more ... & Pick<...>)'\n        }\n      }\n    },\n    extendedInterfaces: ['LiHTMLAttributes', 'HTMLAttributes', 'AriaAttributes', 'DOMAttributes', 'CommonProps']\n  };\n} catch (e) {}"]}]}