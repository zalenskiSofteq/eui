{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\resizable_container\\helpers.ts","dependencies":[{"path":"D:\\work\\eui\\src\\components\\resizable_container\\helpers.ts","mtime":1649070093740},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/resizable_container/helpers.ts"],"names":["useMemo","useReducer","assertNever","isMouseEvent","event","pxToPercent","proportion","whole","sizesOnly","panelObject","Object","values","reduce","out","panel","id","size","_getPanelMinSize","panelMinSize","containerSize","panelMinSizePercent","panelMinSizeInt","parseInt","indexOf","getPanelMinSize","paddingMin","configMin","Math","max","getPosition","isHorizontal","clientX","touches","clientY","getSiblingPanel","element","adjacency","method","sibling","matches","init","state","useContainerCallbacks","initialState","containerRef","onPanelWidthChange","reducer","action","getContainerSize","current","getBoundingClientRect","width","height","runSideEffect","panels","withSideEffect","newState","type","payload","panelId","resizer","resizers","resizerId","position","prevPanelId","nextPanelId","isDragging","currentResizerPos","prevPanel","nextPanel","delta","prevPanelMin","minSize","nextPanelMin","prevPanelSize","getSizePx","nextPanelSize","direction","options","currentPanelId","currentPanel","shouldCollapse","isCollapsed","panelElement","document","getElementById","prevResizer","previousElementSibling","nextResizer","nextElementSibling","resizersToDisable","otherPanels","siblings","keys","length","maybePrevPanel","maybeNextPanel","validPrevPanel","validNextPanel","newPanelSize","mode","prevSize","collapsedPanelsSize","sum","updatedPanels","some","isFocused","isDisabled","reducerState","dispatch","actions","reset","initContainer","registerPanel","deregisterPanel","registerResizer","deregisterResizer","dragStart","dragMove","keyMove","togglePanel","resizerFocus","resizerBlur"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  useMemo,\n  useReducer,\n  MouseEvent as ReactMouseEvent,\n  TouchEvent as ReactTouchEvent,\n} from 'react';\n\nimport { assertNever } from '../common';\nimport {\n  EuiResizablePanelController,\n  EuiResizableButtonController,\n  EuiResizableContainerRegistry,\n  EuiResizableContainerState,\n  EuiResizableContainerAction,\n  EuiResizableContainerActions,\n  ActionDragStart,\n  ActionDragMove,\n  ActionKeyMove,\n  ActionToggle,\n  ActionFocus,\n} from './types';\n\ninterface Params {\n  initialState: EuiResizableContainerState;\n  containerRef: React.RefObject<HTMLDivElement>;\n  onPanelWidthChange?: ({}: { [key: string]: number }) => any;\n}\n\nfunction isMouseEvent(\n  event: ReactMouseEvent | ReactTouchEvent\n): event is ReactMouseEvent {\n  return typeof event === 'object' && 'pageX' in event && 'pageY' in event;\n}\n\nexport const pxToPercent = (proportion: number, whole: number) => {\n  if (whole < 1 || proportion < 0) return 0;\n  return (proportion / whole) * 100;\n};\n\nexport const sizesOnly = (\n  panelObject: EuiResizableContainerRegistry['panels']\n) => {\n  return Object.values(panelObject).reduce(\n    (out: { [key: string]: number }, panel) => {\n      out[panel.id] = panel.size;\n      return out;\n    },\n    {}\n  );\n};\n\nconst _getPanelMinSize = (panelMinSize: string, containerSize: number) => {\n  let panelMinSizePercent = 0;\n  const panelMinSizeInt = parseInt(panelMinSize);\n  if (panelMinSize.indexOf('px') > -1) {\n    panelMinSizePercent = pxToPercent(panelMinSizeInt, containerSize);\n  } else if (panelMinSize.indexOf('%') > -1) {\n    panelMinSizePercent = pxToPercent(\n      containerSize * (panelMinSizeInt / 100),\n      containerSize\n    );\n  }\n  return panelMinSizePercent;\n};\n\nexport const getPanelMinSize = (\n  panelMinSize: string[],\n  containerSize: number\n) => {\n  const paddingMin = _getPanelMinSize(panelMinSize[1], containerSize);\n  const configMin = _getPanelMinSize(panelMinSize[0], containerSize);\n  return Math.max(configMin, paddingMin);\n};\n\nexport const getPosition = (\n  event: ReactMouseEvent | ReactTouchEvent,\n  isHorizontal: boolean\n) => {\n  const clientX = isMouseEvent(event)\n    ? event.clientX\n    : event.touches[0].clientX;\n  const clientY = isMouseEvent(event)\n    ? event.clientY\n    : event.touches[0].clientY;\n  return isHorizontal ? clientX : clientY;\n};\n\nconst getSiblingPanel = (\n  element: HTMLElement | null,\n  adjacency: 'prev' | 'next'\n) => {\n  if (!element) return null;\n  const method =\n    adjacency === 'prev' ? 'previousElementSibling' : 'nextElementSibling';\n  let sibling = element[method];\n  while (sibling) {\n    if (\n      sibling.matches('.euiResizablePanel:not(.euiResizablePanel-isCollapsed)')\n    ) {\n      return sibling;\n    }\n    sibling = sibling[method];\n  }\n};\n\n// lazy initialization to prevent rerender on initial interaction\nconst init = (state: EuiResizableContainerState) => state;\n\nexport const useContainerCallbacks = ({\n  initialState,\n  containerRef,\n  onPanelWidthChange,\n}: Params): [EuiResizableContainerActions, EuiResizableContainerState] => {\n  function reducer(\n    state: EuiResizableContainerState,\n    action: EuiResizableContainerAction\n  ): EuiResizableContainerState {\n    const getContainerSize = (isHorizontal: boolean) => {\n      return isHorizontal\n        ? containerRef.current!.getBoundingClientRect().width\n        : containerRef.current!.getBoundingClientRect().height;\n    };\n\n    const runSideEffect = (panels: EuiResizableContainerState['panels']) => {\n      if (onPanelWidthChange) {\n        onPanelWidthChange(sizesOnly(panels));\n      }\n    };\n\n    const withSideEffect = (newState: EuiResizableContainerState) => {\n      runSideEffect(newState.panels);\n      return newState;\n    };\n\n    switch (action.type) {\n      case 'EUI_RESIZABLE_CONTAINER_INIT': {\n        const { isHorizontal } = action.payload;\n        return {\n          ...state,\n          isHorizontal,\n          containerSize: getContainerSize(isHorizontal),\n        };\n      }\n      case 'EUI_RESIZABLE_PANEL_REGISTER': {\n        const { panel } = action.payload;\n        return {\n          ...state,\n          panels: {\n            ...state.panels,\n            [panel.id]: panel,\n          },\n        };\n      }\n      case 'EUI_RESIZABLE_PANEL_DEREGISTER': {\n        const { panelId } = action.payload;\n        return {\n          ...state,\n          panels: Object.values(state.panels).reduce(\n            (out: EuiResizableContainerState['panels'], panel) => {\n              if (panel.id !== panelId) {\n                out[panel.id] = panel;\n              }\n              return out;\n            },\n            {}\n          ),\n        };\n      }\n      case 'EUI_RESIZABLE_BUTTON_REGISTER': {\n        const { resizer } = action.payload;\n        return {\n          ...state,\n          resizers: {\n            ...state.resizers,\n            [resizer.id]: resizer,\n          },\n        };\n      }\n      case 'EUI_RESIZABLE_BUTTON_DEREGISTER': {\n        const { resizerId } = action.payload;\n        return {\n          ...state,\n          resizers: Object.values(state.resizers).reduce(\n            (out: EuiResizableContainerState['resizers'], panel) => {\n              if (panel.id !== resizerId) {\n                out[panel.id] = panel;\n              }\n              return out;\n            },\n            {}\n          ),\n        };\n      }\n      case 'EUI_RESIZABLE_DRAG_START': {\n        const { position, prevPanelId, nextPanelId } = action.payload;\n        return {\n          ...state,\n          isDragging: true,\n          currentResizerPos: position,\n          prevPanelId,\n          nextPanelId,\n        };\n      }\n      case 'EUI_RESIZABLE_DRAG_MOVE': {\n        if (!state.isDragging) {\n          return state;\n        }\n        const { position, prevPanelId, nextPanelId } = action.payload;\n        const prevPanel = state.panels[prevPanelId];\n        const nextPanel = state.panels[nextPanelId];\n        const delta = position - state.currentResizerPos;\n\n        const prevPanelMin = getPanelMinSize(\n          prevPanel.minSize,\n          state.containerSize\n        );\n        const nextPanelMin = getPanelMinSize(\n          nextPanel.minSize,\n          state.containerSize\n        );\n        const prevPanelSize = pxToPercent(\n          prevPanel.getSizePx() + delta,\n          state.containerSize\n        );\n        const nextPanelSize = pxToPercent(\n          nextPanel.getSizePx() - delta,\n          state.containerSize\n        );\n\n        if (prevPanelSize >= prevPanelMin && nextPanelSize >= nextPanelMin) {\n          return withSideEffect({\n            ...state,\n            currentResizerPos: position,\n            panels: {\n              ...state.panels,\n              [prevPanelId]: {\n                ...state.panels[prevPanelId],\n                size: prevPanelSize,\n              },\n              [nextPanelId]: {\n                ...state.panels[nextPanelId],\n                size: nextPanelSize,\n              },\n            },\n          });\n        }\n\n        return state;\n      }\n      case 'EUI_RESIZABLE_KEY_MOVE': {\n        const { prevPanelId, nextPanelId, direction } = action.payload;\n        const prevPanel = state.panels[prevPanelId];\n        const nextPanel = state.panels[nextPanelId];\n\n        const prevPanelMin = getPanelMinSize(\n          prevPanel.minSize,\n          state.containerSize\n        );\n        const nextPanelMin = getPanelMinSize(\n          nextPanel.minSize,\n          state.containerSize\n        );\n        const prevPanelSize = pxToPercent(\n          prevPanel.getSizePx() - (direction === 'backward' ? 10 : -10),\n          state.containerSize\n        );\n        const nextPanelSize = pxToPercent(\n          nextPanel.getSizePx() - (direction === 'forward' ? 10 : -10),\n          state.containerSize\n        );\n\n        if (prevPanelSize >= prevPanelMin && nextPanelSize >= nextPanelMin) {\n          return withSideEffect({\n            ...state,\n            isDragging: false,\n            panels: {\n              ...state.panels,\n              [prevPanelId]: {\n                ...state.panels[prevPanelId],\n                size: prevPanelSize,\n              },\n              [nextPanelId]: {\n                ...state.panels[nextPanelId],\n                size: nextPanelSize,\n              },\n            },\n          });\n        }\n\n        return state;\n      }\n\n      case 'EUI_RESIZABLE_TOGGLE': {\n        const { options, panelId: currentPanelId } = action.payload;\n        const currentPanel = state.panels[currentPanelId];\n        const shouldCollapse = !currentPanel.isCollapsed;\n        const panelElement = document.getElementById(currentPanelId);\n        const prevResizer = panelElement!.previousElementSibling;\n        const prevPanel = prevResizer\n          ? prevResizer.previousElementSibling\n          : null;\n        const nextResizer = panelElement!.nextElementSibling;\n        const nextPanel = nextResizer ? nextResizer.nextElementSibling : null;\n\n        const resizersToDisable: { [id: string]: boolean | null } = {};\n        if (prevResizer && prevPanel) {\n          resizersToDisable[prevResizer.id] = state.panels[prevPanel.id]\n            .isCollapsed\n            ? true\n            : shouldCollapse;\n        }\n        if (nextResizer && nextPanel) {\n          resizersToDisable[nextResizer.id] = state.panels[nextPanel.id]\n            .isCollapsed\n            ? true\n            : shouldCollapse;\n        }\n        let otherPanels: EuiResizableContainerRegistry['panels'] = {};\n        if (\n          prevPanel &&\n          !state.panels[prevPanel.id].isCollapsed &&\n          options.direction === 'right'\n        ) {\n          otherPanels[prevPanel.id] = state.panels[prevPanel.id];\n        }\n        if (\n          nextPanel &&\n          !state.panels[nextPanel.id].isCollapsed &&\n          options.direction === 'left'\n        ) {\n          otherPanels[nextPanel.id] = state.panels[nextPanel.id];\n        }\n        let siblings = Object.keys(otherPanels).length;\n\n        // A toggling sequence has occurred where an immediate sibling panel\n        // has not been found. We need to move more broadly through the DOM\n        // to find the next most suitable panel or space affordance.\n        // Can only occur when multiple immediate sibling panels are collapsed.\n        if (!siblings) {\n          const maybePrevPanel = getSiblingPanel(panelElement, 'prev');\n          const maybeNextPanel = getSiblingPanel(panelElement, 'next');\n          const validPrevPanel = maybePrevPanel\n            ? state.panels[maybePrevPanel.id]\n            : null;\n          const validNextPanel = maybeNextPanel\n            ? state.panels[maybeNextPanel.id]\n            : null;\n          // Intentional, preferential redistribution order\n          if (validPrevPanel && options.direction === 'right') {\n            otherPanels[validPrevPanel.id] = validPrevPanel;\n          } else if (validNextPanel && options.direction === 'left') {\n            otherPanels[validNextPanel.id] = validNextPanel;\n          } else {\n            if (validPrevPanel) otherPanels[validPrevPanel.id] = validPrevPanel;\n            if (validNextPanel) otherPanels[validNextPanel.id] = validNextPanel;\n          }\n          siblings = Object.keys(otherPanels).length;\n        }\n\n        let newPanelSize = shouldCollapse\n          ? pxToPercent(\n              !currentPanel.mode ? 0 : 24, // size of the default toggle button\n              state.containerSize\n            )\n          : currentPanel.prevSize;\n\n        const delta = shouldCollapse\n          ? (currentPanel.size - newPanelSize) / siblings\n          : ((newPanelSize - currentPanel.size) / siblings) * -1;\n\n        const collapsedPanelsSize = Object.values(state.panels).reduce(\n          (sum: number, panel) => {\n            if (panel.id !== currentPanelId && panel.isCollapsed) {\n              sum += panel.size;\n            }\n            return sum;\n          },\n          0\n        );\n\n        // A toggling sequence has occurred where a to-be-opened panel will\n        // become the only open panel. Rather than reopen to its previous\n        // size, give it the full width, less size occupied by collapsed panels.\n        // Can only occur with external toggling.\n        if (!shouldCollapse && !siblings) {\n          newPanelSize = 100 - collapsedPanelsSize;\n        }\n        let updatedPanels: EuiResizableContainerState['panels'] = {};\n        if (\n          delta < 0 &&\n          Object.values(otherPanels).some(\n            (panel) =>\n              panel.size + delta <\n              getPanelMinSize(panel.minSize, state.containerSize)\n          )\n        ) {\n          // A toggling sequence has occurred where a to-be-opened panel is\n          // requesting more space than its logical sibling panel can afford.\n          // Rather than choose another single panel to sacrifice space,\n          // or try to pull proportionally from all availble panels\n          // (neither of which is guaranteed to prevent negative resulting widths),\n          // or attempt something even more complex,\n          // we redistribute _all_ space evenly to non-collapsed panels\n          // as something of a reset.\n          // This situation can only occur when (n-1) panels are collapsed at once\n          // and the most recently collapsed panel gains significant width\n          // during the previously occurring collapse.\n          // That is (largely), external toggling where the default logic has\n          // been negated by the lack of panel mode distinction.\n          otherPanels = Object.values(state.panels).reduce(\n            (out: EuiResizableContainerState['panels'], panel) => {\n              if (panel.id !== currentPanelId && !panel.isCollapsed) {\n                out[panel.id] = {\n                  ...panel,\n                };\n              }\n              return out;\n            },\n            {}\n          );\n\n          newPanelSize =\n            (100 - collapsedPanelsSize) / (Object.keys(otherPanels).length + 1);\n\n          updatedPanels = Object.values(otherPanels).reduce(\n            (out: EuiResizableContainerState['panels'], panel) => {\n              out[panel.id] = {\n                ...panel,\n                size: newPanelSize,\n              };\n              return out;\n            },\n            {}\n          );\n        } else {\n          // A toggling sequence has occurred that is standard and predictable\n          updatedPanels = Object.values(otherPanels).reduce(\n            (out: EuiResizableContainerState['panels'], panel) => {\n              out[panel.id] = {\n                ...panel,\n                size: panel.size + delta,\n              };\n              return out;\n            },\n            {}\n          );\n        }\n\n        return withSideEffect({\n          ...state,\n          panels: {\n            ...state.panels,\n            ...updatedPanels,\n            [currentPanelId]: {\n              ...state.panels[currentPanelId],\n              size: newPanelSize,\n              isCollapsed: shouldCollapse,\n              prevSize: shouldCollapse ? currentPanel.size : newPanelSize,\n            },\n          },\n          resizers: Object.values(state.resizers).reduce(\n            (out: EuiResizableContainerState['resizers'], resizer) => {\n              out[resizer.id] = {\n                ...resizer,\n                isFocused: false,\n                isDisabled: resizersToDisable[resizer.id] ?? resizer.isDisabled,\n              };\n              return out;\n            },\n            {}\n          ),\n        });\n      }\n      case 'EUI_RESIZABLE_BUTTON_FOCUS': {\n        const { resizerId } = action.payload;\n        return {\n          ...state,\n          resizers: Object.values(state.resizers).reduce(\n            (out: EuiResizableContainerState['resizers'], resizer) => {\n              out[resizer.id] = {\n                ...resizer,\n                isFocused: resizer.id === resizerId,\n              };\n              return out;\n            },\n            {}\n          ),\n        };\n      }\n      case 'EUI_RESIZABLE_BUTTON_BLUR': {\n        return {\n          ...state,\n          resizers: Object.values(state.resizers).reduce(\n            (out: EuiResizableContainerState['resizers'], resizer) => {\n              out[resizer.id] = {\n                ...resizer,\n                isFocused: false,\n              };\n              return out;\n            },\n            {}\n          ),\n        };\n      }\n      case 'EUI_RESIZABLE_RESET': {\n        return {\n          ...initialState,\n          panels: state.panels,\n          resizers: state.resizers,\n          containerSize: state.containerSize,\n        };\n      }\n      case 'EUI_RESIZABLE_ONCHANGE': {\n        onPanelWidthChange!(sizesOnly(state.panels));\n        return state;\n      }\n      // TODO: Implement more generic version of\n      // 'EUI_RESIZABLE_DRAG_MOVE' to expose to consumers\n      case 'EUI_RESIZABLE_RESIZE': {\n        return state;\n      }\n      default:\n        assertNever(action);\n        return state;\n    }\n  }\n\n  const [reducerState, dispatch] = useReducer(reducer, initialState, init);\n\n  const actions: EuiResizableContainerActions = useMemo(() => {\n    return {\n      reset: () => dispatch({ type: 'EUI_RESIZABLE_RESET' }),\n      initContainer: (isHorizontal: boolean) =>\n        dispatch({\n          type: 'EUI_RESIZABLE_CONTAINER_INIT',\n          payload: { isHorizontal },\n        }),\n      registerPanel: (panel: EuiResizablePanelController) =>\n        dispatch({\n          type: 'EUI_RESIZABLE_PANEL_REGISTER',\n          payload: { panel },\n        }),\n      deregisterPanel: (panelId: EuiResizablePanelController['id']) =>\n        dispatch({\n          type: 'EUI_RESIZABLE_PANEL_DEREGISTER',\n          payload: { panelId },\n        }),\n      registerResizer: (resizer: EuiResizableButtonController) =>\n        dispatch({\n          type: 'EUI_RESIZABLE_BUTTON_REGISTER',\n          payload: { resizer },\n        }),\n      deregisterResizer: (resizerId: EuiResizableButtonController['id']) =>\n        dispatch({\n          type: 'EUI_RESIZABLE_BUTTON_DEREGISTER',\n          payload: { resizerId },\n        }),\n      dragStart: ({\n        prevPanelId,\n        nextPanelId,\n        position,\n      }: ActionDragStart['payload']) =>\n        dispatch({\n          type: 'EUI_RESIZABLE_DRAG_START',\n          payload: { position, prevPanelId, nextPanelId },\n        }),\n      dragMove: ({\n        prevPanelId,\n        nextPanelId,\n        position,\n      }: ActionDragMove['payload']) =>\n        dispatch({\n          type: 'EUI_RESIZABLE_DRAG_MOVE',\n          payload: { position, prevPanelId, nextPanelId },\n        }),\n      keyMove: ({\n        prevPanelId,\n        nextPanelId,\n        direction,\n      }: ActionKeyMove['payload']) =>\n        dispatch({\n          type: 'EUI_RESIZABLE_KEY_MOVE',\n          payload: { prevPanelId, nextPanelId, direction },\n        }),\n      togglePanel: (\n        panelId: ActionToggle['payload']['panelId'],\n        options: ActionToggle['payload']['options']\n      ) =>\n        dispatch({\n          type: 'EUI_RESIZABLE_TOGGLE',\n          payload: { panelId, options },\n        }),\n      resizerFocus: (resizerId: ActionFocus['payload']['resizerId']) =>\n        dispatch({\n          type: 'EUI_RESIZABLE_BUTTON_FOCUS',\n          payload: { resizerId },\n        }),\n      resizerBlur: () =>\n        dispatch({\n          type: 'EUI_RESIZABLE_BUTTON_BLUR',\n        }),\n    };\n  }, []);\n\n  return [actions, reducerState];\n};\n"]}]}