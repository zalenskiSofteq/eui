{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\date_picker\\super_date_picker\\quick_select_popover\\refresh_interval.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\date_picker\\super_date_picker\\quick_select_popover\\refresh_interval.tsx","mtime":1649070093380},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/date_picker/super_date_picker/quick_select_popover/refresh_interval.tsx"],"names":["React","Component","timeUnits","timeUnitsPlural","EuiI18n","EuiFlexGroup","EuiFlexItem","EuiTitle","EuiSpacer","EuiSelect","EuiFieldNumber","EuiButton","htmlIdGenerator","EuiScreenReaderOnly","keysOf","refreshUnitsOptions","filter","timeUnit","map","value","text","MILLISECONDS_IN_SECOND","MILLISECONDS_IN_MINUTE","MILLISECONDS_IN_HOUR","fromMilliseconds","milliseconds","round","parseFloat","toFixed","units","toMilliseconds","Math","EuiRefreshInterval","props","refreshInterval","event","sanitizedValue","target","setState","isNaN","applyRefreshInterval","state","undefined","isPaused","key","startRefresh","legendId","generateId","refreshSelectionId","options","find","optionText","onValueChange","handleKeyDown","onUnitsChange","toggleRefresh","optionValue"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { timeUnits, timeUnitsPlural } from '../time_units';\nimport { EuiI18n } from '../../../i18n';\nimport { EuiFlexGroup, EuiFlexItem } from '../../../flex';\nimport { EuiTitle } from '../../../title';\nimport { EuiSpacer } from '../../../spacer';\nimport { EuiSelect, EuiFieldNumber } from '../../../form';\nimport { EuiButton } from '../../../button';\nimport { htmlIdGenerator } from '../../../../services';\nimport { EuiScreenReaderOnly } from '../../../accessibility';\nimport { keysOf } from '../../../common';\nvar refreshUnitsOptions = keysOf(timeUnits).filter(function (timeUnit) {\n  return timeUnit === 'h' || timeUnit === 'm' || timeUnit === 's';\n}).map(function (timeUnit) {\n  return {\n    value: timeUnit,\n    text: timeUnitsPlural[timeUnit]\n  };\n});\nvar MILLISECONDS_IN_SECOND = 1000;\nvar MILLISECONDS_IN_MINUTE = MILLISECONDS_IN_SECOND * 60;\nvar MILLISECONDS_IN_HOUR = MILLISECONDS_IN_MINUTE * 60;\n\nfunction fromMilliseconds(milliseconds) {\n  var round = function round(value) {\n    return parseFloat(value.toFixed(2));\n  };\n\n  if (milliseconds > MILLISECONDS_IN_HOUR) {\n    return {\n      units: 'h',\n      value: round(milliseconds / MILLISECONDS_IN_HOUR)\n    };\n  }\n\n  if (milliseconds > MILLISECONDS_IN_MINUTE) {\n    return {\n      units: 'm',\n      value: round(milliseconds / MILLISECONDS_IN_MINUTE)\n    };\n  }\n\n  return {\n    units: 's',\n    value: round(milliseconds / MILLISECONDS_IN_SECOND)\n  };\n}\n\nfunction toMilliseconds(units, value) {\n  switch (units) {\n    case 'h':\n      return Math.round(value * MILLISECONDS_IN_HOUR);\n\n    case 'm':\n      return Math.round(value * MILLISECONDS_IN_MINUTE);\n\n    case 's':\n    default:\n      return Math.round(value * MILLISECONDS_IN_SECOND);\n  }\n}\n\nexport class EuiRefreshInterval extends Component {\n  state = fromMilliseconds(this.props.refreshInterval);\n  generateId = htmlIdGenerator();\n  onValueChange = event => {\n    const sanitizedValue = parseFloat(event.target.value);\n    this.setState({\n      value: isNaN(sanitizedValue) ? '' : sanitizedValue\n    }, this.applyRefreshInterval);\n  };\n  onUnitsChange = event => {\n    this.setState({\n      units: event.target.value\n    }, this.applyRefreshInterval);\n  };\n  startRefresh = () => {\n    const {\n      applyRefreshInterval\n    } = this.props;\n    const {\n      value,\n      units\n    } = this.state;\n\n    if (value !== '' && value > 0 && applyRefreshInterval !== undefined) {\n      applyRefreshInterval({\n        refreshInterval: toMilliseconds(units, value),\n        isPaused: false\n      });\n    }\n  };\n  handleKeyDown = ({\n    key\n  }) => {\n    if (key === 'Enter') {\n      this.startRefresh();\n    }\n  };\n  applyRefreshInterval = () => {\n    const {\n      applyRefreshInterval,\n      isPaused\n    } = this.props;\n    const {\n      units,\n      value\n    } = this.state;\n\n    if (value === '') {\n      return;\n    }\n\n    if (!applyRefreshInterval) {\n      return;\n    }\n\n    const refreshInterval = toMilliseconds(units, value);\n    applyRefreshInterval({\n      refreshInterval,\n      isPaused: refreshInterval <= 0 ? true : isPaused\n    });\n  };\n  toggleRefresh = () => {\n    const {\n      applyRefreshInterval,\n      isPaused\n    } = this.props;\n    const {\n      units,\n      value\n    } = this.state;\n\n    if (!applyRefreshInterval || value === '') {\n      return;\n    }\n\n    applyRefreshInterval({\n      refreshInterval: toMilliseconds(units, value),\n      isPaused: !isPaused\n    });\n  };\n\n  render() {\n    const {\n      applyRefreshInterval,\n      isPaused\n    } = this.props;\n    const {\n      value,\n      units\n    } = this.state;\n    const legendId = this.generateId();\n    const refreshSelectionId = this.generateId();\n\n    if (!applyRefreshInterval) {\n      return null;\n    }\n\n    const options = refreshUnitsOptions.find(({\n      value\n    }) => value === units);\n    const optionText = options ? options.text : '';\n    return <fieldset>\n        <EuiTitle size=\"xxxs\">\n          <legend id={legendId}>\n            <EuiI18n token=\"euiRefreshInterval.legend\" default=\"Refresh every\" />\n          </legend>\n        </EuiTitle>\n        <EuiSpacer size=\"s\" />\n        <EuiFlexGroup gutterSize=\"s\" responsive={false}>\n          <EuiFlexItem>\n            <EuiFieldNumber compressed value={value} onChange={this.onValueChange} onKeyDown={this.handleKeyDown} aria-label=\"Refresh interval value\" aria-describedby={`${refreshSelectionId} ${legendId}`} data-test-subj=\"superDatePickerRefreshIntervalInput\" />\n          </EuiFlexItem>\n          <EuiFlexItem>\n            <EuiSelect compressed aria-label=\"Refresh interval units\" aria-describedby={`${refreshSelectionId} ${legendId}`} value={units} options={refreshUnitsOptions} onChange={this.onUnitsChange} onKeyDown={this.handleKeyDown} data-test-subj=\"superDatePickerRefreshIntervalUnitsSelect\" />\n          </EuiFlexItem>\n          <EuiFlexItem grow={false}>\n            <EuiButton className=\"euiRefreshInterval__startButton\" iconType={isPaused ? 'play' : 'stop'} size=\"s\" onClick={this.toggleRefresh} disabled={value === '' || value <= 0} data-test-subj=\"superDatePickerToggleRefreshButton\" aria-describedby={refreshSelectionId}>\n              {isPaused ? <EuiI18n token=\"euiRefreshInterval.start\" default=\"Start\" /> : <EuiI18n token=\"euiRefreshInterval.stop\" default=\"Stop\" />}\n            </EuiButton>\n          </EuiFlexItem>\n        </EuiFlexGroup>\n        <EuiScreenReaderOnly>\n          <p id={refreshSelectionId}>\n            <EuiI18n token=\"euiRefreshInterval.fullDescription\" default=\"Refresh interval currently set to {optionValue} {optionText}.\" values={{\n            optionValue: value,\n            optionText\n          }} />\n          </p>\n        </EuiScreenReaderOnly>\n      </fieldset>;\n  }\n\n}\nEuiRefreshInterval.propTypes = {\n  applyRefreshInterval: PropTypes.func,\n  isPaused: PropTypes.bool.isRequired,\n  refreshInterval: PropTypes.number.isRequired\n};\n\ntry {\n  EuiRefreshInterval.__docgenInfo = {\n    description: '',\n    displayName: 'EuiRefreshInterval',\n    methods: [],\n    props: {\n      applyRefreshInterval: {\n        defaultValue: null,\n        description: '',\n        name: 'applyRefreshInterval',\n        parent: {\n          fileName: 'eui/src/components/date_picker/super_date_picker/quick_select_popover/refresh_interval.tsx',\n          name: 'EuiRefreshIntervalProps'\n        },\n        required: false,\n        type: {\n          name: 'ApplyRefreshInterval'\n        }\n      },\n      isPaused: {\n        defaultValue: null,\n        description: '',\n        name: 'isPaused',\n        parent: {\n          fileName: 'eui/src/components/date_picker/super_date_picker/quick_select_popover/refresh_interval.tsx',\n          name: 'EuiRefreshIntervalProps'\n        },\n        required: true,\n        type: {\n          name: 'boolean'\n        }\n      },\n      refreshInterval: {\n        defaultValue: null,\n        description: '',\n        name: 'refreshInterval',\n        parent: {\n          fileName: 'eui/src/components/date_picker/super_date_picker/quick_select_popover/refresh_interval.tsx',\n          name: 'EuiRefreshIntervalProps'\n        },\n        required: true,\n        type: {\n          name: 'number'\n        }\n      }\n    },\n    extendedInterfaces: ['EuiRefreshIntervalProps']\n  };\n} catch (e) {}"]}]}