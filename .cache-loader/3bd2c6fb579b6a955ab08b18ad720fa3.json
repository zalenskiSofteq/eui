{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\combo_box\\combo_box.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\combo_box\\combo_box.tsx","mtime":1649070093340},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/combo_box/combo_box.tsx"],"names":["React","Component","classNames","findPopoverPosition","htmlIdGenerator","keys","EuiPortal","EuiComboBoxOptionsList","getMatchingOptions","flattenOptionGroups","getSelectedOptionForSearchValue","EuiComboBoxInput","getElementZIndex","initialSearchValue","EuiComboBox","activeOptionIndex","hasFocus","isListOpen","listElement","listPosition","listZIndex","undefined","matchingOptions","props","options","selectedOptions","async","Boolean","singleSelection","sortMatchesBy","searchValue","width","ref","comboBoxRefInstance","removeEventListener","onContainerBlur","addEventListener","comboBoxBounds","getBoundingClientRect","setState","autoSizeInputRefInstance","searchInputRefInstance","inputRef","document","body","listRefInstance","toggleButtonRefInstance","index","optionsRefInstances","event","target","clearActiveOption","state","_isMounted","listElementBounds","height","allowCrossAxis","anchor","popover","position","top","style","left","window","pageXOffset","amount","length","nextActiveOptionIndex","direction","isGroupLabelOption","onSearchChange","onRemoveOption","openList","isContainerBlur","onCreateOption","doesSearchMatchOnlyOption","onAddOption","isOptionCreated","clearSearchValue","closeList","label","toLowerCase","flattenOptions","map","option","trim","numberOfSelectedOptions","forEach","trimmedLabel","findIndex","onFocus","delimiter","split","addCustomOption","focusEvent","relatedTarget","explicitOriginalTarget","focusedInOptionsList","contains","focusedInInput","onBlur","hasActiveOption","setCustomOptions","key","ARROW_UP","preventDefault","stopPropagation","incrementActiveOptionIndex","ARROW_DOWN","BACKSPACE","removeLastOption","ESCAPE","ENTER","TAB","onKeyDown","addedOption","disabled","onChange","singleSelectionProp","changeOptions","concat","focus","requestAnimationFrame","indexOf","removedOption","filter","selectedOptionIndex","hasMatchingOptions","endsWith","newMatchingOptions","areOptionsDifferent","i","includes","setTimeout","copyInputStyles","updateMatchingOptionsIfDifferent","dataTestSubj","className","compressed","customOptionText","fullWidth","id","isClearable","isDisabled","isInvalid","isLoading","noSuggestions","placeholder","renderOption","rowHeight","prepend","append","autoFocus","rest","markAsInvalid","classes","value","selectedOption","join","optionsList","optionsListDataTestSubj","areAllOptionsSelected","listRefCallback","onOptionClick","onOptionEnterKey","onOptionListScroll","optionRefCallback","rootId","updatePosition","comboBoxRefCallback","autoSizeInputRefCallback","searchInputRefCallback","clearSelectedOptions","onComboBoxClick","onCloseListClick","onComboBoxFocus","onOpenListClick","toggleButtonRefCallback","nextProps","prevState","stateUpdate"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/**\n * Elements within EuiComboBox which would normally be tabbable (inputs, buttons) have been removed\n * from the tab order with tabindex={-1} so that we can control the keyboard navigation interface.\n */\n\n/* eslint-disable jsx-a11y/role-has-required-aria-props */\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { findPopoverPosition, htmlIdGenerator, keys } from '../../services';\nimport { EuiPortal } from '../portal';\nimport { EuiComboBoxOptionsList } from './combo_box_options_list';\nimport { getMatchingOptions, flattenOptionGroups, getSelectedOptionForSearchValue } from './matching_options';\nimport { EuiComboBoxInput } from './combo_box_input/combo_box_input';\nimport { getElementZIndex } from '../../services/popover';\nvar initialSearchValue = '';\nexport class EuiComboBox extends Component {\n  static defaultProps = {\n    async: false,\n    compressed: false,\n    fullWidth: false,\n    isClearable: true,\n    options: [],\n    selectedOptions: [],\n    singleSelection: false,\n    prepend: undefined,\n    append: undefined,\n    sortMatchesBy: 'none'\n  };\n  state = {\n    activeOptionIndex: -1,\n    hasFocus: false,\n    isListOpen: false,\n    listElement: null,\n    listPosition: 'bottom',\n    listZIndex: undefined,\n    matchingOptions: getMatchingOptions(this.props.options, this.props.selectedOptions, initialSearchValue, this.props.async, Boolean(this.props.singleSelection), this.props.sortMatchesBy),\n    searchValue: initialSearchValue,\n    width: 0\n  };\n  _isMounted = false;\n  rootId = htmlIdGenerator(); // Refs\n\n  comboBoxRefInstance = null;\n  comboBoxRefCallback = ref => {\n    // IE11 doesn't support the `relatedTarget` event property for blur events\n    // but does add it for focusout. React doesn't support `onFocusOut` so here we are.\n    if (this.comboBoxRefInstance) {\n      this.comboBoxRefInstance.removeEventListener('focusout', this.onContainerBlur);\n    }\n\n    this.comboBoxRefInstance = ref;\n\n    if (this.comboBoxRefInstance) {\n      this.comboBoxRefInstance.addEventListener('focusout', this.onContainerBlur);\n      const comboBoxBounds = this.comboBoxRefInstance.getBoundingClientRect();\n      this.setState({\n        width: comboBoxBounds.width\n      });\n    }\n  };\n  autoSizeInputRefInstance = null;\n  autoSizeInputRefCallback = ref => {\n    this.autoSizeInputRefInstance = ref;\n  };\n  searchInputRefInstance = null;\n  searchInputRefCallback = ref => {\n    this.searchInputRefInstance = ref;\n    if (this.props.inputRef) this.props.inputRef(ref);\n  };\n  listRefInstance = null;\n  listRefCallback = ref => {\n    if (this.comboBoxRefInstance) {\n      // find the zIndex of the combobox relative to the page body\n      // and use that to depth-position the list box\n      // adds an extra `100` to provide some defense around neighboring elements' positioning\n      const listZIndex = getElementZIndex(this.comboBoxRefInstance, document.body) + 100;\n      this.setState({\n        listZIndex\n      });\n    }\n\n    this.listRefInstance = ref;\n  };\n  toggleButtonRefInstance = null;\n  toggleButtonRefCallback = ref => {\n    this.toggleButtonRefInstance = ref;\n  };\n  optionsRefInstances = [];\n  optionRefCallback = (index, ref) => {\n    this.optionsRefInstances[index] = ref;\n  };\n  openList = () => {\n    this.setState({\n      isListOpen: true\n    });\n  };\n  closeList = event => {\n    if (event && event.target === this.searchInputRefInstance) {\n      // really long search values / custom entries triggers a scroll event on the input\n      // which the EuiComboBoxOptionsList passes through here\n      return;\n    }\n\n    this.clearActiveOption();\n    this.setState({\n      listZIndex: undefined,\n      isListOpen: false\n    });\n  };\n  updatePosition = (listElement = this.state.listElement) => {\n    if (!this._isMounted) {\n      return;\n    }\n\n    if (!this.state.isListOpen) {\n      return;\n    }\n\n    if (!listElement) {\n      return;\n    } // it's possible that updateListPosition is called when listElement is becoming visible, but isn't yet\n\n\n    const listElementBounds = listElement.getBoundingClientRect();\n\n    if (listElementBounds.width === 0 || listElementBounds.height === 0) {\n      return;\n    }\n\n    if (!this.comboBoxRefInstance) {\n      return;\n    }\n\n    const comboBoxBounds = this.comboBoxRefInstance.getBoundingClientRect();\n    const {\n      position,\n      top\n    } = findPopoverPosition({\n      allowCrossAxis: false,\n      anchor: this.comboBoxRefInstance,\n      popover: listElement,\n      position: 'bottom'\n    });\n\n    if (this.listRefInstance) {\n      this.listRefInstance.style.top = `${top}px`; // listElement doesn't have its width set until after updating the position\n      // which means the popover service won't know about the correct width\n      // however, we already know where to position the element\n\n      this.listRefInstance.style.left = `${comboBoxBounds.left + window.pageXOffset}px`;\n      this.listRefInstance.style.width = `${comboBoxBounds.width}px`;\n    } // Cache for future calls.\n\n\n    this.setState({\n      listElement,\n      listPosition: position,\n      width: comboBoxBounds.width\n    });\n  };\n  incrementActiveOptionIndex = amount => {\n    // If there are no options available, do nothing.\n    if (!this.state.matchingOptions.length) {\n      return;\n    }\n\n    this.setState(({\n      activeOptionIndex,\n      matchingOptions\n    }) => {\n      let nextActiveOptionIndex;\n\n      if (activeOptionIndex < 0) {\n        // If this is the beginning of the user's keyboard navigation of the menu, then we'll focus\n        // either the first or last item.\n        nextActiveOptionIndex = amount < 0 ? matchingOptions.length - 1 : 0;\n      } else {\n        nextActiveOptionIndex = activeOptionIndex + amount;\n\n        if (nextActiveOptionIndex < 0) {\n          nextActiveOptionIndex = matchingOptions.length - 1;\n        } else if (nextActiveOptionIndex === matchingOptions.length) {\n          nextActiveOptionIndex = 0;\n        }\n      } // Group titles are included in option list but are not selectable\n      // Skip group title options\n\n\n      const direction = amount > 0 ? 1 : -1;\n\n      while (matchingOptions[nextActiveOptionIndex].isGroupLabelOption) {\n        nextActiveOptionIndex = nextActiveOptionIndex + direction;\n\n        if (nextActiveOptionIndex < 0) {\n          nextActiveOptionIndex = matchingOptions.length - 1;\n        } else if (nextActiveOptionIndex === matchingOptions.length) {\n          nextActiveOptionIndex = 0;\n        }\n      }\n\n      return {\n        activeOptionIndex: nextActiveOptionIndex\n      };\n    });\n  };\n  hasActiveOption = () => {\n    return this.state.activeOptionIndex > -1 && this.state.activeOptionIndex < this.state.matchingOptions.length;\n  };\n  clearActiveOption = () => {\n    this.setState({\n      activeOptionIndex: -1\n    });\n  };\n  clearSearchValue = () => {\n    this.onSearchChange('');\n  };\n  removeLastOption = () => {\n    if (!this.props.selectedOptions.length) {\n      return;\n    } // Backspace will be used to delete the input, not a pill.\n\n\n    if (this.state.searchValue.length) {\n      return;\n    } // Delete last pill.\n\n\n    this.onRemoveOption(this.props.selectedOptions[this.props.selectedOptions.length - 1]);\n\n    if (Boolean(this.props.singleSelection) && !this.state.isListOpen) {\n      this.openList();\n    }\n  };\n  addCustomOption = (isContainerBlur, searchValue) => {\n    const {\n      onCreateOption,\n      options,\n      selectedOptions,\n      singleSelection\n    } = this.props;\n    const {\n      matchingOptions\n    } = this.state;\n\n    if (this.doesSearchMatchOnlyOption()) {\n      this.onAddOption(matchingOptions[0], isContainerBlur);\n      return;\n    }\n\n    if (!onCreateOption) {\n      return;\n    } // Don't bother trying to create an option if the user hasn't typed anything.\n\n\n    if (!searchValue) {\n      return;\n    } // Don't create the value if it's already been selected.\n\n\n    if (getSelectedOptionForSearchValue(searchValue, selectedOptions)) {\n      return;\n    } // Add new custom pill if this is custom input, even if it partially matches an option.\n\n\n    const isOptionCreated = onCreateOption(searchValue, flattenOptionGroups(options)); // Expect the consumer to be explicit in rejecting a custom option.\n\n    if (isOptionCreated === false) {\n      return;\n    }\n\n    this.clearSearchValue();\n\n    if (Boolean(singleSelection)) {\n      // Adding a custom option to a single select that does not appear in the list of options\n      this.closeList();\n    }\n  };\n  doesSearchMatchOnlyOption = () => {\n    const {\n      searchValue\n    } = this.state;\n\n    if (this.state.matchingOptions.length !== 1) {\n      return false;\n    }\n\n    return this.state.matchingOptions[0].label.toLowerCase() === searchValue.toLowerCase();\n  };\n  areAllOptionsSelected = () => {\n    const {\n      options,\n      selectedOptions,\n      async\n    } = this.props; // Assume if this is async then there could be infinite options.\n\n    if (async) {\n      return false;\n    }\n\n    const flattenOptions = flattenOptionGroups(options).map(option => {\n      return { ...option,\n        label: option.label.trim().toLowerCase()\n      };\n    });\n    let numberOfSelectedOptions = 0;\n    selectedOptions.forEach(({\n      label\n    }) => {\n      const trimmedLabel = label.trim().toLowerCase();\n      if (flattenOptions.findIndex(option => option.label === trimmedLabel) !== -1) numberOfSelectedOptions += 1;\n    });\n    return flattenOptions.length === numberOfSelectedOptions;\n  };\n  onComboBoxFocus = event => {\n    if (this.props.onFocus) {\n      this.props.onFocus(event);\n    }\n\n    this.openList();\n    this.setState({\n      hasFocus: true\n    });\n  };\n  setCustomOptions = isContainerBlur => {\n    const {\n      searchValue\n    } = this.state;\n    const {\n      delimiter\n    } = this.props;\n\n    if (delimiter) {\n      searchValue.split(delimiter).forEach(option => {\n        if (option.length > 0) this.addCustomOption(isContainerBlur, option);\n      });\n    } else {\n      this.addCustomOption(isContainerBlur, searchValue);\n    }\n  };\n  onContainerBlur = event => {\n    // close the options list, unless the use clicked on an option\n\n    /**\n     * FireFox returns `relatedTarget` as `null` for security reasons, but provides a proprietary `explicitOriginalTarget`.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Event/explicitOriginalTarget\n     */\n    const focusEvent = event;\n    const relatedTarget = focusEvent.relatedTarget || focusEvent.explicitOriginalTarget;\n    const focusedInOptionsList = relatedTarget && this.listRefInstance && this.listRefInstance.contains(relatedTarget);\n    const focusedInInput = relatedTarget && this.comboBoxRefInstance && this.comboBoxRefInstance.contains(relatedTarget);\n\n    if (!focusedInOptionsList && !focusedInInput) {\n      this.closeList();\n\n      if (this.props.onBlur) {\n        this.props.onBlur(event);\n      }\n\n      this.setState({\n        hasFocus: false\n      }); // If the user tabs away or changes focus to another element, take whatever input they've\n      // typed and convert it into a pill, to prevent the combo box from looking like a text input.\n\n      if (!this.hasActiveOption()) {\n        this.setCustomOptions(true);\n      }\n    }\n  };\n  onKeyDown = event => {\n    switch (event.key) {\n      case keys.ARROW_UP:\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (this.state.isListOpen) {\n          this.incrementActiveOptionIndex(-1);\n        } else {\n          this.openList();\n        }\n\n        break;\n\n      case keys.ARROW_DOWN:\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (this.state.isListOpen) {\n          this.incrementActiveOptionIndex(1);\n        } else {\n          this.openList();\n        }\n\n        break;\n\n      case keys.BACKSPACE:\n        event.stopPropagation();\n        this.removeLastOption();\n        break;\n\n      case keys.ESCAPE:\n        if (this.state.isListOpen) {\n          event.preventDefault();\n          event.stopPropagation();\n          this.closeList();\n        }\n\n        break;\n\n      case keys.ENTER:\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (this.hasActiveOption()) {\n          this.onAddOption(this.state.matchingOptions[this.state.activeOptionIndex]);\n        } else {\n          this.setCustomOptions(false);\n        }\n\n        break;\n\n      case keys.TAB:\n        // Disallow tabbing when the user is navigating the options.\n        if (this.hasActiveOption() && this.state.isListOpen) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n\n        break;\n\n      default:\n        if (this.props.onKeyDown) {\n          this.props.onKeyDown(event);\n        }\n\n    }\n  };\n  onOptionEnterKey = option => {\n    this.onAddOption(option);\n  };\n  onOptionClick = option => {\n    this.onAddOption(option);\n  };\n  onAddOption = (addedOption, isContainerBlur) => {\n    if (addedOption.disabled) {\n      return;\n    }\n\n    const {\n      onChange,\n      selectedOptions,\n      singleSelection: singleSelectionProp\n    } = this.props;\n    const singleSelection = Boolean(singleSelectionProp);\n    const changeOptions = singleSelection ? [addedOption] : selectedOptions.concat(addedOption);\n\n    if (onChange) {\n      onChange(changeOptions);\n    }\n\n    this.clearSearchValue();\n    this.clearActiveOption();\n\n    if (!isContainerBlur) {\n      if (this.searchInputRefInstance) {\n        this.searchInputRefInstance.focus();\n      }\n    }\n\n    if (singleSelection) {\n      requestAnimationFrame(() => this.closeList());\n    } else {\n      this.setState({\n        activeOptionIndex: this.state.matchingOptions.indexOf(addedOption)\n      });\n    }\n  };\n  onRemoveOption = removedOption => {\n    const {\n      onChange,\n      selectedOptions\n    } = this.props;\n\n    if (onChange) {\n      onChange(selectedOptions.filter(option => option !== removedOption));\n    }\n\n    this.clearActiveOption();\n  };\n  clearSelectedOptions = () => {\n    const {\n      onChange\n    } = this.props;\n\n    if (onChange) {\n      onChange([]);\n    } // Clicking the clear button will also cause it to disappear. This would result in focus\n    // shifting unexpectedly to the body element so we set it to the input which is more reasonable,\n\n\n    if (this.searchInputRefInstance) {\n      this.searchInputRefInstance.focus();\n    }\n\n    if (!this.state.isListOpen) {\n      this.openList();\n    }\n  };\n  onComboBoxClick = () => {\n    // When the user clicks anywhere on the box, enter the interaction state.\n    if (this.searchInputRefInstance) {\n      this.searchInputRefInstance.focus();\n    } // If the user does this from a state in which an option has focus, then we need to reset it or clear it.\n\n\n    if (Boolean(this.props.singleSelection) && this.props.selectedOptions.length === 1) {\n      const selectedOptionIndex = this.state.matchingOptions.findIndex(option => option.label === this.props.selectedOptions[0].label && option.key === this.props.selectedOptions[0].key);\n      this.setState({\n        activeOptionIndex: selectedOptionIndex\n      });\n    } else {\n      this.clearActiveOption();\n    }\n  };\n  onOpenListClick = () => {\n    if (this.searchInputRefInstance) {\n      this.searchInputRefInstance.focus();\n    }\n\n    if (!this.state.isListOpen) {\n      this.openList();\n    }\n  };\n  onOptionListScroll = () => {\n    if (this.searchInputRefInstance) {\n      this.searchInputRefInstance.focus();\n    }\n  };\n  onCloseListClick = () => {\n    this.closeList();\n  };\n  onSearchChange = searchValue => {\n    const {\n      onSearchChange,\n      delimiter\n    } = this.props;\n\n    if (onSearchChange) {\n      const hasMatchingOptions = this.state.matchingOptions.length > 0;\n      onSearchChange(searchValue, hasMatchingOptions);\n    }\n\n    this.setState({\n      searchValue\n    }, () => {\n      if (searchValue && this.state.isListOpen === false) this.openList();\n    });\n\n    if (delimiter && searchValue.endsWith(delimiter)) {\n      this.setCustomOptions(false);\n    }\n  };\n\n  componentDidMount() {\n    this._isMounted = true; // TODO: This will need to be called once the actual stylesheet loads.\n\n    setTimeout(() => {\n      if (this.autoSizeInputRefInstance) {\n        this.autoSizeInputRefInstance.copyInputStyles();\n      }\n    }, 100);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      options,\n      selectedOptions,\n      singleSelection,\n      sortMatchesBy\n    } = nextProps;\n    const {\n      activeOptionIndex,\n      searchValue\n    } = prevState; // Calculate and cache the options which match the searchValue, because we use this information\n    // in multiple places and it would be expensive to calculate repeatedly.\n\n    const matchingOptions = getMatchingOptions(options, selectedOptions, searchValue, nextProps.async, Boolean(singleSelection), sortMatchesBy);\n    const stateUpdate = {\n      matchingOptions\n    };\n\n    if (activeOptionIndex >= matchingOptions.length) {\n      stateUpdate.activeOptionIndex = -1;\n    }\n\n    return stateUpdate;\n  }\n\n  updateMatchingOptionsIfDifferent = newMatchingOptions => {\n    const {\n      matchingOptions,\n      activeOptionIndex\n    } = this.state;\n    const {\n      singleSelection,\n      selectedOptions\n    } = this.props;\n    let areOptionsDifferent = false;\n\n    if (matchingOptions.length !== newMatchingOptions.length) {\n      areOptionsDifferent = true;\n    } else {\n      for (let i = 0; i < matchingOptions.length; i++) {\n        if (matchingOptions[i].label !== newMatchingOptions[i].label) {\n          areOptionsDifferent = true;\n          break;\n        }\n      }\n    }\n\n    if (areOptionsDifferent) {\n      this.optionsRefInstances = [];\n      let nextActiveOptionIndex = activeOptionIndex; // ensure that the currently selected single option is active if it is in the matchingOptions\n\n      if (Boolean(singleSelection) && selectedOptions.length === 1) {\n        if (newMatchingOptions.includes(selectedOptions[0])) {\n          nextActiveOptionIndex = newMatchingOptions.indexOf(selectedOptions[0]);\n        }\n      }\n\n      this.setState({\n        matchingOptions: newMatchingOptions,\n        activeOptionIndex: nextActiveOptionIndex\n      });\n\n      if (!newMatchingOptions.length) {\n        // Prevent endless setState -> componentWillUpdate -> setState loop.\n        if (this.hasActiveOption()) {\n          this.clearActiveOption();\n        }\n      }\n    }\n  };\n\n  componentDidUpdate() {\n    const {\n      options,\n      selectedOptions,\n      singleSelection,\n      sortMatchesBy\n    } = this.props;\n    const {\n      searchValue\n    } = this.state; // React 16.3 has a bug (fixed in 16.4) where getDerivedStateFromProps\n    // isn't called after a state change, and we track `searchValue` in state\n    // instead we need to react to a change in searchValue here\n\n    this.updateMatchingOptionsIfDifferent(getMatchingOptions(options, selectedOptions, searchValue, this.props.async, Boolean(singleSelection), sortMatchesBy));\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    const {\n      'data-test-subj': dataTestSubj,\n      async,\n      className,\n      compressed,\n      customOptionText,\n      fullWidth,\n      id,\n      inputRef,\n      isClearable,\n      isDisabled,\n      isInvalid,\n      isLoading,\n      noSuggestions,\n      onBlur,\n      onChange,\n      onCreateOption,\n      onSearchChange,\n      options,\n      placeholder,\n      renderOption,\n      rowHeight,\n      selectedOptions,\n      singleSelection,\n      prepend,\n      sortMatchesBy,\n      delimiter,\n      append,\n      autoFocus,\n      ...rest\n    } = this.props;\n    const {\n      activeOptionIndex,\n      hasFocus,\n      isListOpen,\n      listPosition,\n      searchValue,\n      width,\n      matchingOptions\n    } = this.state; // Visually indicate the combobox is in an invalid state if it has lost focus but there is text entered in the input.\n    // When custom options are disabled and the user leaves the combo box after entering text that does not match any\n    // options, this tells the user that they've entered invalid input.\n\n    const markAsInvalid = isInvalid || (hasFocus === false || isListOpen === false) && searchValue;\n    const classes = classNames('euiComboBox', className, {\n      'euiComboBox--compressed': compressed,\n      'euiComboBox--fullWidth': fullWidth,\n      'euiComboBox-isDisabled': isDisabled,\n      'euiComboBox-isInvalid': markAsInvalid,\n      'euiComboBox-isOpen': isListOpen\n    });\n    const value = selectedOptions.map(selectedOption => selectedOption.label).join(', ');\n    let optionsList;\n\n    if (!noSuggestions && isListOpen) {\n      const optionsListDataTestSubj = dataTestSubj ? `${dataTestSubj}-optionsList` : undefined;\n      optionsList = <EuiPortal>\n          <EuiComboBoxOptionsList zIndex={this.state.listZIndex} activeOptionIndex={this.state.activeOptionIndex} areAllOptionsSelected={this.areAllOptionsSelected()} customOptionText={customOptionText} data-test-subj={optionsListDataTestSubj} fullWidth={fullWidth} isLoading={isLoading} listRef={this.listRefCallback} matchingOptions={matchingOptions} onCloseList={this.closeList} onCreateOption={onCreateOption} onOptionClick={this.onOptionClick} onOptionEnterKey={this.onOptionEnterKey} onScroll={this.onOptionListScroll} optionRef={this.optionRefCallback} options={options} position={listPosition} singleSelection={singleSelection} renderOption={renderOption} rootId={this.rootId} rowHeight={rowHeight} scrollToIndex={activeOptionIndex} searchValue={searchValue} selectedOptions={selectedOptions} updatePosition={this.updatePosition} width={width} delimiter={delimiter} getSelectedOptionForSearchValue={getSelectedOptionForSearchValue} />\n        </EuiPortal>;\n    }\n\n    return (\n      /**\n       * Re: jsx-a11y/interactive-supports-focus\n       * Focus is managed and is placed on the textbox element (`EuiComboBoxInput`)\n       *\n       * Re: jsx-a11y/role-has-required-aria-props\n       * Expansion is managed and required `aria-controls` prop is placed on the textbox element (`EuiComboBoxInput`)\n       *\n       * Reference for both: https://www.w3.org/TR/2017/REC-wai-aria-1.1-20171214/#combobox,\n       * which verifies that this implementation follows the spec.\n       */\n      // eslint-disable-next-line jsx-a11y/interactive-supports-focus\n      <div {...rest} aria-expanded={isListOpen} aria-haspopup=\"listbox\" className={classes} data-test-subj={dataTestSubj} onKeyDown={this.onKeyDown} ref={this.comboBoxRefCallback} role=\"combobox\">\n        <EuiComboBoxInput autoSizeInputRef={this.autoSizeInputRefCallback} compressed={compressed} focusedOptionId={this.hasActiveOption() ? this.rootId(`_option-${this.state.activeOptionIndex}`) : undefined} fullWidth={fullWidth} hasSelectedOptions={selectedOptions.length > 0} id={id} inputRef={this.searchInputRefCallback} isDisabled={isDisabled} isListOpen={isListOpen} noIcon={!!noSuggestions} onChange={this.onSearchChange} onClear={isClearable && !isDisabled ? this.clearSelectedOptions : undefined} onClick={this.onComboBoxClick} onCloseListClick={this.onCloseListClick} onFocus={this.onComboBoxFocus} onOpenListClick={this.onOpenListClick} onRemoveOption={this.onRemoveOption} placeholder={placeholder} rootId={this.rootId} searchValue={searchValue} selectedOptions={selectedOptions} singleSelection={singleSelection} toggleButtonRef={this.toggleButtonRefCallback} updatePosition={this.updatePosition} value={value} append={singleSelection ? append : undefined} prepend={singleSelection ? prepend : undefined} isLoading={isLoading} autoFocus={autoFocus} />\n        {optionsList}\n      </div>\n    );\n  }\n\n}\nEuiComboBox.propTypes = {\n  \"data-test-subj\": PropTypes.string,\n\n  /**\n     * Updates the list of options asynchronously\n     */\n  async: PropTypes.bool.isRequired,\n  className: PropTypes.string,\n\n  /**\n     * When `true` creates a shorter height input\n     */\n  compressed: PropTypes.bool.isRequired,\n\n  /**\n     * When `true` expands to the entire width available\n     */\n  fullWidth: PropTypes.bool.isRequired,\n  id: PropTypes.string,\n  inputRef: PropTypes.any,\n\n  /**\n     * Shows a button that quickly clears any input\n     */\n  isClearable: PropTypes.bool.isRequired,\n\n  /**\n     * Disables the input\n     */\n  isDisabled: PropTypes.bool,\n  isInvalid: PropTypes.bool,\n\n  /**\n     * Swaps the dropdown options for a loading spinner\n     */\n  isLoading: PropTypes.bool,\n\n  /**\n     * Doesn't show the suggestions list/dropdown\n     */\n  noSuggestions: PropTypes.bool,\n  onBlur: PropTypes.any,\n\n  /**\n     * Called every time the query in the combo box is parsed\n     */\n  onChange: PropTypes.func,\n  onFocus: PropTypes.any,\n  onKeyDown: PropTypes.any,\n\n  /**\n     * Called every time the text query in the search box is parsed\n     */\n  onSearchChange: PropTypes.func,\n\n  /**\n     * Sets the placeholder of the input\n     */\n  placeholder: PropTypes.string,\n\n  /**\n     * Every option must be the same height and must be explicitly set if using a custom render\n     */\n  rowHeight: PropTypes.number,\n\n  /**\n     * When `true` only allows the user to select a single option. Set to `{ asPlainText: true }` to not render input selection as pills\n     */\n  singleSelection: PropTypes.oneOfType([PropTypes.bool.isRequired, PropTypes.shape({\n    asPlainText: PropTypes.bool\n  }).isRequired]).isRequired,\n\n  /**\n     * Display matching options by:\n     * `startsWith`: moves items that start with search value to top of the list;\n     * `none`: don't change the sort order of initial object\n     */\n  sortMatchesBy: PropTypes.oneOf([\"none\", \"startsWith\"]).isRequired,\n\n  /**\n     * Creates an input group with element(s) coming before input. It won't show if `singleSelection` is set to `false`.\n     * `string` | `ReactElement` or an array of these\n     */\n  prepend: PropTypes.any,\n\n  /**\n     * Creates an input group with element(s) coming after input. It won't show if `singleSelection` is set to `false`.\n     * `string` | `ReactElement` or an array of these\n     */\n  append: PropTypes.any,\n\n  /**\n     * A special character to use as a value separator. Typically a comma `,`\n     */\n  delimiter: PropTypes.string,\n\n  /**\n     * Specifies that the input should have focus when the component loads\n     */\n  autoFocus: PropTypes.bool,\n  \"aria-label\": PropTypes.string\n};\n\ntry {\n  EuiComboBox.__docgenInfo = {\n    description: '',\n    displayName: 'EuiComboBox',\n    methods: [],\n    props: {\n      'data-test-subj': {\n        defaultValue: null,\n        description: '',\n        name: 'data-test-subj',\n        parent: {\n          fileName: 'eui/src/components/combo_box/combo_box.tsx',\n          name: '_EuiComboBoxProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      async: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: 'Updates the list of options asynchronously',\n        name: 'async',\n        parent: {\n          fileName: 'eui/src/components/combo_box/combo_box.tsx',\n          name: '_EuiComboBoxProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/src/components/combo_box/combo_box.tsx',\n          name: '_EuiComboBoxProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      compressed: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: 'When `true` creates a shorter height input',\n        name: 'compressed',\n        parent: {\n          fileName: 'eui/src/components/combo_box/combo_box.tsx',\n          name: '_EuiComboBoxProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      fullWidth: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: 'When `true` expands to the entire width available',\n        name: 'fullWidth',\n        parent: {\n          fileName: 'eui/src/components/combo_box/combo_box.tsx',\n          name: '_EuiComboBoxProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      id: {\n        defaultValue: null,\n        description: '',\n        name: 'id',\n        parent: {\n          fileName: 'eui/src/components/combo_box/combo_box.tsx',\n          name: '_EuiComboBoxProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      inputRef: {\n        defaultValue: null,\n        description: '',\n        name: 'inputRef',\n        parent: {\n          fileName: 'eui/src/components/combo_box/combo_box.tsx',\n          name: '_EuiComboBoxProps'\n        },\n        required: false,\n        type: {\n          name: '(instance: HTMLInputElement) => void'\n        }\n      },\n      isClearable: {\n        defaultValue: {\n          value: 'true'\n        },\n        description: 'Shows a button that quickly clears any input',\n        name: 'isClearable',\n        parent: {\n          fileName: 'eui/src/components/combo_box/combo_box.tsx',\n          name: '_EuiComboBoxProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      isDisabled: {\n        defaultValue: null,\n        description: 'Disables the input',\n        name: 'isDisabled',\n        parent: {\n          fileName: 'eui/src/components/combo_box/combo_box.tsx',\n          name: '_EuiComboBoxProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      isInvalid: {\n        defaultValue: null,\n        description: '',\n        name: 'isInvalid',\n        parent: {\n          fileName: 'eui/src/components/combo_box/combo_box.tsx',\n          name: '_EuiComboBoxProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      isLoading: {\n        defaultValue: null,\n        description: 'Swaps the dropdown options for a loading spinner',\n        name: 'isLoading',\n        parent: {\n          fileName: 'eui/src/components/combo_box/combo_box.tsx',\n          name: '_EuiComboBoxProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      noSuggestions: {\n        defaultValue: null,\n        description: \"Doesn't show the suggestions list/dropdown\",\n        name: 'noSuggestions',\n        parent: {\n          fileName: 'eui/src/components/combo_box/combo_box.tsx',\n          name: '_EuiComboBoxProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      onBlur: {\n        defaultValue: null,\n        description: '',\n        name: 'onBlur',\n        parent: {\n          fileName: 'eui/src/components/combo_box/combo_box.tsx',\n          name: '_EuiComboBoxProps'\n        },\n        required: false,\n        type: {\n          name: '(event: FocusEvent<HTMLDivElement>) => void'\n        }\n      },\n      onChange: {\n        defaultValue: null,\n        description: 'Called every time the query in the combo box is parsed',\n        name: 'onChange',\n        parent: {\n          fileName: 'eui/src/components/combo_box/combo_box.tsx',\n          name: '_EuiComboBoxProps'\n        },\n        required: false,\n        type: {\n          name: '(options: EuiComboBoxOptionOption<T>[]) => void'\n        }\n      },\n      onFocus: {\n        defaultValue: null,\n        description: '',\n        name: 'onFocus',\n        parent: {\n          fileName: 'eui/src/components/combo_box/combo_box.tsx',\n          name: '_EuiComboBoxProps'\n        },\n        required: false,\n        type: {\n          name: '(event: FocusEvent<HTMLDivElement>) => void'\n        }\n      },\n      onKeyDown: {\n        defaultValue: null,\n        description: '',\n        name: 'onKeyDown',\n        parent: {\n          fileName: 'eui/src/components/combo_box/combo_box.tsx',\n          name: '_EuiComboBoxProps'\n        },\n        required: false,\n        type: {\n          name: '(event: KeyboardEvent<HTMLDivElement>) => void'\n        }\n      },\n      onSearchChange: {\n        defaultValue: null,\n        description: 'Called every time the text query in the search box is parsed',\n        name: 'onSearchChange',\n        parent: {\n          fileName: 'eui/src/components/combo_box/combo_box.tsx',\n          name: '_EuiComboBoxProps'\n        },\n        required: false,\n        type: {\n          name: '(searchValue: string, hasMatchingOptions?: boolean) => void'\n        }\n      },\n      placeholder: {\n        defaultValue: null,\n        description: 'Sets the placeholder of the input',\n        name: 'placeholder',\n        parent: {\n          fileName: 'eui/src/components/combo_box/combo_box.tsx',\n          name: '_EuiComboBoxProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      rowHeight: {\n        defaultValue: null,\n        description: 'Every option must be the same height and must be explicitly set if using a custom render',\n        name: 'rowHeight',\n        parent: {\n          fileName: 'eui/src/components/combo_box/combo_box.tsx',\n          name: '_EuiComboBoxProps'\n        },\n        required: false,\n        type: {\n          name: 'number'\n        }\n      },\n      singleSelection: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: 'When `true` only allows the user to select a single option. Set to `{ asPlainText: true }` to not render input selection as pills',\n        name: 'singleSelection',\n        parent: {\n          fileName: 'eui/src/components/combo_box/combo_box.tsx',\n          name: '_EuiComboBoxProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean | EuiComboBoxSingleSelectionShape'\n        }\n      },\n      sortMatchesBy: {\n        defaultValue: {\n          value: \"'none' as const\"\n        },\n        description: 'Display matching options by:\\n' + '`startsWith`: moves items that start with search value to top of the list;\\n' + \"`none`: don't change the sort order of initial object\",\n        name: 'sortMatchesBy',\n        parent: {\n          fileName: 'eui/src/components/combo_box/combo_box.tsx',\n          name: '_EuiComboBoxProps'\n        },\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"none\" | \"startsWith\"',\n          value: [{\n            value: '\"none\"'\n          }, {\n            value: '\"startsWith\"'\n          }]\n        }\n      },\n      prepend: {\n        defaultValue: {\n          value: 'undefined'\n        },\n        description: \"Creates an input group with element(s) coming before input. It won't show if `singleSelection` is set to `false`.\\n\" + '`string` | `ReactElement` or an array of these',\n        name: 'prepend',\n        parent: {\n          fileName: 'eui/src/components/combo_box/combo_box.tsx',\n          name: '_EuiComboBoxProps'\n        },\n        required: false,\n        type: {\n          name: 'PrependAppendType'\n        }\n      },\n      append: {\n        defaultValue: {\n          value: 'undefined'\n        },\n        description: \"Creates an input group with element(s) coming after input. It won't show if `singleSelection` is set to `false`.\\n\" + '`string` | `ReactElement` or an array of these',\n        name: 'append',\n        parent: {\n          fileName: 'eui/src/components/combo_box/combo_box.tsx',\n          name: '_EuiComboBoxProps'\n        },\n        required: false,\n        type: {\n          name: 'PrependAppendType'\n        }\n      },\n      delimiter: {\n        defaultValue: null,\n        description: 'A special character to use as a value separator. Typically a comma `,`',\n        name: 'delimiter',\n        parent: {\n          fileName: 'eui/src/components/combo_box/combo_box.tsx',\n          name: '_EuiComboBoxProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      autoFocus: {\n        defaultValue: null,\n        description: 'Specifies that the input should have focus when the component loads',\n        name: 'autoFocus',\n        parent: {\n          fileName: 'eui/src/components/combo_box/combo_box.tsx',\n          name: '_EuiComboBoxProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: '',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      options: {\n        defaultValue: {\n          value: '[]'\n        },\n        description: 'Array of EuiComboBoxOptionOption objects. See #EuiComboBoxOptionOption',\n        name: 'options',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'EuiComboBoxOptionOption<T>[]'\n        }\n      },\n      renderOption: {\n        defaultValue: null,\n        description: '',\n        name: 'renderOption',\n        parent: undefined,\n        required: false,\n        type: {\n          name: '(option: EuiComboBoxOptionOption<T>, searchValue: string, OPTION_CONTENT_CLASSNAME: string) => ReactNode'\n        }\n      },\n      customOptionText: {\n        defaultValue: null,\n        description: 'Creates a custom text option. You can use `{searchValue}` inside your string to better customize your text.\\n' + \"It won't show if there's no onCreateOption.\",\n        name: 'customOptionText',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      onCreateOption: {\n        defaultValue: null,\n        description: '',\n        name: 'onCreateOption',\n        parent: undefined,\n        required: false,\n        type: {\n          name: '(searchValue: string, options: EuiComboBoxOptionOption<T>[]) => boolean | void'\n        }\n      },\n      selectedOptions: {\n        defaultValue: {\n          value: '[]'\n        },\n        description: '',\n        name: 'selectedOptions',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'EuiComboBoxOptionOption<T>[]'\n        }\n      }\n    },\n    extendedInterfaces: ['_EuiComboBoxProps', 'HTMLAttributes', 'AriaAttributes', 'DOMAttributes']\n  };\n} catch (e) {}"]}]}