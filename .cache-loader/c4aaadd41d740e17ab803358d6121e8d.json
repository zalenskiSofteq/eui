{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\markdown_editor\\markdown_editor.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\markdown_editor\\markdown_editor.tsx","mtime":1649070093701},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/markdown_editor/markdown_editor.tsx"],"names":["React","createElement","useEffect","useImperativeHandle","useMemo","useState","useCallback","useRef","forwardRef","unified","classNames","MarkdownActions","insertText","EuiMarkdownEditorToolbar","EuiMarkdownEditorTextArea","EuiMarkdownFormat","EuiMarkdownEditorDropZone","htmlIdGenerator","MODE_EDITING","MODE_VIEWING","EuiModal","EuiMarkdownContext","MarkdownTooltip","defaultParsingPlugins","defaultProcessingPlugins","defaultUiPlugins","EuiResizeObserver","mergeRefs","refs","filteredRefs","filter","Boolean","length","inst","ref","current","isNewLine","char","match","padWithNewlinesIfNeeded","textarea","text","selectionStart","selectionEnd","isPrevNewLine","value","isPrevPrevNewLine","isNextNewLine","EuiMarkdownEditor","className","_editorId","editorId","onChange","height","maxHeight","autoExpandPreview","parsingPluginList","processingPluginList","uiPlugins","onParse","errors","ariaLabel","ariaLabelledBy","ariaDescribedBy","initialViewMode","dropHandlers","rest","viewMode","setViewMode","undefined","pluginEditorPlugin","setPluginEditorPlugin","toolbarPlugins","__originatedFromEui","unshift","plugin","console","warn","markdownActions","map","name","join","parser","Compiler","tree","identityCompiler","use","parsed","processSync","e","parseError","isPreviewing","isEditing","replaceNode","position","next","leading","substr","start","offset","trailing","end","contextValue","openPluginEditor","selectedNode","setSelectedNode","textareaRef","getCursorNode","node","result","contents","outer","children","i","child","type","addEventListener","removeEventListener","messages","ast","previewRef","editorToolbarRef","hasUnacceptedItems","setHasUnacceptedItems","currentHeight","setCurrentHeight","editorFooterHeight","setEditorFooterHeight","editorToolbarHeight","setEditorToolbarHeight","classes","onResize","resizedTextareaHeight","offsetHeight","scrollHeight","elementComputedStyle","window","getComputedStyle","borderWidth","parseFloat","borderTopWidth","borderBottomWidth","marginWidth","marginTop","marginBottom","extraHeight","previewHeight","textAreaHeight","textAreaMaxHeight","editorToggleContainerHeight","config","block","originalSelectionStart","newSelectionPoint","resizeRef","target","editor","onCancel","onSave","markdown","setSelectionRange","displayName"],"mappings":"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","sourcesContent":["function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function () {};\n\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (e) {\n          throw e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function () {\n      it = o[Symbol.iterator]();\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (e) {\n      didErr = true;\n      err = e;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nimport PropTypes from \"prop-types\";\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nimport React, { createElement, useEffect, useImperativeHandle, useMemo, useState, useCallback, useRef, forwardRef } from 'react';\nimport unified from 'unified';\nimport classNames from 'classnames';\nimport MarkdownActions, { insertText } from './markdown_actions';\nimport { EuiMarkdownEditorToolbar } from './markdown_editor_toolbar';\nimport { EuiMarkdownEditorTextArea } from './markdown_editor_text_area';\nimport { EuiMarkdownFormat } from './markdown_format';\nimport { EuiMarkdownEditorDropZone } from './markdown_editor_drop_zone';\nimport { htmlIdGenerator } from '../../services/';\nimport { MODE_EDITING, MODE_VIEWING } from './markdown_modes';\nimport { EuiModal } from '../modal';\nimport { EuiMarkdownContext } from './markdown_context';\nimport * as MarkdownTooltip from './plugins/markdown_tooltip';\nimport { defaultParsingPlugins, defaultProcessingPlugins, defaultUiPlugins } from './plugins/markdown_default_plugins';\nimport { EuiResizeObserver } from '../observer/resize_observer'; // TODO I wanted to use the useCombinedRefs\n// but I can't because it's not allowed to use react hooks\n// inside a callback.\n\nvar mergeRefs = function mergeRefs() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n\n  var filteredRefs = refs.filter(Boolean);\n  if (!filteredRefs.length) return null;\n  if (filteredRefs.length === 0) return filteredRefs[0];\n  return function (inst) {\n    var _iterator = _createForOfIteratorHelper(filteredRefs),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var ref = _step.value;\n\n        if (typeof ref === 'function') {\n          ref(inst);\n        } else if (ref) {\n          ref.current = inst;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  };\n};\n\nfunction isNewLine(char) {\n  if (char == null) return true;\n  return !!char.match(/[\\r\\n]/);\n}\n\nfunction padWithNewlinesIfNeeded(textarea, text) {\n  var selectionStart = textarea.selectionStart;\n  var selectionEnd = textarea.selectionEnd; // block parsing requires two leading new lines and none trailing, but we add an extra trailing line for readability\n\n  var isPrevNewLine = isNewLine(textarea.value[selectionStart - 1]);\n  var isPrevPrevNewLine = isNewLine(textarea.value[selectionStart - 2]);\n  var isNextNewLine = isNewLine(textarea.value[selectionEnd]); // pad text with newlines as needed\n\n  text = \"\".concat(isPrevNewLine ? '' : '\\n').concat(isPrevPrevNewLine ? '' : '\\n').concat(text).concat(isNextNewLine ? '' : '\\n');\n  return text;\n}\n\nexport var EuiMarkdownEditor = forwardRef(({\n  className,\n  editorId: _editorId,\n  value,\n  onChange,\n  height = 250,\n  maxHeight = 500,\n  autoExpandPreview = true,\n  parsingPluginList = defaultParsingPlugins,\n  processingPluginList = defaultProcessingPlugins,\n  uiPlugins = defaultUiPlugins,\n  onParse,\n  errors = [],\n  'aria-label': ariaLabel,\n  'aria-labelledby': ariaLabelledBy,\n  'aria-describedby': ariaDescribedBy,\n  initialViewMode = MODE_EDITING,\n  dropHandlers = [],\n  ...rest\n}, ref) => {\n  const [viewMode, setViewMode] = useState(initialViewMode);\n  const editorId = useMemo(() => _editorId || htmlIdGenerator()(), [_editorId]);\n  const [pluginEditorPlugin, setPluginEditorPlugin] = useState(undefined);\n  const toolbarPlugins = [...uiPlugins]; // @ts-ignore __originatedFromEui is a custom property\n\n  if (!uiPlugins.__originatedFromEui) {\n    toolbarPlugins.unshift(MarkdownTooltip.plugin);\n    console.warn('Deprecation warning: uiPlugins passed to EuiMarkdownEditor does not include the tooltip plugin, which has been added for you. This automatic inclusion has been deprecated and will be removed in the future, see https://github.com/elastic/eui/pull/4383');\n  }\n\n  const markdownActions = useMemo(() => new MarkdownActions(editorId, toolbarPlugins), // toolbarPlugins _is_ accounted for\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [editorId, toolbarPlugins.map(({\n    name\n  }) => name).join(',')]);\n  const parser = useMemo(() => {\n    const Compiler = tree => {\n      return tree;\n    };\n\n    function identityCompiler() {\n      this.Compiler = Compiler;\n    }\n\n    return unified().use(parsingPluginList).use(identityCompiler);\n  }, [parsingPluginList]);\n  const [parsed, parseError] = useMemo(() => {\n    try {\n      const parsed = parser.processSync(value);\n      return [parsed, null];\n    } catch (e) {\n      return [null, e];\n    }\n  }, [parser, value]);\n  const isPreviewing = viewMode === MODE_VIEWING;\n  const isEditing = viewMode === MODE_EDITING;\n  const replaceNode = useCallback((position, next) => {\n    const leading = value.substr(0, position.start.offset);\n    const trailing = value.substr(position.end.offset);\n    onChange(`${leading}${next}${trailing}`);\n  }, [value, onChange]);\n  const contextValue = useMemo(() => ({\n    openPluginEditor: plugin => setPluginEditorPlugin(() => plugin),\n    replaceNode\n  }), [replaceNode]);\n  const [selectedNode, setSelectedNode] = useState();\n  const textareaRef = useRef(null);\n  useEffect(() => {\n    if (textareaRef == null) return;\n    if (parsed == null) return;\n\n    const getCursorNode = () => {\n      const {\n        selectionStart\n      } = textareaRef.current;\n      let node = parsed.result ?? parsed.contents;\n\n      outer: while (true) {\n        if (node.children) {\n          for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n\n            if (child.position.start.offset < selectionStart && selectionStart < child.position.end.offset) {\n              if (child.type === 'text') break outer; // don't dive into `text` nodes\n\n              node = child;\n              continue outer;\n            }\n          }\n        }\n\n        break;\n      }\n\n      setSelectedNode(node);\n    };\n\n    const textarea = textareaRef.current;\n    textarea.addEventListener('keyup', getCursorNode);\n    textarea.addEventListener('mouseup', getCursorNode);\n    return () => {\n      textarea.removeEventListener('keyup', getCursorNode);\n      textarea.removeEventListener('mouseup', getCursorNode);\n    };\n  }, [parsed]);\n  useEffect(() => {\n    if (onParse) {\n      const messages = parsed ? parsed.messages : [];\n      const ast = parsed ? parsed.result ?? parsed.contents : null;\n      onParse(parseError, {\n        messages,\n        ast\n      });\n    }\n  }, [onParse, parsed, parseError]);\n  useImperativeHandle(ref, () => ({\n    textarea: textareaRef.current,\n    replaceNode\n  }), [replaceNode]);\n  const textarea = textareaRef.current;\n  const previewRef = useRef(null);\n  const editorToolbarRef = useRef(null);\n  const [hasUnacceptedItems, setHasUnacceptedItems] = React.useState(false);\n  const [currentHeight, setCurrentHeight] = useState(height);\n  const [editorFooterHeight, setEditorFooterHeight] = useState(0);\n  const [editorToolbarHeight, setEditorToolbarHeight] = useState(0);\n  const classes = classNames('euiMarkdownEditor', {\n    'euiMarkdownEditor--fullHeight': height === 'full'\n  }, {\n    'euiMarkdownEditor--isPreviewing': isPreviewing\n  }, className);\n\n  const onResize = () => {\n    if (textarea && isEditing && height !== 'full') {\n      const resizedTextareaHeight = textarea.offsetHeight + editorFooterHeight;\n      setCurrentHeight(resizedTextareaHeight);\n    }\n  };\n\n  useEffect(() => {\n    setEditorToolbarHeight(editorToolbarRef.current.offsetHeight);\n  }, [setEditorToolbarHeight]);\n  useEffect(() => {\n    if (isPreviewing && autoExpandPreview && height !== 'full') {\n      if (previewRef.current.scrollHeight > currentHeight) {\n        // scrollHeight does not include the border or margin\n        // so we ask for the computed value for those,\n        // which is always in pixels because getComputedValue\n        // returns the resolved values\n        const elementComputedStyle = window.getComputedStyle(previewRef.current);\n        const borderWidth = parseFloat(elementComputedStyle.borderTopWidth) + parseFloat(elementComputedStyle.borderBottomWidth);\n        const marginWidth = parseFloat(elementComputedStyle.marginTop) + parseFloat(elementComputedStyle.marginBottom); // then add an extra pixel for safety and because the scrollHeight value is rounded\n\n        const extraHeight = borderWidth + marginWidth + 1;\n        setCurrentHeight(previewRef.current.scrollHeight + extraHeight);\n      }\n    }\n  }, [currentHeight, isPreviewing, height, autoExpandPreview]);\n  const previewHeight = height === 'full' ? `calc(100% - ${editorFooterHeight}px)` : currentHeight;\n  const textAreaHeight = height === 'full' ? '100%' : `calc(${height - editorFooterHeight}px)`;\n  const textAreaMaxHeight = height !== 'full' ? `${maxHeight - editorFooterHeight}px` : ''; // safari needs this calc when the height is set to full\n\n  const editorToggleContainerHeight = `calc(100% - ${editorToolbarHeight}px)`;\n  return <EuiMarkdownContext.Provider value={contextValue}>\n        <div className={classes} {...rest}>\n          <EuiMarkdownEditorToolbar ref={editorToolbarRef} selectedNode={selectedNode} markdownActions={markdownActions} onClickPreview={() => setViewMode(isPreviewing ? MODE_EDITING : MODE_VIEWING)} viewMode={viewMode} uiPlugins={toolbarPlugins} />\n\n          {isPreviewing && <div ref={previewRef} className=\"euiMarkdownEditorPreview\" style={{\n        height: previewHeight\n      }}>\n              <EuiMarkdownFormat parsingPluginList={parsingPluginList} processingPluginList={processingPluginList}>\n                {value}\n              </EuiMarkdownFormat>\n            </div>}\n          {\n        /* Toggle the editor's display instead of unmounting to retain its undo/redo history */\n      }\n          <div className=\"euiMarkdownEditor__toggleContainer\" style={{\n        height: editorToggleContainerHeight\n      }}>\n            <EuiMarkdownEditorDropZone setEditorFooterHeight={setEditorFooterHeight} isEditing={isEditing} dropHandlers={dropHandlers} insertText={(text, config) => {\n          if (config.block) {\n            text = padWithNewlinesIfNeeded(textareaRef.current, text);\n          }\n\n          const originalSelectionStart = textareaRef.current.selectionStart;\n          const newSelectionPoint = originalSelectionStart + text.length;\n          insertText(textareaRef.current, {\n            text,\n            selectionStart: newSelectionPoint,\n            selectionEnd: newSelectionPoint\n          });\n        }} uiPlugins={toolbarPlugins} errors={errors} hasUnacceptedItems={hasUnacceptedItems} setHasUnacceptedItems={setHasUnacceptedItems}>\n              <EuiResizeObserver onResize={onResize}>\n                {resizeRef => {\n              return <EuiMarkdownEditorTextArea height={textAreaHeight} maxHeight={textAreaMaxHeight} ref={mergeRefs(textareaRef, resizeRef)} id={editorId} onChange={e => onChange(e.target.value)} value={value} onFocus={() => setHasUnacceptedItems(false)} {...{\n                'aria-label': ariaLabel,\n                'aria-labelledby': ariaLabelledBy,\n                'aria-describedby': ariaDescribedBy\n              }} />;\n            }}\n              </EuiResizeObserver>\n            </EuiMarkdownEditorDropZone>\n\n            {pluginEditorPlugin && <EuiModal onClose={() => setPluginEditorPlugin(undefined)}>\n                {createElement(pluginEditorPlugin.editor, {\n            node: selectedNode && selectedNode.type === pluginEditorPlugin.name ? selectedNode : null,\n            onCancel: () => setPluginEditorPlugin(undefined),\n            onSave: (markdown, config) => {\n              if (selectedNode && selectedNode.type === pluginEditorPlugin.name) {\n                // modifying an existing node\n                textareaRef.current.setSelectionRange(selectedNode.position.start.offset, selectedNode.position.end.offset);\n              } else {\n                // creating a new node\n                if (config.block) {\n                  // inject newlines if needed\n                  markdown = padWithNewlinesIfNeeded(textareaRef.current, markdown);\n                }\n              }\n\n              insertText(textareaRef.current, {\n                text: markdown,\n                selectionStart: undefined,\n                selectionEnd: undefined\n              });\n              setPluginEditorPlugin(undefined);\n            }\n          })}\n              </EuiModal>}\n          </div>\n        </div>\n      </EuiMarkdownContext.Provider>;\n});\nEuiMarkdownEditor.propTypes = {\n  className: PropTypes.string,\n\n  /** aria-label OR aria-labelledby must be set */\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n\n  /** aria-label OR aria-labelledby must be set */\n  \"aria-labelledby\": PropTypes.string,\n\n  /** ID of an element describing the text editor, useful for associating error messages */\n  \"aria-describedby\": PropTypes.string,\n\n  /** a unique ID to attach to the textarea. If one isn't provided, a random one\n       * will be generated */\n  editorId: PropTypes.string,\n\n  /** A markdown content */\n  value: PropTypes.string.isRequired,\n\n  /** callback function when markdown content is modified */\n  onChange: PropTypes.func.isRequired,\n\n  /**\n       * Sets the `height` in pixels of the editor/preview area or pass `full` to allow\n       * the EuiMarkdownEditor to fill the height of its container.\n       * When in `full` mode the vertical resize is not allowed.\n       */\n  height: PropTypes.oneOfType([PropTypes.number.isRequired, PropTypes.oneOf([\"full\"])]),\n\n  /**\n       * Sets the `max-height` in pixels of the editor/preview area.\n       * It has no effect when the `height` is set to `full`.\n       */\n  maxHeight: PropTypes.number,\n\n  /**\n       * Automatically adjusts the preview height to fit all the content and avoid a scrollbar.\n       */\n  autoExpandPreview: PropTypes.bool,\n\n  /** plugins to identify new syntax and parse it into an AST node */\n  parsingPluginList: PropTypes.any,\n\n  /** plugins to process the markdown AST nodes into a React nodes */\n  processingPluginList: PropTypes.any,\n\n  /** defines UI for plugins' buttons in the toolbar as well as any modals or extra UI that provides content to the editor */\n  uiPlugins: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    button: PropTypes.shape({\n      label: PropTypes.string.isRequired,\n      iconType: PropTypes.oneOfType([PropTypes.oneOf([\"accessibility\", \"addDataApp\", \"advancedSettingsApp\", \"aggregate\", \"alert\", \"analyzeEvent\", \"annotation\", \"apmApp\", \"apmTrace\", \"apps\", \"appSearchApp\", \"arrowDown\", \"arrowLeft\", \"arrowRight\", \"arrowUp\", \"asterisk\", \"auditbeatApp\", \"beaker\", \"bell\", \"bellSlash\", \"bolt\", \"boxesHorizontal\", \"boxesVertical\", \"branch\", \"broom\", \"brush\", \"bug\", \"bullseye\", \"calendar\", \"canvasApp\", \"codeApp\", \"check\", \"checkInCircleFilled\", \"cheer\", \"classificationJob\", \"clock\", \"cloudDrizzle\", \"cloudStormy\", \"cloudSunny\", \"color\", \"compute\", \"console\", \"consoleApp\", \"continuityAbove\", \"continuityAboveBelow\", \"continuityBelow\", \"continuityWithin\", \"controlsHorizontal\", \"controlsVertical\", \"copy\", \"copyClipboard\", \"createAdvancedJob\", \"createMultiMetricJob\", \"createPopulationJob\", \"createSingleMetricJob\", \"cross\", \"crossClusterReplicationApp\", \"crosshairs\", \"crossInACircleFilled\", \"currency\", \"cut\", \"dashboardApp\", \"database\", \"dataVisualizer\", \"devToolsApp\", \"discoverApp\", \"document\", \"documentation\", \"documentEdit\", \"documents\", \"dot\", \"download\", \"editorAlignCenter\", \"editorAlignLeft\", \"editorAlignRight\", \"editorBold\", \"editorCodeBlock\", \"editorComment\", \"editorDistributeHorizontal\", \"editorDistributeVertical\", \"editorHeading\", \"editorItalic\", \"editorItemAlignLeft\", \"editorItemAlignBottom\", \"editorItemAlignCenter\", \"editorItemAlignMiddle\", \"editorItemAlignRight\", \"editorItemAlignTop\", \"editorLink\", \"editorOrderedList\", \"editorPositionBottomLeft\", \"editorPositionBottomRight\", \"editorPositionTopLeft\", \"editorPositionTopRight\", \"editorRedo\", \"editorStrike\", \"editorTable\", \"editorUnderline\", \"editorUndo\", \"editorUnorderedList\", \"email\", \"empty\", \"emsApp\", \"eql\", \"eraser\", \"exit\", \"expand\", \"expandMini\", \"exportAction\", \"eye\", \"eyeClosed\", \"faceHappy\", \"faceNeutral\", \"faceSad\", \"filebeatApp\", \"filter\", \"flag\", \"fold\", \"folderCheck\", \"folderClosed\", \"folderExclamation\", \"folderOpen\", \"frameNext\", \"framePrevious\", \"fullScreen\", \"fullScreenExit\", \"function\", \"gear\", \"gisApp\", \"glasses\", \"globe\", \"grab\", \"grabHorizontal\", \"graphApp\", \"grid\", \"grokApp\", \"heart\", \"heartbeatApp\", \"heatmap\", \"help\", \"home\", \"iInCircle\", \"image\", \"importAction\", \"indexClose\", \"indexEdit\", \"indexFlush\", \"indexManagementApp\", \"indexMapping\", \"indexOpen\", \"indexPatternApp\", \"indexRollupApp\", \"indexRuntime\", \"indexSettings\", \"inputOutput\", \"inspect\", \"invert\", \"ip\", \"keyboardShortcut\", \"kqlField\", \"kqlFunction\", \"kqlOperand\", \"kqlSelector\", \"kqlValue\", \"layers\", \"lensApp\", \"link\", \"list\", \"listAdd\", \"lock\", \"lockOpen\", \"logsApp\", \"logoAerospike\", \"logoApache\", \"logoAppSearch\", \"logoAWS\", \"logoAWSMono\", \"logoAzure\", \"logoAzureMono\", \"logoBeats\", \"logoBusinessAnalytics\", \"logoCeph\", \"logoCloud\", \"logoCloudEnterprise\", \"logoCode\", \"logoCodesandbox\", \"logoCouchbase\", \"logoDocker\", \"logoDropwizard\", \"logoElastic\", \"logoElasticsearch\", \"logoElasticStack\", \"logoEnterpriseSearch\", \"logoEtcd\", \"logoGCP\", \"logoGCPMono\", \"logoGithub\", \"logoGmail\", \"logoGolang\", \"logoGoogleG\", \"logoHAproxy\", \"logoIBM\", \"logoIBMMono\", \"logoKafka\", \"logoKibana\", \"logoKubernetes\", \"logoLogging\", \"logoLogstash\", \"logoMaps\", \"logoMemcached\", \"logoMetrics\", \"logoMongodb\", \"logoMySQL\", \"logoNginx\", \"logoObservability\", \"logoOsquery\", \"logoPhp\", \"logoPostgres\", \"logoPrometheus\", \"logoRabbitmq\", \"logoRedis\", \"logoSecurity\", \"logoSiteSearch\", \"logoSketch\", \"logoSlack\", \"logoUptime\", \"logoWebhook\", \"logoWindows\", \"logoWorkplaceSearch\", \"logstashFilter\", \"logstashIf\", \"logstashInput\", \"logstashOutput\", \"logstashQueue\", \"machineLearningApp\", \"magnet\", \"magnifyWithMinus\", \"magnifyWithPlus\", \"managementApp\", \"mapMarker\", \"memory\", \"menu\", \"menuDown\", \"menuLeft\", \"menuRight\", \"menuUp\", \"merge\", \"metricbeatApp\", \"metricsApp\", \"minimize\", \"minus\", \"minusInCircle\", \"minusInCircleFilled\", \"mobile\", \"monitoringApp\", \"moon\", \"nested\", \"node\", \"notebookApp\", \"number\", \"offline\", \"online\", \"outlierDetectionJob\", \"package\", \"packetbeatApp\", \"pageSelect\", \"pagesSelect\", \"partial\", \"paperClip\", \"pause\", \"pencil\", \"percent\", \"pin\", \"pinFilled\", \"pipelineApp\", \"play\", \"playFilled\", \"plus\", \"plusInCircle\", \"plusInCircleFilled\", \"popout\", \"push\", \"questionInCircle\", \"quote\", \"recentlyViewedApp\", \"refresh\", \"regressionJob\", \"reporter\", \"reportingApp\", \"returnKey\", \"save\", \"savedObjectsApp\", \"scale\", \"search\", \"searchProfilerApp\", \"securityAnalyticsApp\", \"securityApp\", \"securitySignal\", \"securitySignalDetected\", \"securitySignalResolved\", \"shard\", \"share\", \"snowflake\", \"sortable\", \"sortDown\", \"sortLeft\", \"sortRight\", \"sortUp\", \"spacesApp\", \"sqlApp\", \"starEmpty\", \"starEmptySpace\", \"starFilled\", \"starFilledSpace\", \"starMinusEmpty\", \"starMinusFilled\", \"starPlusEmpty\", \"starPlusFilled\", \"stats\", \"stop\", \"stopFilled\", \"stopSlash\", \"storage\", \"string\", \"submodule\", \"swatchInput\", \"symlink\", \"tableOfContents\", \"tableDensityExpanded\", \"tableDensityCompact\", \"tableDensityNormal\", \"tag\", \"tear\", \"temperature\", \"timeline\", \"timelionApp\", \"timeslider\", \"training\", \"trash\", \"upgradeAssistantApp\", \"uptimeApp\", \"unfold\", \"unlink\", \"user\", \"users\", \"usersRolesApp\", \"vector\", \"videoPlayer\", \"visArea\", \"visAreaStacked\", \"visBarHorizontal\", \"visBarHorizontalStacked\", \"visBarVertical\", \"visBarVerticalStacked\", \"visGauge\", \"visGoal\", \"visLine\", \"visMapCoordinate\", \"visMapRegion\", \"visMetric\", \"visPie\", \"visTable\", \"visTagCloud\", \"visText\", \"visTimelion\", \"visualizeApp\", \"visVega\", \"visVisualBuilder\", \"watchesApp\", \"wordWrap\", \"wordWrapDisabled\", \"workplaceSearchApp\", \"wrench\", \"tokenClass\", \"tokenProperty\", \"tokenEnum\", \"tokenVariable\", \"tokenMethod\", \"tokenAnnotation\", \"tokenException\", \"tokenInterface\", \"tokenParameter\", \"tokenField\", \"tokenElement\", \"tokenFunction\", \"tokenBoolean\", \"tokenString\", \"tokenArray\", \"tokenNumber\", \"tokenConstant\", \"tokenObject\", \"tokenEvent\", \"tokenKey\", \"tokenNull\", \"tokenStruct\", \"tokenPackage\", \"tokenOperator\", \"tokenEnumMember\", \"tokenRepo\", \"tokenSymbol\", \"tokenFile\", \"tokenModule\", \"tokenNamespace\", \"tokenDate\", \"tokenIP\", \"tokenNested\", \"tokenAlias\", \"tokenShape\", \"tokenGeo\", \"tokenRange\", \"tokenBinary\", \"tokenJoin\", \"tokenPercolator\", \"tokenFlattened\", \"tokenRankFeature\", \"tokenRankFeatures\", \"tokenKeyword\", \"tokenCompletionSuggester\", \"tokenDenseVector\", \"tokenText\", \"tokenTokenCount\", \"tokenSearchType\", \"tokenHistogram\"]).isRequired, PropTypes.string.isRequired, PropTypes.elementType.isRequired]).isRequired\n    }).isRequired,\n    helpText: PropTypes.node,\n    formatting: PropTypes.shape({\n      prefix: PropTypes.string,\n      suffix: PropTypes.string,\n      blockPrefix: PropTypes.string,\n      blockSuffix: PropTypes.string,\n      multiline: PropTypes.bool,\n      replaceNext: PropTypes.string,\n      prefixSpace: PropTypes.bool,\n      scanFor: PropTypes.string,\n      surroundWithNewlines: PropTypes.bool,\n      orderedList: PropTypes.bool,\n      trimFirst: PropTypes.bool\n    }),\n    editor: PropTypes.elementType\n  }).isRequired),\n\n  /** errors to bubble up */\n  errors: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.any.isRequired, PropTypes.any.isRequired]).isRequired),\n\n  /** callback triggered when parsing results are available */\n  onParse: PropTypes.func,\n\n  /** initial display mode for the editor */\n  initialViewMode: PropTypes.oneOfType([PropTypes.any.isRequired, PropTypes.any.isRequired]),\n\n  /** array defining any drag&drop handlers */\n  dropHandlers: PropTypes.arrayOf(PropTypes.shape({\n    supportedFiles: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n    accepts: PropTypes.func.isRequired,\n    getFormattingForItem: PropTypes.func.isRequired\n  }).isRequired)\n};\nEuiMarkdownEditor.displayName = 'EuiMarkdownEditor';\n\ntry {\n  EuiMarkdownEditor.__docgenInfo = {\n    description: '',\n    displayName: 'EuiMarkdownEditor',\n    methods: [],\n    props: {\n      value: {\n        defaultValue: null,\n        description: 'A markdown content',\n        name: 'value',\n        parent: undefined,\n        required: true,\n        type: {\n          name: 'string'\n        }\n      },\n      height: {\n        defaultValue: {\n          value: '250'\n        },\n        description: 'Sets the `height` in pixels of the editor/preview area or pass `full` to allow\\n' + 'the EuiMarkdownEditor to fill the height of its container.\\n' + 'When in `full` mode the vertical resize is not allowed.',\n        name: 'height',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'number | \"full\"'\n        }\n      },\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/node_modules/@types/react/index.d.ts',\n          name: 'HTMLAttributes'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      onChange: {\n        defaultValue: null,\n        description: 'callback function when markdown content is modified',\n        name: 'onChange',\n        parent: undefined,\n        required: true,\n        type: {\n          name: '(value: string) => void'\n        }\n      },\n      'data-test-subj': {\n        defaultValue: null,\n        description: '',\n        name: 'data-test-subj',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      editorId: {\n        defaultValue: null,\n        description: \"a unique ID to attach to the textarea. If one isn't provided, a random one\\n\" + 'will be generated',\n        name: 'editorId',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      maxHeight: {\n        defaultValue: {\n          value: '500'\n        },\n        description: 'Sets the `max-height` in pixels of the editor/preview area.\\n' + 'It has no effect when the `height` is set to `full`.',\n        name: 'maxHeight',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'number'\n        }\n      },\n      autoExpandPreview: {\n        defaultValue: {\n          value: 'true'\n        },\n        description: 'Automatically adjusts the preview height to fit all the content and avoid a scrollbar.',\n        name: 'autoExpandPreview',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      parsingPluginList: {\n        defaultValue: {\n          value: null\n        },\n        description: 'plugins to identify new syntax and parse it into an AST node',\n        name: 'parsingPluginList',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'PluggableList<Settings>'\n        }\n      },\n      processingPluginList: {\n        defaultValue: {\n          value: null\n        },\n        description: 'plugins to process the markdown AST nodes into a React nodes',\n        name: 'processingPluginList',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'PluggableList<Settings>'\n        }\n      },\n      uiPlugins: {\n        defaultValue: {\n          value: null\n        },\n        description: \"defines UI for plugins' buttons in the toolbar as well as any modals or extra UI that provides content to the editor\",\n        name: 'uiPlugins',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'EuiMarkdownEditorUiPlugin<any>[]'\n        }\n      },\n      errors: {\n        defaultValue: {\n          value: '[]'\n        },\n        description: 'errors to bubble up',\n        name: 'errors',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'EuiMarkdownParseError[]'\n        }\n      },\n      onParse: {\n        defaultValue: null,\n        description: 'callback triggered when parsing results are available',\n        name: 'onParse',\n        parent: undefined,\n        required: false,\n        type: {\n          name: '(error: EuiMarkdownParseError, data: { messages: VFileMessage[]; ast: EuiMarkdownAstNode; }) => void'\n        }\n      },\n      initialViewMode: {\n        defaultValue: {\n          value: null\n        },\n        description: 'initial display mode for the editor',\n        name: 'initialViewMode',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'enum',\n          raw: 'MARKDOWN_MODE',\n          value: [{\n            value: '\"editing\"'\n          }, {\n            value: '\"viewing\"'\n          }]\n        }\n      },\n      dropHandlers: {\n        defaultValue: {\n          value: '[]'\n        },\n        description: 'array defining any drag&drop handlers',\n        name: 'dropHandlers',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'EuiMarkdownDropHandler[]'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: 'Defines a string value that labels the current element.\\n' + 'aria-label OR aria-labelledby must be set\\n' + '@see aria-labelledby.',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/node_modules/@types/react/index.d.ts',\n          name: 'AriaAttributes'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      ref: {\n        defaultValue: null,\n        description: '',\n        name: 'ref',\n        parent: {\n          fileName: 'eui/node_modules/@types/react/index.d.ts',\n          name: 'RefAttributes'\n        },\n        required: false,\n        type: {\n          name: 'Ref<EuiMarkdownEditorRef>'\n        }\n      }\n    },\n    extendedInterfaces: ['HTMLAttributes', 'AriaAttributes', 'DOMAttributes', 'CommonProps', 'Attributes']\n  };\n} catch (e) {}"]}]}