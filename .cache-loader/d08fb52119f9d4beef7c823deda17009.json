{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src-docs\\src\\views\\date_picker\\utc.js","dependencies":[{"path":"D:\\work\\eui\\src-docs\\src\\views\\date_picker\\utc.js","mtime":1649070000995},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucGFyc2UtaW50IjsKCmZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkgeyByZXR1cm4gX2FycmF5V2l0aEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgfHwgX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFyciwgaSkgfHwgX25vbkl0ZXJhYmxlUmVzdCgpOyB9CgpmdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLiIpOyB9CgpmdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7IGlmICghbykgcmV0dXJuOyBpZiAodHlwZW9mIG8gPT09ICJzdHJpbmciKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpOyBpZiAobiA9PT0gIk9iamVjdCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTsgaWYgKG4gPT09ICJNYXAiIHx8IG4gPT09ICJTZXQiKSByZXR1cm4gQXJyYXkuZnJvbShvKTsgaWYgKG4gPT09ICJBcmd1bWVudHMiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgfQoKZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHsgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykgeyBhcnIyW2ldID0gYXJyW2ldOyB9IHJldHVybiBhcnIyOyB9CgpmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7IGlmICh0eXBlb2YgU3ltYm9sID09PSAidW5kZWZpbmVkIiB8fCAhKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoYXJyKSkpIHJldHVybjsgdmFyIF9hcnIgPSBbXTsgdmFyIF9uID0gdHJ1ZTsgdmFyIF9kID0gZmFsc2U7IHZhciBfZSA9IHVuZGVmaW5lZDsgdHJ5IHsgZm9yICh2YXIgX2kgPSBhcnJbU3ltYm9sLml0ZXJhdG9yXSgpLCBfczsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkgeyBfYXJyLnB1c2goX3MudmFsdWUpOyBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7IH0gfSBjYXRjaCAoZXJyKSB7IF9kID0gdHJ1ZTsgX2UgPSBlcnI7IH0gZmluYWxseSB7IHRyeSB7IGlmICghX24gJiYgX2lbInJldHVybiJdICE9IG51bGwpIF9pWyJyZXR1cm4iXSgpOyB9IGZpbmFsbHkgeyBpZiAoX2QpIHRocm93IF9lOyB9IH0gcmV0dXJuIF9hcnI7IH0KCmZ1bmN0aW9uIF9hcnJheVdpdGhIb2xlcyhhcnIpIHsgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIGFycjsgfQoKaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnOwppbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCc7CmltcG9ydCB7IEV1aURhdGVQaWNrZXIsIEV1aUZvcm1Sb3csIEV1aVNlbGVjdCB9IGZyb20gJy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzJzsKZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uICgpIHsKICB2YXIgb3B0aW9ucyA9IFt7CiAgICB2YWx1ZTogLTEsCiAgICB0ZXh0OiAnR01UIC0wMTowMCcKICB9LCB7CiAgICB2YWx1ZTogLTIsCiAgICB0ZXh0OiAnR01UIC0wMjowMCcKICB9LCB7CiAgICB2YWx1ZTogLTMsCiAgICB0ZXh0OiAnR01UIC0wMzowMCcKICB9XTsKCiAgdmFyIF91c2VTdGF0ZSA9IHVzZVN0YXRlKG1vbWVudCgpKSwKICAgICAgX3VzZVN0YXRlMiA9IF9zbGljZWRUb0FycmF5KF91c2VTdGF0ZSwgMiksCiAgICAgIHN0YXJ0RGF0ZSA9IF91c2VTdGF0ZTJbMF0sCiAgICAgIHNldFN0YXJ0RGF0ZSA9IF91c2VTdGF0ZTJbMV07CgogIHZhciBfdXNlU3RhdGUzID0gdXNlU3RhdGUob3B0aW9uc1sxXS52YWx1ZSksCiAgICAgIF91c2VTdGF0ZTQgPSBfc2xpY2VkVG9BcnJheShfdXNlU3RhdGUzLCAyKSwKICAgICAgdXRjT2Zmc2V0ID0gX3VzZVN0YXRlNFswXSwKICAgICAgc2V0VXRjT2Zmc2V0ID0gX3VzZVN0YXRlNFsxXTsKCiAgdmFyIG9uU2VsZWN0Q2hhbmdlID0gZnVuY3Rpb24gb25TZWxlY3RDaGFuZ2UoZSkgewogICAgc2V0VXRjT2Zmc2V0KHBhcnNlSW50KGUudGFyZ2V0LnZhbHVlLCAxMCkpOwogIH07CgogIHZhciBzZWxlY3RlZCA9IHN0YXJ0RGF0ZSAmJiBzdGFydERhdGUuY2xvbmUoKS51dGNPZmZzZXQodXRjT2Zmc2V0KTsKICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEV1aUZvcm1Sb3csIHsKICAgIGxhYmVsOiAiU2VsZWN0IGEgZGF0ZSIKICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlEYXRlUGlja2VyLCB7CiAgICBzZWxlY3RlZDogc2VsZWN0ZWQsCiAgICBzaG93VGltZVNlbGVjdDogdHJ1ZSwKICAgIG9uQ2hhbmdlOiBzZXRTdGFydERhdGUsCiAgICB1dGNPZmZzZXQ6IHV0Y09mZnNldCAqIDYwCiAgfSkpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlGb3JtUm93LCB7CiAgICBsYWJlbDogIlVUQyBvZmZzZXQiCiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRXVpU2VsZWN0LCB7CiAgICBvcHRpb25zOiBvcHRpb25zLAogICAgdmFsdWU6IHV0Y09mZnNldCwKICAgIG9uQ2hhbmdlOiBvblNlbGVjdENoYW5nZQogIH0pKSk7Cn0pOw=="},{"version":3,"sources":["D:/work/eui/src-docs/src/views/date_picker/utc.js"],"names":["React","useState","moment","EuiDatePicker","EuiFormRow","EuiSelect","options","value","text","startDate","setStartDate","utcOffset","setUtcOffset","onSelectChange","e","parseInt","target","selected","clone"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,SACEC,aADF,EAEEC,UAFF,EAGEC,SAHF,QAIO,4BAJP;AAMA,gBAAe,YAAM;AACnB,MAAMC,OAAO,GAAG,CACd;AAAEC,IAAAA,KAAK,EAAE,CAAC,CAAV;AAAaC,IAAAA,IAAI,EAAE;AAAnB,GADc,EAEd;AAAED,IAAAA,KAAK,EAAE,CAAC,CAAV;AAAaC,IAAAA,IAAI,EAAE;AAAnB,GAFc,EAGd;AAAED,IAAAA,KAAK,EAAE,CAAC,CAAV;AAAaC,IAAAA,IAAI,EAAE;AAAnB,GAHc,CAAhB;;AADmB,kBAMeP,QAAQ,CAACC,MAAM,EAAP,CANvB;AAAA;AAAA,MAMZO,SANY;AAAA,MAMDC,YANC;;AAAA,mBAOeT,QAAQ,CAACK,OAAO,CAAC,CAAD,CAAP,CAAWC,KAAZ,CAPvB;AAAA;AAAA,MAOZI,SAPY;AAAA,MAODC,YAPC;;AASnB,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,CAAD,EAAO;AAC5BF,IAAAA,YAAY,CAACG,QAAQ,CAACD,CAAC,CAACE,MAAF,CAAST,KAAV,EAAiB,EAAjB,CAAT,CAAZ;AACD,GAFD;;AAIA,MAAMU,QAAQ,GAAGR,SAAS,IAAIA,SAAS,CAACS,KAAV,GAAkBP,SAAlB,CAA4BA,SAA5B,CAA9B;AAEA,sBACE,8CACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC;AAAlB,kBACE,oBAAC,aAAD;AACE,IAAA,QAAQ,EAAEM,QADZ;AAEE,IAAA,cAAc,MAFhB;AAGE,IAAA,QAAQ,EAAEP,YAHZ;AAIE,IAAA,SAAS,EAAEC,SAAS,GAAG;AAJzB,IADF,CADF,eASE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC;AAAlB,kBACE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAEL,OADX;AAEE,IAAA,KAAK,EAAEK,SAFT;AAGE,IAAA,QAAQ,EAAEE;AAHZ,IADF,CATF,CADF;AAmBD,CAlCD","sourcesContent":["import React, { useState } from 'react';\n\nimport moment from 'moment';\n\nimport {\n  EuiDatePicker,\n  EuiFormRow,\n  EuiSelect,\n} from '../../../../src/components';\n\nexport default () => {\n  const options = [\n    { value: -1, text: 'GMT -01:00' },\n    { value: -2, text: 'GMT -02:00' },\n    { value: -3, text: 'GMT -03:00' },\n  ];\n  const [startDate, setStartDate] = useState(moment());\n  const [utcOffset, setUtcOffset] = useState(options[1].value);\n\n  const onSelectChange = (e) => {\n    setUtcOffset(parseInt(e.target.value, 10));\n  };\n\n  const selected = startDate && startDate.clone().utcOffset(utcOffset);\n\n  return (\n    <div>\n      <EuiFormRow label=\"Select a date\">\n        <EuiDatePicker\n          selected={selected}\n          showTimeSelect\n          onChange={setStartDate}\n          utcOffset={utcOffset * 60}\n        />\n      </EuiFormRow>\n      <EuiFormRow label=\"UTC offset\">\n        <EuiSelect\n          options={options}\n          value={utcOffset}\n          onChange={onSelectChange}\n        />\n      </EuiFormRow>\n    </div>\n  );\n};\n"]}]}