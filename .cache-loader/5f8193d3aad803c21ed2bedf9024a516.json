{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src-docs\\src\\views\\datagrid\\row_height_options.js","dependencies":[{"path":"D:\\work\\eui\\src-docs\\src\\views\\datagrid\\row_height_options.js","mtime":1649070093145},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src-docs/src/views/datagrid/row_height_options.js"],"names":["React","useCallback","useState","createContext","useContext","useMemo","useEffect","fake","EuiDataGrid","EuiText","DataContext","columns","id","displayAsText","defaultSortDirection","raw_data","RenderCellValue","rowIndex","columnId","data","adjustMountedCellCount","name","text","pageIndex","pageSize","pagination","setPagination","onChangeItemsPerPage","onChangePage","map","visibleColumns","setVisibleColumns","mountedCellCount","setMountedCellCount","rowHeightsOptions","defaultHeight","lineCount","rowHeights","dataContext","adjustment","grid","pageSizeOptions"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useState,\n  createContext,\n  useContext,\n  useMemo,\n  useEffect,\n} from 'react';\nimport { fake } from 'faker';\n\nimport { EuiDataGrid, EuiText } from '../../../../src/components/';\n\nconst DataContext = createContext();\n\nconst columns = [\n  {\n    id: 'name',\n    displayAsText: 'Name',\n    defaultSortDirection: 'asc',\n  },\n  {\n    id: 'text',\n  },\n];\n\n// it is expensive to compute 10000 rows of fake data\n// instead of loading up front, generate entries on the fly\nconst raw_data = [];\n\nfunction RenderCellValue({ rowIndex, columnId }) {\n  const { data, adjustMountedCellCount } = useContext(DataContext);\n\n  useEffect(() => {\n    adjustMountedCellCount(1);\n    return () => adjustMountedCellCount(-1);\n  }, [adjustMountedCellCount]);\n\n  if (data[rowIndex] == null) {\n    data[rowIndex] = {\n      name: fake('{{lorem.text}}'),\n      text: fake('{{lorem.text}}'),\n    };\n  }\n\n  return data[rowIndex][columnId];\n}\n\nexport default () => {\n  // ** Pagination config\n  const [pagination, setPagination] = useState({ pageIndex: 0, pageSize: 50 });\n\n  const onChangeItemsPerPage = useCallback(\n    (pageSize) =>\n      setPagination((pagination) => ({\n        ...pagination,\n        pageSize,\n        pageIndex: 0,\n      })),\n    [setPagination]\n  );\n\n  const onChangePage = useCallback(\n    (pageIndex) =>\n      setPagination((pagination) => ({ ...pagination, pageIndex })),\n    [setPagination]\n  );\n\n  // Column visibility\n  const [visibleColumns, setVisibleColumns] = useState(() =>\n    columns.map(({ id }) => id)\n  ); // initialize to the full set of columns\n\n  const [mountedCellCount, setMountedCellCount] = useState(0);\n\n  const rowHeightsOptions = useMemo(\n    () => ({\n      defaultHeight: {\n        lineCount: 2,\n      },\n      rowHeights: {\n        1: {\n          lineCount: 5,\n        },\n        4: 140,\n        5: 80,\n      },\n    }),\n    []\n  );\n\n  const dataContext = useMemo(\n    () => ({\n      data: raw_data,\n      adjustMountedCellCount: (adjustment) =>\n        setMountedCellCount(\n          (mountedCellCount) => mountedCellCount + adjustment\n        ),\n    }),\n    []\n  );\n\n  const grid = (\n    <EuiDataGrid\n      aria-label=\"Row height options demo\"\n      columns={columns}\n      columnVisibility={{ visibleColumns, setVisibleColumns }}\n      rowCount={10000}\n      height={400}\n      renderCellValue={RenderCellValue}\n      rowHeightsOptions={rowHeightsOptions}\n      pagination={{\n        ...pagination,\n        pageSizeOptions: [50, 250, 1000],\n        onChangeItemsPerPage: onChangeItemsPerPage,\n        onChangePage: onChangePage,\n      }}\n    />\n  );\n\n  return (\n    <DataContext.Provider value={dataContext}>\n      <EuiText>\n        <p>There are {mountedCellCount} rendered cells</p>\n      </EuiText>\n      {grid}\n    </DataContext.Provider>\n  );\n};\n"]}]}