{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src-docs\\src\\views\\datagrid\\datagrid_focus_example.js","dependencies":[{"path":"D:\\work\\eui\\src-docs\\src\\views\\datagrid\\datagrid_focus_example.js","mtime":1649070093141},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFJlYWN0LCB7IEZyYWdtZW50IH0gZnJvbSAncmVhY3QnOwppbXBvcnQgeyByZW5kZXJUb0h0bWwgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcyc7CmltcG9ydCB7IEd1aWRlU2VjdGlvblR5cGVzIH0gZnJvbSAnLi4vLi4vY29tcG9uZW50cyc7CmltcG9ydCB7IEV1aUNhbGxPdXQsIEV1aUNvZGUgfSBmcm9tICcuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cyc7CmltcG9ydCBEYXRhR3JpZEZvY3VzIGZyb20gJy4vZm9jdXMnOwoKdmFyIGRhdGFHcmlkRm9jdXNTb3VyY2UgPSByZXF1aXJlKCchIXJhdy1sb2FkZXIhLi9mb2N1cycpOwoKdmFyIGRhdGFHcmlkRm9jdXNIdG1sID0gcmVuZGVyVG9IdG1sKERhdGFHcmlkRm9jdXMpOwpleHBvcnQgdmFyIERhdGFHcmlkRm9jdXNFeGFtcGxlID0gewogIHRpdGxlOiAnRGF0YSBncmlkIGZvY3VzJywKICBzZWN0aW9uczogW3sKICAgIHNvdXJjZTogW3sKICAgICAgdHlwZTogR3VpZGVTZWN0aW9uVHlwZXMuSlMsCiAgICAgIGNvZGU6IGRhdGFHcmlkRm9jdXNTb3VyY2UKICAgIH0sIHsKICAgICAgdHlwZTogR3VpZGVTZWN0aW9uVHlwZXMuSFRNTCwKICAgICAgY29kZTogZGF0YUdyaWRGb2N1c0h0bWwKICAgIH1dLAogICAgdGV4dDogLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRnJhZ21lbnQsIG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJwIiwgbnVsbCwgIkRhdGEgR3JpZCB0cmFja3MgYW5kIG1hbmFnZXMgY29tcGxpY2F0ZWQgZm9jdXMgc3RhdGUgbWFuYWdlbWVudCBiYXNlZCB1cG9uIHRoZSBjb250ZW50IG9mIHRoZSBpbmRpdmlkdWFsIGlubmVyIGNlbGxzLiBUaGUgZm9sbG93aW5nIHNjZW5hcmlvcyBhcmUgc3VwcG9ydGVkIGFuZCB0ZXN0ZWQ6IiksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJoMiIsIG51bGwsICJJbml0aWFsIGZvY3VzIiksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJ1bCIsIG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJsaSIsIG51bGwsICJXaGVuIHRhYmJpbmcgdG8gdGhlIGdyaWQgYmVmb3JlIGl0IGhhcyByZWNlaXZlZCBmb2N1cywgdGhlIGZpcnN0IGNlbGwgb2YgZWl0aGVyIHRoZSBoZWFkZXIgKGlmIGl0IGlzIGludGVyYWN0aW9uKSBvciBmaXJzdCBjb250ZW50IGNlbGwgaXMgZm9jdXNlZC4iKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImxpIiwgbnVsbCwgIiBEYXRhZ3JpZCBkb2VzIG5vdCBhdXRvLWZvY3VzIG9uIG1vdW50IC8gcGFnZSBsb2FkIiksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJsaSIsIG51bGwsICJXaGVuIHJlbW92aW5nIGZvY3VzIGZyb20gdGhlIGdyaWQgYW5kIHRoZW4gcmV0dXJuaW5nLCB0aGUgbGFzdCBmb2N1c2VkIGNlbGwgcmVtYWlucyBmb2N1c2VkLiIpKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImgyIiwgbnVsbCwgIkNsaWNrIGFuZCBrZXkgZXZlbnRzIiksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJ1bCIsIG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJsaSIsIG51bGwsICJDbGlja2luZyBvbiBhbiBpbnRlcmFjdGl2ZSBjZWxsIChub3QgaXRzIGNvbnRlbnQpIHNob3VsZCBmb2N1cyBvbiB0aGUgY2VsbCwgb3IgaWYgaXQgaGFzIG9ubHkgb25lIGludGVyYWN0aXZlIGVsZW1lbnQgdGhlIGZvY3VzIHNob3VsZCBzaGlmdCB0byB0aGUgZWxlbWVudC4iKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImxpIiwgbnVsbCwgIkNsaWNraW5nIG9uIGFuIGludGVyYWN0aXZlIGVsZW1lbnQgd2l0aGluIGEgY2VsbCB0aGUgZm9jdXMgc2hvdWxkIGFsd2F5cyByZW1haW4gb24gdGhhdCBlbGVtZW50LCBub3Qgc2hpZnQgdG8gdGhlIGNlbGwgb3IgYW5vdGhlciBlbGVtZW50IHVubGVzcyBhIHN1YnNlcXVlbnQgdXNlciBhY3Rpb24gY2hhbmdlcyBpdC4iKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImxpIiwgbnVsbCwgIkVudGVyIG9yIEYyIGNhbiBiZSB1c2VkIGludGVyY2hhbmdpYmx5IHRvIGVudGVyIGlubmVyIGNlbGwgZm9jdXMgaWYgdGhlIGxvZ2ljIGJlbG93IGFsbG93cyBpdC4iKSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJoMiIsIG51bGwsICJUaGUgY29udGVudCBhbmQgZXhwYW5kYWJpbGl0eSBvZiB0aGUgY2VsbHMgZGljYXRlIHRoZSBmb2N1cyB0YXJnZXQgb2YgdGhlIGNlbGwiKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoInAiLCBudWxsLCAiVGhlIGZvbGxvd2luZyBjb21iaW5hdGlvbnMgb2YgZm9jdXMgYXJlIG1haW50YWluZWQgdG8gcHJvdmlkZSBmb3IgYSBnb29kIGJhbGFuY2UgYmV0d2VlbiBhY2Nlc3NpYmlsaXR5IGFuZCBlYXNlIG9mIHVzZSB3aGlsZSBuYXZpZ2F0aW5nIGEgZ3JpZCB3aXRoIHlvdXIga2V5Ym9hcmQuIiksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJoMyIsIG51bGwsICJDZWxsIGFsb25lIHJlY2lldmVzIHRoZSBmb2N1cywgd2l0aCBubyBwb3NzaWJsZSBpbm5lciBmb2N1cyBhY3Rpb24gd2hlbjoiKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoInVsIiwgbnVsbCwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImxpIiwgbnVsbCwgIlRoZSBjZWxsIGlzIG5vdCBleHBhbmRhYmxlLiIpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgibGkiLCBudWxsLCAiVGhlIGNlbGwgaGFzIG5vIGludGVyYWN0aXZlIGVsZW1lbnRzIikpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgiaDMiLCBudWxsLCAiQSBzaW5nbGUgaW5uZXIgZWxlbWVudCB3aXRoaW4gdGhlIGNlbGwgcmVjaWV2ZXMgZm9jdXMgd2hlbjoiKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoInVsIiwgbnVsbCwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImxpIiwgbnVsbCwgIlRoZSBjZWxsIGlzIG5vdCBleHBhbmRhYmxlLiIpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgibGkiLCBudWxsLCAiVGhlIGNlbGwgaGFzIGEgc2luZ2xlIGludGVyYWN0aW9uIGVsZW1lbnQuIikpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgiaDMiLCBudWxsLCAiQSBjZWxsIHdpbGwgZm9jdXMgb24gdGhlIGV4cGFuc2lvbiBhY3Rpb24gd2hlbjoiKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoInVsIiwgbnVsbCwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImxpIiwgbnVsbCwgIlRoZSBleHBhbnNpb24gYWJpbGl0eSBpcyBhbGxvd2VkIG9uIHRoZSBjZWxsLiIpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgibGkiLCBudWxsLCAiQW55IGNvbWJpbmF0aW9uIG9mIGludGVyYWN0aXZlIC8gbm9uLWludGVyYWN0aXZlIGlzIGNvbnRhaW5lZCBpbiB0aGUgY2VsbCBjb250ZW50cy4iKSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJoMyIsIG51bGwsICJBIGNlbGwgd2lsbCBhbGxvdyBhIG5vbi1leHBhbmRpbmcgZm9jdXMgdHJhcCBvbiBrZXlEb3duIHdoZW4iKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoInVsIiwgbnVsbCwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImxpIiwgbnVsbCwgIlRoZSBjZWxsIGlzIG5vdCBleHBhbmRhYmxlLiIpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgibGkiLCBudWxsLCAiVGhlIGNlbGwgY29udGFpbnMgbXVsdGlwbGUgaW50ZXJhY3RpdmUgZWxlbWVudHMuIikpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlDYWxsT3V0LCB7CiAgICAgIHNpemU6ICJzIiwKICAgICAgY29sb3I6ICJ3YXJuaW5nIiwKICAgICAgdGl0bGU6ICJBIGNhdXRpb24gYWJvdXQgdHVybmluZyBvZmYgY2VsbCBleHBhbnNpb24gd2hlbiB0aGUgd2lkdGggb2YgdGhlIGNvbHVtbiBpcyB1bmtub3duIgogICAgfSwgIkluIGdlbmVyYWwsIHlvdSBzaG91bGQgdHVybiAiLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlDb2RlLCBudWxsLCAiaXNFeHBhbmRpYmxlIiksICIgdG8gZmFsc2Ugb25seSB3aGVuIHlvdSBrbm93IHRoZSBleGFjdCB3aWR0aCBhbmQgbnVtYmVyIG9mIGl0ZW1zIHRoYXQgYSBjZWxsIHdpbGwgaW5jbHVkZS4gQ29udHJvbCBjb2x1bW5zIHRoYXQgY29udGFpbiByb3cgYWN0aW9ucyBhcmUgYSBnb29kIGV4YW1wbGUgb2Ygd2hlbiB0byB1c2UgdGhlbS4gSW4gY2VydGFpbiBzY2VuYXJpb3MsIGFsbG93aW5nIG11bHRpcGxlIGludGVyYWN0aXZlIGVsZW1lbnRzIGluIGNlbGxzIHdoZW4geW91IGNhbiBub3QgY29udHJvbCB0aGUgd2lkdGggY2FuIGxlYWQgdG8gaGlkZGVuIGZvY3VzIGJlY2F1c2UgdGhlIGNvbnRlbnQgaXMgdHJ1bmNhdGVkLiIpKSwKICAgIGNvbXBvbmVudHM6IHsKICAgICAgRGF0YUdyaWRGb2N1czogRGF0YUdyaWRGb2N1cwogICAgfSwKICAgIGRlbW86IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KERhdGFHcmlkRm9jdXMsIG51bGwpCiAgfV0KfTs="},{"version":3,"sources":["D:/work/eui/src-docs/src/views/datagrid/datagrid_focus_example.js"],"names":["React","Fragment","renderToHtml","GuideSectionTypes","EuiCallOut","EuiCode","DataGridFocus","dataGridFocusSource","require","dataGridFocusHtml","DataGridFocusExample","title","sections","source","type","JS","code","HTML","text","components","demo"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,4BAApC;AAEA,OAAOC,aAAP,MAA0B,SAA1B;;AACA,IAAMC,mBAAmB,GAAGC,OAAO,CAAC,sBAAD,CAAnC;;AACA,IAAMC,iBAAiB,GAAGP,YAAY,CAACI,aAAD,CAAtC;AAEA,OAAO,IAAMI,oBAAoB,GAAG;AAClCC,EAAAA,KAAK,EAAE,iBAD2B;AAElCC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAEX,iBAAiB,CAACY,EAD1B;AAEEC,MAAAA,IAAI,EAAET;AAFR,KADM,EAKN;AACEO,MAAAA,IAAI,EAAEX,iBAAiB,CAACc,IAD1B;AAEED,MAAAA,IAAI,EAAEP;AAFR,KALM,CADV;AAWES,IAAAA,IAAI,eACF,oBAAC,QAAD,qBACE,yMADF,eAME,gDANF,eAOE,6CACE,sLADF,eAME,qFANF,eAOE,+HAPF,CAPF,eAmBE,uDAnBF,eAoBE,6CACE,+LADF,eAME,wNANF,eAWE,iIAXF,CApBF,eAoCE,iHApCF,eAwCE,oMAxCF,eA6CE,2GA7CF,eAiDE,6CACE,8DADF,eAEE,uEAFF,CAjDF,eAqDE,8FArDF,eAsDE,6CACE,8DADF,eAEE,6EAFF,CAtDF,eA0DE,kFA1DF,eA2DE,6CACE,gFADF,eAEE,sHAFF,CA3DF,eAkEE,+FAlEF,eAmEE,6CACE,8DADF,eAEE,mFAFF,CAnEF,eAuEE,oBAAC,UAAD;AACE,MAAA,IAAI,EAAC,GADP;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,KAAK,EAAC;AAHR,oDAI8B,oBAAC,OAAD,uBAJ9B,oVAvEF,CAZJ;AAgGEC,IAAAA,UAAU,EAAE;AAAEb,MAAAA,aAAa,EAAbA;AAAF,KAhGd;AAiGEc,IAAAA,IAAI,eAAE,oBAAC,aAAD;AAjGR,GADQ;AAFwB,CAA7B","sourcesContent":["import React, { Fragment } from 'react';\n\nimport { renderToHtml } from '../../services';\n\nimport { GuideSectionTypes } from '../../components';\nimport { EuiCallOut, EuiCode } from '../../../../src/components';\n\nimport DataGridFocus from './focus';\nconst dataGridFocusSource = require('!!raw-loader!./focus');\nconst dataGridFocusHtml = renderToHtml(DataGridFocus);\n\nexport const DataGridFocusExample = {\n  title: 'Data grid focus',\n  sections: [\n    {\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: dataGridFocusSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: dataGridFocusHtml,\n        },\n      ],\n      text: (\n        <Fragment>\n          <p>\n            Data Grid tracks and manages complicated focus state management\n            based upon the content of the individual inner cells. The following\n            scenarios are supported and tested:\n          </p>\n          <h2>Initial focus</h2>\n          <ul>\n            <li>\n              When tabbing to the grid before it has received focus, the first\n              cell of either the header (if it is interaction) or first content\n              cell is focused.\n            </li>\n            <li> Datagrid does not auto-focus on mount / page load</li>\n            <li>\n              When removing focus from the grid and then returning, the last\n              focused cell remains focused.\n            </li>\n          </ul>\n          <h2>Click and key events</h2>\n          <ul>\n            <li>\n              Clicking on an interactive cell (not its content) should focus on\n              the cell, or if it has only one interactive element the focus\n              should shift to the element.\n            </li>\n            <li>\n              Clicking on an interactive element within a cell the focus should\n              always remain on that element, not shift to the cell or another\n              element unless a subsequent user action changes it.\n            </li>\n            <li>\n              Enter or F2 can be used interchangibly to enter inner cell focus\n              if the logic below allows it.\n            </li>\n          </ul>\n          <h2>\n            The content and expandability of the cells dicate the focus target\n            of the cell\n          </h2>\n          <p>\n            The following combinations of focus are maintained to provide for a\n            good balance between accessibility and ease of use while navigating\n            a grid with your keyboard.\n          </p>\n          <h3>\n            Cell alone recieves the focus, with no possible inner focus action\n            when:\n          </h3>\n          <ul>\n            <li>The cell is not expandable.</li>\n            <li>The cell has no interactive elements</li>\n          </ul>\n          <h3>A single inner element within the cell recieves focus when:</h3>\n          <ul>\n            <li>The cell is not expandable.</li>\n            <li>The cell has a single interaction element.</li>\n          </ul>\n          <h3>A cell will focus on the expansion action when:</h3>\n          <ul>\n            <li>The expansion ability is allowed on the cell.</li>\n            <li>\n              Any combination of interactive / non-interactive is contained in\n              the cell contents.\n            </li>\n          </ul>\n          <h3>A cell will allow a non-expanding focus trap on keyDown when</h3>\n          <ul>\n            <li>The cell is not expandable.</li>\n            <li>The cell contains multiple interactive elements.</li>\n          </ul>\n          <EuiCallOut\n            size=\"s\"\n            color=\"warning\"\n            title=\"A caution about turning off cell expansion when the width of the column is unknown\">\n            In general, you should turn <EuiCode>isExpandible</EuiCode> to false\n            only when you know the exact width and number of items that a cell\n            will include. Control columns that contain row actions are a good\n            example of when to use them. In certain scenarios, allowing multiple\n            interactive elements in cells when you can not control the width can\n            lead to hidden focus because the content is truncated.\n          </EuiCallOut>\n        </Fragment>\n      ),\n      components: { DataGridFocus },\n      demo: <DataGridFocus />,\n    },\n  ],\n};\n"]}]}