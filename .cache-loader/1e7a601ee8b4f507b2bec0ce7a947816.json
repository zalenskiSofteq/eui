{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\markdown_editor\\plugins\\markdown_tooltip.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\markdown_editor\\plugins\\markdown_tooltip.tsx","mtime":1649070093704},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3RhcnRzLXdpdGgiOwoKLyoKICogTGljZW5zZWQgdG8gRWxhc3RpY3NlYXJjaCBCLlYuIHVuZGVyIG9uZSBvciBtb3JlIGNvbnRyaWJ1dG9yCiAqIGxpY2Vuc2UgYWdyZWVtZW50cy4gU2VlIHRoZSBOT1RJQ0UgZmlsZSBkaXN0cmlidXRlZCB3aXRoCiAqIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiByZWdhcmRpbmcgY29weXJpZ2h0CiAqIG93bmVyc2hpcC4gRWxhc3RpY3NlYXJjaCBCLlYuIGxpY2Vuc2VzIHRoaXMgZmlsZSB0byB5b3UgdW5kZXIKICogdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7IHlvdSBtYXkKICogbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiAqCiAqICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsCiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuCiAqICJBUyBJUyIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWQogKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUKICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucwogKiB1bmRlciB0aGUgTGljZW5zZS4KICovCmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7CmltcG9ydCBQcm9wVHlwZXMgZnJvbSAicHJvcC10eXBlcyI7CmltcG9ydCB7IEV1aVRvb2xUaXAgfSBmcm9tICcuLi8uLi90b29sX3RpcCc7CmltcG9ydCB7IEV1aUljb24gfSBmcm9tICcuLi8uLi9pY29uJzsKaW1wb3J0IHsgRXVpQ29kZUJsb2NrIH0gZnJvbSAnLi4vLi4vY29kZSc7CnZhciB0b29sdGlwUGx1Z2luID0gewogIG5hbWU6ICd0b29sdGlwUGx1Z2luJywKICBidXR0b246IHsKICAgIGxhYmVsOiAnVG9vbHRpcCcsCiAgICBpY29uVHlwZTogJ2VkaXRvckNvbW1lbnQnCiAgfSwKICBmb3JtYXR0aW5nOiB7CiAgICBwcmVmaXg6ICche3Rvb2x0aXBbJywKICAgIHN1ZmZpeDogJ10oKX0nLAogICAgdHJpbUZpcnN0OiB0cnVlCiAgfSwKICBoZWxwVGV4dDogLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRXVpQ29kZUJsb2NrLCB7CiAgICBsYW5ndWFnZTogIm1kIiwKICAgIHBhZGRpbmdTaXplOiAicyIsCiAgICBmb250U2l6ZTogImwiCiAgfSwgJyF7dG9vbHRpcFthbmNob3IgdGV4dF0oaGVscGZ1bCBkZXNjcmlwdGlvbil9JykKfTsKCnZhciBUb29sdGlwUGFyc2VyID0gZnVuY3Rpb24gVG9vbHRpcFBhcnNlcigpIHsKICB2YXIgUGFyc2VyID0gdGhpcy5QYXJzZXI7CiAgdmFyIHRva2VuaXplcnMgPSBQYXJzZXIucHJvdG90eXBlLmlubGluZVRva2VuaXplcnM7CiAgdmFyIG1ldGhvZHMgPSBQYXJzZXIucHJvdG90eXBlLmlubGluZU1ldGhvZHM7CgogIHZhciB0b2tlbml6ZVRvb2x0aXAgPSBmdW5jdGlvbiB0b2tlbml6ZVRvb2x0aXAoZWF0LCB2YWx1ZSwgc2lsZW50KSB7CiAgICBpZiAodmFsdWUuc3RhcnRzV2l0aCgnIXt0b29sdGlwJykgPT09IGZhbHNlKSByZXR1cm4gZmFsc2U7CiAgICB2YXIgbmV4dENoYXIgPSB2YWx1ZVs5XTsKICAgIGlmIChuZXh0Q2hhciAhPT0gJ1snKSByZXR1cm4gZmFsc2U7IC8vIHRoaXMgaXNuJ3QgYWN0dWFsbHkgYSB0b29sdGlwCgogICAgdmFyIGluZGV4ID0gOTsKCiAgICBmdW5jdGlvbiByZWFkQXJnKG9wZW4sIGNsb3NlKSB7CiAgICAgIGlmICh2YWx1ZVtpbmRleF0gIT09IG9wZW4pIHRocm93ICdFeHBlY3RlZCBsZWZ0IGJyYWNrZXQnOwogICAgICBpbmRleCsrOwogICAgICB2YXIgYm9keSA9ICcnOwogICAgICB2YXIgb3BlbkJyYWNrZXRzID0gMDsKCiAgICAgIGZvciAoOyBpbmRleCA8IHZhbHVlLmxlbmd0aDsgaW5kZXgrKykgewogICAgICAgIHZhciBjaGFyID0gdmFsdWVbaW5kZXhdOwoKICAgICAgICBpZiAoY2hhciA9PT0gY2xvc2UgJiYgb3BlbkJyYWNrZXRzID09PSAwKSB7CiAgICAgICAgICBpbmRleCsrOwogICAgICAgICAgcmV0dXJuIGJvZHk7CiAgICAgICAgfSBlbHNlIGlmIChjaGFyID09PSBjbG9zZSkgewogICAgICAgICAgb3BlbkJyYWNrZXRzLS07CiAgICAgICAgfSBlbHNlIGlmIChjaGFyID09PSBvcGVuKSB7CiAgICAgICAgICBvcGVuQnJhY2tldHMrKzsKICAgICAgICB9CgogICAgICAgIGJvZHkgKz0gY2hhcjsKICAgICAgfQoKICAgICAgcmV0dXJuICcnOwogICAgfQoKICAgIHZhciB0b29sdGlwQW5jaG9yID0gcmVhZEFyZygnWycsICddJyk7CiAgICB2YXIgdG9vbHRpcFRleHQgPSByZWFkQXJnKCcoJywgJyknKTsKICAgIHZhciBub3cgPSBlYXQubm93KCk7CgogICAgaWYgKCF0b29sdGlwQW5jaG9yKSB7CiAgICAgIHRoaXMuZmlsZS5pbmZvKCdObyB0b29sdGlwIGFuY2hvciBmb3VuZCcsIHsKICAgICAgICBsaW5lOiBub3cubGluZSwKICAgICAgICBjb2x1bW46IG5vdy5jb2x1bW4gKyAxMAogICAgICB9KTsKICAgIH0KCiAgICBpZiAoIXRvb2x0aXBUZXh0KSB7CiAgICAgIHRoaXMuZmlsZS5pbmZvKCdObyB0b29sdGlwIHRleHQgZm91bmQnLCB7CiAgICAgICAgbGluZTogbm93LmxpbmUsCiAgICAgICAgY29sdW1uOiBub3cuY29sdW1uICsgMTIgKyB0b29sdGlwQW5jaG9yLmxlbmd0aAogICAgICB9KTsKICAgIH0KCiAgICBpZiAoIXRvb2x0aXBUZXh0IHx8ICF0b29sdGlwQW5jaG9yKSByZXR1cm4gZmFsc2U7CgogICAgaWYgKHNpbGVudCkgewogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBub3cuY29sdW1uICs9IDEwOwogICAgbm93Lm9mZnNldCArPSAxMDsKICAgIHZhciBjaGlsZHJlbiA9IHRoaXMudG9rZW5pemVJbmxpbmUodG9vbHRpcEFuY2hvciwgbm93KTsKICAgIHJldHVybiBlYXQoIiF7dG9vbHRpcFsiLmNvbmNhdCh0b29sdGlwQW5jaG9yLCAiXSgiKS5jb25jYXQodG9vbHRpcFRleHQsICIpfSIpKSh7CiAgICAgIHR5cGU6ICd0b29sdGlwUGx1Z2luJywKICAgICAgY29udGVudDogdG9vbHRpcFRleHQsCiAgICAgIGNoaWxkcmVuOiBjaGlsZHJlbgogICAgfSk7CiAgfTsKCiAgdG9rZW5pemVUb29sdGlwLm5vdEluTGluayA9IHRydWU7CgogIHRva2VuaXplVG9vbHRpcC5sb2NhdG9yID0gZnVuY3Rpb24gKHZhbHVlLCBmcm9tSW5kZXgpIHsKICAgIHJldHVybiB2YWx1ZS5pbmRleE9mKCche3Rvb2x0aXAnLCBmcm9tSW5kZXgpOwogIH07CgogIHRva2VuaXplcnMudG9vbHRpcCA9IHRva2VuaXplVG9vbHRpcDsKICBtZXRob2RzLnNwbGljZShtZXRob2RzLmluZGV4T2YoJ3RleHQnKSwgMCwgJ3Rvb2x0aXAnKTsKfTsKCnZhciB0b29sdGlwTWFya2Rvd25SZW5kZXJlciA9IGZ1bmN0aW9uIHRvb2x0aXBNYXJrZG93blJlbmRlcmVyKF9yZWYpIHsKICB2YXIgY29udGVudCA9IF9yZWYuY29udGVudCwKICAgICAgY2hpbGRyZW4gPSBfcmVmLmNoaWxkcmVuOwogIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgic3BhbiIsIG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEV1aVRvb2xUaXAsIHsKICAgIGNvbnRlbnQ6IGNvbnRlbnQKICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgic3BhbiIsIG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJzdHJvbmciLCBudWxsLCBjaGlsZHJlbiksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEV1aUljb24sIHsKICAgIHR5cGU6ICJxdWVzdGlvbkluQ2lyY2xlIiwKICAgIGNsYXNzTmFtZTogImV1aU1hcmtkb3duVG9vbHRpcF9faWNvbiIKICB9KSkpKTsKfTsKCnRvb2x0aXBNYXJrZG93blJlbmRlcmVyLnByb3BUeXBlcyA9IHsKICB0eXBlOiBQcm9wVHlwZXMub25lT2YoWyJ0b29sdGlwUGx1Z2luIl0pLmlzUmVxdWlyZWQsCiAgY29udGVudDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLAogIHBvc2l0aW9uOiBQcm9wVHlwZXMuc2hhcGUoewogICAgc3RhcnQ6IFByb3BUeXBlcy5zaGFwZSh7CiAgICAgIGxpbmU6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCwKICAgICAgY29sdW1uOiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsCiAgICAgIG9mZnNldDogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkCiAgICB9KS5pc1JlcXVpcmVkLAogICAgZW5kOiBQcm9wVHlwZXMuc2hhcGUoewogICAgICBsaW5lOiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsCiAgICAgIGNvbHVtbjogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLAogICAgICBvZmZzZXQ6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZAogICAgfSkuaXNSZXF1aXJlZAogIH0pLmlzUmVxdWlyZWQKfTsKZXhwb3J0IHsgdG9vbHRpcFBsdWdpbiBhcyBwbHVnaW4sIFRvb2x0aXBQYXJzZXIgYXMgcGFyc2VyLCB0b29sdGlwTWFya2Rvd25SZW5kZXJlciBhcyByZW5kZXJlciB9OwoKdHJ5IHsKICB0b29sdGlwTWFya2Rvd25SZW5kZXJlci5fX2RvY2dlbkluZm8gPSB7CiAgICBkZXNjcmlwdGlvbjogJycsCiAgICBkaXNwbGF5TmFtZTogJ3Rvb2x0aXBNYXJrZG93blJlbmRlcmVyJywKICAgIG1ldGhvZHM6IFtdLAogICAgcHJvcHM6IHsKICAgICAgdHlwZTogewogICAgICAgIGRlZmF1bHRWYWx1ZTogbnVsbCwKICAgICAgICBkZXNjcmlwdGlvbjogJycsCiAgICAgICAgbmFtZTogJ3R5cGUnLAogICAgICAgIHBhcmVudDogewogICAgICAgICAgZmlsZU5hbWU6ICdldWkvc3JjL2NvbXBvbmVudHMvbWFya2Rvd25fZWRpdG9yL3BsdWdpbnMvbWFya2Rvd25fdG9vbHRpcC50c3gnLAogICAgICAgICAgbmFtZTogJ1Rvb2x0aXBOb2RlRGV0YWlscycKICAgICAgICB9LAogICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgIHR5cGU6IHsKICAgICAgICAgIG5hbWU6ICcidG9vbHRpcFBsdWdpbiInCiAgICAgICAgfQogICAgICB9LAogICAgICBjb250ZW50OiB7CiAgICAgICAgZGVmYXVsdFZhbHVlOiBudWxsLAogICAgICAgIGRlc2NyaXB0aW9uOiAnJywKICAgICAgICBuYW1lOiAnY29udGVudCcsCiAgICAgICAgcGFyZW50OiB7CiAgICAgICAgICBmaWxlTmFtZTogJ2V1aS9zcmMvY29tcG9uZW50cy9tYXJrZG93bl9lZGl0b3IvcGx1Z2lucy9tYXJrZG93bl90b29sdGlwLnRzeCcsCiAgICAgICAgICBuYW1lOiAnVG9vbHRpcE5vZGVEZXRhaWxzJwogICAgICAgIH0sCiAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgdHlwZTogewogICAgICAgICAgbmFtZTogJ3N0cmluZycKICAgICAgICB9CiAgICAgIH0sCiAgICAgIHBvc2l0aW9uOiB7CiAgICAgICAgZGVmYXVsdFZhbHVlOiBudWxsLAogICAgICAgIGRlc2NyaXB0aW9uOiAnJywKICAgICAgICBuYW1lOiAncG9zaXRpb24nLAogICAgICAgIHBhcmVudDogdW5kZWZpbmVkLAogICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgIHR5cGU6IHsKICAgICAgICAgIG5hbWU6ICdFdWlNYXJrZG93bkFzdE5vZGVQb3NpdGlvbicKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBleHRlbmRlZEludGVyZmFjZXM6IFsnVG9vbHRpcE5vZGVEZXRhaWxzJ10KICB9Owp9IGNhdGNoIChlKSB7fQ=="},{"version":3,"sources":["D:/work/eui/src/components/markdown_editor/plugins/markdown_tooltip.tsx"],"names":["React","EuiToolTip","EuiIcon","EuiCodeBlock","tooltipPlugin","name","button","label","iconType","formatting","prefix","suffix","trimFirst","helpText","TooltipParser","Parser","tokenizers","prototype","inlineTokenizers","methods","inlineMethods","tokenizeTooltip","eat","value","silent","startsWith","nextChar","index","readArg","open","close","body","openBrackets","length","char","tooltipAnchor","tooltipText","now","file","info","line","column","offset","children","tokenizeInline","type","content","notInLink","locator","fromIndex","indexOf","tooltip","splice","tooltipMarkdownRenderer","plugin","parser","renderer"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAyC,OAAzC;;AAEA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,YAAT,QAA6B,YAA7B;AAQA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE,eADc;AAEpBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,SADD;AAENC,IAAAA,QAAQ,EAAE;AAFJ,GAFY;AAMpBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,MAAM,EAAE,YADE;AAEVC,IAAAA,MAAM,EAAE,MAFE;AAGVC,IAAAA,SAAS,EAAE;AAHD,GANQ;AAWpBC,EAAAA,QAAQ,eACN,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAC,IAAvB;AAA4B,IAAA,WAAW,EAAC,GAAxC;AAA4C,IAAA,QAAQ,EAAC;AAArD,KACG,8CADH;AAZkB,CAAtB;;AAkBA,IAAMC,aAAqB,GAAG,SAASA,aAAT,GAAyB;AACrD,MAAMC,MAAM,GAAG,KAAKA,MAApB;AACA,MAAMC,UAAU,GAAGD,MAAM,CAACE,SAAP,CAAiBC,gBAApC;AACA,MAAMC,OAAO,GAAGJ,MAAM,CAACE,SAAP,CAAiBG,aAAjC;;AAEA,MAAMC,eAAgC,GAAG,SAASA,eAAT,CACvCC,GADuC,EAEvCC,KAFuC,EAGvCC,MAHuC,EAIvC;AACA,QAAID,KAAK,CAACE,UAAN,CAAiB,WAAjB,MAAkC,KAAtC,EAA6C,OAAO,KAAP;AAE7C,QAAMC,QAAQ,GAAGH,KAAK,CAAC,CAAD,CAAtB;AAEA,QAAIG,QAAQ,KAAK,GAAjB,EAAsB,OAAO,KAAP,CALtB,CAKoC;;AAEpC,QAAIC,KAAK,GAAG,CAAZ;;AACA,aAASC,OAAT,CAAiBC,IAAjB,EAA+BC,KAA/B,EAA8C;AAC5C,UAAIP,KAAK,CAACI,KAAD,CAAL,KAAiBE,IAArB,EAA2B,MAAM,uBAAN;AAC3BF,MAAAA,KAAK;AAEL,UAAII,IAAI,GAAG,EAAX;AACA,UAAIC,YAAY,GAAG,CAAnB;;AAEA,aAAOL,KAAK,GAAGJ,KAAK,CAACU,MAArB,EAA6BN,KAAK,EAAlC,EAAsC;AACpC,YAAMO,IAAI,GAAGX,KAAK,CAACI,KAAD,CAAlB;;AAEA,YAAIO,IAAI,KAAKJ,KAAT,IAAkBE,YAAY,KAAK,CAAvC,EAA0C;AACxCL,UAAAA,KAAK;AACL,iBAAOI,IAAP;AACD,SAHD,MAGO,IAAIG,IAAI,KAAKJ,KAAb,EAAoB;AACzBE,UAAAA,YAAY;AACb,SAFM,MAEA,IAAIE,IAAI,KAAKL,IAAb,EAAmB;AACxBG,UAAAA,YAAY;AACb;;AAEDD,QAAAA,IAAI,IAAIG,IAAR;AACD;;AAED,aAAO,EAAP;AACD;;AACD,QAAMC,aAAa,GAAGP,OAAO,CAAC,GAAD,EAAM,GAAN,CAA7B;AACA,QAAMQ,WAAW,GAAGR,OAAO,CAAC,GAAD,EAAM,GAAN,CAA3B;AAEA,QAAMS,GAAG,GAAGf,GAAG,CAACe,GAAJ,EAAZ;;AAEA,QAAI,CAACF,aAAL,EAAoB;AAClB,WAAKG,IAAL,CAAUC,IAAV,CAAe,yBAAf,EAA0C;AACxCC,QAAAA,IAAI,EAAEH,GAAG,CAACG,IAD8B;AAExCC,QAAAA,MAAM,EAAEJ,GAAG,CAACI,MAAJ,GAAa;AAFmB,OAA1C;AAID;;AACD,QAAI,CAACL,WAAL,EAAkB;AAChB,WAAKE,IAAL,CAAUC,IAAV,CAAe,uBAAf,EAAwC;AACtCC,QAAAA,IAAI,EAAEH,GAAG,CAACG,IAD4B;AAEtCC,QAAAA,MAAM,EAAEJ,GAAG,CAACI,MAAJ,GAAa,EAAb,GAAkBN,aAAa,CAACF;AAFF,OAAxC;AAID;;AAED,QAAI,CAACG,WAAD,IAAgB,CAACD,aAArB,EAAoC,OAAO,KAAP;;AAEpC,QAAIX,MAAJ,EAAY;AACV,aAAO,IAAP;AACD;;AAEDa,IAAAA,GAAG,CAACI,MAAJ,IAAc,EAAd;AACAJ,IAAAA,GAAG,CAACK,MAAJ,IAAc,EAAd;AACA,QAAMC,QAAQ,GAAG,KAAKC,cAAL,CAAoBT,aAApB,EAAmCE,GAAnC,CAAjB;AAEA,WAAOf,GAAG,qBAAca,aAAd,eAAgCC,WAAhC,QAAH,CAAoD;AACzDS,MAAAA,IAAI,EAAE,eADmD;AAEzDC,MAAAA,OAAO,EAAEV,WAFgD;AAGzDO,MAAAA,QAAQ,EAARA;AAHyD,KAApD,CAAP;AAKD,GArED;;AAsEAtB,EAAAA,eAAe,CAAC0B,SAAhB,GAA4B,IAA5B;;AAEA1B,EAAAA,eAAe,CAAC2B,OAAhB,GAA0B,UAACzB,KAAD,EAAQ0B,SAAR,EAAsB;AAC9C,WAAO1B,KAAK,CAAC2B,OAAN,CAAc,WAAd,EAA2BD,SAA3B,CAAP;AACD,GAFD;;AAIAjC,EAAAA,UAAU,CAACmC,OAAX,GAAqB9B,eAArB;AACAF,EAAAA,OAAO,CAACiC,MAAR,CAAejC,OAAO,CAAC+B,OAAR,CAAgB,MAAhB,CAAf,EAAwC,CAAxC,EAA2C,SAA3C;AACD,CAnFD;;AAqFA,IAAMG,uBAIL,GAAG,SAJEA,uBAIF,OAA2B;AAAA,MAAxBP,OAAwB,QAAxBA,OAAwB;AAAA,MAAfH,QAAe,QAAfA,QAAe;AAC7B,sBACE,+CACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEG;AAArB,kBACE,+CACE,oCAASH,QAAT,CADF,eAEE,oBAAC,OAAD;AACE,IAAA,IAAI,EAAC,kBADP;AAEE,IAAA,SAAS,EAAC;AAFZ,IAFF,CADF,CADF,CADF;AAaD,CAlBD;;;;;;;;;;;;;;;;;;AAoBA,SACEvC,aAAa,IAAIkD,MADnB,EAEExC,aAAa,IAAIyC,MAFnB,EAGEF,uBAAuB,IAAIG,QAH7B","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport { EuiToolTip } from '../../tool_tip';\nimport { EuiIcon } from '../../icon';\nimport { EuiCodeBlock } from '../../code';\nvar tooltipPlugin = {\n  name: 'tooltipPlugin',\n  button: {\n    label: 'Tooltip',\n    iconType: 'editorComment'\n  },\n  formatting: {\n    prefix: '!{tooltip[',\n    suffix: ']()}',\n    trimFirst: true\n  },\n  helpText: /*#__PURE__*/React.createElement(EuiCodeBlock, {\n    language: \"md\",\n    paddingSize: \"s\",\n    fontSize: \"l\"\n  }, '!{tooltip[anchor text](helpful description)}')\n};\n\nvar TooltipParser = function TooltipParser() {\n  var Parser = this.Parser;\n  var tokenizers = Parser.prototype.inlineTokenizers;\n  var methods = Parser.prototype.inlineMethods;\n\n  var tokenizeTooltip = function tokenizeTooltip(eat, value, silent) {\n    if (value.startsWith('!{tooltip') === false) return false;\n    var nextChar = value[9];\n    if (nextChar !== '[') return false; // this isn't actually a tooltip\n\n    var index = 9;\n\n    function readArg(open, close) {\n      if (value[index] !== open) throw 'Expected left bracket';\n      index++;\n      var body = '';\n      var openBrackets = 0;\n\n      for (; index < value.length; index++) {\n        var char = value[index];\n\n        if (char === close && openBrackets === 0) {\n          index++;\n          return body;\n        } else if (char === close) {\n          openBrackets--;\n        } else if (char === open) {\n          openBrackets++;\n        }\n\n        body += char;\n      }\n\n      return '';\n    }\n\n    var tooltipAnchor = readArg('[', ']');\n    var tooltipText = readArg('(', ')');\n    var now = eat.now();\n\n    if (!tooltipAnchor) {\n      this.file.info('No tooltip anchor found', {\n        line: now.line,\n        column: now.column + 10\n      });\n    }\n\n    if (!tooltipText) {\n      this.file.info('No tooltip text found', {\n        line: now.line,\n        column: now.column + 12 + tooltipAnchor.length\n      });\n    }\n\n    if (!tooltipText || !tooltipAnchor) return false;\n\n    if (silent) {\n      return true;\n    }\n\n    now.column += 10;\n    now.offset += 10;\n    var children = this.tokenizeInline(tooltipAnchor, now);\n    return eat(\"!{tooltip[\".concat(tooltipAnchor, \"](\").concat(tooltipText, \")}\"))({\n      type: 'tooltipPlugin',\n      content: tooltipText,\n      children: children\n    });\n  };\n\n  tokenizeTooltip.notInLink = true;\n\n  tokenizeTooltip.locator = function (value, fromIndex) {\n    return value.indexOf('!{tooltip', fromIndex);\n  };\n\n  tokenizers.tooltip = tokenizeTooltip;\n  methods.splice(methods.indexOf('text'), 0, 'tooltip');\n};\n\nvar tooltipMarkdownRenderer = ({\n  content,\n  children\n}) => {\n  return <span>\n      <EuiToolTip content={content}>\n        <span>\n          <strong>{children}</strong>\n          <EuiIcon type=\"questionInCircle\" className=\"euiMarkdownTooltip__icon\" />\n        </span>\n      </EuiToolTip>\n    </span>;\n};\n\ntooltipMarkdownRenderer.propTypes = {\n  type: PropTypes.oneOf([\"tooltipPlugin\"]).isRequired,\n  content: PropTypes.string.isRequired,\n  position: PropTypes.shape({\n    start: PropTypes.shape({\n      line: PropTypes.number.isRequired,\n      column: PropTypes.number.isRequired,\n      offset: PropTypes.number.isRequired\n    }).isRequired,\n    end: PropTypes.shape({\n      line: PropTypes.number.isRequired,\n      column: PropTypes.number.isRequired,\n      offset: PropTypes.number.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport { tooltipPlugin as plugin, TooltipParser as parser, tooltipMarkdownRenderer as renderer };\n\ntry {\n  tooltipMarkdownRenderer.__docgenInfo = {\n    description: '',\n    displayName: 'tooltipMarkdownRenderer',\n    methods: [],\n    props: {\n      type: {\n        defaultValue: null,\n        description: '',\n        name: 'type',\n        parent: {\n          fileName: 'eui/src/components/markdown_editor/plugins/markdown_tooltip.tsx',\n          name: 'TooltipNodeDetails'\n        },\n        required: true,\n        type: {\n          name: '\"tooltipPlugin\"'\n        }\n      },\n      content: {\n        defaultValue: null,\n        description: '',\n        name: 'content',\n        parent: {\n          fileName: 'eui/src/components/markdown_editor/plugins/markdown_tooltip.tsx',\n          name: 'TooltipNodeDetails'\n        },\n        required: true,\n        type: {\n          name: 'string'\n        }\n      },\n      position: {\n        defaultValue: null,\n        description: '',\n        name: 'position',\n        parent: undefined,\n        required: true,\n        type: {\n          name: 'EuiMarkdownAstNodePosition'\n        }\n      }\n    },\n    extendedInterfaces: ['TooltipNodeDetails']\n  };\n} catch (e) {}"]}]}