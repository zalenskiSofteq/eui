{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\services\\format\\format_auto.ts","dependencies":[{"path":"D:\\work\\eui\\src\\services\\format\\format_auto.ts","mtime":1649070093835},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CgovKgogKiBMaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lIG9yIG1vcmUgY29udHJpYnV0b3IKICogbGljZW5zZSBhZ3JlZW1lbnRzLiBTZWUgdGhlIE5PVElDRSBmaWxlIGRpc3RyaWJ1dGVkIHdpdGgKICogdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIHJlZ2FyZGluZyBjb3B5cmlnaHQKICogb3duZXJzaGlwLiBFbGFzdGljc2VhcmNoIEIuVi4gbGljZW5zZXMgdGhpcyBmaWxlIHRvIHlvdSB1bmRlcgogKiB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsgeW91IG1heQogKiBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgogKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKICoKICogICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiAqCiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywKICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4KICogIkFTIElTIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZCiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZQogKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zCiAqIHVuZGVyIHRoZSBMaWNlbnNlLgogKi8KaW1wb3J0IHsgaXNOaWwsIGlzQXJyYXksIGlzQm9vbGVhbiwgaXNEYXRlLCBpc05hTiwgaXNOdW1iZXIsIGlzU3RyaW5nIH0gZnJvbSAnLi4vcHJlZGljYXRlJzsKaW1wb3J0IHsgZm9ybWF0Qm9vbGVhbiB9IGZyb20gJy4vZm9ybWF0X2Jvb2xlYW4nOwppbXBvcnQgeyBmb3JtYXREYXRlIH0gZnJvbSAnLi9mb3JtYXRfZGF0ZSc7CmltcG9ydCB7IGZvcm1hdE51bWJlciB9IGZyb20gJy4vZm9ybWF0X251bWJlcic7CmltcG9ydCB7IGZvcm1hdFRleHQgfSBmcm9tICcuL2Zvcm1hdF90ZXh0JzsKZXhwb3J0IHZhciBmb3JtYXRBdXRvID0gZnVuY3Rpb24gZm9ybWF0QXV0byh2YWx1ZSkgewogIGlmIChpc05pbCh2YWx1ZSkgfHwgaXNOYU4odmFsdWUpKSB7CiAgICByZXR1cm4gJyc7CiAgfQoKICBpZiAoaXNTdHJpbmcodmFsdWUpKSB7CiAgICByZXR1cm4gZm9ybWF0VGV4dCh2YWx1ZSk7CiAgfQoKICBpZiAoaXNEYXRlKHZhbHVlKSkgewogICAgcmV0dXJuIGZvcm1hdERhdGUodmFsdWUpOwogIH0KCiAgaWYgKGlzQm9vbGVhbih2YWx1ZSkpIHsKICAgIHJldHVybiBmb3JtYXRCb29sZWFuKHZhbHVlKTsKICB9CgogIGlmIChpc051bWJlcih2YWx1ZSkpIHsKICAgIHJldHVybiBmb3JtYXROdW1iZXIodmFsdWUpOwogIH0KCiAgaWYgKGlzQXJyYXkodmFsdWUpKSB7CiAgICByZXR1cm4gQXJyYXkuaXNBcnJheSh2YWx1ZSkgPyB2YWx1ZS5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgcmV0dXJuIGZvcm1hdEF1dG8oaXRlbSk7CiAgICB9KS5qb2luKCcsICcpIDogZm9ybWF0QXV0byh2YWx1ZSk7CiAgfSAvLyBUT0RPIG5vdCBzdXJlIGlmIHdlIHdhbnQgdGhhdC4uIHRoZSAoKykgaXMgdGhhdCB3ZSBzaG93IHNvbWV0aGluZywgdGhlICgtKSBpcyB0aGF0IGl0J3MgdmVyeSB0ZWNobmljYWwKCgogIHJldHVybiBKU09OLnN0cmluZ2lmeSh2YWx1ZSk7Cn07Cgp0cnkgewogIGZvcm1hdEF1dG8uX19kb2NnZW5JbmZvID0gewogICAgZGVzY3JpcHRpb246ICcnLAogICAgZGlzcGxheU5hbWU6ICdmb3JtYXRBdXRvJywKICAgIG1ldGhvZHM6IFtdLAogICAgcHJvcHM6IHt9LAogICAgZXh0ZW5kZWRJbnRlcmZhY2VzOiBbXQogIH07Cn0gY2F0Y2ggKGUpIHt9"},{"version":3,"sources":["D:/work/eui/src/services/format/format_auto.ts"],"names":["isNil","isArray","isBoolean","isDate","isNaN","isNumber","isString","formatBoolean","formatDate","formatNumber","formatText","formatAuto","value","Array","map","item","join","JSON","stringify"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SACEA,KADF,EAEEC,OAFF,EAGEC,SAHF,EAIEC,MAJF,EAKEC,KALF,EAMEC,QANF,EAOEC,QAPF,QAQO,cARP;AASA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,UAAT,QAA2B,eAA3B;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAwB;AAChD,MAAIZ,KAAK,CAACY,KAAD,CAAL,IAAgBR,KAAK,CAACQ,KAAD,CAAzB,EAAkC;AAChC,WAAO,EAAP;AACD;;AAED,MAAIN,QAAQ,CAACM,KAAD,CAAZ,EAAqB;AACnB,WAAOF,UAAU,CAACE,KAAD,CAAjB;AACD;;AAED,MAAIT,MAAM,CAACS,KAAD,CAAV,EAAmB;AACjB,WAAOJ,UAAU,CAACI,KAAD,CAAjB;AACD;;AAED,MAAIV,SAAS,CAACU,KAAD,CAAb,EAAsB;AACpB,WAAOL,aAAa,CAACK,KAAD,CAApB;AACD;;AAED,MAAIP,QAAQ,CAACO,KAAD,CAAZ,EAAqB;AACnB,WAAOH,YAAY,CAACG,KAAD,CAAnB;AACD;;AAED,MAAIX,OAAO,CAACW,KAAD,CAAX,EAAoB;AAClB,WAAOC,KAAK,CAACZ,OAAN,CAAcW,KAAd,IACHA,KAAK,CAACE,GAAN,CAAU,UAACC,IAAD;AAAA,aAAUJ,UAAU,CAACI,IAAD,CAApB;AAAA,KAAV,EAAsCC,IAAtC,CAA2C,IAA3C,CADG,GAEHL,UAAU,CAACC,KAAD,CAFd;AAGD,GAzB+C,CA2BhD;;;AACA,SAAOK,IAAI,CAACC,SAAL,CAAeN,KAAf,CAAP;AACD,CA7BM","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  isNil,\n  isArray,\n  isBoolean,\n  isDate,\n  isNaN,\n  isNumber,\n  isString,\n} from '../predicate';\nimport { formatBoolean } from './format_boolean';\nimport { formatDate } from './format_date';\nimport { formatNumber } from './format_number';\nimport { formatText } from './format_text';\n\nexport const formatAuto = (value: any): string => {\n  if (isNil(value) || isNaN(value)) {\n    return '';\n  }\n\n  if (isString(value)) {\n    return formatText(value);\n  }\n\n  if (isDate(value)) {\n    return formatDate(value);\n  }\n\n  if (isBoolean(value)) {\n    return formatBoolean(value);\n  }\n\n  if (isNumber(value)) {\n    return formatNumber(value);\n  }\n\n  if (isArray(value)) {\n    return Array.isArray(value)\n      ? value.map((item) => formatAuto(item)).join(', ')\n      : formatAuto(value);\n  }\n\n  // TODO not sure if we want that.. the (+) is that we show something, the (-) is that it's very technical\n  return JSON.stringify(value);\n};\n"]}]}