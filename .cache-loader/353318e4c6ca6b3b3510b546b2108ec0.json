{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src-docs\\src\\views\\button\\button_group_compressed.js","dependencies":[{"path":"D:\\work\\eui\\src-docs\\src\\views\\button\\button_group_compressed.js","mtime":1649070093100},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IH0gcmV0dXJuIHRhcmdldDsgfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH0KCmZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkgeyByZXR1cm4gX2FycmF5V2l0aEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgfHwgX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFyciwgaSkgfHwgX25vbkl0ZXJhYmxlUmVzdCgpOyB9CgpmdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLiIpOyB9CgpmdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7IGlmICghbykgcmV0dXJuOyBpZiAodHlwZW9mIG8gPT09ICJzdHJpbmciKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpOyBpZiAobiA9PT0gIk9iamVjdCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTsgaWYgKG4gPT09ICJNYXAiIHx8IG4gPT09ICJTZXQiKSByZXR1cm4gQXJyYXkuZnJvbShvKTsgaWYgKG4gPT09ICJBcmd1bWVudHMiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgfQoKZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHsgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykgeyBhcnIyW2ldID0gYXJyW2ldOyB9IHJldHVybiBhcnIyOyB9CgpmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7IGlmICh0eXBlb2YgU3ltYm9sID09PSAidW5kZWZpbmVkIiB8fCAhKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoYXJyKSkpIHJldHVybjsgdmFyIF9hcnIgPSBbXTsgdmFyIF9uID0gdHJ1ZTsgdmFyIF9kID0gZmFsc2U7IHZhciBfZSA9IHVuZGVmaW5lZDsgdHJ5IHsgZm9yICh2YXIgX2kgPSBhcnJbU3ltYm9sLml0ZXJhdG9yXSgpLCBfczsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkgeyBfYXJyLnB1c2goX3MudmFsdWUpOyBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7IH0gfSBjYXRjaCAoZXJyKSB7IF9kID0gdHJ1ZTsgX2UgPSBlcnI7IH0gZmluYWxseSB7IHRyeSB7IGlmICghX24gJiYgX2lbInJldHVybiJdICE9IG51bGwpIF9pWyJyZXR1cm4iXSgpOyB9IGZpbmFsbHkgeyBpZiAoX2QpIHRocm93IF9lOyB9IH0gcmV0dXJuIF9hcnI7IH0KCmZ1bmN0aW9uIF9hcnJheVdpdGhIb2xlcyhhcnIpIHsgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIGFycjsgfQoKaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCBGcmFnbWVudCB9IGZyb20gJ3JlYWN0JzsKaW1wb3J0IHsgRXVpQnV0dG9uR3JvdXAsIEV1aVNwYWNlciwgRXVpVGl0bGUgfSBmcm9tICcuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cyc7CmltcG9ydCB7IGh0bWxJZEdlbmVyYXRvciB9IGZyb20gJy4uLy4uLy4uLy4uL3NyYy9zZXJ2aWNlcyc7CnZhciBpZFByZWZpeDIgPSBodG1sSWRHZW5lcmF0b3IoKSgpOwp2YXIgaWRQcmVmaXgzID0gaHRtbElkR2VuZXJhdG9yKCkoKTsKZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uICgpIHsKICB2YXIgdG9nZ2xlQnV0dG9uc0NvbXByZXNzZWQgPSBbewogICAgaWQ6ICIiLmNvbmNhdChpZFByZWZpeDIsICIzIiksCiAgICBsYWJlbDogJ2ZpbmUnCiAgfSwgewogICAgaWQ6ICIiLmNvbmNhdChpZFByZWZpeDIsICI0IiksCiAgICBsYWJlbDogJ3JvdWdoJwogIH0sIHsKICAgIGlkOiAiIi5jb25jYXQoaWRQcmVmaXgyLCAiNSIpLAogICAgbGFiZWw6ICdjb2Fyc2UnCiAgfV07CiAgdmFyIHRvZ2dsZUJ1dHRvbnNJY29uc011bHRpID0gW3sKICAgIGlkOiAiIi5jb25jYXQoaWRQcmVmaXgzLCAiMyIpLAogICAgbGFiZWw6ICdCb2xkJywKICAgIG5hbWU6ICdib2xkJywKICAgIGljb25UeXBlOiAnZWRpdG9yQm9sZCcKICB9LCB7CiAgICBpZDogIiIuY29uY2F0KGlkUHJlZml4MywgIjQiKSwKICAgIGxhYmVsOiAnSXRhbGljJywKICAgIG5hbWU6ICdpdGFsaWMnLAogICAgaWNvblR5cGU6ICdlZGl0b3JJdGFsaWMnLAogICAgaXNEaXNhYmxlZDogdHJ1ZQogIH0sIHsKICAgIGlkOiAiIi5jb25jYXQoaWRQcmVmaXgzLCAiNSIpLAogICAgbGFiZWw6ICdVbmRlcmxpbmUnLAogICAgbmFtZTogJ3VuZGVybGluZScsCiAgICBpY29uVHlwZTogJ2VkaXRvclVuZGVybGluZScKICB9LCB7CiAgICBpZDogIiIuY29uY2F0KGlkUHJlZml4MywgIjYiKSwKICAgIGxhYmVsOiAnU3RyaWtldGhyb3VnaCcsCiAgICBuYW1lOiAnc3RyaWtldGhyb3VnaCcsCiAgICBpY29uVHlwZTogJ2VkaXRvclN0cmlrZScKICB9XTsKCiAgdmFyIF91c2VTdGF0ZSA9IHVzZVN0YXRlKHt9KSwKICAgICAgX3VzZVN0YXRlMiA9IF9zbGljZWRUb0FycmF5KF91c2VTdGF0ZSwgMiksCiAgICAgIHRvZ2dsZUljb25JZFRvU2VsZWN0ZWRNYXBJY29uID0gX3VzZVN0YXRlMlswXSwKICAgICAgc2V0VG9nZ2xlSWNvbklkVG9TZWxlY3RlZE1hcEljb24gPSBfdXNlU3RhdGUyWzFdOwoKICB2YXIgX3VzZVN0YXRlMyA9IHVzZVN0YXRlKCIiLmNvbmNhdChpZFByZWZpeDIsICI0IikpLAogICAgICBfdXNlU3RhdGU0ID0gX3NsaWNlZFRvQXJyYXkoX3VzZVN0YXRlMywgMiksCiAgICAgIHRvZ2dsZUNvbXByZXNzZWRJZFNlbGVjdGVkID0gX3VzZVN0YXRlNFswXSwKICAgICAgc2V0VG9nZ2xlQ29tcHJlc3NlZElkU2VsZWN0ZWQgPSBfdXNlU3RhdGU0WzFdOwoKICB2YXIgb25DaGFuZ2VDb21wcmVzc2VkID0gZnVuY3Rpb24gb25DaGFuZ2VDb21wcmVzc2VkKG9wdGlvbklkKSB7CiAgICBzZXRUb2dnbGVDb21wcmVzc2VkSWRTZWxlY3RlZChvcHRpb25JZCk7CiAgfTsKCiAgdmFyIG9uQ2hhbmdlSWNvbnNNdWx0aUljb25zID0gZnVuY3Rpb24gb25DaGFuZ2VJY29uc011bHRpSWNvbnMob3B0aW9uSWQpIHsKICAgIHZhciBuZXdUb2dnbGVJY29uSWRUb1NlbGVjdGVkTWFwSWNvbiA9IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgdG9nZ2xlSWNvbklkVG9TZWxlY3RlZE1hcEljb24pLCBfZGVmaW5lUHJvcGVydHkoe30sIG9wdGlvbklkLCAhdG9nZ2xlSWNvbklkVG9TZWxlY3RlZE1hcEljb25bb3B0aW9uSWRdKSk7CgogICAgc2V0VG9nZ2xlSWNvbklkVG9TZWxlY3RlZE1hcEljb24obmV3VG9nZ2xlSWNvbklkVG9TZWxlY3RlZE1hcEljb24pOwogIH07CgogIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChGcmFnbWVudCwgbnVsbCwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRXVpVGl0bGUsIHsKICAgIHNpemU6ICJ4eHMiCiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImgzIiwgbnVsbCwgIkNvbXByZXNzZWQgZ3JvdXBzIHNob3VsZCBhbHdheXMgYmUgZnVsbFdpZHRoIHNvIHRoZXkgbGluZSB1cCBuaWNlbHkgaW4gdGhlaXIgc21hbGwgY29udGFpbmVyLiIpKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRXVpU3BhY2VyLCB7CiAgICBzaXplOiAicyIKICB9KSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsKICAgIHN0eWxlOiB7CiAgICAgIG1heFdpZHRoOiAzMDAKICAgIH0KICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlCdXR0b25Hcm91cCwgewogICAgbmFtZTogImNvYXJzbmVzcyIsCiAgICBsZWdlbmQ6ICJUaGlzIGlzIGEgYmFzaWMgZ3JvdXAiLAogICAgb3B0aW9uczogdG9nZ2xlQnV0dG9uc0NvbXByZXNzZWQsCiAgICBpZFNlbGVjdGVkOiB0b2dnbGVDb21wcmVzc2VkSWRTZWxlY3RlZCwKICAgIG9uQ2hhbmdlOiBmdW5jdGlvbiBvbkNoYW5nZShpZCkgewogICAgICByZXR1cm4gb25DaGFuZ2VDb21wcmVzc2VkKGlkKTsKICAgIH0sCiAgICBidXR0b25TaXplOiAiY29tcHJlc3NlZCIsCiAgICBpc0Z1bGxXaWR0aDogdHJ1ZQogIH0pLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlTcGFjZXIsIG51bGwpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlUaXRsZSwgewogICAgc2l6ZTogInh4eHMiCiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImgzIiwgbnVsbCwgIlVubGVzcyB0aGV5IGFyZSBpY29uIG9ubHkiKSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEV1aVNwYWNlciwgewogICAgc2l6ZTogInMiCiAgfSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEV1aUJ1dHRvbkdyb3VwLCB7CiAgICBsZWdlbmQ6ICJUZXh0IHN0eWxlIiwKICAgIGNsYXNzTmFtZTogImV1aS1kaXNwbGF5SW5saW5lQmxvY2siLAogICAgb3B0aW9uczogdG9nZ2xlQnV0dG9uc0ljb25zTXVsdGksCiAgICBpZFRvU2VsZWN0ZWRNYXA6IHRvZ2dsZUljb25JZFRvU2VsZWN0ZWRNYXBJY29uLAogICAgb25DaGFuZ2U6IGZ1bmN0aW9uIG9uQ2hhbmdlKGlkKSB7CiAgICAgIHJldHVybiBvbkNoYW5nZUljb25zTXVsdGlJY29ucyhpZCk7CiAgICB9LAogICAgdHlwZTogIm11bHRpIiwKICAgIGJ1dHRvblNpemU6ICJjb21wcmVzc2VkIiwKICAgIGlzSWNvbk9ubHk6IHRydWUKICB9KSkpOwp9KTs="},{"version":3,"sources":["D:/work/eui/src-docs/src/views/button/button_group_compressed.js"],"names":["React","useState","Fragment","EuiButtonGroup","EuiSpacer","EuiTitle","htmlIdGenerator","idPrefix2","idPrefix3","toggleButtonsCompressed","id","label","toggleButtonsIconsMulti","name","iconType","isDisabled","toggleIconIdToSelectedMapIcon","setToggleIconIdToSelectedMapIcon","toggleCompressedIdSelected","setToggleCompressedIdSelected","onChangeCompressed","optionId","onChangeIconsMultiIcons","newToggleIconIdToSelectedMapIcon","maxWidth"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from 'react';\n\nimport {\n  EuiButtonGroup,\n  EuiSpacer,\n  EuiTitle,\n} from '../../../../src/components';\n\nimport { htmlIdGenerator } from '../../../../src/services';\n\nconst idPrefix2 = htmlIdGenerator()();\nconst idPrefix3 = htmlIdGenerator()();\n\nexport default () => {\n  const toggleButtonsCompressed = [\n    {\n      id: `${idPrefix2}3`,\n      label: 'fine',\n    },\n    {\n      id: `${idPrefix2}4`,\n      label: 'rough',\n    },\n    {\n      id: `${idPrefix2}5`,\n      label: 'coarse',\n    },\n  ];\n\n  const toggleButtonsIconsMulti = [\n    {\n      id: `${idPrefix3}3`,\n      label: 'Bold',\n      name: 'bold',\n      iconType: 'editorBold',\n    },\n    {\n      id: `${idPrefix3}4`,\n      label: 'Italic',\n      name: 'italic',\n      iconType: 'editorItalic',\n      isDisabled: true,\n    },\n    {\n      id: `${idPrefix3}5`,\n      label: 'Underline',\n      name: 'underline',\n      iconType: 'editorUnderline',\n    },\n    {\n      id: `${idPrefix3}6`,\n      label: 'Strikethrough',\n      name: 'strikethrough',\n      iconType: 'editorStrike',\n    },\n  ];\n\n  const [\n    toggleIconIdToSelectedMapIcon,\n    setToggleIconIdToSelectedMapIcon,\n  ] = useState({});\n  const [toggleCompressedIdSelected, setToggleCompressedIdSelected] = useState(\n    `${idPrefix2}4`\n  );\n\n  const onChangeCompressed = (optionId) => {\n    setToggleCompressedIdSelected(optionId);\n  };\n\n  const onChangeIconsMultiIcons = (optionId) => {\n    const newToggleIconIdToSelectedMapIcon = {\n      ...toggleIconIdToSelectedMapIcon,\n      ...{\n        [optionId]: !toggleIconIdToSelectedMapIcon[optionId],\n      },\n    };\n\n    setToggleIconIdToSelectedMapIcon(newToggleIconIdToSelectedMapIcon);\n  };\n\n  return (\n    <Fragment>\n      <EuiTitle size=\"xxs\">\n        <h3>\n          Compressed groups should always be fullWidth so they line up nicely in\n          their small container.\n        </h3>\n      </EuiTitle>\n      <EuiSpacer size=\"s\" />\n      <div style={{ maxWidth: 300 }}>\n        <EuiButtonGroup\n          name=\"coarsness\"\n          legend=\"This is a basic group\"\n          options={toggleButtonsCompressed}\n          idSelected={toggleCompressedIdSelected}\n          onChange={(id) => onChangeCompressed(id)}\n          buttonSize=\"compressed\"\n          isFullWidth\n        />\n        <EuiSpacer />\n        <EuiTitle size=\"xxxs\">\n          <h3>Unless they are icon only</h3>\n        </EuiTitle>\n        <EuiSpacer size=\"s\" />\n        <EuiButtonGroup\n          legend=\"Text style\"\n          className=\"eui-displayInlineBlock\"\n          options={toggleButtonsIconsMulti}\n          idToSelectedMap={toggleIconIdToSelectedMapIcon}\n          onChange={(id) => onChangeIconsMultiIcons(id)}\n          type=\"multi\"\n          buttonSize=\"compressed\"\n          isIconOnly\n        />\n      </div>\n    </Fragment>\n  );\n};\n"]}]}