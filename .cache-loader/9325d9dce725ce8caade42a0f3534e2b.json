{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\basic_table\\basic_table.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\basic_table\\basic_table.tsx","mtime":1649070093293},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/basic_table/basic_table.tsx"],"names":["React","Component","Fragment","classNames","formatAuto","formatBoolean","formatDate","formatNumber","formatText","LEFT_ALIGNMENT","RIGHT_ALIGNMENT","SortDirection","isFunction","get","EuiFlexGroup","EuiFlexItem","EuiCheckbox","EuiTable","EuiTableBody","EuiTableFooter","EuiTableFooterCell","EuiTableHeader","EuiTableHeaderCell","EuiTableHeaderCellCheckbox","EuiTableHeaderMobile","EuiTableRow","EuiTableRowCell","EuiTableRowCellCheckbox","EuiTableSortMobile","CollapsedItemActions","ExpandedItemActions","PaginationBar","EuiIcon","EuiKeyboardAccessible","EuiScreenReaderOnly","EuiI18n","EuiDelayRender","htmlIdGenerator","dataTypesProfiles","auto","align","render","value","string","number","boolean","date","DATA_TYPES","Object","keys","getItemId","item","itemId","getRowProps","rowProps","getCellProps","column","cellProps","getColumnFooter","items","pagination","footer","undefined","hasPagination","x","hasOwnProperty","EuiBasicTable","nextProps","prevState","selection","filter","selectedItem","findIndex","length","onSelectionChange","props","tbody","removeLoadingListeners","loading","addLoadingListeners","listener","event","stopPropagation","preventDefault","forEach","addEventListener","cleanups","push","removeEventListener","cleanup","isMobile","selectableItems","selectable","checked","state","disabled","onChange","target","changeSelection","selectAllRows","sorting","sortable","field","name","sort","direction","Error","onColumnSortChange","initialSelectionRendered","getInitialSelection","prevProps","initialSelected","setState","newSelection","criteria","page","index","pageIndex","size","pageSize","clearSelection","currentCriteria","buildCriteria","ASC","reverse","className","columns","error","noItemsMessage","compressed","itemIdToExpandedRowMap","responsive","isSelectable","isExpandable","hasActions","tableCaption","rowHeader","tableLayout","rest","classes","table","renderTable","paginationBar","renderPaginationBar","mobileHeader","renderSelectAll","renderTableMobileSort","caption","renderTableCaption","head","renderTableHead","body","renderTableBody","renderTableFooter","tableId","enableAllColumns","hideForMobile","sortDirection","resolveColumnSortDirection","key","onSort","resolveColumnOnSort","isSorted","isSortAscending","isAsc","captionElement","pageCount","Math","ceil","totalItemCount","itemCount","headers","width","dataType","mobileOptions","isMobileHeader","readOnly","description","columnAlign","getAlignForDataType","actions","footers","hasDefinedFooter","only","renderErrorBody","renderEmptyBody","rows","map","tableItemIndex","renderItemRow","setTbody","colSpan","rowIndex","cells","itemIdCallback","selected","find","calculatedHasSelection","renderItemSelectionCell","calculatedHasActions","columnIndex","renderItemActionsCell","fieldDataColumn","renderItemFieldDataCell","renderItemComputedCell","expandedRowColSpan","mobileOnlyCols","reduce","num","hasExpandedRow","expandedRowId","expandedRow","rowPropsCallback","row","onClick","title","selectableMessage","selectThisRow","actionEnabled","action","enabled","actualActions","available","primaryActions","o","isPrimary","slice","tools","setScopeRow","contentRenderer","getRendererForDataType","content","renderItemCell","isExpander","textOnly","cellPropsCallback","header","profile","join","ariaLabel","onPageSizeChange","bind","onPageChange"],"mappings":"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":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { formatAuto, formatBoolean, formatDate, formatNumber, formatText, LEFT_ALIGNMENT, RIGHT_ALIGNMENT, SortDirection } from '../../services';\nimport { isFunction } from '../../services/predicate';\nimport { get } from '../../services/objects';\nimport { EuiFlexGroup, EuiFlexItem } from '../flex';\nimport { EuiCheckbox } from '../form';\nimport { EuiTable, EuiTableBody, EuiTableFooter, EuiTableFooterCell, EuiTableHeader, EuiTableHeaderCell, EuiTableHeaderCellCheckbox, EuiTableHeaderMobile, EuiTableRow, EuiTableRowCell, EuiTableRowCellCheckbox, EuiTableSortMobile } from '../table';\nimport { CollapsedItemActions } from './collapsed_item_actions';\nimport { ExpandedItemActions } from './expanded_item_actions';\nimport { PaginationBar } from './pagination_bar';\nimport { EuiIcon } from '../icon';\nimport { EuiKeyboardAccessible, EuiScreenReaderOnly } from '../accessibility';\nimport { EuiI18n } from '../i18n';\nimport { EuiDelayRender } from '../delay_render';\nimport { htmlIdGenerator } from '../../services/accessibility';\nvar dataTypesProfiles = {\n  auto: {\n    align: LEFT_ALIGNMENT,\n    render: function render(value) {\n      return formatAuto(value);\n    }\n  },\n  string: {\n    align: LEFT_ALIGNMENT,\n    render: function render(value) {\n      return formatText(value);\n    }\n  },\n  number: {\n    align: RIGHT_ALIGNMENT,\n    render: function render(value) {\n      return formatNumber(value);\n    }\n  },\n  boolean: {\n    align: LEFT_ALIGNMENT,\n    render: function render(value) {\n      return formatBoolean(value);\n    }\n  },\n  date: {\n    align: LEFT_ALIGNMENT,\n    render: function render(value) {\n      return formatDate(value);\n    }\n  }\n};\nvar DATA_TYPES = Object.keys(dataTypesProfiles);\nexport function getItemId(item, itemId) {\n  if (itemId) {\n    if (isFunction(itemId)) {\n      return itemId(item);\n    } // @ts-ignore never mind about the index signature\n\n\n    return item[itemId];\n  }\n}\n\nfunction getRowProps(item, rowProps) {\n  if (rowProps) {\n    if (isFunction(rowProps)) {\n      return rowProps(item);\n    }\n\n    return rowProps;\n  }\n\n  return {};\n}\n\nfunction getCellProps(item, column, cellProps) {\n  if (cellProps) {\n    if (isFunction(cellProps)) {\n      return cellProps(item, column);\n    }\n\n    return cellProps;\n  }\n\n  return {};\n}\n\nfunction getColumnFooter(column, _ref) {\n  var items = _ref.items,\n      pagination = _ref.pagination;\n  var _ref2 = column,\n      footer = _ref2.footer;\n\n  if (footer) {\n    if (isFunction(footer)) {\n      return footer({\n        items: items,\n        pagination: pagination\n      });\n    }\n\n    return footer;\n  }\n\n  return undefined;\n}\n\nfunction hasPagination(x) {\n  return x.hasOwnProperty('pagination') && !!x.pagination;\n}\n\nexport class EuiBasicTable extends Component {\n  static defaultProps = {\n    responsive: true,\n    tableLayout: 'fixed',\n    noItemsMessage: 'No items found'\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!nextProps.selection) {\n      // next props doesn't have a selection, reset our state\n      return {\n        selection: []\n      };\n    }\n\n    const {\n      itemId\n    } = nextProps;\n    const selection = prevState.selection.filter(selectedItem => nextProps.items.findIndex(item => getItemId(item, itemId) === getItemId(selectedItem, itemId)) !== -1);\n\n    if (selection.length !== prevState.selection.length) {\n      if (nextProps.selection.onSelectionChange) {\n        nextProps.selection.onSelectionChange(selection);\n      }\n\n      return {\n        selection\n      };\n    }\n\n    return null;\n  } // used for moving in & out of `loading` state\n\n\n  cleanups = [];\n  tbody = null;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      // used for checking if  initial selection is rendered\n      initialSelectionRendered: false,\n      selection: []\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.loading && this.tbody) this.addLoadingListeners(this.tbody);\n    this.getInitialSelection();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.loading !== this.props.loading) {\n      if (this.props.loading && this.tbody) {\n        this.addLoadingListeners(this.tbody);\n      } else {\n        this.removeLoadingListeners();\n      }\n    }\n\n    this.getInitialSelection();\n  }\n\n  componentWillUnmount() {\n    this.removeLoadingListeners();\n  }\n\n  getInitialSelection() {\n    if (this.props.selection && this.props.selection.initialSelected && !this.state.initialSelectionRendered && this.props.items.length > 0) {\n      this.setState({\n        selection: this.props.selection.initialSelected\n      });\n      this.setState({\n        initialSelectionRendered: true\n      });\n    }\n  }\n\n  setSelection(newSelection) {\n    this.changeSelection(newSelection);\n  }\n\n  setTbody = tbody => {\n    // remove listeners from an existing element\n    this.removeLoadingListeners(); // update the ref\n\n    this.tbody = tbody; // if loading, add listeners\n\n    if (this.props.loading === true && tbody) {\n      this.addLoadingListeners(tbody);\n    }\n  };\n  addLoadingListeners = tbody => {\n    const listener = event => {\n      event.stopPropagation();\n      event.preventDefault();\n    };\n\n    ['mousedown', 'mouseup', 'mouseover', 'mouseout', 'mouseenter', 'mouseleave', 'click', 'dblclick', 'keydown', 'keyup', 'keypress'].forEach(event => {\n      tbody.addEventListener(event, listener, true);\n      this.cleanups.push(() => {\n        tbody.removeEventListener(event, listener, true);\n      });\n    });\n  };\n  removeLoadingListeners = () => {\n    this.cleanups.forEach(cleanup => cleanup());\n    this.cleanups.length = 0;\n  };\n\n  buildCriteria(props) {\n    const criteria = {};\n\n    if (hasPagination(props)) {\n      criteria.page = {\n        index: props.pagination.pageIndex,\n        size: props.pagination.pageSize\n      };\n    }\n\n    if (props.sorting) {\n      criteria.sort = props.sorting.sort;\n    }\n\n    return criteria;\n  }\n\n  changeSelection(selection) {\n    if (!this.props.selection) {\n      return;\n    }\n\n    this.setState({\n      selection\n    });\n\n    if (this.props.selection.onSelectionChange) {\n      this.props.selection.onSelectionChange(selection);\n    }\n  }\n\n  clearSelection() {\n    this.changeSelection([]);\n  }\n\n  onPageSizeChange(size) {\n    this.clearSelection();\n    const currentCriteria = this.buildCriteria(this.props);\n    const criteria = { ...currentCriteria,\n      page: {\n        index: 0,\n        // when page size changes, we take the user back to the first page\n        size\n      }\n    };\n\n    if (this.props.onChange) {\n      this.props.onChange(criteria);\n    }\n  }\n\n  onPageChange(index) {\n    this.clearSelection();\n    const currentCriteria = this.buildCriteria(this.props);\n    const criteria = { ...currentCriteria,\n      page: { ...currentCriteria.page,\n        index\n      }\n    };\n\n    if (this.props.onChange) {\n      this.props.onChange(criteria);\n    }\n  }\n\n  onColumnSortChange(column) {\n    this.clearSelection();\n    const currentCriteria = this.buildCriteria(this.props);\n    let direction = SortDirection.ASC;\n\n    if (currentCriteria && currentCriteria.sort && (currentCriteria.sort.field === column.field || currentCriteria.sort.field === column.name)) {\n      direction = SortDirection.reverse(currentCriteria.sort.direction);\n    }\n\n    const criteria = { ...currentCriteria,\n      // resetting the page if the criteria has one\n      page: !currentCriteria.page ? undefined : {\n        index: 0,\n        size: currentCriteria.page.size\n      },\n      sort: {\n        field: column.field || column.name,\n        direction\n      }\n    };\n\n    if (this.props.onChange) {\n      // @ts-ignore complex relationship between pagination's existence and criteria, the code logic ensures this is correctly maintained\n      this.props.onChange(criteria);\n    }\n  }\n\n  tableId = htmlIdGenerator('__table')();\n\n  render() {\n    const {\n      className,\n      loading,\n      items,\n      itemId,\n      columns,\n      pagination,\n      sorting,\n      selection,\n      onChange,\n      error,\n      noItemsMessage,\n      compressed,\n      itemIdToExpandedRowMap,\n      responsive,\n      isSelectable,\n      isExpandable,\n      hasActions,\n      rowProps,\n      cellProps,\n      tableCaption,\n      rowHeader,\n      tableLayout,\n      ...rest\n    } = this.props;\n    const classes = classNames('euiBasicTable', {\n      'euiBasicTable-loading': loading\n    }, className);\n    const table = this.renderTable();\n    const paginationBar = this.renderPaginationBar();\n    return <div className={classes} {...rest}>\n        {table}\n        {paginationBar}\n      </div>;\n  }\n\n  renderTable() {\n    const {\n      compressed,\n      responsive,\n      tableLayout\n    } = this.props;\n    const mobileHeader = responsive ? <EuiTableHeaderMobile>\n        <EuiFlexGroup responsive={false} justifyContent=\"spaceBetween\" alignItems=\"baseline\">\n          <EuiFlexItem grow={false}>{this.renderSelectAll(true)}</EuiFlexItem>\n          <EuiFlexItem grow={false}>{this.renderTableMobileSort()}</EuiFlexItem>\n        </EuiFlexGroup>\n      </EuiTableHeaderMobile> : undefined;\n    const caption = this.renderTableCaption();\n    const head = this.renderTableHead();\n    const body = this.renderTableBody();\n    const footer = this.renderTableFooter();\n    return <div>\n        {mobileHeader}\n        <EuiTable id={this.tableId} tableLayout={tableLayout} responsive={responsive} compressed={compressed}>\n          {caption}\n          {head}\n          {body}\n          {footer}\n        </EuiTable>\n      </div>;\n  }\n\n  renderTableMobileSort() {\n    const {\n      columns,\n      sorting\n    } = this.props;\n    const items = [];\n\n    if (!sorting) {\n      return null;\n    }\n\n    columns.forEach((column, index) => {\n      if (column.field && sorting.sort && !!sorting.enableAllColumns && column.sortable == null) {\n        column = { ...column,\n          sortable: true\n        };\n      }\n\n      if (!column.sortable || column.hideForMobile) {\n        return;\n      }\n\n      const sortDirection = this.resolveColumnSortDirection(column);\n      items.push({\n        name: column.name,\n        key: `_data_s_${column.field}_${index}`,\n        onSort: this.resolveColumnOnSort(column),\n        isSorted: !!sortDirection,\n        isSortAscending: sortDirection ? SortDirection.isAsc(sortDirection) : undefined\n      });\n    });\n    return items.length ? <EuiTableSortMobile items={items} /> : null;\n  }\n\n  renderTableCaption() {\n    const {\n      items,\n      pagination,\n      tableCaption\n    } = this.props;\n    let captionElement;\n\n    if (tableCaption) {\n      if (pagination) {\n        captionElement = <EuiI18n token=\"euiBasicTable.tableCaptionWithPagination\" default=\"{tableCaption}; Page {page} of {pageCount}.\" values={{\n          tableCaption,\n          page: pagination.pageIndex + 1,\n          pageCount: Math.ceil(pagination.totalItemCount / pagination.pageSize)\n        }} />;\n      } else {\n        captionElement = tableCaption;\n      }\n    } else {\n      if (pagination) {\n        if (pagination.totalItemCount > 0) {\n          captionElement = <EuiI18n token=\"euiBasicTable.tableAutoCaptionWithPagination\" default=\"This table contains {itemCount} rows out of {totalItemCount} rows; Page {page} of {pageCount}.\" values={{\n            totalItemCount: pagination.totalItemCount,\n            itemCount: items.length,\n            page: pagination.pageIndex + 1,\n            pageCount: Math.ceil(pagination.totalItemCount / pagination.pageSize)\n          }} />;\n        } else {\n          captionElement = <EuiI18n token=\"euiBasicTable.tableSimpleAutoCaptionWithPagination\" default=\"This table contains {itemCount} rows; Page {page} of {pageCount}.\" values={{\n            itemCount: items.length,\n            page: pagination.pageIndex + 1,\n            pageCount: Math.ceil(pagination.totalItemCount / pagination.pageSize)\n          }} />;\n        }\n      } else {\n        captionElement = <EuiI18n token=\"euiBasicTable.tableAutoCaptionWithoutPagination\" default=\"This table contains {itemCount} rows.\" values={{\n          itemCount: items.length\n        }} />;\n      }\n    }\n\n    return <EuiScreenReaderOnly>\n        <caption className=\"euiTableCaption\">\n          <EuiDelayRender>{captionElement}</EuiDelayRender>\n        </caption>\n      </EuiScreenReaderOnly>;\n  }\n\n  renderSelectAll = isMobile => {\n    const {\n      items,\n      selection\n    } = this.props;\n\n    if (!selection) {\n      return;\n    }\n\n    const selectableItems = items.filter(item => !selection.selectable || selection.selectable(item));\n    const checked = this.state.selection && selectableItems.length > 0 && this.state.selection.length === selectableItems.length;\n    const disabled = selectableItems.length === 0;\n\n    const onChange = event => {\n      if (event.target.checked) {\n        this.changeSelection(selectableItems);\n      } else {\n        this.changeSelection([]);\n      }\n    };\n\n    return <EuiI18n token=\"euiBasicTable.selectAllRows\" default=\"Select all rows\">\n        {selectAllRows => <EuiCheckbox id={`_selection_column-checkbox_${htmlIdGenerator()()}`} type={isMobile ? undefined : 'inList'} checked={checked} disabled={disabled} onChange={onChange} // Only add data-test-subj to one of the checkboxes\n      data-test-subj={isMobile ? undefined : 'checkboxSelectAll'} aria-label={selectAllRows} label={isMobile ? selectAllRows : null} />}\n      </EuiI18n>;\n  };\n\n  renderTableHead() {\n    const {\n      columns,\n      selection\n    } = this.props;\n    const headers = [];\n\n    if (selection) {\n      headers.push(<EuiTableHeaderCellCheckbox key=\"_selection_column_h\">\n          {this.renderSelectAll(false)}\n        </EuiTableHeaderCellCheckbox>);\n    }\n\n    columns.forEach((column, index) => {\n      const {\n        field,\n        width,\n        name,\n        align,\n        dataType,\n        sortable,\n        mobileOptions,\n        isMobileHeader,\n        hideForMobile,\n        readOnly,\n        description\n      } = column;\n      const columnAlign = align || this.getAlignForDataType(dataType); // actions column\n\n      if (column.actions) {\n        headers.push(<EuiTableHeaderCell key={`_actions_h_${index}`} align=\"right\" width={width} description={description} mobileOptions={mobileOptions}>\n            {name}\n          </EuiTableHeaderCell>);\n        return;\n      } // computed column\n\n\n      if (!column.field) {\n        const sorting = {}; // computed columns are only sortable if their `sortable` is a function\n\n        if (this.props.sorting && typeof sortable === 'function') {\n          const sortDirection = this.resolveColumnSortDirection(column);\n          sorting.isSorted = !!sortDirection;\n          sorting.isSortAscending = sortDirection ? SortDirection.isAsc(sortDirection) : undefined;\n          sorting.onSort = this.resolveColumnOnSort(column);\n          sorting.readOnly = this.props.sorting.readOnly || readOnly;\n        }\n\n        headers.push(<EuiTableHeaderCell key={`_computed_column_h_${index}`} align={columnAlign} width={width} mobileOptions={mobileOptions} data-test-subj={`tableHeaderCell_${name}_${index}`} description={description} {...sorting}>\n            {name}\n          </EuiTableHeaderCell>);\n        return;\n      } // field data column\n\n\n      const sorting = {};\n\n      if (this.props.sorting) {\n        if (this.props.sorting.sort && !!this.props.sorting.enableAllColumns && column.sortable == null) {\n          column = { ...column,\n            sortable: true\n          };\n        }\n\n        const {\n          sortable\n        } = column;\n\n        if (sortable) {\n          const sortDirection = this.resolveColumnSortDirection(column);\n          sorting.isSorted = !!sortDirection;\n          sorting.isSortAscending = sortDirection ? SortDirection.isAsc(sortDirection) : undefined;\n          sorting.onSort = this.resolveColumnOnSort(column);\n          sorting.readOnly = this.props.sorting.readOnly || readOnly;\n        }\n      }\n\n      headers.push(<EuiTableHeaderCell key={`_data_h_${field}_${index}`} align={columnAlign} width={width} isMobileHeader={isMobileHeader} hideForMobile={hideForMobile} mobileOptions={mobileOptions} data-test-subj={`tableHeaderCell_${field}_${index}`} description={description} {...sorting}>\n          {name}\n        </EuiTableHeaderCell>);\n    });\n    return <EuiTableHeader>{headers}</EuiTableHeader>;\n  }\n\n  renderTableFooter() {\n    const {\n      items,\n      columns,\n      pagination,\n      selection\n    } = this.props;\n    const footers = [];\n    let hasDefinedFooter = false;\n\n    if (selection) {\n      // Create an empty cell to compensate for additional selection column\n      footers.push(<EuiTableFooterCell key=\"_selection_column_f\">\n          {undefined}\n        </EuiTableFooterCell>);\n    }\n\n    columns.forEach(column => {\n      const footer = getColumnFooter(column, {\n        items,\n        pagination\n      });\n      const {\n        mobileOptions,\n        isMobileHeader,\n        field,\n        align\n      } = column;\n\n      if (mobileOptions && mobileOptions.only || isMobileHeader) {\n        return; // exclude columns that only exist for mobile headers\n      }\n\n      if (footer) {\n        footers.push(<EuiTableFooterCell key={`footer_${field}_${footers.length - 1}`} align={align}>\n            {footer}\n          </EuiTableFooterCell>);\n        hasDefinedFooter = true;\n      } else {\n        // Footer is undefined, so create an empty cell to preserve layout\n        footers.push(<EuiTableFooterCell key={`footer_empty_${footers.length - 1}`} align={align}>\n            {undefined}\n          </EuiTableFooterCell>);\n      }\n    });\n    return footers.length && hasDefinedFooter ? <EuiTableFooter>{footers}</EuiTableFooter> : null;\n  }\n\n  renderTableBody() {\n    if (this.props.error) {\n      return this.renderErrorBody(this.props.error);\n    }\n\n    const {\n      items\n    } = this.props;\n\n    if (items.length === 0) {\n      return this.renderEmptyBody();\n    }\n\n    const rows = items.map((item, index) => {\n      // if there's pagination the item's index must be adjusted to the where it is in the whole dataset\n      const tableItemIndex = hasPagination(this.props) ? this.props.pagination.pageIndex * this.props.pagination.pageSize + index : index;\n      return this.renderItemRow(item, tableItemIndex);\n    });\n    return <EuiTableBody bodyRef={this.setTbody}>{rows}</EuiTableBody>;\n  }\n\n  renderErrorBody(error) {\n    const colSpan = this.props.columns.length + (this.props.selection ? 1 : 0);\n    return <EuiTableBody>\n        <EuiTableRow>\n          <EuiTableRowCell align=\"center\" colSpan={colSpan} isMobileFullWidth={true}>\n            <EuiIcon type=\"minusInCircle\" color=\"danger\" /> {error}\n          </EuiTableRowCell>\n        </EuiTableRow>\n      </EuiTableBody>;\n  }\n\n  renderEmptyBody() {\n    const {\n      columns,\n      selection,\n      noItemsMessage\n    } = this.props;\n    const colSpan = columns.length + (selection ? 1 : 0);\n    return <EuiTableBody>\n        <EuiTableRow>\n          <EuiTableRowCell align=\"center\" colSpan={colSpan} isMobileFullWidth={true}>\n            {noItemsMessage}\n          </EuiTableRowCell>\n        </EuiTableRow>\n      </EuiTableBody>;\n  }\n\n  renderItemRow(item, rowIndex) {\n    const {\n      columns,\n      selection,\n      isSelectable,\n      hasActions,\n      rowHeader,\n      itemIdToExpandedRowMap = {},\n      isExpandable\n    } = this.props;\n    const cells = [];\n    const {\n      itemId: itemIdCallback\n    } = this.props;\n    const itemId = getItemId(item, itemIdCallback) != null ? getItemId(item, itemIdCallback) : rowIndex;\n    const selected = !selection ? false : this.state.selection && !!this.state.selection.find(selectedItem => getItemId(selectedItem, itemIdCallback) === itemId);\n    let calculatedHasSelection;\n\n    if (selection) {\n      cells.push(this.renderItemSelectionCell(itemId, item, selected));\n      calculatedHasSelection = true;\n    }\n\n    let calculatedHasActions;\n    columns.forEach((column, columnIndex) => {\n      if (column.actions) {\n        cells.push(this.renderItemActionsCell(itemId, item, column, columnIndex));\n        calculatedHasActions = true;\n      } else if (column.field) {\n        const fieldDataColumn = column;\n        cells.push(this.renderItemFieldDataCell(itemId, item, column, columnIndex, fieldDataColumn.field === rowHeader));\n      } else {\n        cells.push(this.renderItemComputedCell(itemId, item, column, columnIndex));\n      }\n    }); // Occupy full width of table, taking checkbox & mobile only columns into account.\n\n    let expandedRowColSpan = selection ? columns.length + 1 : columns.length;\n    const mobileOnlyCols = columns.reduce((num, column) => {\n      if (column.mobileOptions && column.mobileOptions.only) {\n        return num + 1;\n      }\n\n      return column.isMobileHeader ? num + 1 : num + 0; // BWC only\n    }, 0);\n    expandedRowColSpan = expandedRowColSpan - mobileOnlyCols; // We'll use the ID to associate the expanded row with the original.\n\n    const hasExpandedRow = itemIdToExpandedRowMap.hasOwnProperty(itemId);\n    const expandedRowId = hasExpandedRow ? `row_${itemId}_expansion` : undefined;\n    const expandedRow = hasExpandedRow ? <EuiTableRow id={expandedRowId} isExpandedRow={true} isSelectable={isSelectable}>\n        <EuiTableRowCell colSpan={expandedRowColSpan} textOnly={false}>\n          {itemIdToExpandedRowMap[itemId]}\n        </EuiTableRowCell>\n      </EuiTableRow> : undefined;\n    const {\n      rowProps: rowPropsCallback\n    } = this.props;\n    const rowProps = getRowProps(item, rowPropsCallback);\n    const row = <EuiTableRow aria-owns={expandedRowId} isSelectable={isSelectable == null ? calculatedHasSelection : isSelectable} isSelected={selected} hasActions={hasActions == null ? calculatedHasActions : hasActions} isExpandable={isExpandable} {...rowProps}>\n        {cells}\n      </EuiTableRow>;\n    return <Fragment key={`row_${itemId}`}>\n        {rowProps.onClick ? <EuiKeyboardAccessible>{row}</EuiKeyboardAccessible> : row}\n        {expandedRow}\n      </Fragment>;\n  }\n\n  renderItemSelectionCell(itemId, item, selected) {\n    const {\n      selection\n    } = this.props;\n    const key = `_selection_column_${itemId}`;\n    const checked = selected;\n    const disabled = selection.selectable && !selection.selectable(item);\n    const title = selection.selectableMessage && selection.selectableMessage(!disabled, item);\n\n    const onChange = event => {\n      if (event.target.checked) {\n        this.changeSelection([...this.state.selection, item]);\n      } else {\n        const {\n          itemId: itemIdCallback\n        } = this.props;\n        this.changeSelection(this.state.selection.reduce((selection, selectedItem) => {\n          if (getItemId(selectedItem, itemIdCallback) !== itemId) {\n            selection.push(selectedItem);\n          }\n\n          return selection;\n        }, []));\n      }\n    };\n\n    return <EuiTableRowCellCheckbox key={key}>\n        <EuiI18n token=\"euiBasicTable.selectThisRow\" default=\"Select this row\">\n          {selectThisRow => <EuiCheckbox id={`${key}-checkbox`} type=\"inList\" disabled={disabled} checked={checked} onChange={onChange} title={title || selectThisRow} aria-label={title || selectThisRow} data-test-subj={`checkboxSelectRow-${itemId}`} />}\n        </EuiI18n>\n      </EuiTableRowCellCheckbox>;\n  }\n\n  renderItemActionsCell(itemId, item, column, columnIndex) {\n    const actionEnabled = action => this.state.selection.length === 0 && (!action.enabled || action.enabled(item));\n\n    let actualActions = column.actions.filter(action => !action.available || action.available(item));\n\n    if (actualActions.length > 2) {\n      // if any of the actions `isPrimary`, add them inline as well, but only the first 2\n      const primaryActions = actualActions.filter(o => o.isPrimary);\n      actualActions = primaryActions.slice(0, 2); // if we have more than 1 action, we don't show them all in the cell, instead we\n      // put them all in a popover tool. This effectively means we can only have a maximum\n      // of one tool per row (it's either and normal action, or it's a popover that shows multiple actions)\n      //\n      // here we create a single custom action that triggers the popover with all the configured actions\n\n      actualActions.push({\n        name: 'All actions',\n        render: item => {\n          return <CollapsedItemActions actions={column.actions} itemId={itemId} item={item} actionEnabled={actionEnabled} />;\n        }\n      });\n    }\n\n    const tools = <ExpandedItemActions actions={actualActions} itemId={itemId} item={item} actionEnabled={actionEnabled} />;\n    const key = `record_actions_${itemId}_${columnIndex}`;\n    return <EuiTableRowCell showOnHover={true} key={key} align=\"right\" textOnly={false} hasActions={true}>\n        {tools}\n      </EuiTableRowCell>;\n  }\n\n  renderItemFieldDataCell(itemId, item, column, columnIndex, setScopeRow) {\n    const {\n      field,\n      render,\n      dataType\n    } = column;\n    const key = `_data_column_${field}_${itemId}_${columnIndex}`;\n    const contentRenderer = render || this.getRendererForDataType(dataType);\n    const value = get(item, field);\n    const content = contentRenderer(value, item);\n    return this.renderItemCell(item, column, key, content, setScopeRow);\n  }\n\n  renderItemComputedCell(itemId, item, column, columnIndex) {\n    const {\n      render\n    } = column;\n    const key = `_computed_column_${itemId}_${columnIndex}`;\n    const contentRenderer = render || this.getRendererForDataType();\n    const content = contentRenderer(item);\n    return this.renderItemCell(item, column, key, content, false);\n  }\n\n  renderItemCell(item, column, key, content, setScopeRow) {\n    const {\n      align,\n      render,\n      dataType,\n      isExpander,\n      textOnly,\n      name,\n      field,\n      description,\n      sortable,\n      footer,\n      mobileOptions,\n      ...rest\n    } = column;\n    const columnAlign = align || this.getAlignForDataType(dataType);\n    const {\n      cellProps: cellPropsCallback\n    } = this.props;\n    const cellProps = getCellProps(item, column, cellPropsCallback);\n    return <EuiTableRowCell key={key} align={columnAlign} isExpander={isExpander} textOnly={textOnly || !render} setScopeRow={setScopeRow} mobileOptions={{ ...mobileOptions,\n      render: mobileOptions && mobileOptions.render && mobileOptions.render(item),\n      header: mobileOptions && mobileOptions.header === false ? false : name\n    }} {...cellProps} {...rest}>\n        {content}\n      </EuiTableRowCell>;\n  }\n\n  resolveColumnSortDirection = column => {\n    const {\n      sorting\n    } = this.props;\n    const {\n      sortable,\n      field,\n      name\n    } = column;\n\n    if (!sorting || !sorting.sort || !sortable) {\n      return;\n    }\n\n    if (sorting.sort.field === field || sorting.sort.field === name) {\n      return sorting.sort.direction;\n    }\n  };\n  resolveColumnOnSort = column => {\n    const {\n      sorting\n    } = this.props;\n    const {\n      sortable,\n      name\n    } = column;\n\n    if (!sorting || !sortable) {\n      return;\n    }\n\n    if (!this.props.onChange) {\n      throw new Error(`BasicTable is configured to be sortable on column [${name}] but\n          [onChange] is not configured. This callback must be implemented to handle the sort requests`);\n    }\n\n    return () => this.onColumnSortChange(column);\n  };\n\n  getRendererForDataType(dataType = 'auto') {\n    const profile = dataTypesProfiles[dataType];\n\n    if (!profile) {\n      throw new Error(`Unknown dataType [${dataType}]. The supported data types are [${DATA_TYPES.join(', ')}]`);\n    }\n\n    return profile.render;\n  }\n\n  getAlignForDataType(dataType = 'auto') {\n    const profile = dataTypesProfiles[dataType];\n\n    if (!profile) {\n      throw new Error(`Unknown dataType [${dataType}]. The supported data types are [${DATA_TYPES.join(', ')}]`);\n    }\n\n    return profile.align;\n  }\n\n  renderPaginationBar() {\n    const {\n      error,\n      pagination,\n      tableCaption,\n      onChange\n    } = this.props;\n\n    if (!error && pagination && pagination.totalItemCount > 0) {\n      if (!onChange) {\n        throw new Error(`The Basic Table is configured with pagination but [onChange] is\n        not configured. This callback must be implemented to handle pagination changes`);\n      }\n\n      let ariaLabel = undefined;\n\n      if (tableCaption) {\n        ariaLabel = <EuiI18n token=\"euiBasicTable.tablePagination\" default=\"Pagination for preceding table: {tableCaption}\" values={{\n          tableCaption\n        }} />;\n      }\n\n      return <PaginationBar aria-controls={this.tableId} pagination={pagination} onPageSizeChange={this.onPageSizeChange.bind(this)} onPageChange={this.onPageChange.bind(this)} aria-label={ariaLabel} />;\n    }\n  }\n\n}\nEuiBasicTable.propTypes = {\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n\n  /**\n     * Describes how to extract a unique ID from each item, used for selections & expanded rows\n     */\n\n  /**\n     * Describes how to extract a unique ID from each item, used for selections & expanded rows\n     */\n  itemId: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.number.isRequired, PropTypes.func.isRequired]),\n\n  /**\n     * Row expansion uses the itemId prop to identify each row\n     */\n\n  /**\n     * Row expansion uses the itemId prop to identify each row\n     */\n  itemIdToExpandedRowMap: PropTypes.shape({}),\n\n  /**\n     * A list of objects to who in the table - an item per row\n     */\n\n  /**\n     * A list of objects to who in the table - an item per row\n     */\n  items: PropTypes.arrayOf(PropTypes.any.isRequired),\n\n  /**\n     * Applied to `EuiTableRowCell`\n     */\n\n  /**\n     * Applied to `EuiTableRowCell`\n     */\n  cellProps: PropTypes.oneOfType([PropTypes.any.isRequired, PropTypes.func.isRequired]),\n\n  /**\n     * An array of one of the objects: #EuiTableFieldDataColumnType, #EuiTableComputedColumnType or #EuiTableActionsColumnType.\n     */\n\n  /**\n     * An array of one of the objects: #EuiTableFieldDataColumnType, #EuiTableComputedColumnType or #EuiTableActionsColumnType.\n     */\n  columns: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.shape({\n    /**\n       * A field of the item (may be a nested field)\n       */\n    field: PropTypes.oneOfType([PropTypes.any.isRequired, PropTypes.string.isRequired]).isRequired,\n    // supports outer.inner key paths\n\n    /**\n       * The display name of the column\n       */\n    name: PropTypes.node.isRequired,\n\n    /**\n       * A description of the column (will be presented as a title over the column header)\n       */\n    description: PropTypes.string,\n\n    /**\n       * Describes the data types of the displayed value (serves as a rendering hint for the table)\n       */\n    dataType: PropTypes.oneOf([\"auto\", \"string\", \"number\", \"boolean\", \"date\"]),\n\n    /**\n       * A CSS width property. Hints for the required width of the column (e.g. \"30%\", \"100px\", etc..)\n       */\n    width: PropTypes.string,\n\n    /**\n       * Defines whether the user can sort on this column. If a function is provided, this function returns the value to sort against\n       */\n    sortable: PropTypes.oneOfType([PropTypes.bool.isRequired, PropTypes.func.isRequired]),\n    isExpander: PropTypes.bool,\n    textOnly: PropTypes.bool,\n\n    /**\n       * Defines the horizontal alignment of the column\n       */\n    align: PropTypes.oneOf([\"left\", \"right\", \"center\"]),\n\n    /**\n       * Indicates whether this column should truncate its content when it doesn't fit\n       */\n    truncateText: PropTypes.bool,\n    isMobileHeader: PropTypes.bool,\n    mobileOptions: PropTypes.shape({\n      show: PropTypes.bool,\n      only: PropTypes.bool,\n      render: PropTypes.func,\n      header: PropTypes.bool\n    }),\n    hideForMobile: PropTypes.bool,\n\n    /**\n       * Describe a custom renderer function for the content\n       */\n    render: PropTypes.func,\n\n    /**\n       * Content to display in the footer beneath this column\n       */\n    footer: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.element.isRequired, PropTypes.func.isRequired]),\n\n    /**\n       * Disables the user's ability to change the sort but still shows the current direction\n       */\n    readOnly: PropTypes.bool,\n    className: PropTypes.string,\n    \"aria-label\": PropTypes.string,\n    \"data-test-subj\": PropTypes.string\n  }).isRequired, PropTypes.shape({\n    /**\n       * A function that computes the value for each item and renders it\n       */\n    render: PropTypes.func.isRequired,\n\n    /**\n       * The display name of the column\n       */\n    name: PropTypes.node,\n\n    /**\n       * A description of the column (will be presented as a title over the column header\n       */\n    description: PropTypes.string,\n\n    /**\n       * If provided, allows this column to be sorted on. Must return the value to sort against.\n       */\n    sortable: PropTypes.func,\n\n    /**\n       * A CSS width property. Hints for the required width of the column\n       */\n    width: PropTypes.string,\n\n    /**\n       * Indicates whether this column should truncate its content when it doesn't fit\n       */\n    truncateText: PropTypes.bool,\n    isExpander: PropTypes.bool,\n    align: PropTypes.oneOf([\"left\", \"right\", \"center\"]),\n\n    /**\n       * Disables the user's ability to change the sort but still shows the current direction\n       */\n    readOnly: PropTypes.bool,\n    className: PropTypes.string,\n    \"aria-label\": PropTypes.string,\n    \"data-test-subj\": PropTypes.string\n  }).isRequired, PropTypes.shape({\n    /**\n       * An array of one of the objects: #DefaultItemAction or #CustomItemAction\n       */\n    actions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.shape({\n      /**\n         * The type of action\n         */\n      type: PropTypes.oneOfType([PropTypes.oneOf([\"button\"]), PropTypes.oneOf([\"icon\"]).isRequired]),\n\n      /**\n         * Defines the color of the button\n         */\n      color: PropTypes.oneOfType([PropTypes.oneOfType([PropTypes.oneOf([\"primary\", \"danger\", \"text\", \"ghost\", \"success\", \"warning\"]).isRequired, PropTypes.func.isRequired]), PropTypes.oneOfType([PropTypes.oneOf([\"accent\", \"danger\", \"ghost\", \"primary\", \"subdued\", \"success\", \"text\", \"warning\"]).isRequired, PropTypes.func.isRequired])]),\n\n      /**\n         * The display name of the action (will be the button caption)\n         */\n\n      /**\n         * The display name of the action (will be the button caption)\n         */\n      name: PropTypes.oneOfType([PropTypes.node.isRequired, PropTypes.func.isRequired]).isRequired,\n\n      /**\n         * Describes the action (will be the button title)\n         */\n\n      /**\n         * Describes the action (will be the button title)\n         */\n      description: PropTypes.string.isRequired,\n\n      /**\n         * A handler function to execute the action\n         */\n\n      /**\n         * A handler function to execute the action\n         */\n      onClick: PropTypes.func,\n      href: PropTypes.string,\n      target: PropTypes.string,\n\n      /**\n         * A callback function that determines whether the action is available\n         */\n\n      /**\n         * A callback function that determines whether the action is available\n         */\n      available: PropTypes.func,\n\n      /**\n         * A callback function that determines whether the action is enabled\n         */\n\n      /**\n         * A callback function that determines whether the action is enabled\n         */\n      enabled: PropTypes.func,\n      isPrimary: PropTypes.bool,\n      \"data-test-subj\": PropTypes.string,\n\n      /**\n         * Associates an icon with the button\n         */\n      icon: PropTypes.oneOfType([PropTypes.oneOf([\"accessibility\", \"addDataApp\", \"advancedSettingsApp\", \"aggregate\", \"alert\", \"analyzeEvent\", \"annotation\", \"apmApp\", \"apmTrace\", \"apps\", \"appSearchApp\", \"arrowDown\", \"arrowLeft\", \"arrowRight\", \"arrowUp\", \"asterisk\", \"auditbeatApp\", \"beaker\", \"bell\", \"bellSlash\", \"bolt\", \"boxesHorizontal\", \"boxesVertical\", \"branch\", \"broom\", \"brush\", \"bug\", \"bullseye\", \"calendar\", \"canvasApp\", \"codeApp\", \"check\", \"checkInCircleFilled\", \"cheer\", \"classificationJob\", \"clock\", \"cloudDrizzle\", \"cloudStormy\", \"cloudSunny\", \"color\", \"compute\", \"console\", \"consoleApp\", \"continuityAbove\", \"continuityAboveBelow\", \"continuityBelow\", \"continuityWithin\", \"controlsHorizontal\", \"controlsVertical\", \"copy\", \"copyClipboard\", \"createAdvancedJob\", \"createMultiMetricJob\", \"createPopulationJob\", \"createSingleMetricJob\", \"cross\", \"crossClusterReplicationApp\", \"crosshairs\", \"crossInACircleFilled\", \"currency\", \"cut\", \"dashboardApp\", \"database\", \"dataVisualizer\", \"devToolsApp\", \"discoverApp\", \"document\", \"documentation\", \"documentEdit\", \"documents\", \"dot\", \"download\", \"editorAlignCenter\", \"editorAlignLeft\", \"editorAlignRight\", \"editorBold\", \"editorCodeBlock\", \"editorComment\", \"editorDistributeHorizontal\", \"editorDistributeVertical\", \"editorHeading\", \"editorItalic\", \"editorItemAlignLeft\", \"editorItemAlignBottom\", \"editorItemAlignCenter\", \"editorItemAlignMiddle\", \"editorItemAlignRight\", \"editorItemAlignTop\", \"editorLink\", \"editorOrderedList\", \"editorPositionBottomLeft\", \"editorPositionBottomRight\", \"editorPositionTopLeft\", \"editorPositionTopRight\", \"editorRedo\", \"editorStrike\", \"editorTable\", \"editorUnderline\", \"editorUndo\", \"editorUnorderedList\", \"email\", \"empty\", \"emsApp\", \"eql\", \"eraser\", \"exit\", \"expand\", \"expandMini\", \"exportAction\", \"eye\", \"eyeClosed\", \"faceHappy\", \"faceNeutral\", \"faceSad\", \"filebeatApp\", \"filter\", \"flag\", \"fold\", \"folderCheck\", \"folderClosed\", \"folderExclamation\", \"folderOpen\", \"frameNext\", \"framePrevious\", \"fullScreen\", \"fullScreenExit\", \"function\", \"gear\", \"gisApp\", \"glasses\", \"globe\", \"grab\", \"grabHorizontal\", \"graphApp\", \"grid\", \"grokApp\", \"heart\", \"heartbeatApp\", \"heatmap\", \"help\", \"home\", \"iInCircle\", \"image\", \"importAction\", \"indexClose\", \"indexEdit\", \"indexFlush\", \"indexManagementApp\", \"indexMapping\", \"indexOpen\", \"indexPatternApp\", \"indexRollupApp\", \"indexRuntime\", \"indexSettings\", \"inputOutput\", \"inspect\", \"invert\", \"ip\", \"keyboardShortcut\", \"kqlField\", \"kqlFunction\", \"kqlOperand\", \"kqlSelector\", \"kqlValue\", \"layers\", \"lensApp\", \"link\", \"list\", \"listAdd\", \"lock\", \"lockOpen\", \"logsApp\", \"logoAerospike\", \"logoApache\", \"logoAppSearch\", \"logoAWS\", \"logoAWSMono\", \"logoAzure\", \"logoAzureMono\", \"logoBeats\", \"logoBusinessAnalytics\", \"logoCeph\", \"logoCloud\", \"logoCloudEnterprise\", \"logoCode\", \"logoCodesandbox\", \"logoCouchbase\", \"logoDocker\", \"logoDropwizard\", \"logoElastic\", \"logoElasticsearch\", \"logoElasticStack\", \"logoEnterpriseSearch\", \"logoEtcd\", \"logoGCP\", \"logoGCPMono\", \"logoGithub\", \"logoGmail\", \"logoGolang\", \"logoGoogleG\", \"logoHAproxy\", \"logoIBM\", \"logoIBMMono\", \"logoKafka\", \"logoKibana\", \"logoKubernetes\", \"logoLogging\", \"logoLogstash\", \"logoMaps\", \"logoMemcached\", \"logoMetrics\", \"logoMongodb\", \"logoMySQL\", \"logoNginx\", \"logoObservability\", \"logoOsquery\", \"logoPhp\", \"logoPostgres\", \"logoPrometheus\", \"logoRabbitmq\", \"logoRedis\", \"logoSecurity\", \"logoSiteSearch\", \"logoSketch\", \"logoSlack\", \"logoUptime\", \"logoWebhook\", \"logoWindows\", \"logoWorkplaceSearch\", \"logstashFilter\", \"logstashIf\", \"logstashInput\", \"logstashOutput\", \"logstashQueue\", \"machineLearningApp\", \"magnet\", \"magnifyWithMinus\", \"magnifyWithPlus\", \"managementApp\", \"mapMarker\", \"memory\", \"menu\", \"menuDown\", \"menuLeft\", \"menuRight\", \"menuUp\", \"merge\", \"metricbeatApp\", \"metricsApp\", \"minimize\", \"minus\", \"minusInCircle\", \"minusInCircleFilled\", \"mobile\", \"monitoringApp\", \"moon\", \"nested\", \"node\", \"notebookApp\", \"number\", \"offline\", \"online\", \"outlierDetectionJob\", \"package\", \"packetbeatApp\", \"pageSelect\", \"pagesSelect\", \"partial\", \"paperClip\", \"pause\", \"pencil\", \"percent\", \"pin\", \"pinFilled\", \"pipelineApp\", \"play\", \"playFilled\", \"plus\", \"plusInCircle\", \"plusInCircleFilled\", \"popout\", \"push\", \"questionInCircle\", \"quote\", \"recentlyViewedApp\", \"refresh\", \"regressionJob\", \"reporter\", \"reportingApp\", \"returnKey\", \"save\", \"savedObjectsApp\", \"scale\", \"search\", \"searchProfilerApp\", \"securityAnalyticsApp\", \"securityApp\", \"securitySignal\", \"securitySignalDetected\", \"securitySignalResolved\", \"shard\", \"share\", \"snowflake\", \"sortable\", \"sortDown\", \"sortLeft\", \"sortRight\", \"sortUp\", \"spacesApp\", \"sqlApp\", \"starEmpty\", \"starEmptySpace\", \"starFilled\", \"starFilledSpace\", \"starMinusEmpty\", \"starMinusFilled\", \"starPlusEmpty\", \"starPlusFilled\", \"stats\", \"stop\", \"stopFilled\", \"stopSlash\", \"storage\", \"string\", \"submodule\", \"swatchInput\", \"symlink\", \"tableOfContents\", \"tableDensityExpanded\", \"tableDensityCompact\", \"tableDensityNormal\", \"tag\", \"tear\", \"temperature\", \"timeline\", \"timelionApp\", \"timeslider\", \"training\", \"trash\", \"upgradeAssistantApp\", \"uptimeApp\", \"unfold\", \"unlink\", \"user\", \"users\", \"usersRolesApp\", \"vector\", \"videoPlayer\", \"visArea\", \"visAreaStacked\", \"visBarHorizontal\", \"visBarHorizontalStacked\", \"visBarVertical\", \"visBarVerticalStacked\", \"visGauge\", \"visGoal\", \"visLine\", \"visMapCoordinate\", \"visMapRegion\", \"visMetric\", \"visPie\", \"visTable\", \"visTagCloud\", \"visText\", \"visTimelion\", \"visualizeApp\", \"visVega\", \"visVisualBuilder\", \"watchesApp\", \"wordWrap\", \"wordWrapDisabled\", \"workplaceSearchApp\", \"wrench\", \"tokenClass\", \"tokenProperty\", \"tokenEnum\", \"tokenVariable\", \"tokenMethod\", \"tokenAnnotation\", \"tokenException\", \"tokenInterface\", \"tokenParameter\", \"tokenField\", \"tokenElement\", \"tokenFunction\", \"tokenBoolean\", \"tokenString\", \"tokenArray\", \"tokenNumber\", \"tokenConstant\", \"tokenObject\", \"tokenEvent\", \"tokenKey\", \"tokenNull\", \"tokenStruct\", \"tokenPackage\", \"tokenOperator\", \"tokenEnumMember\", \"tokenRepo\", \"tokenSymbol\", \"tokenFile\", \"tokenModule\", \"tokenNamespace\", \"tokenDate\", \"tokenIP\", \"tokenNested\", \"tokenAlias\", \"tokenShape\", \"tokenGeo\", \"tokenRange\", \"tokenBinary\", \"tokenJoin\", \"tokenPercolator\", \"tokenFlattened\", \"tokenRankFeature\", \"tokenRankFeatures\", \"tokenKeyword\", \"tokenCompletionSuggester\", \"tokenDenseVector\", \"tokenText\", \"tokenTokenCount\", \"tokenSearchType\", \"tokenHistogram\"]).isRequired, PropTypes.func.isRequired])\n    }).isRequired, PropTypes.shape({\n      /**\n         * The function that renders the action. Note that the returned node is expected to have `onFocus` and `onBlur` functions\n         */\n      render: PropTypes.func.isRequired,\n\n      /**\n         * A callback that defines whether the action is available\n         */\n      available: PropTypes.func,\n\n      /**\n         * A callback that defines whether the action is enabled\n         */\n      enabled: PropTypes.func,\n      isPrimary: PropTypes.bool\n    }).isRequired]).isRequired).isRequired,\n\n    /**\n       * The display name of the column\n       */\n    name: PropTypes.node,\n\n    /**\n       * A description of the column (will be presented as a title over the column header\n       */\n    description: PropTypes.string,\n\n    /**\n       * A CSS width property. Hints for the required width of the column\n       */\n    width: PropTypes.string\n  }).isRequired]).isRequired),\n\n  /**\n     * Error message to display\n     */\n\n  /**\n     * Error message to display\n     */\n  error: PropTypes.string,\n\n  /**\n     * Describes the content of the table. If not specified, the caption will be \"This table contains {itemCount} rows.\"\n     */\n\n  /**\n     * Describes the content of the table. If not specified, the caption will be \"This table contains {itemCount} rows.\"\n     */\n  tableCaption: PropTypes.string,\n\n  /**\n     * Indicates which column should be used as the identifying cell in each row. Should match a \"field\" prop in FieldDataColumn\n     */\n\n  /**\n     * Indicates which column should be used as the identifying cell in each row. Should match a \"field\" prop in FieldDataColumn\n     */\n  rowHeader: PropTypes.string,\n  hasActions: PropTypes.bool,\n  isExpandable: PropTypes.bool,\n  isSelectable: PropTypes.bool,\n\n  /**\n     * Provides an infinite loading indicator\n     */\n\n  /**\n     * Provides an infinite loading indicator\n     */\n  loading: PropTypes.bool,\n\n  /**\n     * Message to display if table is empty\n     */\n\n  /**\n     * Message to display if table is empty\n     */\n  noItemsMessage: PropTypes.node,\n\n  /**\n     * Called whenever pagination or sorting changes (this property is required when either pagination or sorting is configured). See #Criteria or #CriteriaWithPagination\n     */\n  onChange: PropTypes.func,\n\n  /**\n     * Configures #Pagination\n     */\n  pagination: PropTypes.oneOfType([PropTypes.oneOf([undefined]), PropTypes.shape({\n    /**\n       * The current page (zero-based) index\n       */\n    pageIndex: PropTypes.number.isRequired,\n\n    /**\n       * The maximum number of items that can be shown in a single page\n       */\n    pageSize: PropTypes.number.isRequired,\n\n    /**\n       * The total number of items the page is \"sliced\" of\n       */\n    totalItemCount: PropTypes.number.isRequired,\n\n    /**\n       * Configures the page size dropdown options\n       */\n    pageSizeOptions: PropTypes.arrayOf(PropTypes.number.isRequired),\n\n    /**\n       * Hides the page size dropdown\n       */\n    hidePerPageOptions: PropTypes.bool\n  })]),\n\n  /**\n     * If true, will convert table to cards in mobile view\n     */\n\n  /**\n     * If true, will convert table to cards in mobile view\n     */\n  responsive: PropTypes.bool,\n\n  /**\n     * Applied to `EuiTableRow`\n     */\n\n  /**\n     * Applied to `EuiTableRow`\n     */\n  rowProps: PropTypes.oneOfType([PropTypes.any.isRequired, PropTypes.func.isRequired]),\n\n  /**\n     * Configures #EuiTableSelectionType\n     */\n\n  /**\n     * Configures #EuiTableSelectionType\n     */\n  selection: PropTypes.shape({\n    /**\n       * A callback that will be called whenever the item selection changes\n       */\n    onSelectionChange: PropTypes.func,\n\n    /**\n       * A callback that is called per item to indicate whether it is selectable\n       */\n    selectable: PropTypes.func,\n\n    /**\n       * A callback that is called per item to retrieve a message for its selectable state.We display these messages as a tooltip on an unselectable checkbox\n       */\n    selectableMessage: PropTypes.func,\n    initialSelected: PropTypes.arrayOf(PropTypes.any.isRequired)\n  }),\n\n  /**\n     * Configures #EuiTableSortingType\n     */\n\n  /**\n     * Configures #EuiTableSortingType\n     */\n  sorting: PropTypes.shape({\n    /**\n       * Indicates the property/field to sort on\n       */\n    sort: PropTypes.shape({\n      field: PropTypes.any.isRequired,\n      direction: PropTypes.oneOfType([PropTypes.any.isRequired, PropTypes.any.isRequired]).isRequired\n    }),\n\n    /**\n       * Enables/disables unsorting of table columns. Supported by EuiInMemoryTable.\n       */\n    allowNeutralSort: PropTypes.bool,\n\n    /**\n       * Enables the default sorting ability for each column.\n       */\n    enableAllColumns: PropTypes.bool,\n\n    /**\n       * Disables the user's ability to change the sort but still shows the current direction\n       */\n    readOnly: PropTypes.bool\n  }),\n\n  /**\n     * Sets the table-layout CSS property. Note that auto tableLayout prevents truncateText from working properly.\n     */\n\n  /**\n     * Sets the table-layout CSS property. Note that auto tableLayout prevents truncateText from working properly.\n     */\n  tableLayout: PropTypes.oneOf([\"fixed\", \"auto\"]),\n\n  /**\n     * Applied to table cells => Any cell using render function will set this to be false, leading to unnecessary word breaks. Apply textOnly: true in order to ensure it breaks properly\n     */\n\n  /**\n     * Applied to table cells => Any cell using render function will set this to be false, leading to unnecessary word breaks. Apply textOnly: true in order to ensure it breaks properly\n     */\n  textOnly: PropTypes.bool\n};\n\ntry {\n  EuiBasicTable.__docgenInfo = {\n    description: '',\n    displayName: 'EuiBasicTable',\n    methods: [],\n    props: {\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: 'Defines a string value that labels the current element.\\n' + '@see aria-labelledby.',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'data-test-subj': {\n        defaultValue: null,\n        description: '',\n        name: 'data-test-subj',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      itemId: {\n        defaultValue: null,\n        description: 'Describes how to extract a unique ID from each item, used for selections & expanded rows',\n        name: 'itemId',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: 'ItemId<T>'\n        }\n      },\n      itemIdToExpandedRowMap: {\n        defaultValue: null,\n        description: 'Row expansion uses the itemId prop to identify each row',\n        name: 'itemIdToExpandedRowMap',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: 'ItemIdToExpandedRowMap'\n        }\n      },\n      items: {\n        defaultValue: null,\n        description: 'A list of objects to who in the table - an item per row',\n        name: 'items',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: true,\n        type: {\n          name: 'T[]'\n        }\n      },\n      cellProps: {\n        defaultValue: null,\n        description: 'Applied to `EuiTableRowCell`',\n        name: 'cellProps',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: 'object | CellPropsCallback<T>'\n        }\n      },\n      columns: {\n        defaultValue: null,\n        description: 'An array of one of the objects: #EuiTableFieldDataColumnType, #EuiTableComputedColumnType or #EuiTableActionsColumnType.',\n        name: 'columns',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: true,\n        type: {\n          name: 'EuiBasicTableColumn<T>[]'\n        }\n      },\n      error: {\n        defaultValue: null,\n        description: 'Error message to display',\n        name: 'error',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      tableCaption: {\n        defaultValue: null,\n        description: 'Describes the content of the table. If not specified, the caption will be \"This table contains {itemCount} rows.\"',\n        name: 'tableCaption',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      rowHeader: {\n        defaultValue: null,\n        description: 'Indicates which column should be used as the identifying cell in each row. Should match a \"field\" prop in FieldDataColumn',\n        name: 'rowHeader',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      hasActions: {\n        defaultValue: null,\n        description: '',\n        name: 'hasActions',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      isExpandable: {\n        defaultValue: null,\n        description: '',\n        name: 'isExpandable',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      isSelectable: {\n        defaultValue: null,\n        description: '',\n        name: 'isSelectable',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      loading: {\n        defaultValue: null,\n        description: 'Provides an infinite loading indicator',\n        name: 'loading',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      noItemsMessage: {\n        defaultValue: {\n          value: 'No items found'\n        },\n        description: 'Message to display if table is empty',\n        name: 'noItemsMessage',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: 'ReactNode'\n        }\n      },\n      onChange: {\n        defaultValue: null,\n        description: 'Called whenever pagination or sorting changes (this property is required when either pagination or sorting is configured). See #Criteria or #CriteriaWithPagination',\n        name: 'onChange',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: '((criteria: Criteria<T>) => void) | ((criteria: CriteriaWithPagination<T>) => void)'\n        }\n      },\n      pagination: {\n        defaultValue: null,\n        description: 'Configures #Pagination',\n        name: 'pagination',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: 'Pagination'\n        }\n      },\n      responsive: {\n        defaultValue: {\n          value: 'true'\n        },\n        description: 'If true, will convert table to cards in mobile view',\n        name: 'responsive',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      rowProps: {\n        defaultValue: null,\n        description: 'Applied to `EuiTableRow`',\n        name: 'rowProps',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: 'object | RowPropsCallback<T>'\n        }\n      },\n      selection: {\n        defaultValue: null,\n        description: 'Configures #EuiTableSelectionType',\n        name: 'selection',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: 'EuiTableSelectionType<T>'\n        }\n      },\n      sorting: {\n        defaultValue: null,\n        description: 'Configures #EuiTableSortingType',\n        name: 'sorting',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: 'EuiTableSortingType<T>'\n        }\n      },\n      tableLayout: {\n        defaultValue: {\n          value: 'fixed'\n        },\n        description: 'Sets the table-layout CSS property. Note that auto tableLayout prevents truncateText from working properly.',\n        name: 'tableLayout',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"auto\" | \"fixed\"',\n          value: [{\n            value: '\"auto\"'\n          }, {\n            value: '\"fixed\"'\n          }]\n        }\n      },\n      textOnly: {\n        defaultValue: null,\n        description: 'Applied to table cells => Any cell using render function will set this to be false, leading to unnecessary word breaks. Apply textOnly: true in order to ensure it breaks properly',\n        name: 'textOnly',\n        parent: {\n          fileName: 'eui/src/components/basic_table/basic_table.tsx',\n          name: 'BasicTableProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      compressed: {\n        defaultValue: null,\n        description: '',\n        name: 'compressed',\n        parent: {\n          fileName: 'eui/src/components/table/table.tsx',\n          name: 'EuiTableProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      }\n    },\n    extendedInterfaces: ['CommonProps', 'HTMLAttributes', 'AriaAttributes', 'DOMAttributes', 'BasicTableProps', 'TableHTMLAttributes', 'EuiTableProps']\n  };\n} catch (e) {}"]}]}