{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src-docs\\src\\views\\markdown_editor\\markdown_plugin_example.js","dependencies":[{"path":"D:\\work\\eui\\src-docs\\src\\views\\markdown_editor\\markdown_plugin_example.js","mtime":1649070093204},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src-docs/src/views/markdown_editor/markdown_plugin_example.js"],"names":["React","Fragment","renderToHtml","GuideSectionTypes","EuiMarkdownEditor","EuiText","EuiTitle","EuiSpacer","EuiDescriptionList","EuiHorizontalRule","EuiCodeBlock","EuiCode","EuiLink","Link","MarkdownEditorWithPlugins","markdownEditorWithPluginsSource","require","markdownEditorWithPluginsHtml","pluginSnippet","uiPluginSnippet","pluginConcepts","title","description","uiPluginConcepts","MarkdownPluginExample","beta","intro","sections","wrapText","text","style","width","source","type","JS","code","HTML","props","demo"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,SAASC,iBAAT,QAAkC,kBAAlC;AAEA,SACEC,iBADF,EAEEC,OAFF,EAGEC,QAHF,EAIEC,SAJF,EAKEC,kBALF,EAMEC,iBANF,EAOEC,YAPF,EAQEC,OARF,EASEC,OATF,QAUO,4BAVP;AAYA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,yBAAP,MAAsC,gCAAtC;;AACA,IAAMC,+BAA+B,GAAGC,OAAO,CAAC,6CAAD,CAA/C;;AACA,IAAMC,6BAA6B,GAAGf,YAAY,CAACY,yBAAD,CAAlD;AAEA,IAAMI,aAAa,4VAAnB;AAcA,IAAMC,eAAe,4QAArB;AAUA,IAAMC,cAAc,GAAG,CACrB;AACEC,EAAAA,KAAK,EAAE,UADT;AAEEC,EAAAA,WAAW,eACT,gEACe,yCADf;AAHJ,CADqB,EAUrB;AACED,EAAAA,KAAK,EAAE,mBADT;AAEEC,EAAAA,WAAW,eACT,wGACqE,GADrE,eAEE,+CAFF;AAHJ,CAVqB,EAmBrB;AACED,EAAAA,KAAK,EAAE,sBADT;AAEEC,EAAAA,WAAW,eACT,yFACwC,+CADxC,aACyE,GADzE,eAEE,iDAFF;AAHJ,CAnBqB,CAAvB;AA8BA,IAAMC,gBAAgB,GAAG,CACvB;AACEF,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,WAAW,eACT,oFACmC,mDADnC;AAHJ,CADuB,EAYvB;AACED,EAAAA,KAAK,EAAE,QADT;AAEEC,EAAAA,WAAW,eACT,2DACU,4CADV,2BACwC,gDADxC,mHAGqB,6CAHrB,uBAGgD,gDAHhD;AAHJ,CAZuB,EAuBvB;AACED,EAAAA,KAAK,EAAE,QADT;AAEEC,EAAAA,WAAW,eACT,yIAEkB,wEAFlB;AAHJ,CAvBuB,EAgCvB;AACED,EAAAA,KAAK,EAAE,YADT;AAEEC,EAAAA,WAAW,eACT,yDACQ,6CADR;AAHJ,CAhCuB,EAyCvB;AACED,EAAAA,KAAK,EAAE,UADT;AAEEC,EAAAA,WAAW,eACT;AAHJ,CAzCuB,CAAzB;AAqDA,OAAO,IAAME,qBAAqB,GAAG;AACnCH,EAAAA,KAAK,EAAE,kBAD4B;AAEnCI,EAAAA,IAAI,EAAE,IAF6B;AAGnCC,EAAAA,KAAK,eACH,oBAAC,OAAD,qBACE,uCACO,GADP,eAEE,iDACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC;AAAT,yBADF,CAFF,EAIY,GAJZ,SAKM,GALN,eAME,iDACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC;AAAT,yBADF,CANF,EAQY,GARZ,6HAUsD,GAVtD,eAWE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,uCAAd;AAAsD,IAAA,MAAM,EAAC;AAA7D,kBAXF,EAaa,GAbb,iCAc8B,GAd9B,eAeE,oBAAC,OAAD;AACE,IAAA,IAAI,EAAC,4CADP;AAEE,IAAA,MAAM,EAAC;AAFT,cAfF,EAmBa,GAnBb,sEAoBwE,GApBxE,eAqBE,8CArBF,wBAqB+B,iDArB/B,iMAwBsB,yCAxBtB,8DADF,eA4BE,4EAC4C,GAD5C,eAEE,wDAFF,6LA5BF,CAJiC;AA0CnCC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,QAAQ,EAAE,KADZ;AAEEC,IAAAA,IAAI,eACF,uDACE,oBAAC,QAAD,qBACE,qDADF,CADF,eAIE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC;AAAhB,MAJF,eAKE,oBAAC,OAAD,qBACE,mDACK,yDADL,+EADF,CALF,eAWE,oBAAC,SAAD,OAXF,eAYE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,GAAnB;AAAuB,MAAA,QAAQ,EAAC;AAAhC,OACGX,aADH,CAZF,eAeE,oBAAC,SAAD,OAfF,eAgBE,oBAAC,kBAAD;AACE,MAAA,UAAU,MADZ;AAEE,MAAA,SAAS,EAAEE,cAFb;AAGE,MAAA,IAAI,EAAC,kBAHP;AAIE,MAAA,UAAU,EAAE;AAAEU,QAAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AAAT,OAJd;AAKE,MAAA,gBAAgB,EAAE;AAAED,QAAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AAAT;AALpB,MAhBF,eAuBE,oBAAC,iBAAD;AAAmB,MAAA,MAAM,EAAC;AAA1B,MAvBF,eAwBE,oBAAC,QAAD,qBACE,2CADF,CAxBF,eA2BE,oBAAC,SAAD,OA3BF,eA4BE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,GAAnB;AAAuB,MAAA,QAAQ,EAAC;AAAhC,OACGZ,eADH,CA5BF,eA+BE,oBAAC,SAAD,OA/BF,eAgCE,oBAAC,kBAAD;AACE,MAAA,UAAU,MADZ;AAEE,MAAA,SAAS,EAAEI,gBAFb;AAGE,MAAA,IAAI,EAAC,kBAHP;AAIE,MAAA,UAAU,EAAE;AAAEO,QAAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AAAT,OAJd;AAKE,MAAA,gBAAgB,EAAE;AAAED,QAAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AAAT;AALpB,MAhCF,eAuCE,oBAAC,iBAAD;AAAmB,MAAA,MAAM,EAAC;AAA1B,MAvCF,eAwCE,oBAAC,QAAD,qBACE,oDADF,CAxCF,eA2CE,oBAAC,SAAD,OA3CF,eA4CE,oBAAC,OAAD,qBACE,oBAAC,QAAD,qBACE,4CACE;AACE,MAAA,IAAI,EAAC,4CADP;AAEE,MAAA,MAAM,EAAC;AAFT,sBADF,EAKO,GALP,oFAOoB,GAPpB,eAQE;AACE,MAAA,IAAI,EAAC,iEADP;AAEE,MAAA,MAAM,EAAC;AAFT,yBARF,EAYO,GAZP,kFADF,eAkBE,+OAlBF,eAyBE,6OAzBF,eAgCE,kDAhCF,eAiCE,sIAE8B,oBAAC,OAAD,QAAU,KAAV,CAF9B,4MAjCF,eAyCE,+EACiC,oBAAC,OAAD,QAAU,QAAV,CADjC,EAC+D,GAD/D,sHAzCF,CADF,CA5CF,eA6FE,oBAAC,SAAD,OA7FF,eA8FE,oBAAC,YAAD;AACE,MAAA,IAAI,EAAC,GADP;AAEE,MAAA,QAAQ,EAAC;AAFX,45CA9FF,eA+IE,oBAAC,iBAAD;AAAmB,MAAA,MAAM,EAAC;AAA1B,MA/IF,eAgJE,oBAAC,QAAD,qBACE,uDADF,CAhJF,eAmJE,oBAAC,SAAD,OAnJF,eAoJE,oBAAC,OAAD,qBACE,uXAMc,oBAAC,OAAD,cANd,WADF,CApJF,eA8JE,oBAAC,SAAD,OA9JF,eA+JE,oBAAC,YAAD;AACE,MAAA,IAAI,EAAC,GADP;AAEE,MAAA,QAAQ,EAAC;AAFX,uWA/JF;AAHJ,GADQ,EAmLR;AACEC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAE9B,iBAAiB,CAAC+B,EAD1B;AAEEC,MAAAA,IAAI,EAAEpB;AAFR,KADM,EAKN;AACEkB,MAAAA,IAAI,EAAE9B,iBAAiB,CAACiC,IAD1B;AAEED,MAAAA,IAAI,EAAElB;AAFR,KALM,CADV;AAWEI,IAAAA,KAAK,EAAE,gDAXT;AAYEQ,IAAAA,IAAI,eACF,oBAAC,QAAD,qBACE,8KADF,eAME,8DACgB,wDADhB,UACuD,GADvD,eAEE,wDAFF,8FAG2D,GAH3D,eAIE,oBAAC,OAAD,oBAJF,WANF,CAbJ;AA2BEQ,IAAAA,KAAK,EAAE;AACLjC,MAAAA,iBAAiB,EAAjBA;AADK,KA3BT;AA8BEkC,IAAAA,IAAI,eAAE,oBAAC,yBAAD;AA9BR,GAnLQ;AA1CyB,CAA9B","sourcesContent":["import React, { Fragment } from 'react';\n\nimport { renderToHtml } from '../../services';\n\nimport { GuideSectionTypes } from '../../components';\n\nimport {\n  EuiMarkdownEditor,\n  EuiText,\n  EuiTitle,\n  EuiSpacer,\n  EuiDescriptionList,\n  EuiHorizontalRule,\n  EuiCodeBlock,\n  EuiCode,\n  EuiLink,\n} from '../../../../src/components';\n\nimport { Link } from 'react-router-dom';\n\nimport MarkdownEditorWithPlugins from './markdown_editor_with_plugins';\nconst markdownEditorWithPluginsSource = require('!!raw-loader!./markdown_editor_with_plugins');\nconst markdownEditorWithPluginsHtml = renderToHtml(MarkdownEditorWithPlugins);\n\nconst pluginSnippet = `<EuiMarkdownEditor\n  uiPlugin={myPluginUI}\n  parsingPluginList={myPluginParsingList}\n  processingPluginList={myPluginProcessingList}\n  {..otherProps}\n/>\n\n<!-- Note that the format component does not need a UI prop. -->\n<EuiMarkdownFormat\n  parsingPluginList={myPluginParsingList}\n  processingPluginList={myPluginProcessingList}\n/>\n`;\n\nconst uiPluginSnippet = `const myPluginUI = {\n  name: 'myPlugin',\n  button: {\n    label: 'Chart',\n    iconType: 'visArea',\n  },\n  helpText: (<div>A node that explains how the syntax works</div>),\n  editor: function editor({ node, onSave, onCancel }) { return ('something'); },\n}; `;\n\nconst pluginConcepts = [\n  {\n    title: 'uiPlugin',\n    description: (\n      <span>\n        Provides the <strong>UI</strong> for the button in the toolbar as well\n        as any modals or extra UI that provides content to the editor.\n      </span>\n    ),\n  },\n  {\n    title: 'parsingPluginList',\n    description: (\n      <span>\n        Provides the logic to identify the new syntax and parse it into an{' '}\n        <strong>AST node</strong>.\n      </span>\n    ),\n  },\n  {\n    title: 'processingPluginList',\n    description: (\n      <span>\n        Provides the logic to process the new <strong>AST node</strong> into a{' '}\n        <strong>React node</strong>.\n      </span>\n    ),\n  },\n];\n\nconst uiPluginConcepts = [\n  {\n    title: 'name',\n    description: (\n      <span>\n        The name of your plugin. Use the <strong>button.label</strong> listed\n        below if you need a more friendly display name. The button can be\n        ommitted if you wish the user to only utilize syntax to author the\n        content.\n      </span>\n    ),\n  },\n  {\n    title: 'button',\n    description: (\n      <span>\n        Takes a <strong>label</strong> and an <strong>icon type</strong>. This\n        forms the button that appear in the toolbar. Clicking the button will\n        trigger either the <strong>editor</strong> or <strong>formatter</strong>\n        .\n      </span>\n    ),\n  },\n  {\n    title: 'editor',\n    description: (\n      <span>\n        Provides UI controls (like an interactive modal) for how to build the\n        inital content. <strong>Must exist if formatting does not</strong>.\n      </span>\n    ),\n  },\n  {\n    title: 'formatting',\n    description: (\n      <span>\n        If no <strong>editor</strong> is provided, this is an object defining\n        how the plugins markdown tag is styled.\n      </span>\n    ),\n  },\n  {\n    title: 'helpText',\n    description: (\n      <span>\n        Contains a React node. Should contain some information and an example\n        for how to utlize the syntax. Appears when the markdown icon is clicked\n        on the bottom of the editor.\n      </span>\n    ),\n  },\n];\n\nexport const MarkdownPluginExample = {\n  title: 'Markdown plugins',\n  beta: true,\n  intro: (\n    <EuiText>\n      <p>\n        Both{' '}\n        <strong>\n          <Link to=\"/editors-syntax/markdown-editor/\">EuiMarkdownEditor</Link>\n        </strong>{' '}\n        and{' '}\n        <strong>\n          <Link to=\"/editors-syntax/markdown-format/\">EuiMarkdownFormat</Link>\n        </strong>{' '}\n        utilize the same underlying plugin architecture to transform string\n        based syntax into React components. At a high level{' '}\n        <EuiLink href=\"https://www.npmjs.com/package/unified\" target=\"_blank\">\n          Unified JS\n        </EuiLink>{' '}\n        is used in combination with{' '}\n        <EuiLink\n          href=\"https://www.npmjs.com/package/remark-parse\"\n          target=\"_blank\">\n          Remark\n        </EuiLink>{' '}\n        to provide EUI&apos;s markdown components, which are separated into a{' '}\n        <strong>parsing</strong> and <strong>processing</strong> layer. These\n        two concepts are kept distinct in EUI components to provide concrete\n        locations for your plugins to be injected, be it editing or rendering.\n        Finally you provide <strong>UI</strong> to the component to handle\n        interactions with the editor.\n      </p>\n      <p>\n        In addition to running the full pipeline,{' '}\n        <strong>EuiMarkdownEditor</strong> uses just the parsing configuration\n        to determine the input&apos;s validity, provide messages back to the\n        application, and allow the toolbar buttons to interact with existing\n        markdown tags.\n      </p>\n    </EuiText>\n  ),\n\n  sections: [\n    {\n      wrapText: false,\n      text: (\n        <>\n          <EuiTitle>\n            <h2>Plugin development</h2>\n          </EuiTitle>\n          <EuiSpacer size=\"m\" />\n          <EuiText>\n            <p>\n              An <strong>EuiMarkdown plugin</strong> is comprised of three major\n              pieces, which are passed searpately as props.\n            </p>\n          </EuiText>\n          <EuiSpacer />\n          <EuiCodeBlock size=\"s\" language=\"html\">\n            {pluginSnippet}\n          </EuiCodeBlock>\n          <EuiSpacer />\n          <EuiDescriptionList\n            compressed\n            listItems={pluginConcepts}\n            type=\"responsiveColumn\"\n            titleProps={{ style: { width: '20%' } }}\n            descriptionProps={{ style: { width: '80%' } }}\n          />\n          <EuiHorizontalRule margin=\"xl\" />\n          <EuiTitle>\n            <h3>uiPlugin</h3>\n          </EuiTitle>\n          <EuiSpacer />\n          <EuiCodeBlock size=\"s\" language=\"javascript\">\n            {uiPluginSnippet}\n          </EuiCodeBlock>\n          <EuiSpacer />\n          <EuiDescriptionList\n            compressed\n            listItems={uiPluginConcepts}\n            type=\"responsiveColumn\"\n            titleProps={{ style: { width: '20%' } }}\n            descriptionProps={{ style: { width: '80%' } }}\n          />\n          <EuiHorizontalRule margin=\"xl\" />\n          <EuiTitle>\n            <h3>parsingPluginList</h3>\n          </EuiTitle>\n          <EuiSpacer />\n          <EuiText>\n            <Fragment>\n              <p>\n                <a\n                  href=\"https://www.npmjs.com/package/remark-parse\"\n                  target=\"_blank\">\n                  Remark-parse\n                </a>{' '}\n                is used to parse the input text into markdown AST nodes. Its\n                documentation for{' '}\n                <a\n                  href=\"https://www.npmjs.com/package/remark-parse#extending-the-parser\"\n                  target=\"_blank\">\n                  writing parsers\n                </a>{' '}\n                is under the Extending the Parser section, but highlights are\n                included below.\n              </p>\n\n              <p>\n                A parser is comprised of three pieces. There is a wrapping\n                function which is provided to remark-parse and injects the\n                parser, the parser method itself, and a locator function if the\n                markdown tag is inline.\n              </p>\n\n              <p>\n                The parsing method is called at locations where its markdown\n                down might be found at. The method is responsible for\n                determining if the location is a valid tag, process the tag, and\n                mark report the result.\n              </p>\n\n              <h4>Inline vs block</h4>\n              <p>\n                Inline tags are allowed at any point in text, and will be\n                rendered somewhere within a <EuiCode>{'<p>'}</EuiCode> element.\n                For better performance, inline parsers must provide a locate\n                method which reports the location where their next tag might be\n                found. They are not allowed to span multiple lines of the input.\n              </p>\n\n              <p>\n                Block tags are rendered inside <EuiCode>{'<span>'}</EuiCode>{' '}\n                elements, and do not have a locate method. They can consume as\n                much input text as desired, across multiple lines.\n              </p>\n            </Fragment>\n          </EuiText>\n          <EuiSpacer />\n          <EuiCodeBlock\n            size=\"s\"\n            language=\"javascript\">{`// example plugin parser\nfunction EmojiMarkdownParser() {\n  const Parser = this.Parser;\n  const tokenizers = Parser.prototype.inlineTokenizers;\n  const methods = Parser.prototype.inlineMethods;\n\n  const emojiMap = {\n    wave: '👋',\n    smile: '😀',\n    plane: '🛩',\n  };\n  const emojiNames = Object.keys(emojiMap);\n\n  // function to parse a matching string\n  function tokenizeEmoji(eat, value, silent) {\n    const tokenMatch = value.match(/^:(.*?):/);\n\n    if (!tokenMatch) return false; // no match\n    const [, emojiName] = tokenMatch;\n\n    // ensure we know this one\n    if (emojiNames.indexOf(emojiName) === -1) return false;\n\n    if (silent) {\n      return true;\n    }\n\n    // must consume the exact & entire match string\n    return eat(\\`:\\${emojiName}:\\`)({\n      type: 'emojiPlugin',\n      emoji: emojiMap[emojiName], // configuration is passed to the renderer\n    });\n  }\n\n  // function to detect where the next emoji match might be found\n  tokenizeEmoji.locator = (value, fromIndex) => {\n    return value.indexOf(':', fromIndex);\n  };\n\n  // define the emoji plugin and inject it just before the existing text plugin\n  tokenizers.emoji = tokenizeEmoji;\n  methods.splice(methods.indexOf('text'), 0, 'emoji');\n}\n\n// add the parser for \\`emojiPlugin\\`\nconst parsingList = getDefaultEuiMarkdownParsingPlugins();\nparsingList.push(EmojiMarkdownParser);`}</EuiCodeBlock>\n          <EuiHorizontalRule margin=\"xl\" />\n          <EuiTitle>\n            <h3>processingPluginList</h3>\n          </EuiTitle>\n          <EuiSpacer />\n          <EuiText>\n            <p>\n              After parsing the input into an AST, the nodes need to be\n              transformed into React elements. This is performed by a list of\n              processors, the default set converts remark AST into rehype and\n              then into React. Plugins need to define themselves within this\n              transformation process, identifying with the same type its parser\n              uses in its <EuiCode>eat</EuiCode> call.\n            </p>\n          </EuiText>\n          <EuiSpacer />\n          <EuiCodeBlock\n            size=\"s\"\n            language=\"javascript\">{`// example plugin processor\n\n// receives the configuration from the parser and renders\nconst EmojiMarkdownRenderer = ({ emoji }) => {\n  return <span>{emoji}</span>;\n};\n\n// add the renderer for \\`emojiPlugin\\`\nconst processingList = getDefaultEuiMarkdownProcessingPlugins();\nprocessingList[1][1].components.emojiPlugin = EmojiMarkdownRenderer;`}</EuiCodeBlock>\n          ),\n        </>\n      ),\n    },\n    {\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: markdownEditorWithPluginsSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: markdownEditorWithPluginsHtml,\n        },\n      ],\n      title: 'Putting it all together: a simple chart plugin',\n      text: (\n        <Fragment>\n          <p>\n            The below example takes the concepts from above to construct a\n            simple chart embed that is initiated from a new button in the editor\n            toolbar.\n          </p>\n          <p>\n            Note that the <strong>EuiMarkdownEditor</strong> and{' '}\n            <strong>EuiMarkdownFormat</strong> examples utilize the same prop\n            list. The editor manages additional controls through the{' '}\n            <EuiCode>uiPlugins</EuiCode> prop.\n          </p>\n        </Fragment>\n      ),\n      props: {\n        EuiMarkdownEditor,\n      },\n      demo: <MarkdownEditorWithPlugins />,\n    },\n  ],\n};\n"]}]}