{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src-docs\\src\\views\\datagrid\\schema.js","dependencies":[{"path":"D:\\work\\eui\\src-docs\\src\\views\\datagrid\\schema.js","mtime":1649070093145},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src-docs/src/views/datagrid/schema.js"],"names":["React","useState","useCallback","fake","EuiDataGrid","EuiImage","EuiTitle","EuiSpacer","columns","id","isExpandable","schema","storeData","i","json","franchise","JSON","stringify","default","boolean","numeric","currency","date","custom","name","push","datetime","Franchise","props","DataGridSchema","data","setData","direction","sortingColumns","setSortingColumns","pageIndex","pageSize","pagination","setPagination","map","visibleColumns","setVisibleColumns","setSorting","sortedData","sort","a","b","length","column","aValue","bValue","setPageIndex","setPageSize","handleVisibleColumns","level","rowIndex","columnId","isDetails","value","onSort","pageSizeOptions","onChangeItemsPerPage","onChangePage","type","textTransform","detector","toLowerCase","comparator","sortTextAsc","sortTextDesc","icon","color","cellContentsElement","stringContents","textContent","replace","match"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { fake } from 'faker';\n\nimport {\n  EuiDataGrid,\n  EuiImage,\n  EuiTitle,\n  EuiSpacer,\n} from '../../../../src/components/';\n\nconst columns = [\n  {\n    id: 'default',\n  },\n  {\n    id: 'boolean',\n    isExpandable: false,\n  },\n  {\n    id: 'numeric',\n  },\n  {\n    id: 'currency',\n  },\n  {\n    id: 'datetime',\n    schema: 'datetime',\n  },\n  {\n    id: 'json',\n  },\n  {\n    id: 'custom',\n    schema: 'favoriteFranchise',\n  },\n];\n\nconst storeData = [];\n\nfor (let i = 1; i < 5; i++) {\n  let json;\n  let franchise;\n  if (i < 3) {\n    franchise = 'Star Wars';\n    json = JSON.stringify([\n      {\n        default: fake('{{name.lastName}}, {{name.firstName}} {{name.suffix}}'),\n        boolean: fake('{{random.boolean}}'),\n        numeric: fake('{{finance.account}}'),\n        currency: fake('${{finance.amount}}'),\n        date: fake('{{date.past}}'),\n        custom: fake('{{date.past}}'),\n      },\n    ]);\n  } else {\n    franchise = 'Star Trek';\n    json = JSON.stringify([\n      {\n        name: fake('{{name.lastName}}, {{name.firstName}} {{name.suffix}}'),\n      },\n    ]);\n  }\n\n  storeData.push({\n    default: fake('{{name.lastName}}, {{name.firstName}} {{name.suffix}}'),\n    boolean: fake('{{random.boolean}}'),\n    numeric: fake('{{finance.account}}'),\n    currency: fake('${{finance.amount}}'),\n    datetime: fake('{{date.past}}'),\n    json: json,\n    custom: franchise,\n  });\n}\n\nconst Franchise = (props) => {\n  return (\n    <div>\n      <EuiTitle size=\"s\">\n        <h3>{props.name} is the best!</h3>\n      </EuiTitle>\n      <EuiSpacer size=\"s\" />\n      {props.name === 'Star Wars' ? (\n        <EuiImage\n          allowFullScreen\n          size=\"m\"\n          hasShadow\n          caption=\"Random star wars image\"\n          alt=\"Random star wars image\"\n          url=\"https://source.unsplash.com/600x600/?starwars\"\n        />\n      ) : (\n        <EuiImage\n          allowFullScreen\n          size=\"m\"\n          hasShadow\n          caption=\"Random star trek image\"\n          alt=\"Random trek image\"\n          url=\"https://source.unsplash.com/600x600/?startrek\"\n        />\n      )}\n    </div>\n  );\n};\n\nconst DataGridSchema = () => {\n  const [data, setData] = useState(storeData);\n\n  const [sortingColumns, setSortingColumns] = useState([\n    { id: 'custom', direction: 'asc' },\n  ]);\n  const [pagination, setPagination] = useState({\n    pageIndex: 0,\n    pageSize: 10,\n  });\n  const [visibleColumns, setVisibleColumns] = useState(\n    columns.map(({ id }) => id)\n  );\n\n  const setSorting = (sortingColumns) => {\n    const sortedData = [...data].sort((a, b) => {\n      for (let i = 0; i < sortingColumns.length; i++) {\n        const column = sortingColumns[i];\n        const aValue = a[column.id];\n        const bValue = b[column.id];\n\n        if (aValue < bValue) return column.direction === 'asc' ? -1 : 1;\n        if (aValue > bValue) return column.direction === 'asc' ? 1 : -1;\n      }\n\n      return 0;\n    });\n\n    setData(sortedData);\n    setSortingColumns(sortingColumns);\n  };\n\n  const setPageIndex = useCallback(\n    (pageIndex) => {\n      setPagination({ ...pagination, pageIndex });\n    },\n    [pagination, setPagination]\n  );\n\n  const setPageSize = useCallback(\n    (pageSize) => {\n      setPagination({ ...pagination, pageIndex: 0, pageSize });\n    },\n    [pagination, setPagination]\n  );\n\n  const handleVisibleColumns = (visibleColumns) =>\n    setVisibleColumns(visibleColumns);\n\n  return (\n    <EuiDataGrid\n      aria-label=\"Top EUI contributors\"\n      columns={columns}\n      columnVisibility={{\n        visibleColumns: visibleColumns,\n        setVisibleColumns: handleVisibleColumns,\n      }}\n      rowCount={data.length}\n      inMemory={{ level: 'sorting' }}\n      renderCellValue={({ rowIndex, columnId, isDetails }) => {\n        const value = data[rowIndex][columnId];\n\n        if (columnId === 'custom' && isDetails) {\n          return <Franchise name={value} />;\n        }\n\n        return value;\n      }}\n      sorting={{ columns: sortingColumns, onSort: setSorting }}\n      pagination={{\n        ...pagination,\n        pageSizeOptions: [5, 10, 25],\n        onChangeItemsPerPage: setPageSize,\n        onChangePage: setPageIndex,\n      }}\n      schemaDetectors={[\n        {\n          type: 'favoriteFranchise',\n          textTransform: 'capitalize',\n          detector(value) {\n            return value.toLowerCase() === 'star wars' ||\n              value.toLowerCase() === 'star trek'\n              ? 1\n              : 0;\n          },\n          comparator(a, b, direction) {\n            const aValue = a.toLowerCase() === 'star wars';\n            const bValue = b.toLowerCase() === 'star wars';\n            if (aValue < bValue) return direction === 'asc' ? 1 : -1;\n            if (aValue > bValue) return direction === 'asc' ? -1 : 1;\n            return 0;\n          },\n          sortTextAsc: 'Star wars-Star trek',\n          sortTextDesc: 'Star trek-Star wars',\n          icon: 'starFilled',\n          color: '#800080',\n        },\n      ]}\n      popoverContents={{\n        numeric: ({ cellContentsElement }) => {\n          // want to process the already-rendered cell value\n          const stringContents = cellContentsElement.textContent;\n\n          // extract the groups-of-three digits that are right-aligned\n          return stringContents.replace(/((\\d{3})+)$/, (match) =>\n            // then replace each group of xyz digits with ,xyz\n            match.replace(/(\\d{3})/g, ',$1')\n          );\n        },\n      }}\n    />\n  );\n};\nexport default DataGridSchema;\n"]}]}