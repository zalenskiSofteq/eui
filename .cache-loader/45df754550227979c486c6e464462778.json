{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\date_picker\\super_date_picker\\super_update_button.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\date_picker\\super_date_picker\\super_update_button.tsx","mtime":1649070093380},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/date_picker/super_date_picker/super_update_button.tsx"],"names":["React","Component","classNames","EuiButton","EuiI18n","EuiToolTip","EuiSuperUpdateButton","node","tooltip","_isMounted","showToolTip","hideToolTip","props","showTooltip","needsUpdate","isDisabled","isLoading","tooltipTimeout","setTimeout","hideTooltip","className","onClick","toolTipProps","restTextProps","textProps","rest","classes","buttonText","tooltipContent","setTootipRef"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { EuiButton } from '../../button';\nimport { EuiI18n } from '../../i18n';\nimport { EuiToolTip } from '../../tool_tip';\nexport class EuiSuperUpdateButton extends Component {\n  static defaultProps = {\n    needsUpdate: false,\n    isLoading: false,\n    isDisabled: false,\n    showTooltip: false\n  };\n  _isMounted = false;\n  tooltip = null;\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  componentDidUpdate() {\n    if (this.props.showTooltip && this.props.needsUpdate && !this.props.isDisabled && !this.props.isLoading) {\n      this.showTooltip();\n      this.tooltipTimeout = setTimeout(() => {\n        this.hideTooltip();\n      }, 2000);\n    }\n  }\n\n  setTootipRef = node => {\n    this.tooltip = node;\n  };\n  showTooltip = () => {\n    if (!this._isMounted || !this.tooltip) {\n      return;\n    }\n\n    this.tooltip.showToolTip();\n  };\n  hideTooltip = () => {\n    if (!this._isMounted || !this.tooltip) {\n      return;\n    }\n\n    this.tooltip.hideToolTip();\n  };\n\n  render() {\n    const {\n      className,\n      needsUpdate,\n      isLoading,\n      isDisabled,\n      onClick,\n      toolTipProps,\n      showTooltip,\n      textProps: restTextProps,\n      ...rest\n    } = this.props;\n    const classes = classNames('euiSuperUpdateButton', className);\n    let buttonText = <EuiI18n token=\"euiSuperUpdateButton.refreshButtonLabel\" default=\"Refresh\" />;\n\n    if (needsUpdate || isLoading) {\n      buttonText = isLoading ? <EuiI18n token=\"euiSuperUpdateButton.updatingButtonLabel\" default=\"Updating\" /> : <EuiI18n token=\"euiSuperUpdateButton.updateButtonLabel\" default=\"Update\" />;\n    }\n\n    let tooltipContent;\n\n    if (isDisabled) {\n      tooltipContent = <EuiI18n token=\"euiSuperUpdateButton.cannotUpdateTooltip\" default=\"Cannot update\" />;\n    } else if (needsUpdate && !isLoading) {\n      tooltipContent = <EuiI18n token=\"euiSuperUpdateButton.clickToApplyTooltip\" default=\"Click to apply\" />;\n    }\n\n    return <EuiToolTip ref={this.setTootipRef} content={tooltipContent} position=\"bottom\" {...toolTipProps}>\n        <EuiButton className={classes} color={needsUpdate || isLoading ? 'success' : 'primary'} fill iconType={needsUpdate || isLoading ? 'kqlFunction' : 'refresh'} textProps={{ ...restTextProps,\n        className: classNames('euiSuperUpdateButton__text', restTextProps?.className)\n      }} isDisabled={isDisabled} onClick={onClick} isLoading={isLoading} {...rest}>\n          {buttonText}\n        </EuiButton>\n      </EuiToolTip>;\n  }\n\n}\nEuiSuperUpdateButton.propTypes = {\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n  isDisabled: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  needsUpdate: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n\n  /**\n       * Passes props to `EuiToolTip`\n       */\n  toolTipProps: PropTypes.shape({\n    /**\n       * Passes onto the the trigger.\n       */\n    anchorClassName: PropTypes.string,\n\n    /**\n       * The in-view trigger for your tooltip.\n       */\n    children: PropTypes.element.isRequired,\n\n    /**\n       * Passes onto the tooltip itself, not the trigger.\n       */\n    className: PropTypes.string,\n\n    /**\n       * The main content of your tooltip.\n       */\n    content: PropTypes.node,\n\n    /**\n       * Common display alternatives for the anchor wrapper\n       */\n    display: PropTypes.oneOf([\"inlineBlock\", \"block\"]),\n\n    /**\n       * Delay before showing tooltip. Good for repeatable items.\n       */\n    delay: PropTypes.oneOf([\"regular\", \"long\"]).isRequired,\n\n    /**\n       * An optional title for your tooltip.\n       */\n    title: PropTypes.node,\n\n    /**\n       * Unless you provide one, this will be randomly generated.\n       */\n    id: PropTypes.string,\n\n    /**\n       * Suggested position. If there is not enough room for it this will be changed.\n       */\n    position: PropTypes.oneOf([\"top\", \"right\", \"bottom\", \"left\"]).isRequired,\n\n    /**\n       * If supplied, called when mouse movement causes the tool tip to be\n       * hidden.\n       */\n    onMouseOut: PropTypes.func\n  }),\n\n  /**\n       * Show the \"Click to apply\" tooltip\n       */\n  showTooltip: PropTypes.bool.isRequired\n};\n\ntry {\n  EuiSuperUpdateButton.__docgenInfo = {\n    description: '',\n    displayName: 'EuiSuperUpdateButton',\n    methods: [],\n    props: {\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: '',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'data-test-subj': {\n        defaultValue: null,\n        description: '',\n        name: 'data-test-subj',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      style: {\n        defaultValue: null,\n        description: '',\n        name: 'style',\n        parent: {\n          fileName: 'eui/src/components/button/button.tsx',\n          name: 'EuiButtonProps'\n        },\n        required: false,\n        type: {\n          name: 'CSSProperties'\n        }\n      },\n      color: {\n        defaultValue: null,\n        description: 'Any of our named colors.\\n' + '**`secondary` color is DEPRECATED, use `success` instead**',\n        name: 'color',\n        parent: {\n          fileName: 'eui/src/components/button/button.tsx',\n          name: 'EuiButtonProps'\n        },\n        required: false,\n        type: {\n          name: 'enum',\n          raw: 'ButtonColor',\n          value: [{\n            value: '\"text\"'\n          }, {\n            value: '\"accent\"'\n          }, {\n            value: '\"primary\"'\n          }, {\n            value: '\"success\"'\n          }, {\n            value: '\"warning\"'\n          }, {\n            value: '\"danger\"'\n          }, {\n            value: '\"secondary\"'\n          }, {\n            value: '\"ghost\"'\n          }]\n        }\n      },\n      size: {\n        defaultValue: null,\n        description: 'Use size `s` in confined spaces',\n        name: 'size',\n        parent: {\n          fileName: 'eui/src/components/button/button.tsx',\n          name: 'EuiButtonProps'\n        },\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"s\" | \"m\"',\n          value: [{\n            value: '\"s\"'\n          }, {\n            value: '\"m\"'\n          }]\n        }\n      },\n      fill: {\n        defaultValue: null,\n        description: 'Make button a solid color for prominence',\n        name: 'fill',\n        parent: {\n          fileName: 'eui/src/components/button/button.tsx',\n          name: 'EuiButtonProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      iconType: {\n        defaultValue: null,\n        description: 'Any `type` accepted by EuiIcon',\n        name: 'iconType',\n        parent: {\n          fileName: 'eui/src/components/button/button_content.tsx',\n          name: 'EuiButtonContentProps'\n        },\n        required: false,\n        type: {\n          name: 'IconType'\n        }\n      },\n      isSelected: {\n        defaultValue: null,\n        description: 'Applies the boolean state as the `aria-pressed` property to create a toggle button.\\n' + '*Only use when the readable text does not change between states.*',\n        name: 'isSelected',\n        parent: {\n          fileName: 'eui/src/components/button/button.tsx',\n          name: 'EuiButtonProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      minWidth: {\n        defaultValue: null,\n        description: 'Override the default minimum width',\n        name: 'minWidth',\n        parent: {\n          fileName: 'eui/src/components/button/button.tsx',\n          name: 'EuiButtonProps'\n        },\n        required: false,\n        type: {\n          name: 'string | number'\n        }\n      },\n      fullWidth: {\n        defaultValue: null,\n        description: 'Extends the button to 100% width',\n        name: 'fullWidth',\n        parent: {\n          fileName: 'eui/src/components/button/button.tsx',\n          name: 'EuiButtonProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      contentProps: {\n        defaultValue: null,\n        description: \"Object of props passed to the <span/> wrapping the button's content\",\n        name: 'contentProps',\n        parent: {\n          fileName: 'eui/src/components/button/button.tsx',\n          name: 'EuiButtonProps'\n        },\n        required: false,\n        type: {\n          name: 'EuiButtonContentType'\n        }\n      },\n      iconSide: {\n        defaultValue: null,\n        description: 'Can only be one side `left` or `right`',\n        name: 'iconSide',\n        parent: {\n          fileName: 'eui/src/components/button/button_content.tsx',\n          name: 'EuiButtonContentProps'\n        },\n        required: false,\n        type: {\n          name: 'enum',\n          raw: 'ToastSide',\n          value: [{\n            value: '\"left\"'\n          }, {\n            value: '\"right\"'\n          }]\n        }\n      },\n      textProps: {\n        defaultValue: null,\n        description: \"Object of props passed to the <span/> wrapping the content's text/children only (not icon)\",\n        name: 'textProps',\n        parent: {\n          fileName: 'eui/src/components/button/button_content.tsx',\n          name: 'EuiButtonContentProps'\n        },\n        required: false,\n        type: {\n          name: \"HTMLAttributes<HTMLSpanElement> & CommonProps & { ref?: Ref<HTMLSpanElement>; 'data-text'?: string; }\"\n        }\n      },\n      iconSize: {\n        defaultValue: null,\n        description: '',\n        name: 'iconSize',\n        parent: {\n          fileName: 'eui/src/components/button/button_content.tsx',\n          name: 'EuiButtonContentProps'\n        },\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"s\" | \"m\"',\n          value: [{\n            value: '\"s\"'\n          }, {\n            value: '\"m\"'\n          }]\n        }\n      },\n      isDisabled: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: '',\n        name: 'isDisabled',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      isLoading: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: '',\n        name: 'isLoading',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      needsUpdate: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: '',\n        name: 'needsUpdate',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      onClick: {\n        defaultValue: null,\n        description: '',\n        name: 'onClick',\n        parent: undefined,\n        required: true,\n        type: {\n          name: '(event: MouseEvent<HTMLButtonElement, MouseEvent>) => void'\n        }\n      },\n      toolTipProps: {\n        defaultValue: null,\n        description: 'Passes props to `EuiToolTip`',\n        name: 'toolTipProps',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'EuiToolTipProps'\n        }\n      },\n      showTooltip: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: 'Show the \"Click to apply\" tooltip',\n        name: 'showTooltip',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      }\n    },\n    extendedInterfaces: ['CommonProps', 'EuiButtonProps', 'EuiButtonContentProps']\n  };\n} catch (e) {}"]}]}