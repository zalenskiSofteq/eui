{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\header\\header_breadcrumbs\\header_breadcrumbs.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\header\\header_breadcrumbs\\header_breadcrumbs.tsx","mtime":1649070093461},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/header/header_breadcrumbs/header_breadcrumbs.tsx"],"names":["React","classNames","EuiBreadcrumbs","EuiHeaderBreadcrumbs","className","breadcrumbs","rest","classes"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAyC,OAAzC;;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,cAAT,QAAoD,mBAApD;AAEA,OAAO,IAAMC,oBAA4D,GAAG,SAA/DA,oBAA+D,OAItE;AAAA,MAHJC,SAGI,QAHJA,SAGI;AAAA,MAFJC,WAEI,QAFJA,WAEI;AAAA,MADDC,IACC;;AACJ,MAAMC,OAAO,GAAGN,UAAU,CAAC,sBAAD,EAAyBG,SAAzB,CAA1B;AAEA,sBACE,oBAAC,cAAD;AACE,IAAA,GAAG,EAAE,CADP;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,WAAW,EAAEC,WAHf;AAIE,IAAA,SAAS,EAAEE;AAJb,KAKMD,IALN,EADF;AASD,CAhBM;;;;;;;AAxBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAPA;AACA;AACA;AACA;;;;AAHA;AACA;AACA;;;;AAFA;AACA;;;;;;;AADA;AACA;;;;;;AADA;AACA","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { EuiBreadcrumbs } from '../../breadcrumbs';\nexport var EuiHeaderBreadcrumbs = ({\n  className,\n  breadcrumbs,\n  ...rest\n}) => {\n  const classes = classNames('euiHeaderBreadcrumbs', className);\n  return <EuiBreadcrumbs max={4} truncate breadcrumbs={breadcrumbs} className={classes} {...rest} />;\n};\nEuiHeaderBreadcrumbs.propTypes = {\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n\n  /**\n     * Hides extra (above the max) breadcrumbs under a collapsed item as the window gets smaller.\n     * Pass a custom #EuiBreadcrumbResponsiveMaxCount object to change the number of breadcrumbs to show at the particular breakpoints.\n     * Omitting or passing a `0` value will show all breadcrumbs.\n     *\n     * Pass `false` to turn this behavior off.\n     *\n     * Default: `{ xs: 1, s: 2, m: 4 }`\n     */\n  responsive: PropTypes.oneOfType([PropTypes.bool.isRequired, PropTypes.any.isRequired]),\n\n  /**\n     * Forces all breadcrumbs to single line and\n     * truncates each breadcrumb to a particular width,\n     * except for the last item\n     */\n  truncate: PropTypes.bool,\n\n  /**\n     * Collapses the inner items past the maximum set here\n     * into a single ellipses item\n     */\n  max: PropTypes.oneOfType([PropTypes.number.isRequired, PropTypes.oneOf([null])]),\n\n  /**\n     * The array of individual #EuiBreadcrumb items\n     */\n  breadcrumbs: PropTypes.arrayOf(PropTypes.shape({\n    className: PropTypes.string,\n    \"aria-label\": PropTypes.string,\n    \"data-test-subj\": PropTypes.string,\n\n    /**\n       * Visible label of the breadcrumb\n       */\n    text: PropTypes.node.isRequired,\n    href: PropTypes.string,\n    onClick: PropTypes.func,\n\n    /**\n       * Force a max-width on the breadcrumb text\n       */\n    truncate: PropTypes.bool\n  }).isRequired).isRequired\n};\n\ntry {\n  EuiHeaderBreadcrumbs.__docgenInfo = {\n    description: '',\n    displayName: 'EuiHeaderBreadcrumbs',\n    methods: [],\n    props: {\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: '',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'data-test-subj': {\n        defaultValue: null,\n        description: '',\n        name: 'data-test-subj',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      responsive: {\n        defaultValue: null,\n        description: 'Hides extra (above the max) breadcrumbs under a collapsed item as the window gets smaller.\\n' + 'Pass a custom #EuiBreadcrumbResponsiveMaxCount object to change the number of breadcrumbs to show at the particular breakpoints.\\n' + 'Omitting or passing a `0` value will show all breadcrumbs.\\n' + '\\n' + 'Pass `false` to turn this behavior off.\\n' + '\\n' + 'Default: `{ xs: 1, s: 2, m: 4 }`',\n        name: 'responsive',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean | EuiBreadcrumbResponsiveMaxCount'\n        }\n      },\n      truncate: {\n        defaultValue: null,\n        description: 'Forces all breadcrumbs to single line and\\n' + 'truncates each breadcrumb to a particular width,\\n' + 'except for the last item',\n        name: 'truncate',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      max: {\n        defaultValue: null,\n        description: 'Collapses the inner items past the maximum set here\\n' + 'into a single ellipses item',\n        name: 'max',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'number'\n        }\n      },\n      breadcrumbs: {\n        defaultValue: null,\n        description: 'The array of individual #EuiBreadcrumb items',\n        name: 'breadcrumbs',\n        parent: undefined,\n        required: true,\n        type: {\n          name: 'EuiBreadcrumb[]'\n        }\n      }\n    },\n    extendedInterfaces: ['CommonProps']\n  };\n} catch (e) {}"]}]}