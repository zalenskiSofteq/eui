{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\expression\\expression.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\expression\\expression.tsx","mtime":1649070093400},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/expression/expression.tsx"],"names":["React","classNames","keysOf","EuiIcon","colorToClassNameMap","subdued","primary","success","secondary","accent","warning","danger","textWrapToClassNameMap","truncate","COLORS","displayToClassNameMap","inline","columns","EuiExpression","className","description","descriptionProps","value","valueProps","color","uppercase","isActive","display","descriptionWidth","onClick","isInvalid","textWrap","rest","calculatedColor","classes","Component","descriptionStyle","style","customWidth","flexBasis","undefined","invalidIcon"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { keysOf } from '../common';\nimport { EuiIcon } from '../icon';\nvar colorToClassNameMap = {\n  subdued: 'euiExpression--subdued',\n  primary: 'euiExpression--primary',\n  success: 'euiExpression--success',\n  secondary: 'euiExpression--secondary',\n  accent: 'euiExpression--accent',\n  warning: 'euiExpression--warning',\n  danger: 'euiExpression--danger'\n};\nvar textWrapToClassNameMap = {\n  'break-word': null,\n  truncate: 'euiExpression--truncate'\n};\nexport var COLORS = keysOf(colorToClassNameMap);\nvar displayToClassNameMap = {\n  inline: null,\n  columns: 'euiExpression--columns'\n};\nexport var EuiExpression = ({\n  className,\n  description,\n  descriptionProps,\n  value,\n  valueProps,\n  color = 'success',\n  uppercase = true,\n  isActive = false,\n  display = 'inline',\n  descriptionWidth = '20%',\n  onClick,\n  isInvalid = false,\n  textWrap = 'break-word',\n  ...rest\n}) => {\n  const calculatedColor = isInvalid ? 'danger' : color;\n  const classes = classNames('euiExpression', className, {\n    'euiExpression-isActive': isActive,\n    'euiExpression-isClickable': onClick,\n    'euiExpression-isUppercase': uppercase\n  }, displayToClassNameMap[display], colorToClassNameMap[calculatedColor], textWrapToClassNameMap[textWrap]);\n  const Component = onClick ? 'button' : 'span';\n  const descriptionStyle = descriptionProps && descriptionProps.style;\n  const customWidth = display === 'columns' && descriptionWidth ? {\n    flexBasis: descriptionWidth,\n    ...descriptionStyle\n  } : undefined;\n  const invalidIcon = isInvalid ? <EuiIcon className=\"euiExpression__icon\" type=\"alert\" color={calculatedColor} /> : undefined;\n  return <Component className={classes} onClick={onClick} {...rest}>\n      <span className=\"euiExpression__description\" style={customWidth} {...descriptionProps}>\n        {description}\n      </span>{' '}\n      {value && <span className=\"euiExpression__value\" {...valueProps}>\n          {value}\n        </span>}\n      {invalidIcon}\n    </Component>;\n};\nEuiExpression.propTypes = {\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n\n  /**\n     * First part of the expression\n     */\n\n  /**\n     * First part of the expression\n     */\n  description: PropTypes.node.isRequired,\n  descriptionProps: PropTypes.any,\n\n  /**\n     * Second part of the expression\n     */\n\n  /**\n     * Second part of the expression\n     */\n  value: PropTypes.node,\n  valueProps: PropTypes.any,\n\n  /**\n     * Color of the `description`\n     * **`secondary` color is DEPRECATED, use `success` instead**\n     */\n\n  /**\n     * Color of the `description`\n     * **`secondary` color is DEPRECATED, use `success` instead**\n     */\n  color: PropTypes.oneOf([\"subdued\", \"primary\", \"success\", \"secondary\", \"accent\", \"warning\", \"danger\"]),\n\n  /**\n     * Should the `description` auto-uppercase?\n     */\n\n  /**\n     * Should the `description` auto-uppercase?\n     */\n  uppercase: PropTypes.bool,\n\n  /**\n     * Adds an solid border at the bottom\n     */\n\n  /**\n     * Adds an solid border at the bottom\n     */\n  isActive: PropTypes.bool,\n\n  /**\n     * Turns the component into a button and adds an editable style border at the bottom\n     */\n\n  /**\n     * Turns the component into a button and adds an editable style border at the bottom\n     */\n  onClick: PropTypes.oneOfType([PropTypes.oneOfType([PropTypes.func, PropTypes.func.isRequired]), PropTypes.func]),\n\n  /**\n     * Sets the display style for the expression. Defaults to `inline`\n     */\n\n  /**\n     * Sets the display style for the expression. Defaults to `inline`\n     */\n  display: PropTypes.oneOf([\"inline\", \"columns\"]),\n\n  /**\n     * Forces color to display as `danger` and shows an `alert` icon\n     */\n\n  /**\n     * Forces color to display as `danger` and shows an `alert` icon\n     */\n  isInvalid: PropTypes.bool,\n\n  /**\n     * Sets a custom width for the description when using the columns layout.\n     * Set to a number for a custom width in `px`.\n     * Set to a string for a custom width in custom measurement.\n     * Defaults to `20%`\n     */\n\n  /**\n     * Sets a custom width for the description when using the columns layout.\n     * Set to a number for a custom width in `px`.\n     * Set to a string for a custom width in custom measurement.\n     * Defaults to `20%`\n     */\n  descriptionWidth: PropTypes.oneOfType([PropTypes.number.isRequired, PropTypes.string.isRequired]),\n\n  /**\n     * Sets how to handle the wrapping of long text.\n     */\n\n  /**\n     * Sets how to handle the wrapping of long text.\n     */\n  textWrap: PropTypes.oneOf([\"break-word\", \"truncate\"])\n};\n\ntry {\n  EuiExpression.__docgenInfo = {\n    description: '',\n    displayName: 'EuiExpression',\n    methods: [],\n    props: {\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: 'Defines a string value that labels the current element.\\n' + '@see aria-labelledby.',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'data-test-subj': {\n        defaultValue: null,\n        description: '',\n        name: 'data-test-subj',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      description: {\n        defaultValue: null,\n        description: 'First part of the expression',\n        name: 'description',\n        parent: undefined,\n        required: true,\n        type: {\n          name: 'ReactNode'\n        }\n      },\n      descriptionProps: {\n        defaultValue: null,\n        description: '',\n        name: 'descriptionProps',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'HTMLAttributes<HTMLSpanElement>'\n        }\n      },\n      value: {\n        defaultValue: null,\n        description: 'Second part of the expression',\n        name: 'value',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'ReactNode'\n        }\n      },\n      valueProps: {\n        defaultValue: null,\n        description: '',\n        name: 'valueProps',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'HTMLAttributes<HTMLSpanElement>'\n        }\n      },\n      color: {\n        defaultValue: {\n          value: 'success'\n        },\n        description: 'Color of the `description`\\n' + '**`secondary` color is DEPRECATED, use `success` instead**',\n        name: 'color',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"subdued\" | \"accent\" | \"primary\" | \"success\" | \"warning\" | \"danger\" | \"secondary\"',\n          value: [{\n            value: '\"subdued\"'\n          }, {\n            value: '\"accent\"'\n          }, {\n            value: '\"primary\"'\n          }, {\n            value: '\"success\"'\n          }, {\n            value: '\"warning\"'\n          }, {\n            value: '\"danger\"'\n          }, {\n            value: '\"secondary\"'\n          }]\n        }\n      },\n      uppercase: {\n        defaultValue: {\n          value: 'true'\n        },\n        description: 'Should the `description` auto-uppercase?',\n        name: 'uppercase',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      isActive: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: 'Adds an solid border at the bottom',\n        name: 'isActive',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      onClick: {\n        defaultValue: null,\n        description: 'Turns the component into a button and adds an editable style border at the bottom',\n        name: 'onClick',\n        parent: undefined,\n        required: false,\n        type: {\n          name: '((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | (((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) & ((event: MouseEvent<...>) => void))'\n        }\n      },\n      display: {\n        defaultValue: {\n          value: 'inline'\n        },\n        description: 'Sets the display style for the expression. Defaults to `inline`',\n        name: 'display',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"inline\" | \"columns\"',\n          value: [{\n            value: '\"inline\"'\n          }, {\n            value: '\"columns\"'\n          }]\n        }\n      },\n      isInvalid: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: 'Forces color to display as `danger` and shows an `alert` icon',\n        name: 'isInvalid',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      descriptionWidth: {\n        defaultValue: {\n          value: '20%'\n        },\n        description: 'Sets a custom width for the description when using the columns layout.\\n' + 'Set to a number for a custom width in `px`.\\n' + 'Set to a string for a custom width in custom measurement.\\n' + 'Defaults to `20%`',\n        name: 'descriptionWidth',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string | number'\n        }\n      },\n      textWrap: {\n        defaultValue: {\n          value: 'break-word'\n        },\n        description: 'Sets how to handle the wrapping of long text.',\n        name: 'textWrap',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"truncate\" | \"break-word\"',\n          value: [{\n            value: '\"truncate\"'\n          }, {\n            value: '\"break-word\"'\n          }]\n        }\n      }\n    },\n    extendedInterfaces: ['ButtonHTMLAttributes', 'CommonProps', 'HTMLAttributes', 'AriaAttributes', 'DOMAttributes']\n  };\n} catch (e) {}"]}]}