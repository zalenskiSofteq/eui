{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\datagrid\\column_sorting.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\datagrid\\column_sorting.tsx","mtime":1649070093361},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/datagrid/column_sorting.tsx"],"names":["React","Fragment","useState","useEffect","classNames","EuiPopover","EuiPopoverFooter","EuiI18n","EuiText","EuiButtonEmpty","EuiFlexGroup","EuiFlexItem","EuiDragDropContext","EuiDroppable","euiDragDropReorder","EuiDataGridColumnSortingDraggable","getDetailsForSchema","EuiToken","useDataGridColumnSorting","columns","sorting","schema","schemaDetectors","displayValues","isOpen","setIsOpen","avilableColumnsisOpen","setAvailableColumnsIsOpen","nextSortingColumns","availableColumnIds","Set","map","id","i","length","column","has","push","onSort","activeColumnIds","reduce","acc","activeColumns","inactiveColumns","onDragEnd","sourceIndex","source","index","destination","destinationIndex","nextColumns","controlBtnClasses","numberOfSortedFields","schemaDetails","hasOwnProperty","columnType","inactiveSortableColumns","filter","isSortable","schemaDetail","sortable","columnSorting","button","buttonActive","direction","sortFieldAriaLabel","defaultSortDirection","icon","color","undefined"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IACEC,QADF,EAEEC,QAFF,EAKEC,SALF,QAMO,OANP;AAOA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,YAA7C;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,SAA1C;AACA,SACEC,kBADF,EAEEC,YAFF,EAGEC,kBAHF,QAIO,kBAJP;AAMA,SAASC,iCAAT,QAAkD,4BAAlD;AACA,SAGEC,mBAHF,QAIO,oBAJP;AAKA,SAASC,QAAT,QAAyB,UAAzB;AAEA,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CACtCC,OADsC,EAEtCC,OAFsC,EAGtCC,MAHsC,EAItCC,eAJsC,EAKtCC,aALsC,EAMxB;AAAA,kBACcrB,QAAQ,CAAC,KAAD,CADtB;AAAA;AAAA,MACPsB,MADO;AAAA,MACCC,SADD;;AAAA,mBAE6CvB,QAAQ,CAAC,KAAD,CAFrD;AAAA;AAAA,MAEPwB,qBAFO;AAAA,MAEgBC,yBAFhB,kBAGd;;;AACAxB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIiB,OAAJ,EAAa;AACX,UAAMQ,kBAAiD,GAAG,EAA1D;AAEA,UAAMC,kBAAkB,GAAG,IAAIC,GAAJ,CAAQX,OAAO,CAACY,GAAR,CAAY;AAAA,YAAGC,EAAH,QAAGA,EAAH;AAAA,eAAYA,EAAZ;AAAA,OAAZ,CAAR,CAA3B;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,OAAO,CAACD,OAAR,CAAgBe,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;AAC/C,YAAME,MAAM,GAAGf,OAAO,CAACD,OAAR,CAAgBc,CAAhB,CAAf;;AACA,YAAIJ,kBAAkB,CAACO,GAAnB,CAAuBD,MAAM,CAACH,EAA9B,CAAJ,EAAuC;AACrCJ,UAAAA,kBAAkB,CAACS,IAAnB,CAAwBF,MAAxB;AACD;AACF,OATU,CAWX;;;AACA,UAAIP,kBAAkB,CAACM,MAAnB,KAA8Bd,OAAO,CAACD,OAAR,CAAgBe,MAAlD,EAA0D;AACxDd,QAAAA,OAAO,CAACkB,MAAR,CAAeV,kBAAf;AACD;AACF;AACF,GAjBQ,EAiBN,CAACT,OAAD,EAAUC,OAAV,CAjBM,CAAT;AAmBA,MAAIA,OAAO,IAAI,IAAf,EAAqB,OAAO,CAAC,IAAD,CAAP;AAErB,MAAMmB,eAAe,GAAG,IAAIT,GAAJ,CAAQV,OAAO,CAACD,OAAR,CAAgBY,GAAhB,CAAoB;AAAA,QAAGC,EAAH,SAAGA,EAAH;AAAA,WAAYA,EAAZ;AAAA,GAApB,CAAR,CAAxB;;AAzBc,wBA0Bcb,OAAO,CAACqB,MAAR,CAI1B,UAACC,GAAD,EAAMN,MAAN,EAAiB;AACf,QAAII,eAAe,CAACH,GAAhB,CAAoBD,MAAM,CAACH,EAA3B,CAAJ,EAAoC;AAClCS,MAAAA,GAAG,CAACC,aAAJ,CAAkBL,IAAlB,CAAuBF,MAAvB;AACD,KAFD,MAEO;AACLM,MAAAA,GAAG,CAACE,eAAJ,CAAoBN,IAApB,CAAyBF,MAAzB;AACD;;AACD,WAAOM,GAAP;AACD,GAXyB,EAY1B;AACEC,IAAAA,aAAa,EAAE,EADjB;AAEEC,IAAAA,eAAe,EAAE;AAFnB,GAZ0B,CA1Bd;AAAA,MA0BNA,eA1BM,mBA0BNA,eA1BM;;AA4Cd,WAASC,SAAT,QAGe;AAAA,QAFIC,WAEJ,SAFbC,MAEa,CAFHC,KAEG;AAAA,QADbC,WACa,SADbA,WACa;AACb,QAAMC,gBAAgB,GAAGD,WAAW,CAAED,KAAtC;AACA,QAAMG,WAAW,GAAGpC,kBAAkB,CACpCM,OAAO,CAAED,OAD2B,EAEpC0B,WAFoC,EAGpCI,gBAHoC,CAAtC;AAMA7B,IAAAA,OAAO,CAAEkB,MAAT,CAAgBY,WAAhB;AACD;;AAED,MAAMC,iBAAiB,GAAG/C,UAAU,CAAC,yBAAD,EAA4B;AAC9D,uCAAmCgB,OAAO,CAACD,OAAR,CAAgBe,MAAhB,GAAyB;AADE,GAA5B,CAApC;AAIA,MAAMkB,oBAAoB,GAAGhC,OAAO,CAACD,OAAR,CAAgBe,MAA7C;;AAEA,MAAMmB,aAAa,GAAG,SAAhBA,aAAgB,CAACrB,EAAD;AAAA,WACpBX,MAAM,CAACiC,cAAP,CAAsBtB,EAAtB,KAA6BX,MAAM,CAACW,EAAD,CAAN,CAAWuB,UAAX,IAAyB,IAAtD,GACIvC,mBAAmB,CAACM,eAAD,EAAkBD,MAAM,CAACW,EAAD,CAAN,CAAWuB,UAA7B,CADvB,GAEI,IAHgB;AAAA,GAAtB;;AAKA,MAAMC,uBAAuB,GAAGb,eAAe,CAACc,MAAhB,CAC9B,iBAAwB;AAAA,QAArBzB,EAAqB,SAArBA,EAAqB;AAAA,QAAjB0B,UAAiB,SAAjBA,UAAiB;AACtB,QAAMC,YAAY,GAAGN,aAAa,CAACrB,EAAD,CAAlC;AACA,QAAI4B,QAAQ,GAAG,IAAf;;AACA,QAAIF,UAAU,IAAI,IAAlB,EAAwB;AACtBE,MAAAA,QAAQ,GAAGF,UAAX;AACD,KAFD,MAEO,IAAIC,YAAY,IAAI,IAApB,EAA0B;AAC/BC,MAAAA,QAAQ,GAAGD,YAAY,CAACL,cAAb,CAA4B,YAA5B,IACPK,YAAY,CAACD,UADN,GAEP,IAFJ;AAGD;;AACD,WAAOE,QAAP;AACD,GAZ6B,CAAhC;AAeA,MAAMC,aAAa,gBACjB,oBAAC,UAAD;AACE,sBAAe,8BADjB;AAEE,IAAA,MAAM,EAAErC,MAFV;AAGE,IAAA,YAAY,EAAE;AAAA,aAAMC,SAAS,CAAC,KAAD,CAAf;AAAA,KAHhB;AAIE,IAAA,cAAc,EAAC,UAJjB;AAKE,IAAA,gBAAgB,EAAC,GALnB;AAME,IAAA,cAAc,EAAC,iCANjB;AAOE,IAAA,MAAM,eACJ,oBAAC,OAAD;AACE,MAAA,MAAM,EAAE,CAAC,yBAAD,EAA4B,+BAA5B,CADV;AAEE,MAAA,QAAQ,EAAE,CAAC,aAAD,EAAgB,eAAhB;AAFZ,OAGG;AAAA;AAAA,UAAEqC,MAAF;AAAA,UAAUC,YAAV;;AAAA,0BACC,oBAAC,cAAD;AACE,QAAA,IAAI,EAAC,IADP;AAEE,QAAA,QAAQ,EAAC,UAFX;AAGE,QAAA,KAAK,EAAC,MAHR;AAIE,QAAA,SAAS,EAAEZ,iBAJb;AAKE,0BAAe,6BALjB;AAME,QAAA,OAAO,EAAE;AAAA,iBAAM1B,SAAS,CAAC,CAACD,MAAF,CAAf;AAAA;AANX,SAOG4B,oBAAoB,GAAG,CAAvB,aACMA,oBADN,cAC8BW,YAD9B,IAEGD,MATN,CADD;AAAA,KAHH;AARJ,KA0BG1C,OAAO,CAACD,OAAR,CAAgBe,MAAhB,GAAyB,CAAzB,gBACC;AACE,IAAA,IAAI,EAAC,QADP;AAEE,iBAAU,WAFZ;AAGE,IAAA,SAAS,EAAC;AAHZ,kBAIE,oBAAC,kBAAD;AAAoB,IAAA,SAAS,EAAEU;AAA/B,kBACE,oBAAC,YAAD;AAAc,IAAA,WAAW,EAAC;AAA1B,kBACE,oBAAC,QAAD,QACGxB,OAAO,CAACD,OAAR,CAAgBY,GAAhB,CAAoB,iBAAoBgB,KAApB,EAA8B;AAAA,QAA3Bf,EAA2B,SAA3BA,EAA2B;AAAA,QAAvBgC,SAAuB,SAAvBA,SAAuB;AACjD,wBACE,oBAAC,iCAAD;AACE,MAAA,GAAG,EAAEhC,EADP;AAEE,MAAA,EAAE,EAAEA,EAFN;AAGE,MAAA,OAAO,EAAET,aAAa,CAACS,EAAD,CAHxB;AAIE,MAAA,SAAS,EAAEgC,SAJb;AAKE,MAAA,KAAK,EAAEjB,KALT;AAME,MAAA,OAAO,EAAE3B,OANX;AAOE,MAAA,MAAM,EAAEC,MAPV;AAQE,MAAA,eAAe,EAAEC;AARnB,MADF;AAYD,GAbA,CADH,CADF,CADF,CAJF,CADD,gBA2BC,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,GAAd;AAAkB,IAAA,KAAK,EAAC;AAAxB,kBACE;AAAG,IAAA,IAAI,EAAC;AAAR,kBACE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAC,+BADR;AAEE,IAAA,OAAO,EAAC;AAFV,IADF,CADF,CArDJ,EA8DG,CAACkC,uBAAuB,CAACtB,MAAxB,GAAiC,CAAjC,IAAsCd,OAAO,CAACD,OAAR,CAAgBe,MAAhB,GAAyB,CAAhE,kBACC,oBAAC,gBAAD,qBACE,oBAAC,YAAD;AACE,IAAA,UAAU,EAAC,GADb;AAEE,IAAA,cAAc,EAAC,cAFjB;AAGE,IAAA,UAAU,EAAE;AAHd,kBAIE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAE;AAAnB,KACGsB,uBAAuB,CAACtB,MAAxB,GAAiC,CAAjC,iBACC,oBAAC,UAAD;AACE,sBAAe,6CADjB;AAEE,IAAA,MAAM,EAAER,qBAFV;AAGE,IAAA,YAAY,EAAE;AAAA,aAAMC,yBAAyB,CAAC,KAAD,CAA/B;AAAA,KAHhB;AAIE,IAAA,cAAc,EAAC,UAJjB;AAKE,IAAA,gBAAgB,EAAC,MALnB;AAME,IAAA,MAAM,eACJ,oBAAC,cAAD;AACE,MAAA,IAAI,EAAC,IADP;AAEE,MAAA,KAAK,EAAC,MAFR;AAGE,MAAA,QAAQ,EAAC,WAHX;AAIE,MAAA,QAAQ,EAAC,OAJX;AAKE,MAAA,OAAO,EAAE;AAAA,eACPA,yBAAyB,CAAC,CAACD,qBAAF,CADlB;AAAA;AALX,oBAQE,oBAAC,OAAD;AACE,MAAA,KAAK,EAAC,6BADR;AAEE,MAAA,OAAO,EAAC;AAFV,MARF;AAPJ,kBAqBE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAC,qCADR;AAEE,IAAA,OAAO,EAAC;AAFV,KAGG,UAACuC,kBAAD;AAAA,wBACC;AACE,MAAA,SAAS,EAAC,qCADZ;AAEE,MAAA,IAAI,EAAC;AAFP,OAGGT,uBAAuB,CAACzB,GAAxB,CACC,iBAAkC;AAAA,UAA/BC,EAA+B,SAA/BA,EAA+B;AAAA,UAA3BkC,oBAA2B,SAA3BA,oBAA2B;AAChC,0BACE;AACE,QAAA,GAAG,EAAElC,EADP;AAEE,QAAA,SAAS,EAAC,iCAFZ;AAGE,gCAAeiC,kBAAf,cAAqCjC,EAArC,CAHF;AAIE,QAAA,IAAI,EAAC,QAJP;AAKE,yBAAc,OALhB;AAME,gFAA+DA,EAA/D,CANF;AAOE,QAAA,OAAO,EAAE,mBAAM;AACb,cAAMkB,WAAW,sBAAO9B,OAAO,CAACD,OAAf,CAAjB;;AACA+B,UAAAA,WAAW,CAACb,IAAZ,CAAiB;AACfL,YAAAA,EAAE,EAAFA,EADe;AAEfgC,YAAAA,SAAS,EACPE,oBAAoB,IACnBb,aAAa,CAACrB,EAAD,CAAb,IACCqB,aAAa,CAACrB,EAAD,CAAb,CACGkC,oBAHL,IAIA;AAPa,WAAjB;AASA9C,UAAAA,OAAO,CAACkB,MAAR,CAAeY,WAAf;AACD;AAnBH,sBAoBE,oBAAC,YAAD;AACE,QAAA,UAAU,EAAC,QADb;AAEE,QAAA,UAAU,EAAC,GAFb;AAGE,QAAA,SAAS,EAAC,MAHZ;AAIE,QAAA,UAAU,EAAE;AAJd,sBAKE,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAE;AAAnB,sBACE,oBAAC,QAAD;AACE,QAAA,QAAQ,EACNG,aAAa,CAACrB,EAAD,CAAb,IAAqB,IAArB,GACIhB,mBAAmB,CACjBM,eADiB,EAEjBD,MAAM,CAACW,EAAD,CAAN,CAAWuB,UAFM,CAAnB,CAGEY,IAJN,GAKI,aAPR;AASE,QAAA,KAAK,EACHd,aAAa,CAACrB,EAAD,CAAb,IAAqB,IAArB,GACIhB,mBAAmB,CACjBM,eADiB,EAEjBD,MAAM,CAACW,EAAD,CAAN,CAAWuB,UAFM,CAAnB,CAGEa,KAJN,GAKIC;AAfR,QADF,CALF,eAyBE,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAE;AAAnB,sBACE,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAC;AAAd,SACG9C,aAAa,CAACS,EAAD,CADhB,CADF,CAzBF,CApBF,CADF;AAsDD,KAxDF,CAHH,CADD;AAAA,GAHH,CArBF,CAFJ,CAJF,EAkGGZ,OAAO,CAACD,OAAR,CAAgBe,MAAhB,GAAyB,CAAzB,gBACC,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAE;AAAnB,kBACE,oBAAC,cAAD;AACE,IAAA,IAAI,EAAC,IADP;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMd,OAAO,CAACkB,MAAR,CAAe,EAAf,CAAN;AAAA;AAHX,kBAIE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAC,2BADR;AAEE,IAAA,OAAO,EAAC;AAFV,IAJF,CADF,CADD,GAYG,IA9GN,CADF,CA/DJ,CADF;AAsLA,SAAOuB,aAAP;AACD,CAjRM","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {\n  Fragment,\n  useState,\n  ReactChild,\n  ReactNode,\n  useEffect,\n} from 'react';\nimport classNames from 'classnames';\nimport { EuiDataGridColumn, EuiDataGridSorting } from './data_grid_types';\nimport { EuiPopover, EuiPopoverFooter } from '../popover';\nimport { EuiI18n } from '../i18n';\nimport { EuiText } from '../text';\nimport { EuiButtonEmpty } from '../button';\nimport { EuiFlexGroup, EuiFlexItem } from '../flex';\nimport {\n  EuiDragDropContext,\n  EuiDroppable,\n  euiDragDropReorder,\n} from '../drag_and_drop';\nimport { DropResult } from 'react-beautiful-dnd';\nimport { EuiDataGridColumnSortingDraggable } from './column_sorting_draggable';\nimport {\n  EuiDataGridSchema,\n  EuiDataGridSchemaDetector,\n  getDetailsForSchema,\n} from './data_grid_schema';\nimport { EuiToken } from '../token';\n\nexport const useDataGridColumnSorting = (\n  columns: EuiDataGridColumn[],\n  sorting: EuiDataGridSorting | undefined,\n  schema: EuiDataGridSchema,\n  schemaDetectors: EuiDataGridSchemaDetector[],\n  displayValues: { [key: string]: string }\n): ReactNode => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [avilableColumnsisOpen, setAvailableColumnsIsOpen] = useState(false);\n  // prune any non-existent/hidden columns from sorting\n  useEffect(() => {\n    if (sorting) {\n      const nextSortingColumns: EuiDataGridSorting['columns'] = [];\n\n      const availableColumnIds = new Set(columns.map(({ id }) => id));\n      for (let i = 0; i < sorting.columns.length; i++) {\n        const column = sorting.columns[i];\n        if (availableColumnIds.has(column.id)) {\n          nextSortingColumns.push(column);\n        }\n      }\n\n      // if the column array lengths differ then the sorting columns have been pruned\n      if (nextSortingColumns.length !== sorting.columns.length) {\n        sorting.onSort(nextSortingColumns);\n      }\n    }\n  }, [columns, sorting]);\n\n  if (sorting == null) return [null];\n\n  const activeColumnIds = new Set(sorting.columns.map(({ id }) => id));\n  const { inactiveColumns } = columns.reduce<{\n    activeColumns: EuiDataGridColumn[];\n    inactiveColumns: EuiDataGridColumn[];\n  }>(\n    (acc, column) => {\n      if (activeColumnIds.has(column.id)) {\n        acc.activeColumns.push(column);\n      } else {\n        acc.inactiveColumns.push(column);\n      }\n      return acc;\n    },\n    {\n      activeColumns: [],\n      inactiveColumns: [],\n    }\n  );\n\n  function onDragEnd({\n    source: { index: sourceIndex },\n    destination,\n  }: DropResult) {\n    const destinationIndex = destination!.index;\n    const nextColumns = euiDragDropReorder(\n      sorting!.columns,\n      sourceIndex,\n      destinationIndex\n    );\n\n    sorting!.onSort(nextColumns);\n  }\n\n  const controlBtnClasses = classNames('euiDataGrid__controlBtn', {\n    'euiDataGrid__controlBtn--active': sorting.columns.length > 0,\n  });\n\n  const numberOfSortedFields = sorting.columns.length;\n\n  const schemaDetails = (id: string | number) =>\n    schema.hasOwnProperty(id) && schema[id].columnType != null\n      ? getDetailsForSchema(schemaDetectors, schema[id].columnType)\n      : null;\n\n  const inactiveSortableColumns = inactiveColumns.filter(\n    ({ id, isSortable }) => {\n      const schemaDetail = schemaDetails(id);\n      let sortable = true;\n      if (isSortable != null) {\n        sortable = isSortable;\n      } else if (schemaDetail != null) {\n        sortable = schemaDetail.hasOwnProperty('isSortable')\n          ? schemaDetail.isSortable!\n          : true;\n      }\n      return sortable;\n    }\n  );\n\n  const columnSorting = (\n    <EuiPopover\n      data-test-subj=\"dataGridColumnSortingPopover\"\n      isOpen={isOpen}\n      closePopover={() => setIsOpen(false)}\n      anchorPosition=\"downLeft\"\n      panelPaddingSize=\"s\"\n      panelClassName=\"euiDataGridColumnSortingPopover\"\n      button={\n        <EuiI18n\n          tokens={['euiColumnSorting.button', 'euiColumnSorting.buttonActive']}\n          defaults={['Sort fields', 'fields sorted']}>\n          {([button, buttonActive]: ReactChild[]) => (\n            <EuiButtonEmpty\n              size=\"xs\"\n              iconType=\"sortable\"\n              color=\"text\"\n              className={controlBtnClasses}\n              data-test-subj=\"dataGridColumnSortingButton\"\n              onClick={() => setIsOpen(!isOpen)}>\n              {numberOfSortedFields > 0\n                ? `${numberOfSortedFields} ${buttonActive}`\n                : button}\n            </EuiButtonEmpty>\n          )}\n        </EuiI18n>\n      }>\n      {sorting.columns.length > 0 ? (\n        <div\n          role=\"region\"\n          aria-live=\"assertive\"\n          className=\"euiDataGrid__controlScroll\">\n          <EuiDragDropContext onDragEnd={onDragEnd}>\n            <EuiDroppable droppableId=\"columnSorting\">\n              <Fragment>\n                {sorting.columns.map(({ id, direction }, index) => {\n                  return (\n                    <EuiDataGridColumnSortingDraggable\n                      key={id}\n                      id={id}\n                      display={displayValues[id]}\n                      direction={direction}\n                      index={index}\n                      sorting={sorting}\n                      schema={schema}\n                      schemaDetectors={schemaDetectors}\n                    />\n                  );\n                })}\n              </Fragment>\n            </EuiDroppable>\n          </EuiDragDropContext>\n        </div>\n      ) : (\n        <EuiText size=\"s\" color=\"subdued\">\n          <p role=\"alert\">\n            <EuiI18n\n              token=\"euiColumnSorting.emptySorting\"\n              default=\"Currently no fields are sorted\"\n            />\n          </p>\n        </EuiText>\n      )}\n      {(inactiveSortableColumns.length > 0 || sorting.columns.length > 0) && (\n        <EuiPopoverFooter>\n          <EuiFlexGroup\n            gutterSize=\"m\"\n            justifyContent=\"spaceBetween\"\n            responsive={false}>\n            <EuiFlexItem grow={false}>\n              {inactiveSortableColumns.length > 0 && (\n                <EuiPopover\n                  data-test-subj=\"dataGridColumnSortingPopoverColumnSelection\"\n                  isOpen={avilableColumnsisOpen}\n                  closePopover={() => setAvailableColumnsIsOpen(false)}\n                  anchorPosition=\"downLeft\"\n                  panelPaddingSize=\"none\"\n                  button={\n                    <EuiButtonEmpty\n                      size=\"xs\"\n                      flush=\"left\"\n                      iconType=\"arrowDown\"\n                      iconSide=\"right\"\n                      onClick={() =>\n                        setAvailableColumnsIsOpen(!avilableColumnsisOpen)\n                      }>\n                      <EuiI18n\n                        token=\"euiColumnSorting.pickFields\"\n                        default=\"Pick fields to sort by\"\n                      />\n                    </EuiButtonEmpty>\n                  }>\n                  <EuiI18n\n                    token=\"euiColumnSorting.sortFieldAriaLabel\"\n                    default=\"Sort by: \">\n                    {(sortFieldAriaLabel: string) => (\n                      <div\n                        className=\"euiDataGridColumnSorting__fieldList\"\n                        role=\"listbox\">\n                        {inactiveSortableColumns.map(\n                          ({ id, defaultSortDirection }) => {\n                            return (\n                              <button\n                                key={id}\n                                className=\"euiDataGridColumnSorting__field\"\n                                aria-label={`${sortFieldAriaLabel} ${id}`}\n                                role=\"option\"\n                                aria-selected=\"false\"\n                                data-test-subj={`dataGridColumnSortingPopoverColumnSelection-${id}`}\n                                onClick={() => {\n                                  const nextColumns = [...sorting.columns];\n                                  nextColumns.push({\n                                    id,\n                                    direction:\n                                      defaultSortDirection ||\n                                      (schemaDetails(id) &&\n                                        schemaDetails(id)!\n                                          .defaultSortDirection) ||\n                                      'asc',\n                                  });\n                                  sorting.onSort(nextColumns);\n                                }}>\n                                <EuiFlexGroup\n                                  alignItems=\"center\"\n                                  gutterSize=\"s\"\n                                  component=\"span\"\n                                  responsive={false}>\n                                  <EuiFlexItem grow={false}>\n                                    <EuiToken\n                                      iconType={\n                                        schemaDetails(id) != null\n                                          ? getDetailsForSchema(\n                                              schemaDetectors,\n                                              schema[id].columnType\n                                            ).icon\n                                          : 'tokenString'\n                                      }\n                                      color={\n                                        schemaDetails(id) != null\n                                          ? getDetailsForSchema(\n                                              schemaDetectors,\n                                              schema[id].columnType\n                                            ).color\n                                          : undefined\n                                      }\n                                    />\n                                  </EuiFlexItem>\n                                  <EuiFlexItem grow={false}>\n                                    <EuiText size=\"xs\">\n                                      {displayValues[id]}\n                                    </EuiText>\n                                  </EuiFlexItem>\n                                </EuiFlexGroup>\n                              </button>\n                            );\n                          }\n                        )}\n                      </div>\n                    )}\n                  </EuiI18n>\n                </EuiPopover>\n              )}\n            </EuiFlexItem>\n            {sorting.columns.length > 0 ? (\n              <EuiFlexItem grow={false}>\n                <EuiButtonEmpty\n                  size=\"xs\"\n                  flush=\"right\"\n                  onClick={() => sorting.onSort([])}>\n                  <EuiI18n\n                    token=\"euiColumnSorting.clearAll\"\n                    default=\"Clear sorting\"\n                  />\n                </EuiButtonEmpty>\n              </EuiFlexItem>\n            ) : null}\n          </EuiFlexGroup>\n        </EuiPopoverFooter>\n      )}\n    </EuiPopover>\n  );\n\n  return columnSorting;\n};\n"]}]}