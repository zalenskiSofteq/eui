{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src-docs\\src\\views\\datagrid\\control_columns.js","dependencies":[{"path":"D:\\work\\eui\\src-docs\\src\\views\\datagrid\\control_columns.js","mtime":1649070093140},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src-docs/src/views/datagrid/control_columns.js"],"names":["React","createContext","useContext","useCallback","useReducer","useState","Fragment","fake","EuiDataGrid","EuiAvatar","EuiCheckbox","EuiButtonIcon","EuiPopover","EuiButtonEmpty","EuiFlexGroup","EuiFlexItem","EuiPopoverTitle","EuiSpacer","EuiPortal","EuiFlyout","EuiFlyoutBody","EuiFlyoutHeader","EuiTitle","EuiDescriptionList","EuiDescriptionListTitle","EuiDescriptionListDescription","columns","id","initialWidth","isExpandable","isResizable","headerCellRender","data","i","push","avatar","name","email","city","country","account","SelectionContext","SelectionButton","selectedRows","isPopoverOpen","setIsPopoverOpen","size","width","SelectionHeaderCell","updateSelectedRows","isIndeterminate","length","e","action","target","checked","SelectionRowCell","rowIndex","isChecked","has","FlyoutRowCell","flyout","isFlyoutOpen","setIsFlyoutOpen","rowData","details","Object","entries","map","key","value","leadingControlColumns","rowCellRender","trailingControlColumns","RowCellRender","DataGrid","pageIndex","pageSize","pagination","setPagination","setPageIndex","setPageSize","visibleColumns","setVisibleColumns","rowSelection","nextRowSelection","Set","add","delete","_","index","renderCellValue","columnId","pageSizeOptions","onChangeItemsPerPage","onChangePage","additionalControls"],"mappings":"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","sourcesContent":["import React, {\n  createContext,\n  useContext,\n  useCallback,\n  useReducer,\n  useState,\n  Fragment,\n} from 'react';\nimport { fake } from 'faker';\n\nimport {\n  EuiDataGrid,\n  EuiAvatar,\n  EuiCheckbox,\n  EuiButtonIcon,\n  EuiPopover,\n  EuiButtonEmpty,\n  EuiFlexGroup,\n  EuiFlexItem,\n  EuiPopoverTitle,\n  EuiSpacer,\n  EuiPortal,\n  EuiFlyout,\n  EuiFlyoutBody,\n  EuiFlyoutHeader,\n  EuiTitle,\n  EuiDescriptionList,\n  EuiDescriptionListTitle,\n  EuiDescriptionListDescription,\n} from '../../../../src/components/';\n\nconst columns = [\n  {\n    id: 'avatar',\n    initialWidth: 38,\n    isExpandable: false,\n    isResizable: false,\n    headerCellRender: () => null,\n  },\n  {\n    id: 'name',\n  },\n  {\n    id: 'email',\n  },\n  {\n    id: 'city',\n  },\n  {\n    id: 'country',\n  },\n  {\n    id: 'account',\n  },\n];\n\nconst data = [];\n\nfor (let i = 1; i < 500; i++) {\n  data.push({\n    avatar: (\n      <EuiAvatar\n        size=\"s\"\n        name={fake('{{name.lastName}}, {{name.firstName}}')}\n      />\n    ),\n    name: fake('{{name.lastName}}, {{name.firstName}} {{name.suffix}}'),\n    email: fake('{{internet.email}}'),\n    city: fake('{{address.city}}'),\n    country: fake('{{address.country}}'),\n    account: fake('{{finance.account}}'),\n  });\n}\n\nconst SelectionContext = createContext();\n\nconst SelectionButton = () => {\n  const [selectedRows] = useContext(SelectionContext);\n  const [isPopoverOpen, setIsPopoverOpen] = useState(false);\n  if (selectedRows.size > 0) {\n    return (\n      <EuiPopover\n        isOpen={isPopoverOpen}\n        anchorPosition=\"upCenter\"\n        panelPaddingSize=\"s\"\n        button={\n          <EuiButtonEmpty\n            size=\"xs\"\n            iconType=\"arrowDown\"\n            color=\"primary\"\n            className=\"euiDataGrid__controlBtn\"\n            onClick={() => setIsPopoverOpen(!isPopoverOpen)}>\n            {selectedRows.size} {selectedRows.size > 1 ? 'items' : 'item'}{' '}\n            selected\n          </EuiButtonEmpty>\n        }\n        closePopover={() => setIsPopoverOpen(false)}>\n        <EuiPopoverTitle>\n          {selectedRows.size} {selectedRows.size > 1 ? 'items' : 'item'}\n        </EuiPopoverTitle>\n        <div style={{ width: 150 }}>\n          <button onClick={() => {}} component=\"span\">\n            <EuiFlexGroup\n              responsive={false}\n              alignItems=\"center\"\n              component=\"span\"\n              gutterSize=\"s\">\n              <EuiFlexItem grow={false}>\n                <EuiButtonIcon\n                  aria-label=\"Pin selected items\"\n                  iconType=\"pin\"\n                  color=\"text\"\n                />\n              </EuiFlexItem>\n              <EuiFlexItem>Pin items</EuiFlexItem>\n            </EuiFlexGroup>\n          </button>\n          <EuiSpacer size=\"s\" />\n          <button onClick={() => {}}>\n            <EuiFlexGroup\n              responsive={false}\n              alignItems=\"center\"\n              component=\"span\"\n              gutterSize=\"s\">\n              <EuiFlexItem grow={false}>\n                <EuiButtonIcon\n                  aria-label=\"Delete selected items\"\n                  iconType=\"trash\"\n                  color=\"text\"\n                />\n              </EuiFlexItem>\n              <EuiFlexItem>Delete items</EuiFlexItem>\n            </EuiFlexGroup>\n          </button>\n        </div>\n      </EuiPopover>\n    );\n  } else {\n    return null;\n  }\n};\n\nconst SelectionHeaderCell = () => {\n  const [selectedRows, updateSelectedRows] = useContext(SelectionContext);\n  const isIndeterminate =\n    selectedRows.size > 0 && selectedRows.size < data.length;\n  return (\n    <EuiCheckbox\n      id=\"selection-toggle\"\n      aria-label=\"Select all rows\"\n      indeterminate={isIndeterminate}\n      checked={selectedRows.size > 0}\n      onChange={(e) => {\n        if (isIndeterminate) {\n          // clear selection\n          updateSelectedRows({ action: 'clear' });\n        } else {\n          if (e.target.checked) {\n            // select everything\n            updateSelectedRows({ action: 'selectAll' });\n          } else {\n            // clear selection\n            updateSelectedRows({ action: 'clear' });\n          }\n        }\n      }}\n    />\n  );\n};\n\nconst SelectionRowCell = ({ rowIndex }) => {\n  const [selectedRows, updateSelectedRows] = useContext(SelectionContext);\n  const isChecked = selectedRows.has(rowIndex);\n\n  return (\n    <div>\n      <EuiCheckbox\n        id={`${rowIndex}`}\n        aria-label={`Select row ${rowIndex}, ${data[rowIndex].name}`}\n        checked={isChecked}\n        onChange={(e) => {\n          if (e.target.checked) {\n            updateSelectedRows({ action: 'add', rowIndex });\n          } else {\n            updateSelectedRows({ action: 'delete', rowIndex });\n          }\n        }}\n      />\n    </div>\n  );\n};\n\nconst FlyoutRowCell = (rowIndex) => {\n  let flyout;\n  const [isFlyoutOpen, setIsFlyoutOpen] = useState(false);\n  if (isFlyoutOpen) {\n    const rowData = data[rowIndex.rowIndex];\n\n    const details = Object.entries(rowData).map(([key, value]) => {\n      return (\n        <Fragment>\n          <EuiDescriptionListTitle>{key}</EuiDescriptionListTitle>\n          <EuiDescriptionListDescription>{value}</EuiDescriptionListDescription>\n        </Fragment>\n      );\n    });\n\n    flyout = (\n      <EuiPortal>\n        <EuiFlyout ownFocus onClose={() => setIsFlyoutOpen(!isFlyoutOpen)}>\n          <EuiFlyoutHeader hasBorder>\n            <EuiTitle size=\"m\">\n              <h2>{rowData.name}</h2>\n            </EuiTitle>\n          </EuiFlyoutHeader>\n          <EuiFlyoutBody>\n            <EuiDescriptionList>{details}</EuiDescriptionList>\n          </EuiFlyoutBody>\n        </EuiFlyout>\n      </EuiPortal>\n    );\n  }\n\n  return (\n    <Fragment>\n      <EuiButtonIcon\n        color=\"text\"\n        iconType=\"eye\"\n        iconSize=\"s\"\n        aria-label=\"View details\"\n        onClick={() => setIsFlyoutOpen(!isFlyoutOpen)}\n      />\n      {flyout}\n    </Fragment>\n  );\n};\n\nconst leadingControlColumns = [\n  {\n    id: 'selection',\n    width: 32,\n    headerCellRender: SelectionHeaderCell,\n    rowCellRender: SelectionRowCell,\n  },\n  {\n    id: 'View',\n    width: 36,\n    headerCellRender: () => null,\n    rowCellRender: FlyoutRowCell,\n  },\n];\n\nconst trailingControlColumns = [\n  {\n    id: 'actions',\n    width: 40,\n    headerCellRender: () => null,\n    rowCellRender: function RowCellRender() {\n      const [isPopoverOpen, setIsPopoverOpen] = useState(false);\n      return (\n        <div>\n          <EuiPopover\n            isOpen={isPopoverOpen}\n            anchorPosition=\"upCenter\"\n            panelPaddingSize=\"s\"\n            button={\n              <EuiButtonIcon\n                aria-label=\"show actions\"\n                iconType=\"boxesHorizontal\"\n                color=\"text\"\n                onClick={() => setIsPopoverOpen(!isPopoverOpen)}\n              />\n            }\n            closePopover={() => setIsPopoverOpen(false)}>\n            <EuiPopoverTitle>Actions</EuiPopoverTitle>\n            <div style={{ width: 150 }}>\n              <button onClick={() => {}} component=\"span\">\n                <EuiFlexGroup\n                  alignItems=\"center\"\n                  component=\"span\"\n                  gutterSize=\"s\">\n                  <EuiFlexItem grow={false}>\n                    <EuiButtonIcon\n                      aria-label=\"Pin selected items\"\n                      iconType=\"pin\"\n                      color=\"text\"\n                    />\n                  </EuiFlexItem>\n                  <EuiFlexItem>Pin</EuiFlexItem>\n                </EuiFlexGroup>\n              </button>\n              <EuiSpacer size=\"s\" />\n              <button onClick={() => {}}>\n                <EuiFlexGroup\n                  alignItems=\"center\"\n                  component=\"span\"\n                  gutterSize=\"s\">\n                  <EuiFlexItem grow={false}>\n                    <EuiButtonIcon\n                      aria-label=\"Delete selected items\"\n                      iconType=\"trash\"\n                      color=\"text\"\n                    />\n                  </EuiFlexItem>\n                  <EuiFlexItem>Delete</EuiFlexItem>\n                </EuiFlexGroup>\n              </button>\n            </div>\n          </EuiPopover>\n        </div>\n      );\n    },\n  },\n];\n\nexport default function DataGrid() {\n  const [pagination, setPagination] = useState({\n    pageIndex: 0,\n    pageSize: 15,\n  });\n  const setPageIndex = useCallback(\n    (pageIndex) => setPagination({ ...pagination, pageIndex }),\n    [pagination, setPagination]\n  );\n  const setPageSize = useCallback(\n    (pageSize) => setPagination({ ...pagination, pageSize, pageIndex: 0 }),\n    [pagination, setPagination]\n  );\n\n  const [visibleColumns, setVisibleColumns] = useState(() =>\n    columns.map(({ id }) => id)\n  );\n\n  const rowSelection = useReducer((rowSelection, { action, rowIndex }) => {\n    if (action === 'add') {\n      const nextRowSelection = new Set(rowSelection);\n      nextRowSelection.add(rowIndex);\n      return nextRowSelection;\n    } else if (action === 'delete') {\n      const nextRowSelection = new Set(rowSelection);\n      nextRowSelection.delete(rowIndex);\n      return nextRowSelection;\n    } else if (action === 'clear') {\n      return new Set();\n    } else if (action === 'selectAll') {\n      return new Set(data.map((_, index) => index));\n    }\n    return rowSelection;\n  }, new Set());\n\n  const renderCellValue = useCallback(\n    ({ rowIndex, columnId }) => data[rowIndex][columnId],\n    []\n  );\n\n  return (\n    <SelectionContext.Provider value={rowSelection}>\n      <div>\n        <EuiDataGrid\n          aria-label=\"Top EUI contributors\"\n          leadingControlColumns={leadingControlColumns}\n          trailingControlColumns={trailingControlColumns}\n          columns={columns}\n          columnVisibility={{\n            visibleColumns,\n            setVisibleColumns,\n          }}\n          rowCount={data.length}\n          renderCellValue={renderCellValue}\n          pagination={{\n            ...pagination,\n            pageSizeOptions: [5, 15, 25],\n            onChangeItemsPerPage: setPageSize,\n            onChangePage: setPageIndex,\n          }}\n          toolbarVisibility={{\n            additionalControls: <SelectionButton />,\n          }}\n        />\n      </div>\n    </SelectionContext.Provider>\n  );\n}\n"]}]}