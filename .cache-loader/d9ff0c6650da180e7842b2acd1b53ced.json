{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\services\\random.ts","dependencies":[{"path":"D:\\work\\eui\\src\\services\\random.ts","mtime":1649070093846},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/services/random.ts"],"names":["moment","isNil","times","defaultRand","Math","random","Random","rand","options","min","Number","MIN_VALUE","max","MAX_VALUE","delta","ceil","floor","values","length","index","count","integer","copy","value","oneOf","splice","indexOf","Date","now","minMls","getTime","maxMls","time"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport moment from 'moment';\nimport { isNil } from './predicate';\nimport { times } from './utils';\n\nconst defaultRand = Math.random;\n\nexport class Random {\n  private readonly rand: () => number;\n\n  constructor(rand = defaultRand) {\n    this.rand = rand;\n  }\n\n  boolean = () => {\n    return this.rand() > 0.5;\n  };\n\n  number = (options: { min?: number; max?: number } = {}) => {\n    const min = isNil(options.min) ? Number.MIN_VALUE : options.min!;\n    const max = isNil(options.max) ? Number.MAX_VALUE : options.max!;\n    const delta = this.rand() * (max - min);\n    return min + delta;\n  };\n\n  integer = (options: { min?: number; max?: number } = {}) => {\n    const min = Math.ceil(isNil(options.min) ? Number.MIN_VALUE : options.min!);\n    const max = Math.floor(\n      isNil(options.max) ? Number.MAX_VALUE : options.max!\n    );\n    const delta = Math.floor(this.rand() * (max - min + 1));\n    return min + delta;\n  };\n\n  oneOf = <T>(values: T[]): T => {\n    return values[Math.floor(this.rand() * values.length)];\n  };\n\n  oneToOne = <T>(values: T[], index: number): T => {\n    return values[index];\n  };\n\n  setOf = <T>(\n    values: T[],\n    options: { min?: number; max?: number } = {}\n  ): T[] => {\n    const count = this.integer({ min: 0, max: values.length, ...options });\n    const copy = [...values];\n    return times(count, () => {\n      const value = this.oneOf(copy);\n      copy.splice(copy.indexOf(value), 1);\n      return value;\n    });\n  };\n\n  date = (options: { min?: Date; max?: Date } = {}) => {\n    const min = isNil(options.min) ? new Date(0) : options.min!;\n    const max = isNil(options.max) ? new Date(Date.now()) : options.max!;\n    const minMls = min.getTime();\n    const maxMls = max.getTime();\n    const time = this.integer({ min: minMls, max: maxMls });\n    return new Date(time);\n  };\n\n  moment = (options: { min?: moment.Moment; max?: moment.Moment } = {}) => {\n    const min = isNil(options.min) ? moment(0) : options.min!;\n    const max = isNil(options.max) ? moment() : options.max!;\n    const minMls = +min;\n    const maxMls = +max;\n    const time = this.integer({ min: minMls, max: maxMls });\n    return moment(time);\n  };\n}\n"]}]}