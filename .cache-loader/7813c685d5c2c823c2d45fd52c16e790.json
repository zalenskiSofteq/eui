{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src-docs\\src\\views\\elastic_charts\\time_chart.js","dependencies":[{"path":"D:\\work\\eui\\src-docs\\src\\views\\elastic_charts\\time_chart.js","mtime":1649070093150},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src-docs/src/views/elastic_charts/time_chart.js"],"names":["React","useState","useContext","Fragment","ThemeContext","Chart","BarSeries","Settings","Axis","timeFormatter","niceTimeFormatByDay","LineSeries","EUI_CHARTS_THEME_DARK","EUI_CHARTS_THEME_LIGHT","EuiSpacer","EuiTitle","EuiFlexGrid","EuiFlexItem","EuiCopy","EuiButton","formatDate","dateFormatAliases","TIME_DATA","TIME_DATA_2","ChartTypeCard","CHART_COMPONENTS","MultiChartCard","ChartCard","TimeChart","themeContext","multi","setMulti","stacked","setStacked","chartType","setChartType","onMultiChange","multiObject","onChartTypeChange","isDarkTheme","theme","includes","ChartType","ChartType2","isBadChart","height","undefined","Date","now","date","copy"],"mappings":"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","sourcesContent":["import React, { useState, useContext, Fragment } from 'react';\nimport { ThemeContext } from '../../components';\nimport {\n  Chart,\n  BarSeries,\n  Settings,\n  Axis,\n  timeFormatter,\n  niceTimeFormatByDay,\n  LineSeries,\n} from '@elastic/charts';\n\nimport {\n  EUI_CHARTS_THEME_DARK,\n  EUI_CHARTS_THEME_LIGHT,\n} from '../../../../src/themes/charts/themes';\n\nimport {\n  EuiSpacer,\n  EuiTitle,\n  EuiFlexGrid,\n  EuiFlexItem,\n  EuiCopy,\n  EuiButton,\n} from '../../../../src/components';\n\nimport { formatDate, dateFormatAliases } from '../../../../src/services';\n\nimport { TIME_DATA, TIME_DATA_2 } from './data';\nimport {\n  ChartTypeCard,\n  CHART_COMPONENTS,\n  MultiChartCard,\n  ChartCard,\n} from './shared';\n\nexport const TimeChart = () => {\n  const themeContext = useContext(ThemeContext);\n\n  const [multi, setMulti] = useState(false);\n  const [stacked, setStacked] = useState(false);\n  const [chartType, setChartType] = useState('BarSeries');\n\n  const onMultiChange = (multiObject) => {\n    const { multi, stacked } = multiObject;\n    setMulti(multi);\n    setStacked(stacked);\n  };\n\n  const onChartTypeChange = (chartType) => {\n    setChartType(chartType);\n  };\n\n  const isDarkTheme = themeContext.theme.includes('dark');\n  const theme = isDarkTheme\n    ? EUI_CHARTS_THEME_DARK.theme\n    : EUI_CHARTS_THEME_LIGHT.theme;\n\n  let ChartType = CHART_COMPONENTS[chartType];\n  let ChartType2 = CHART_COMPONENTS[chartType];\n  if (chartType === 'Mixed') {\n    ChartType = BarSeries;\n    ChartType2 = LineSeries;\n  }\n\n  const isBadChart = chartType === 'LineSeries' && stacked;\n\n  return (\n    <Fragment>\n      <EuiTitle size=\"xxs\">\n        <h2>\n          Number of {!multi && 'financial '}robo-calls\n          {multi && ' by type'}\n        </h2>\n      </EuiTitle>\n\n      <EuiSpacer size=\"s\" />\n\n      <Chart size={{ height: 200 }}>\n        <Settings\n          theme={theme}\n          showLegend={multi}\n          legendPosition=\"right\"\n          tooltip=\"cross\"\n        />\n        <ChartType\n          id=\"financial\"\n          name=\"Financial\"\n          data={TIME_DATA}\n          xScaleType=\"time\"\n          xAccessor={0}\n          yAccessors={[1]}\n          stackAccessors={stacked ? [0] : undefined}\n        />\n        {multi && (\n          <ChartType2\n            id=\"tech\"\n            name=\"Tech support\"\n            data={TIME_DATA_2}\n            xScaleType=\"time\"\n            xAccessor={0}\n            yAccessors={[1]}\n            stackAccessors={stacked ? [0] : undefined}\n          />\n        )}\n        <Axis\n          title={formatDate(Date.now(), dateFormatAliases.date)}\n          id=\"bottom-axis\"\n          position=\"bottom\"\n          tickFormat={timeFormatter(niceTimeFormatByDay(1))}\n          showGridLines={chartType !== 'BarSeries'}\n          tickPadding={0}\n        />\n        <Axis id=\"left-axis\" position=\"left\" showGridLines />\n      </Chart>\n\n      <EuiSpacer />\n\n      <EuiFlexGrid columns={3}>\n        <EuiFlexItem>\n          <ChartTypeCard\n            type=\"Time series\"\n            onChange={onChartTypeChange}\n            mixed={multi ? 'enabled' : 'disabled'}\n          />\n        </EuiFlexItem>\n\n        <EuiFlexItem>\n          <MultiChartCard onChange={onMultiChange} />\n        </EuiFlexItem>\n\n        <EuiFlexItem>\n          <ChartCard\n            title=\"Tick marks\"\n            description=\"If the tick marks all share a portion of their date (e.g. they're all on the same day) format the ticks to only display the disparate portions of the timestamp and show the common portion as the axis title.\"\n          />\n        </EuiFlexItem>\n      </EuiFlexGrid>\n\n      <EuiSpacer />\n\n      <div className=\"eui-textCenter\">\n        <EuiCopy\n          textToCopy={`<Chart size={{height: 200}}>\n  <Settings\n    theme={isDarkTheme ? EUI_CHARTS_THEME_DARK.theme : EUI_CHARTS_THEME_LIGHT.theme}\n    showLegend={${multi}}\n    ${multi ? 'legendPosition=\"right\"' : ''}\n  />\n  <${chartType === 'Mixed' ? 'BarSeries' : chartType}\n    id=\"financial\"\n    name=\"Financial\"\n    data={[[0,1],[1,2]]}\n    xScaleType=\"time\"\n    xAccessor={0}\n    yAccessors={[1]}\n    ${stacked ? 'stackAccessors={[0]}' : ''}\n  />\n  ${\n    multi\n      ? `<${chartType === 'Mixed' ? 'LineSeries' : chartType}\n      id=\"tech\"\n      name=\"Tech support\"\n      data={[[0,1],[1,2]]}\n      xScaleType=\"time\"\n      xAccessor={0}\n      yAccessors={[1]}\n      ${stacked ? 'stackAccessors={[0]}' : ''}\n    />`\n      : ''\n  }\n  <Axis\n    title={formatDate(Date.now(), dateFormatAliases.date)}\n    id=\"bottom-axis\"\n    position=\"bottom\"\n    tickFormat={timeFormatter(niceTimeFormatByDay(1))}\n    ${chartType !== 'BarSeries' ? 'showGridLines' : ''}\n  />\n  <Axis\n    id=\"left-axis\"\n    position=\"left\"\n    showGridLines\n  />\n</Chart>`}>\n          {(copy) => (\n            <EuiButton\n              fill\n              onClick={copy}\n              iconType=\"copyClipboard\"\n              disabled={isBadChart}>\n              {isBadChart\n                ? \"Bad chart, don't copy\"\n                : 'Copy code of current configuration'}\n            </EuiButton>\n          )}\n        </EuiCopy>\n      </div>\n    </Fragment>\n  );\n};\n"]}]}