{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src-docs\\src\\views\\elastic_charts\\category_chart.js","dependencies":[{"path":"D:\\work\\eui\\src-docs\\src\\views\\elastic_charts\\category_chart.js","mtime":1649070093150},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src-docs/src/views/elastic_charts/category_chart.js"],"names":["React","useState","Fragment","useContext","orderBy","round","ThemeContext","Chart","Settings","Axis","EUI_CHARTS_THEME_DARK","EUI_CHARTS_THEME_LIGHT","EuiSwitch","EuiSpacer","EuiTitle","EuiFlexGrid","EuiFlexItem","EuiCode","EuiCopy","EuiButton","SIMPLE_GITHUB_DATASET","GITHUB_DATASET","ChartTypeCard","MultiChartCard","CHART_COMPONENTS","ChartCard","CategoryChart","themeContext","multi","setMulti","stacked","setStacked","rotated","setRotated","ordered","setOrdered","formatted","setFormatted","chartType","setChartType","onMultiChange","multiObject","onRotatedChange","e","target","checked","onOrderedChange","onFormatChange","onChartTypeChange","isDarkTheme","theme","includes","ChartType","DATASET","height","undefined","d","Number","copy"],"mappings":"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","sourcesContent":["import React, { useState, Fragment, useContext } from 'react';\nimport orderBy from 'lodash/orderBy';\nimport round from 'lodash/round';\n\nimport { ThemeContext } from '../../components';\nimport { Chart, Settings, Axis } from '@elastic/charts';\n\nimport {\n  EUI_CHARTS_THEME_DARK,\n  EUI_CHARTS_THEME_LIGHT,\n} from '../../../../src/themes/charts/themes';\n\nimport {\n  EuiSwitch,\n  EuiSpacer,\n  EuiTitle,\n  EuiFlexGrid,\n  EuiFlexItem,\n  EuiCode,\n  EuiCopy,\n  EuiButton,\n} from '../../../../src/components';\n\nimport { SIMPLE_GITHUB_DATASET, GITHUB_DATASET } from './data';\nimport {\n  ChartTypeCard,\n  MultiChartCard,\n  CHART_COMPONENTS,\n  ChartCard,\n} from './shared';\n\nexport const CategoryChart = () => {\n  const themeContext = useContext(ThemeContext);\n\n  const [multi, setMulti] = useState(false);\n  const [stacked, setStacked] = useState(false);\n  const [rotated, setRotated] = useState(true);\n  const [ordered, setOrdered] = useState(true);\n  const [formatted, setFormatted] = useState(false);\n  const [chartType, setChartType] = useState('BarSeries');\n\n  const onMultiChange = (multiObject) => {\n    const { multi, stacked } = multiObject;\n    setMulti(multi);\n    setStacked(stacked);\n  };\n\n  const onRotatedChange = (e) => {\n    setRotated(e.target.checked);\n  };\n\n  const onOrderedChange = (e) => {\n    setOrdered(e.target.checked);\n  };\n\n  const onFormatChange = (e) => {\n    setFormatted(e.target.checked);\n  };\n\n  const onChartTypeChange = (chartType) => {\n    setChartType(chartType);\n  };\n\n  const isDarkTheme = themeContext.theme.includes('dark');\n  const theme = isDarkTheme\n    ? EUI_CHARTS_THEME_DARK.theme\n    : EUI_CHARTS_THEME_LIGHT.theme;\n\n  const ChartType = CHART_COMPONENTS[chartType];\n\n  const DATASET = multi ? GITHUB_DATASET : SIMPLE_GITHUB_DATASET;\n\n  return (\n    <Fragment>\n      <EuiTitle size=\"xxs\">\n        <h2>\n          Number of GitHub issues per visualization type\n          {multi && ' by type of issue'}\n        </h2>\n      </EuiTitle>\n\n      <EuiSpacer size=\"s\" />\n\n      <Chart size={{ height: 300 }}>\n        <Settings\n          theme={theme}\n          showLegend={multi}\n          legendPosition=\"right\"\n          rotation={rotated ? 90 : 0}\n        />\n        <ChartType\n          id=\"issues\"\n          name=\"Issues\"\n          data={\n            ordered\n              ? orderBy(DATASET, ['count'], ['desc'])\n              : orderBy(DATASET, ['vizType'], ['asc'])\n          }\n          xAccessor=\"vizType\"\n          yAccessors={['count']}\n          splitSeriesAccessors={multi ? ['issueType'] : undefined}\n          stackAccessors={stacked ? ['issueType'] : undefined}\n        />\n        <Axis\n          id=\"bottom-axis\"\n          position={rotated ? 'left' : 'bottom'}\n          showGridLines={false}\n        />\n        <Axis\n          id=\"left-axis\"\n          position={rotated ? 'bottom' : 'left'}\n          tickFormat={\n            formatted ? (d) => `${round(Number(d) / 1000, 2)}k` : undefined\n          }\n        />\n      </Chart>\n\n      <EuiSpacer />\n\n      <EuiFlexGrid columns={3}>\n        <EuiFlexItem>\n          <ChartCard\n            title=\"Chart titles\"\n            description=\"A meaningful, descriptive title can often eliminate the need for axis titles entirely. That title may need to dynamically change depending on the number of series data rendered.\"\n          />\n        </EuiFlexItem>\n\n        <EuiFlexItem>\n          <ChartCard\n            title=\"Order and rotation\"\n            description=\"Categorical data is often easier to compare when sorted by sequence. Use a horizontal layout when you need more space for the category labels.\">\n            <EuiSwitch\n              label=\"Order by count descending\"\n              checked={ordered}\n              onChange={onOrderedChange}\n            />\n            <EuiSpacer size=\"s\" />\n            <EuiSwitch\n              label=\"Rotate 90deg\"\n              checked={rotated}\n              onChange={onRotatedChange}\n            />\n          </ChartCard>\n        </EuiFlexItem>\n\n        <EuiFlexItem>\n          <ChartCard\n            title=\"Tick marks\"\n            description=\"Tick marks should be spaced out properly and number values formatted. For example, if the number is in the thousands, remove a few numerals and add the `k` symbol.\">\n            <EuiCode>1000 ⇢ 1k</EuiCode> &nbsp; <EuiCode>20000 ⇢ 20k</EuiCode>\n            <EuiSpacer size=\"s\" />\n            <EuiSwitch\n              label=\"Simulate thousands formatting\"\n              checked={formatted}\n              onChange={onFormatChange}\n            />\n          </ChartCard>\n        </EuiFlexItem>\n\n        <EuiFlexItem>\n          <ChartTypeCard\n            type=\"Although we recommend only bar charts, categorical\"\n            onChange={onChartTypeChange}\n            disabled\n          />\n        </EuiFlexItem>\n\n        <EuiFlexItem>\n          <MultiChartCard onChange={onMultiChange} />\n        </EuiFlexItem>\n      </EuiFlexGrid>\n\n      <EuiSpacer />\n\n      <div className=\"eui-textCenter\">\n        <EuiCopy\n          textToCopy={`<Chart size={{height: 300}}>\n  <Settings\n    theme={isDarkTheme ? EUI_CHARTS_THEME_DARK.theme : EUI_CHARTS_THEME_LIGHT.theme}\n    rotation={${rotated ? 90 : 0}}\n    showLegend={${multi}}\n    ${multi ? 'legendPosition=\"right\"' : ''}\n  />\n  <${chartType}\n    id=\"issues\"\n    name=\"Issues\"\n    data={${\n      ordered\n        ? \"orderBy([{vizType: 'Data Table', count: 24, issueType: 'Bug'},{vizType: 'Heatmap',count: 12, issueType: 'Other'}], ['count'], ['desc'])\"\n        : \"orderBy([{vizType: 'Data Table', count: 24, issueType: 'Bug'},{vizType: 'Heatmap',count: 12, issueType: 'Other'}], ['vizType'], ['asc'])\"\n    }}\n    xAccessor=\"vizType\"\n    yAccessors={['count']}\n    ${multi ? \"splitSeriesAccessors={['issueType']}\" : ''}\n    ${stacked ? \"stackAccessors={['issueType']}\" : ''}\n  />\n  <Axis\n    id=\"bottom-axis\"\n    position={${rotated ? 'left' : 'bottom'}}\n    showGridLines={false}\n  />\n  <Axis\n    id=\"left-axis\"\n    position={${rotated ? 'bottom' : 'left'}}\n    ${formatted ? 'tickFormat={d => `${round(Number(d) / 1000, 2)}k`}' : ''}\n  />\n</Chart>`}>\n          {(copy) => (\n            <EuiButton fill onClick={copy} iconType=\"copyClipboard\">\n              Copy code of current configuration\n            </EuiButton>\n          )}\n        </EuiCopy>\n      </div>\n    </Fragment>\n  );\n};\n"]}]}