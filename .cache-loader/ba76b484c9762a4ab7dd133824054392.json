{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\selectable\\selectable_templates\\selectable_template_sitewide.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\selectable\\selectable_templates\\selectable_template_sitewide.tsx","mtime":1649070093764},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/selectable/selectable_templates/selectable_template_sitewide.tsx"],"names":["React","useState","useEffect","classNames","useCombinedRefs","throttle","EuiSelectable","EuiPopoverTitle","EuiPopoverFooter","EuiPopover","useEuiI18n","EuiI18n","EuiSelectableMessage","EuiLoadingSpinner","euiSelectableTemplateSitewideFormatOptions","euiSelectableTemplateSitewideRenderOptions","isWithinBreakpoints","EuiSpacer","EuiSelectableTemplateSitewide","children","className","options","popoverProps","popoverTitle","popoverFooter","searchProps","listProps","isLoading","popoverButton","popoverButtonBreakpoints","rest","window","innerWidth","canShowPopoverButton","setCanShowPopoverButton","functionToCallOnWindowResize","newWidthIsWithinBreakpoint","addEventListener","removeEventListener","searchPlaceholder","popoverRef","setPopoverRef","popoverIsOpen","setPopoverIsOpen","_closePopover","closePopover","panelRef","width","popoverRest","togglePopover","popoverWidth","setPanelRef","searchOnFocus","e","onFocus","onSearchInput","onInput","searchOnBlur","onBlur","contains","relatedTarget","classes","searchClasses","listClasses","formattedOptions","loadingMessage","minHeight","emptyMessage","popoverTrigger","cloneElement","props","onClick","onKeyDown","stopPropagation","placeholder","isClearable","rowHeight","showIcons","onFocusBadge","iconSide","list","search","maxWidth","undefined"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { useCombinedRefs, throttle } from '../../../services';\nimport { EuiSelectable } from '../selectable';\nimport { EuiPopoverTitle, EuiPopoverFooter } from '../../popover';\nimport { EuiPopover } from '../../popover/popover';\nimport { useEuiI18n, EuiI18n } from '../../i18n';\nimport { EuiSelectableMessage } from '../selectable_message';\nimport { EuiLoadingSpinner } from '../../loading';\nimport { euiSelectableTemplateSitewideFormatOptions, euiSelectableTemplateSitewideRenderOptions } from './selectable_template_sitewide_option';\nimport { isWithinBreakpoints } from '../../../services/breakpoint';\nimport { EuiSpacer } from '../../spacer';\nexport var EuiSelectableTemplateSitewide = ({\n  children,\n  className,\n  options,\n  popoverProps,\n  popoverTitle,\n  popoverFooter,\n  searchProps,\n  listProps,\n  isLoading,\n  popoverButton,\n  popoverButtonBreakpoints,\n  ...rest\n}) => {\n  /**\n   * Breakpoint management\n   */\n  const [canShowPopoverButton, setCanShowPopoverButton] = useState(typeof window !== 'undefined' && popoverButtonBreakpoints ? isWithinBreakpoints(window.innerWidth, popoverButtonBreakpoints) : true);\n  const functionToCallOnWindowResize = throttle(() => {\n    const newWidthIsWithinBreakpoint = popoverButtonBreakpoints ? isWithinBreakpoints(window.innerWidth, popoverButtonBreakpoints) : true;\n\n    if (newWidthIsWithinBreakpoint !== canShowPopoverButton) {\n      setCanShowPopoverButton(newWidthIsWithinBreakpoint);\n    } // reacts every 50ms to resize changes and always gets the final update\n\n  }, 50); // Add window resize handlers\n\n  useEffect(() => {\n    window.addEventListener('resize', functionToCallOnWindowResize);\n    return () => {\n      window.removeEventListener('resize', functionToCallOnWindowResize);\n    };\n  }, [functionToCallOnWindowResize]);\n  /**\n   * i18n text\n   */\n\n  const [searchPlaceholder] = useEuiI18n(['euiSelectableTemplateSitewide.searchPlaceholder'], ['Search for anything...']);\n  /**\n   * Popover helpers\n   */\n\n  const [popoverRef, setPopoverRef] = useState(null);\n  const [popoverIsOpen, setPopoverIsOpen] = useState(false);\n  const {\n    closePopover: _closePopover,\n    panelRef,\n    width,\n    ...popoverRest\n  } = { ...popoverProps\n  };\n\n  const closePopover = () => {\n    setPopoverIsOpen(false);\n    _closePopover && _closePopover();\n  };\n\n  const togglePopover = () => {\n    setPopoverIsOpen(!popoverIsOpen);\n  }; // Width applied to the internal div\n\n\n  const popoverWidth = width || 600;\n  const setPanelRef = useCombinedRefs([setPopoverRef, panelRef]);\n  /**\n   * Search helpers\n   */\n\n  const searchOnFocus = e => {\n    searchProps && searchProps.onFocus && searchProps.onFocus(e);\n    if (canShowPopoverButton) return;\n    setPopoverIsOpen(true);\n  };\n\n  const onSearchInput = e => {\n    searchProps && searchProps.onInput && searchProps.onInput(e);\n    setPopoverIsOpen(true);\n  };\n\n  const searchOnBlur = e => {\n    searchProps && searchProps.onBlur && searchProps.onBlur(e);\n    if (canShowPopoverButton) return;\n\n    if (!popoverRef?.contains(e.relatedTarget)) {\n      setPopoverIsOpen(false);\n    }\n  };\n  /**\n   * Classes\n   */\n\n\n  const classes = classNames('euiSelectableTemplateSitewide', className);\n  const searchClasses = classNames('euiSelectableTemplateSitewide__search', searchProps && searchProps.className);\n  const listClasses = classNames('euiSelectableTemplateSitewide__list', listProps && listProps.className);\n  /**\n   * List options\n   */\n\n  const formattedOptions = euiSelectableTemplateSitewideFormatOptions(options);\n  const loadingMessage = <EuiSelectableMessage style={{\n    minHeight: 300\n  }}>\n      <EuiLoadingSpinner size=\"l\" />\n      <br />\n      <p>\n        <EuiI18n token=\"euiSelectableTemplateSitewide.loadingResults\" default=\"Loading results\" />\n      </p>\n    </EuiSelectableMessage>;\n  const emptyMessage = <EuiSelectableMessage style={{\n    minHeight: 300\n  }}>\n      <p>\n        <EuiI18n token=\"euiSelectableTemplateSitewide.noResults\" default=\"No results available\" />\n      </p>\n    </EuiSelectableMessage>;\n  /**\n   * Changes based on showing the `popoverButton` if provided.\n   * This will move the search input into the popover\n   * and use the passed `popoverButton` as the popover trigger.\n   */\n\n  let popoverTrigger;\n\n  if (popoverButton && canShowPopoverButton) {\n    popoverTrigger = React.cloneElement(popoverButton, { ...popoverButton.props,\n      onClick: togglePopover,\n      onKeyDown: e => {\n        // Selectable preventsDefault on Enter which kills browser controls for pressing the button\n        e.stopPropagation();\n      }\n    });\n  }\n\n  return <EuiSelectable isLoading={isLoading} options={formattedOptions} renderOption={euiSelectableTemplateSitewideRenderOptions} singleSelection={true} searchProps={{\n    placeholder: searchPlaceholder,\n    isClearable: true,\n    ...searchProps,\n    onFocus: searchOnFocus,\n    onBlur: searchOnBlur,\n    onInput: onSearchInput,\n    className: searchClasses\n  }} listProps={{\n    rowHeight: 68,\n    showIcons: false,\n    onFocusBadge: {\n      iconSide: 'right',\n      children: <EuiI18n token=\"euiSelectableTemplateSitewide.onFocusBadgeGoTo\" default=\"Go to\" />\n    },\n    ...listProps,\n    className: listClasses\n  }} loadingMessage={loadingMessage} emptyMessage={emptyMessage} noMatchesMessage={emptyMessage} {...rest} className={classes} searchable>\n      {(list, search) => <EuiPopover panelPaddingSize=\"none\" isOpen={popoverIsOpen} ownFocus={!!popoverTrigger} display={popoverTrigger ? 'inlineBlock' : 'block'} {...popoverRest} panelRef={setPanelRef} button={popoverTrigger ? popoverTrigger : search} closePopover={closePopover}>\n          <div style={{\n        width: popoverWidth,\n        maxWidth: '100%'\n      }}>\n            {popoverTitle || popoverTrigger ? <EuiPopoverTitle paddingSize=\"s\">\n                {popoverTitle}\n                {popoverTitle && search && <EuiSpacer />}\n                {search}\n              </EuiPopoverTitle> : undefined}\n            {list}\n            {popoverFooter && <EuiPopoverFooter paddingSize=\"s\">\n                {popoverFooter}\n              </EuiPopoverFooter>}\n          </div>\n        </EuiPopover>}\n    </EuiSelectable>;\n};\nEuiSelectableTemplateSitewide.propTypes = {\n  /**\n     * Extends the typical EuiSelectable #Options with the addition of pre-composed elements\n     * such as `icon`, `avatar`and `meta`\n     */\n  options: PropTypes.arrayOf(PropTypes.shape({\n    /**\n       * Displayed on the left (`prepend`).\n       * Object of `EuiIconProps` for display of the solution/application's logo\n       */\n    icon: PropTypes.shape({\n      className: PropTypes.string,\n      \"aria-label\": PropTypes.string,\n      \"data-test-subj\": PropTypes.string,\n\n      /**\n           * `Enum` is any of the named icons listed in the docs, `string` is usually a URL to an SVG file, and `elementType` is any React SVG component\n           */\n      type: PropTypes.oneOfType([PropTypes.oneOf([\"accessibility\", \"addDataApp\", \"advancedSettingsApp\", \"aggregate\", \"alert\", \"analyzeEvent\", \"annotation\", \"apmApp\", \"apmTrace\", \"apps\", \"appSearchApp\", \"arrowDown\", \"arrowLeft\", \"arrowRight\", \"arrowUp\", \"asterisk\", \"auditbeatApp\", \"beaker\", \"bell\", \"bellSlash\", \"bolt\", \"boxesHorizontal\", \"boxesVertical\", \"branch\", \"broom\", \"brush\", \"bug\", \"bullseye\", \"calendar\", \"canvasApp\", \"codeApp\", \"check\", \"checkInCircleFilled\", \"cheer\", \"classificationJob\", \"clock\", \"cloudDrizzle\", \"cloudStormy\", \"cloudSunny\", \"color\", \"compute\", \"console\", \"consoleApp\", \"continuityAbove\", \"continuityAboveBelow\", \"continuityBelow\", \"continuityWithin\", \"controlsHorizontal\", \"controlsVertical\", \"copy\", \"copyClipboard\", \"createAdvancedJob\", \"createMultiMetricJob\", \"createPopulationJob\", \"createSingleMetricJob\", \"cross\", \"crossClusterReplicationApp\", \"crosshairs\", \"crossInACircleFilled\", \"currency\", \"cut\", \"dashboardApp\", \"database\", \"dataVisualizer\", \"devToolsApp\", \"discoverApp\", \"document\", \"documentation\", \"documentEdit\", \"documents\", \"dot\", \"download\", \"editorAlignCenter\", \"editorAlignLeft\", \"editorAlignRight\", \"editorBold\", \"editorCodeBlock\", \"editorComment\", \"editorDistributeHorizontal\", \"editorDistributeVertical\", \"editorHeading\", \"editorItalic\", \"editorItemAlignLeft\", \"editorItemAlignBottom\", \"editorItemAlignCenter\", \"editorItemAlignMiddle\", \"editorItemAlignRight\", \"editorItemAlignTop\", \"editorLink\", \"editorOrderedList\", \"editorPositionBottomLeft\", \"editorPositionBottomRight\", \"editorPositionTopLeft\", \"editorPositionTopRight\", \"editorRedo\", \"editorStrike\", \"editorTable\", \"editorUnderline\", \"editorUndo\", \"editorUnorderedList\", \"email\", \"empty\", \"emsApp\", \"eql\", \"eraser\", \"exit\", \"expand\", \"expandMini\", \"exportAction\", \"eye\", \"eyeClosed\", \"faceHappy\", \"faceNeutral\", \"faceSad\", \"filebeatApp\", \"filter\", \"flag\", \"fold\", \"folderCheck\", \"folderClosed\", \"folderExclamation\", \"folderOpen\", \"frameNext\", \"framePrevious\", \"fullScreen\", \"fullScreenExit\", \"function\", \"gear\", \"gisApp\", \"glasses\", \"globe\", \"grab\", \"grabHorizontal\", \"graphApp\", \"grid\", \"grokApp\", \"heart\", \"heartbeatApp\", \"heatmap\", \"help\", \"home\", \"iInCircle\", \"image\", \"importAction\", \"indexClose\", \"indexEdit\", \"indexFlush\", \"indexManagementApp\", \"indexMapping\", \"indexOpen\", \"indexPatternApp\", \"indexRollupApp\", \"indexRuntime\", \"indexSettings\", \"inputOutput\", \"inspect\", \"invert\", \"ip\", \"keyboardShortcut\", \"kqlField\", \"kqlFunction\", \"kqlOperand\", \"kqlSelector\", \"kqlValue\", \"layers\", \"lensApp\", \"link\", \"list\", \"listAdd\", \"lock\", \"lockOpen\", \"logsApp\", \"logoAerospike\", \"logoApache\", \"logoAppSearch\", \"logoAWS\", \"logoAWSMono\", \"logoAzure\", \"logoAzureMono\", \"logoBeats\", \"logoBusinessAnalytics\", \"logoCeph\", \"logoCloud\", \"logoCloudEnterprise\", \"logoCode\", \"logoCodesandbox\", \"logoCouchbase\", \"logoDocker\", \"logoDropwizard\", \"logoElastic\", \"logoElasticsearch\", \"logoElasticStack\", \"logoEnterpriseSearch\", \"logoEtcd\", \"logoGCP\", \"logoGCPMono\", \"logoGithub\", \"logoGmail\", \"logoGolang\", \"logoGoogleG\", \"logoHAproxy\", \"logoIBM\", \"logoIBMMono\", \"logoKafka\", \"logoKibana\", \"logoKubernetes\", \"logoLogging\", \"logoLogstash\", \"logoMaps\", \"logoMemcached\", \"logoMetrics\", \"logoMongodb\", \"logoMySQL\", \"logoNginx\", \"logoObservability\", \"logoOsquery\", \"logoPhp\", \"logoPostgres\", \"logoPrometheus\", \"logoRabbitmq\", \"logoRedis\", \"logoSecurity\", \"logoSiteSearch\", \"logoSketch\", \"logoSlack\", \"logoUptime\", \"logoWebhook\", \"logoWindows\", \"logoWorkplaceSearch\", \"logstashFilter\", \"logstashIf\", \"logstashInput\", \"logstashOutput\", \"logstashQueue\", \"machineLearningApp\", \"magnet\", \"magnifyWithMinus\", \"magnifyWithPlus\", \"managementApp\", \"mapMarker\", \"memory\", \"menu\", \"menuDown\", \"menuLeft\", \"menuRight\", \"menuUp\", \"merge\", \"metricbeatApp\", \"metricsApp\", \"minimize\", \"minus\", \"minusInCircle\", \"minusInCircleFilled\", \"mobile\", \"monitoringApp\", \"moon\", \"nested\", \"node\", \"notebookApp\", \"number\", \"offline\", \"online\", \"outlierDetectionJob\", \"package\", \"packetbeatApp\", \"pageSelect\", \"pagesSelect\", \"partial\", \"paperClip\", \"pause\", \"pencil\", \"percent\", \"pin\", \"pinFilled\", \"pipelineApp\", \"play\", \"playFilled\", \"plus\", \"plusInCircle\", \"plusInCircleFilled\", \"popout\", \"push\", \"questionInCircle\", \"quote\", \"recentlyViewedApp\", \"refresh\", \"regressionJob\", \"reporter\", \"reportingApp\", \"returnKey\", \"save\", \"savedObjectsApp\", \"scale\", \"search\", \"searchProfilerApp\", \"securityAnalyticsApp\", \"securityApp\", \"securitySignal\", \"securitySignalDetected\", \"securitySignalResolved\", \"shard\", \"share\", \"snowflake\", \"sortable\", \"sortDown\", \"sortLeft\", \"sortRight\", \"sortUp\", \"spacesApp\", \"sqlApp\", \"starEmpty\", \"starEmptySpace\", \"starFilled\", \"starFilledSpace\", \"starMinusEmpty\", \"starMinusFilled\", \"starPlusEmpty\", \"starPlusFilled\", \"stats\", \"stop\", \"stopFilled\", \"stopSlash\", \"storage\", \"string\", \"submodule\", \"swatchInput\", \"symlink\", \"tableOfContents\", \"tableDensityExpanded\", \"tableDensityCompact\", \"tableDensityNormal\", \"tag\", \"tear\", \"temperature\", \"timeline\", \"timelionApp\", \"timeslider\", \"training\", \"trash\", \"upgradeAssistantApp\", \"uptimeApp\", \"unfold\", \"unlink\", \"user\", \"users\", \"usersRolesApp\", \"vector\", \"videoPlayer\", \"visArea\", \"visAreaStacked\", \"visBarHorizontal\", \"visBarHorizontalStacked\", \"visBarVertical\", \"visBarVerticalStacked\", \"visGauge\", \"visGoal\", \"visLine\", \"visMapCoordinate\", \"visMapRegion\", \"visMetric\", \"visPie\", \"visTable\", \"visTagCloud\", \"visText\", \"visTimelion\", \"visualizeApp\", \"visVega\", \"visVisualBuilder\", \"watchesApp\", \"wordWrap\", \"wordWrapDisabled\", \"workplaceSearchApp\", \"wrench\", \"tokenClass\", \"tokenProperty\", \"tokenEnum\", \"tokenVariable\", \"tokenMethod\", \"tokenAnnotation\", \"tokenException\", \"tokenInterface\", \"tokenParameter\", \"tokenField\", \"tokenElement\", \"tokenFunction\", \"tokenBoolean\", \"tokenString\", \"tokenArray\", \"tokenNumber\", \"tokenConstant\", \"tokenObject\", \"tokenEvent\", \"tokenKey\", \"tokenNull\", \"tokenStruct\", \"tokenPackage\", \"tokenOperator\", \"tokenEnumMember\", \"tokenRepo\", \"tokenSymbol\", \"tokenFile\", \"tokenModule\", \"tokenNamespace\", \"tokenDate\", \"tokenIP\", \"tokenNested\", \"tokenAlias\", \"tokenShape\", \"tokenGeo\", \"tokenRange\", \"tokenBinary\", \"tokenJoin\", \"tokenPercolator\", \"tokenFlattened\", \"tokenRankFeature\", \"tokenRankFeatures\", \"tokenKeyword\", \"tokenCompletionSuggester\", \"tokenDenseVector\", \"tokenText\", \"tokenTokenCount\", \"tokenSearchType\", \"tokenHistogram\"]).isRequired, PropTypes.string.isRequired, PropTypes.elementType.isRequired]).isRequired,\n\n      /**\n           * One of EUI's color palette or a valid CSS color value https://developer.mozilla.org/en-US/docs/Web/CSS/color_value.\n           * Note that coloring only works if your SVG is removed of fill attributes.\n           * **`secondary` color is DEPRECATED, use `success` instead**\n           */\n      color: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.oneOf([\"default\", \"primary\", \"secondary\", \"success\", \"accent\", \"warning\", \"danger\", \"text\", \"subdued\", \"ghost\", \"inherit\"]).isRequired]),\n\n      /**\n           * Note that every size other than `original` assumes the provided SVG sits on a square viewbox.\n           */\n      size: PropTypes.oneOf([\"original\", \"s\", \"m\", \"l\", \"xl\", \"xxl\"]),\n\n      /**\n           * Descriptive title for naming the icon based on its use\n           */\n      title: PropTypes.string,\n\n      /**\n           * A unique identifier for the title element\n           */\n      titleId: PropTypes.string,\n\n      /**\n           * Its value should be one or more element IDs\n           */\n      \"aria-labelledby\": PropTypes.string,\n\n      /**\n           * Callback when the icon has been loaded & rendered\n           */\n      onIconLoad: PropTypes.func\n    }),\n\n    /**\n       * Displayed on the right (`append`).\n       * Object of `EuiAvatarProps` for display of the space (default) or user\n       */\n    avatar: PropTypes.shape({\n      className: PropTypes.string,\n      \"aria-label\": PropTypes.string,\n      \"data-test-subj\": PropTypes.string,\n\n      /**\n             * Custom initials (max 2 characters).\n             * By default will take the first character (of each word).\n             */\n      initials: PropTypes.string,\n\n      /**\n             * Specify how many characters to show (1 or 2).\n             * By default, will show based on number of words (max first 2).\n             */\n      initialsLength: PropTypes.oneOf([1, 2]),\n\n      /**\n             * Path to an image to display instead of initials\n             */\n      imageUrl: PropTypes.string,\n\n      /**\n           * Any EUI glyph, logo or custom icon to display instead of initials\n           */\n      iconType: PropTypes.oneOfType([PropTypes.oneOf([\"accessibility\", \"addDataApp\", \"advancedSettingsApp\", \"aggregate\", \"alert\", \"analyzeEvent\", \"annotation\", \"apmApp\", \"apmTrace\", \"apps\", \"appSearchApp\", \"arrowDown\", \"arrowLeft\", \"arrowRight\", \"arrowUp\", \"asterisk\", \"auditbeatApp\", \"beaker\", \"bell\", \"bellSlash\", \"bolt\", \"boxesHorizontal\", \"boxesVertical\", \"branch\", \"broom\", \"brush\", \"bug\", \"bullseye\", \"calendar\", \"canvasApp\", \"codeApp\", \"check\", \"checkInCircleFilled\", \"cheer\", \"classificationJob\", \"clock\", \"cloudDrizzle\", \"cloudStormy\", \"cloudSunny\", \"color\", \"compute\", \"console\", \"consoleApp\", \"continuityAbove\", \"continuityAboveBelow\", \"continuityBelow\", \"continuityWithin\", \"controlsHorizontal\", \"controlsVertical\", \"copy\", \"copyClipboard\", \"createAdvancedJob\", \"createMultiMetricJob\", \"createPopulationJob\", \"createSingleMetricJob\", \"cross\", \"crossClusterReplicationApp\", \"crosshairs\", \"crossInACircleFilled\", \"currency\", \"cut\", \"dashboardApp\", \"database\", \"dataVisualizer\", \"devToolsApp\", \"discoverApp\", \"document\", \"documentation\", \"documentEdit\", \"documents\", \"dot\", \"download\", \"editorAlignCenter\", \"editorAlignLeft\", \"editorAlignRight\", \"editorBold\", \"editorCodeBlock\", \"editorComment\", \"editorDistributeHorizontal\", \"editorDistributeVertical\", \"editorHeading\", \"editorItalic\", \"editorItemAlignLeft\", \"editorItemAlignBottom\", \"editorItemAlignCenter\", \"editorItemAlignMiddle\", \"editorItemAlignRight\", \"editorItemAlignTop\", \"editorLink\", \"editorOrderedList\", \"editorPositionBottomLeft\", \"editorPositionBottomRight\", \"editorPositionTopLeft\", \"editorPositionTopRight\", \"editorRedo\", \"editorStrike\", \"editorTable\", \"editorUnderline\", \"editorUndo\", \"editorUnorderedList\", \"email\", \"empty\", \"emsApp\", \"eql\", \"eraser\", \"exit\", \"expand\", \"expandMini\", \"exportAction\", \"eye\", \"eyeClosed\", \"faceHappy\", \"faceNeutral\", \"faceSad\", \"filebeatApp\", \"filter\", \"flag\", \"fold\", \"folderCheck\", \"folderClosed\", \"folderExclamation\", \"folderOpen\", \"frameNext\", \"framePrevious\", \"fullScreen\", \"fullScreenExit\", \"function\", \"gear\", \"gisApp\", \"glasses\", \"globe\", \"grab\", \"grabHorizontal\", \"graphApp\", \"grid\", \"grokApp\", \"heart\", \"heartbeatApp\", \"heatmap\", \"help\", \"home\", \"iInCircle\", \"image\", \"importAction\", \"indexClose\", \"indexEdit\", \"indexFlush\", \"indexManagementApp\", \"indexMapping\", \"indexOpen\", \"indexPatternApp\", \"indexRollupApp\", \"indexRuntime\", \"indexSettings\", \"inputOutput\", \"inspect\", \"invert\", \"ip\", \"keyboardShortcut\", \"kqlField\", \"kqlFunction\", \"kqlOperand\", \"kqlSelector\", \"kqlValue\", \"layers\", \"lensApp\", \"link\", \"list\", \"listAdd\", \"lock\", \"lockOpen\", \"logsApp\", \"logoAerospike\", \"logoApache\", \"logoAppSearch\", \"logoAWS\", \"logoAWSMono\", \"logoAzure\", \"logoAzureMono\", \"logoBeats\", \"logoBusinessAnalytics\", \"logoCeph\", \"logoCloud\", \"logoCloudEnterprise\", \"logoCode\", \"logoCodesandbox\", \"logoCouchbase\", \"logoDocker\", \"logoDropwizard\", \"logoElastic\", \"logoElasticsearch\", \"logoElasticStack\", \"logoEnterpriseSearch\", \"logoEtcd\", \"logoGCP\", \"logoGCPMono\", \"logoGithub\", \"logoGmail\", \"logoGolang\", \"logoGoogleG\", \"logoHAproxy\", \"logoIBM\", \"logoIBMMono\", \"logoKafka\", \"logoKibana\", \"logoKubernetes\", \"logoLogging\", \"logoLogstash\", \"logoMaps\", \"logoMemcached\", \"logoMetrics\", \"logoMongodb\", \"logoMySQL\", \"logoNginx\", \"logoObservability\", \"logoOsquery\", \"logoPhp\", \"logoPostgres\", \"logoPrometheus\", \"logoRabbitmq\", \"logoRedis\", \"logoSecurity\", \"logoSiteSearch\", \"logoSketch\", \"logoSlack\", \"logoUptime\", \"logoWebhook\", \"logoWindows\", \"logoWorkplaceSearch\", \"logstashFilter\", \"logstashIf\", \"logstashInput\", \"logstashOutput\", \"logstashQueue\", \"machineLearningApp\", \"magnet\", \"magnifyWithMinus\", \"magnifyWithPlus\", \"managementApp\", \"mapMarker\", \"memory\", \"menu\", \"menuDown\", \"menuLeft\", \"menuRight\", \"menuUp\", \"merge\", \"metricbeatApp\", \"metricsApp\", \"minimize\", \"minus\", \"minusInCircle\", \"minusInCircleFilled\", \"mobile\", \"monitoringApp\", \"moon\", \"nested\", \"node\", \"notebookApp\", \"number\", \"offline\", \"online\", \"outlierDetectionJob\", \"package\", \"packetbeatApp\", \"pageSelect\", \"pagesSelect\", \"partial\", \"paperClip\", \"pause\", \"pencil\", \"percent\", \"pin\", \"pinFilled\", \"pipelineApp\", \"play\", \"playFilled\", \"plus\", \"plusInCircle\", \"plusInCircleFilled\", \"popout\", \"push\", \"questionInCircle\", \"quote\", \"recentlyViewedApp\", \"refresh\", \"regressionJob\", \"reporter\", \"reportingApp\", \"returnKey\", \"save\", \"savedObjectsApp\", \"scale\", \"search\", \"searchProfilerApp\", \"securityAnalyticsApp\", \"securityApp\", \"securitySignal\", \"securitySignalDetected\", \"securitySignalResolved\", \"shard\", \"share\", \"snowflake\", \"sortable\", \"sortDown\", \"sortLeft\", \"sortRight\", \"sortUp\", \"spacesApp\", \"sqlApp\", \"starEmpty\", \"starEmptySpace\", \"starFilled\", \"starFilledSpace\", \"starMinusEmpty\", \"starMinusFilled\", \"starPlusEmpty\", \"starPlusFilled\", \"stats\", \"stop\", \"stopFilled\", \"stopSlash\", \"storage\", \"string\", \"submodule\", \"swatchInput\", \"symlink\", \"tableOfContents\", \"tableDensityExpanded\", \"tableDensityCompact\", \"tableDensityNormal\", \"tag\", \"tear\", \"temperature\", \"timeline\", \"timelionApp\", \"timeslider\", \"training\", \"trash\", \"upgradeAssistantApp\", \"uptimeApp\", \"unfold\", \"unlink\", \"user\", \"users\", \"usersRolesApp\", \"vector\", \"videoPlayer\", \"visArea\", \"visAreaStacked\", \"visBarHorizontal\", \"visBarHorizontalStacked\", \"visBarVertical\", \"visBarVerticalStacked\", \"visGauge\", \"visGoal\", \"visLine\", \"visMapCoordinate\", \"visMapRegion\", \"visMetric\", \"visPie\", \"visTable\", \"visTagCloud\", \"visText\", \"visTimelion\", \"visualizeApp\", \"visVega\", \"visVisualBuilder\", \"watchesApp\", \"wordWrap\", \"wordWrapDisabled\", \"workplaceSearchApp\", \"wrench\", \"tokenClass\", \"tokenProperty\", \"tokenEnum\", \"tokenVariable\", \"tokenMethod\", \"tokenAnnotation\", \"tokenException\", \"tokenInterface\", \"tokenParameter\", \"tokenField\", \"tokenElement\", \"tokenFunction\", \"tokenBoolean\", \"tokenString\", \"tokenArray\", \"tokenNumber\", \"tokenConstant\", \"tokenObject\", \"tokenEvent\", \"tokenKey\", \"tokenNull\", \"tokenStruct\", \"tokenPackage\", \"tokenOperator\", \"tokenEnumMember\", \"tokenRepo\", \"tokenSymbol\", \"tokenFile\", \"tokenModule\", \"tokenNamespace\", \"tokenDate\", \"tokenIP\", \"tokenNested\", \"tokenAlias\", \"tokenShape\", \"tokenGeo\", \"tokenRange\", \"tokenBinary\", \"tokenJoin\", \"tokenPercolator\", \"tokenFlattened\", \"tokenRankFeature\", \"tokenRankFeatures\", \"tokenKeyword\", \"tokenCompletionSuggester\", \"tokenDenseVector\", \"tokenText\", \"tokenTokenCount\", \"tokenSearchType\", \"tokenHistogram\"]).isRequired, PropTypes.string.isRequired, PropTypes.elementType.isRequired]),\n\n      /**\n           * Manually change icon size\n           */\n      iconSize: PropTypes.oneOf([\"original\", \"s\", \"m\", \"l\", \"xl\", \"xxl\"]),\n\n      /**\n           * Manually change icon color\n           */\n      iconColor: PropTypes.oneOfType([PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.oneOf([\"default\", \"primary\", \"secondary\", \"success\", \"accent\", \"warning\", \"danger\", \"text\", \"subdued\", \"ghost\", \"inherit\"]).isRequired]).isRequired, PropTypes.oneOf([null])]),\n\n      /**\n           * Full name of avatar for title attribute and calculating initial if not provided\n           */\n      name: PropTypes.string.isRequired,\n\n      /**\n           * Accepts hex values like `#FFFFFF`, `#000` otherwise a viz palette color will be assigned.\n           * Or pass `'plain'` for an empty shade or `null` to remove entirely and the text/icon color will `inherit`\n           */\n      color: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.oneOf([\"plain\", null])]),\n\n      /**\n           * The type of avatar mainly controlling the shape.\n           * `user` = circle\n           * `space` = rounded square\n           */\n      type: PropTypes.oneOf([\"space\", \"user\"]),\n      size: PropTypes.oneOf([\"s\", \"m\", \"l\", \"xl\"]),\n\n      /**\n           * Grays out the avatar to simulate being disabled\n           */\n      isDisabled: PropTypes.bool\n    }),\n\n    /**\n       * An array of inline #MetaData displayed beneath the label and separated by bullets.\n       */\n    meta: PropTypes.arrayOf(PropTypes.shape({\n      /**\n         * Required to display the metadata\n         */\n      text: PropTypes.string.isRequired,\n\n      /**\n         * Styles the metadata according to Elastic's schema.\n         * Can be one of 'application', 'deployment', 'article', 'case', 'platform',\n         * or a custom string to associate with your own schema.\n         * Appends the string to the class name as `euiSelectableTemplateSitewide__optionMeta--[type]`\n         */\n      type: PropTypes.oneOfType([PropTypes.oneOf([\"application\", \"deployment\", \"article\", \"case\", \"platform\"]), PropTypes.string.isRequired]),\n\n      /**\n         * Will wrap the meta tag in EuiHighlight to mark the portions that match the search text\n         */\n      highlightSearchString: PropTypes.bool,\n      className: PropTypes.string,\n      \"aria-label\": PropTypes.string,\n      \"data-test-subj\": PropTypes.string\n    }).isRequired),\n\n    /**\n       * Optional `boolean`.\n       * Set to `true` to indicate object is just a grouping label, not a selectable item\n       */\n    isGroupLabel: PropTypes.oneOfType([PropTypes.oneOf([true]).isRequired, PropTypes.oneOf([false])]),\n    className: PropTypes.string,\n    \"aria-label\": PropTypes.string,\n    \"data-test-subj\": PropTypes.string,\n\n    /**\n       * Visible label of option.\n       * Must be unique across items if `key` is not supplied\n       */\n    label: PropTypes.string,\n\n    /**\n       * Optionally change the searchable term by passing a different string other than the `label`.\n       * Best used when creating a custom `optionRender` to separate the label from metadata but allowing to search on both\n       */\n    searchableLabel: PropTypes.string,\n\n    /**\n       * Must be unique across items.\n       * Will be used to match options instead of `label`\n       */\n    key: PropTypes.string,\n\n    /**\n       * Leave `undefined` to indicate not selected,\n       * 'on' to indicate inclusion and\n       * 'off' to indicate exclusion\n       */\n    checked: PropTypes.oneOf([\"on\", \"off\", undefined]),\n    disabled: PropTypes.bool,\n\n    /**\n       * Node to add between the selection icon and the label\n       */\n    prepend: PropTypes.node,\n\n    /**\n       * Node to add to the far right of the item\n       */\n    append: PropTypes.node,\n    ref: PropTypes.func\n  }).isRequired).isRequired,\n\n  /**\n     * Override some of the EuiPopover props housing the list.\n     * The default width is `600`\n     */\n  popoverProps: PropTypes.shape({\n    width: PropTypes.any\n  }),\n\n  /**\n     * Optionally provide a title for the popover\n     */\n  popoverTitle: PropTypes.node,\n\n  /**\n     * Optionally provide a footer for the popover\n     */\n  popoverFooter: PropTypes.node,\n\n  /**\n     * Optionally provide a separate button for toggling the display of the popover.\n     */\n  popoverButton: PropTypes.element,\n\n  /**\n     * Pass an array of named breakpoints for which to show the `popoverButton`.\n     * If `undefined`, the `popoverButton` will always show (if provided)\n     */\n  popoverButtonBreakpoints: PropTypes.arrayOf(PropTypes.oneOf([\"xs\", \"s\", \"m\", \"l\", \"xl\"]).isRequired)\n};\n\ntry {\n  EuiSelectableTemplateSitewide.__docgenInfo = {\n    description: '',\n    displayName: 'EuiSelectableTemplateSitewide',\n    methods: [],\n    props: {\n      children: {\n        defaultValue: null,\n        description: 'Function that takes the `list` node and then\\n' + 'the `search` node (if `searchable` is applied)',\n        name: 'children',\n        parent: undefined,\n        required: false,\n        type: {\n          name: '(list: ReactElement<typeof EuiSelectableList | FunctionComponent<EuiSelectableMessageProps>, string | ((props: any) => ReactElement<any, string | ... 1 more ... | (new (props: any) => Component<...>)>) | (new (props: any) => Component<...>)>, search: ReactElement<...>) => ReactNode'\n        }\n      },\n      height: {\n        defaultValue: null,\n        description: 'Sets the max height in pixels or pass `full` to allow\\n' + 'the whole group to fill the height of its container and\\n' + 'allows the list grow as well',\n        name: 'height',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'number | \"full\"'\n        }\n      },\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: 'Defines a string value that labels the current element.\\n' + '@see aria-labelledby.',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      onChange: {\n        defaultValue: null,\n        description: 'Passes back the altered `options` array with selected options as',\n        name: 'onChange',\n        parent: undefined,\n        required: false,\n        type: {\n          name: '(options: ((DisambiguateSet<EuiSelectableGroupLabelOption<{ [key: string]: any; }>, EuiSelectableLIOption<{ [key: string]: any; }>> & CommonProps & { ...; } & HTMLAttributes<...> & { ...; }) | (DisambiguateSet<...> & ... 3 more ... & { ...; }))[]) => void'\n        }\n      },\n      'data-test-subj': {\n        defaultValue: null,\n        description: '',\n        name: 'data-test-subj',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      isLoading: {\n        defaultValue: null,\n        description: 'Show an loading indicator while you load and hook up your data',\n        name: 'isLoading',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      searchable: {\n        defaultValue: null,\n        description: 'Hooks up a search box to filter the list (boolean)',\n        name: 'searchable',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      searchProps: {\n        defaultValue: null,\n        description: 'Passes props down to the `EuiFieldSearch`',\n        name: 'searchProps',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'Partial<EuiSelectableSearchProps<{ [key: string]: any; }>>'\n        }\n      },\n      singleSelection: {\n        defaultValue: null,\n        description: 'Sets the single selection policy of\\n' + '`false`: allows multiple selection\\n' + '`true`: only allows one selection\\n' + '`always`: can and must have only one selection',\n        name: 'singleSelection',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean | \"always\"'\n        }\n      },\n      allowExclusions: {\n        defaultValue: null,\n        description: \"Allows marking options as `checked='off'` as well as `'on'`\",\n        name: 'allowExclusions',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      listProps: {\n        defaultValue: null,\n        description: 'See #EuiSelectableOptionsList',\n        name: 'listProps',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'EuiSelectableOptionsListPropsWithDefaults'\n        }\n      },\n      renderOption: {\n        defaultValue: null,\n        description: 'Custom render function for each option.\\n' + 'Returns `(option, searchValue)`',\n        name: 'renderOption',\n        parent: undefined,\n        required: false,\n        type: {\n          name: '(option: (DisambiguateSet<EuiSelectableGroupLabelOption<{ [key: string]: any; }>, EuiSelectableLIOption<{ [key: string]: any; }>> & CommonProps & { ...; } & HTMLAttributes<...> & { ...; }) | (DisambiguateSet<...> & ... 3 more ... & { ...; }), searchValue: string) => ReactNode'\n        }\n      },\n      loadingMessage: {\n        defaultValue: null,\n        description: 'Customize the loading message. Pass a string to simply change the text,\\n' + 'or a node to replace the whole content.',\n        name: 'loadingMessage',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string | ReactElement'\n        }\n      },\n      noMatchesMessage: {\n        defaultValue: null,\n        description: 'Customize the no matches message. Pass a string to simply change the text,\\n' + 'or a node to replace the whole content.',\n        name: 'noMatchesMessage',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string | ReactElement'\n        }\n      },\n      emptyMessage: {\n        defaultValue: null,\n        description: 'Customize the empty message. Pass a string to simply change the text,\\n' + 'or a node to replace the whole content.',\n        name: 'emptyMessage',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string | ReactElement'\n        }\n      },\n      isPreFiltered: {\n        defaultValue: null,\n        description: 'Control whether or not options get filtered internally or if consumer will filter\\n' + 'Default: false',\n        name: 'isPreFiltered',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      options: {\n        defaultValue: null,\n        description: 'Extends the typical EuiSelectable #Options with the addition of pre-composed elements\\n' + 'such as `icon`, `avatar`and `meta`',\n        name: 'options',\n        parent: undefined,\n        required: true,\n        type: {\n          name: 'EuiSelectableTemplateSitewideOption<{ [key: string]: any; }>[]'\n        }\n      },\n      popoverProps: {\n        defaultValue: null,\n        description: 'Override some of the EuiPopover props housing the list.\\n' + 'The default width is `600`',\n        name: 'popoverProps',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'Partial<Props> & { width?: ReactText; }'\n        }\n      },\n      popoverTitle: {\n        defaultValue: null,\n        description: 'Optionally provide a title for the popover',\n        name: 'popoverTitle',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'ReactNode'\n        }\n      },\n      popoverFooter: {\n        defaultValue: null,\n        description: 'Optionally provide a footer for the popover',\n        name: 'popoverFooter',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'ReactNode'\n        }\n      },\n      popoverButton: {\n        defaultValue: null,\n        description: 'Optionally provide a separate button for toggling the display of the popover.',\n        name: 'popoverButton',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'ReactElement'\n        }\n      },\n      popoverButtonBreakpoints: {\n        defaultValue: null,\n        description: 'Pass an array of named breakpoints for which to show the `popoverButton`.\\n' + 'If `undefined`, the `popoverButton` will always show (if provided)',\n        name: 'popoverButtonBreakpoints',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'EuiBreakpointSize[]'\n        }\n      }\n    },\n    extendedInterfaces: ['HTMLAttributes', 'AriaAttributes', 'DOMAttributes', 'CommonProps']\n  };\n} catch (e) {}"]}]}