{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src-docs\\src\\views\\datagrid\\datagrid_styling_example.js","dependencies":[{"path":"D:\\work\\eui\\src-docs\\src\\views\\datagrid\\datagrid_styling_example.js","mtime":1649070093142},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src-docs/src/views/datagrid/datagrid_styling_example.js"],"names":["React","Fragment","renderToHtml","GuideSectionTypes","EuiDataGrid","EuiCode","EuiCodeBlock","EuiListGroupItem","DataGridContainer","dataGridContainerSource","require","dataGridContainerHtml","DataGridStyling","dataGridStylingSource","dataGridStylingHtml","DataGridControls","dataGridControlsSource","dataGridControlsHtml","DataGridColumnWidths","DataGridColumnActions","DataGridColumnCellActions","dataGridColumnWidthsSource","dataGridColumnWidthsHtml","dataGridColumnActionsSource","dataGridColumnActionsHtml","dataGridColumnCellActionsSource","dataGridColumnCellActionsHtml","EuiDataGridColumn","EuiDataGridColumnActions","EuiDataGridColumnCellAction","EuiDataGridColumnCellActionProps","EuiDataGridStyle","EuiDataGridToolBarVisibilityOptions","gridSnippet","controlsSnippet","widthsSnippet","DataGridStylingExample","title","sections","source","type","JS","code","HTML","text","components","props","demo","snippet"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\n\nimport { renderToHtml } from '../../services';\n\nimport { GuideSectionTypes } from '../../components';\nimport {\n  EuiDataGrid,\n  EuiCode,\n  EuiCodeBlock,\n  EuiListGroupItem,\n} from '../../../../src/components';\n\nimport DataGridContainer from './container';\nconst dataGridContainerSource = require('!!raw-loader!./container');\nconst dataGridContainerHtml = renderToHtml(DataGridContainer);\n\nimport DataGridStyling from './styling';\nconst dataGridStylingSource = require('!!raw-loader!./styling');\nconst dataGridStylingHtml = renderToHtml(DataGridStyling);\n\nimport DataGridControls from './additional_controls';\nconst dataGridControlsSource = require('!!raw-loader!./additional_controls');\nconst dataGridControlsHtml = renderToHtml(DataGridControls);\n\nimport DataGridColumnWidths from './column_widths';\nimport DataGridColumnActions from './column_actions';\nimport DataGridColumnCellActions from './column_cell_actions';\nconst dataGridColumnWidthsSource = require('!!raw-loader!./column_widths');\nconst dataGridColumnWidthsHtml = renderToHtml(DataGridColumnWidths);\nconst dataGridColumnActionsSource = require('!!raw-loader!./column_actions');\nconst dataGridColumnActionsHtml = renderToHtml(DataGridColumnActions);\nconst dataGridColumnCellActionsSource = require('!!raw-loader!./column_cell_actions');\nconst dataGridColumnCellActionsHtml = renderToHtml(DataGridColumnActions);\n\nimport {\n  EuiDataGridColumn,\n  EuiDataGridColumnActions,\n  EuiDataGridColumnCellAction,\n  EuiDataGridColumnCellActionProps,\n  EuiDataGridStyle,\n  EuiDataGridToolBarVisibilityOptions,\n} from '!!prop-loader!../../../../src/components/datagrid/data_grid_types';\n\nconst gridSnippet = `<EuiDataGrid\n  {...usualProps}\n  columns={[\n    // three columns are available, but restrict Avatar to 50px and don't let users resize it\n    { id: 'Avatar', initialWidth: 50, isResizable: false },\n    { id: 'Name' },\n    { id: 'Email' },\n  ]}\n  // This can work as a shape.\n  toolbarVisibility={{\n    showStyleSelector: false,\n    showSortSelector: false,\n    showFullScreenSelector: false,\n    // showColumnSelector also takes an object, check the prop docs.\n    showColumnSelector: false,\n    additionalControls: (\n      <Fragment>\n        <EuiButtonEmpty\n          size=\"xs\"\n          iconType=\"bell\"\n          color=\"text\"\n          className=\"euiDataGrid__controlBtn\"\n          onClick={() => {}}>\n          New button\n        </EuiButtonEmpty>\n        <EuiButtonEmpty\n          size=\"xs\"\n          iconType=\"branch\"\n          color=\"text\"\n          className=\"euiDataGrid__controlBtn\"\n          onClick={() => {}}>\n          Another button\n        </EuiButtonEmpty>\n      </Fragment>\n    )\n  }}\n  // Or as a boolean to turn everything off.\n  toolbarVisibility={false}\n  // Change the initial style of the grid.\n  gridStyle={{\n    border: 'all',\n    stripes: true,\n    rowHover: 'highlight',\n    header: 'shade',\n    // If showStyleSelector={true} from toolbarVisibility, these last two will be superceded by what the user decides.\n    fontSize: 'm',\n    cellPadding: 'm',\n    footer: 'overline'\n  }}\n/>\n`;\n\nconst controlsSnippet = `<EuiDataGrid\n  {...usualGridProps}\n  toolbarVisibility={{\n    // Use of a fragment for multiple items will insure proper margins\n    additionalControls: (\n      <Fragment>\n        <EuiButtonEmpty\n          size=\"xs\"\n          iconType=\"bell\"\n          color=\"text\"\n          className=\"euiDataGrid__controlBtn\"\n          onClick={() => {}}>\n          New button\n        </EuiButtonEmpty>\n        <EuiButtonEmpty\n          size=\"xs\"\n          iconType=\"branch\"\n          color=\"text\"\n          className=\"euiDataGrid__controlBtn\"\n          onClick={() => {}}>\n          Another button\n        </EuiButtonEmpty>\n      </Fragment>\n    )\n  }}\n/>\n`;\n\nconst widthsSnippet = `<EuiDataGrid\n  {...usualGridProps}\n  columns={[\n    {\n      id: 'Column A',\n      initialWidth: 100, // start at 100px\n    },\n    {\n      id: 'Column B',\n      isResizable: false, // don't let users resize this column\n    },\n  ]}\n/>\n`;\n\nexport const DataGridStylingExample = {\n  title: 'Data grid styling and control',\n  sections: [\n    {\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: dataGridStylingSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: dataGridStylingHtml,\n        },\n      ],\n      text: (\n        <Fragment>\n          <p>\n            Styling can be passed down to the grid through the{' '}\n            <EuiCode>gridStyle</EuiCode> prop. It accepts an object that allows\n            for customization.\n          </p>\n          <p>\n            The <EuiCode>toolbarVisibility</EuiCode> prop when used as a boolean\n            controls the visibility of the toolbar displayed above the grid.\n            Using the prop as a shape, allows setting the visibility of the\n            individual buttons within.\n          </p>\n          <p>\n            With the default settings, the <EuiCode>showStyleSelector</EuiCode>{' '}\n            setting in <EuiCode>toolbarVisibility</EuiCode> means the user has\n            the ability to override the padding and font size passed into{' '}\n            <EuiCode>gridStyle</EuiCode> by the engineer.\n          </p>\n          <EuiCodeBlock language=\"javascript\" paddingSize=\"s\" isCopyable>\n            {gridSnippet}\n          </EuiCodeBlock>\n        </Fragment>\n      ),\n      components: { DataGridStyling },\n\n      props: {\n        EuiDataGrid,\n        EuiDataGridStyle,\n        EuiDataGridToolBarVisibilityOptions,\n      },\n      demo: <DataGridStyling />,\n    },\n    {\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: dataGridContainerSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: dataGridContainerHtml,\n        },\n      ],\n      title: 'Data grid adapts to its container',\n      text: (\n        <p>\n          When wrapped inside a container, like a dashboard panel, the grid will\n          start hiding controls and adopt a more strict flex layout. Use the\n          <EuiCode>minSizeForControls</EuiCode> prop to control the min width to\n          enables/disables grid controls based on available width.\n        </p>\n      ),\n      components: { DataGridContainer },\n\n      demo: <DataGridContainer />,\n    },\n    {\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: dataGridControlsSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: dataGridControlsHtml,\n        },\n      ],\n      title: 'Additional controls in the toolbar',\n      text: (\n        <p>\n          Use the <EuiCode>toolbarVisibility.additionalControls</EuiCode> prop\n          to pass additional controls to the toolbar. These will always live to\n          the left of the full screen button. It will respect the{' '}\n          <EuiCode language=\"js\">toolbarVisibility={'{false}'}</EuiCode> setting\n          and hide when appropriate. Although any node can fit in this space,\n          the recommendation is to use <strong>EuiButtonEmpty</strong>{' '}\n          components with the configuration shown in the snippet.\n        </p>\n      ),\n      components: { DataGridControls },\n      snippet: controlsSnippet,\n      demo: <DataGridControls />,\n    },\n    {\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: dataGridColumnWidthsSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: dataGridColumnWidthsHtml,\n        },\n      ],\n      title: 'Column width constraints',\n      text: (\n        <Fragment>\n          <p>\n            By default, visible columns are given equal widths to fill up\n            available space in the grid and can be resized by the user to any\n            desired width. There are two parameters on{' '}\n            <strong>EuiDataGridColumn</strong> to change this default behavior.{' '}\n            <EuiCode>initialWidth</EuiCode> is a numeric value providing the\n            starting width of a column, in pixels. Second, the{' '}\n            <EuiCode>isResizable</EuiCode> value can be set to{' '}\n            <EuiCode>false</EuiCode> to remove the user&apos;s ability to resize\n            column.\n          </p>\n          <p>\n            Below, the first column is given an initial width and is not\n            resizable. The second column is also given an initial width but its\n            width can still be changed.\n          </p>\n        </Fragment>\n      ),\n      components: { DataGridColumnWidths },\n      snippet: widthsSnippet,\n      props: {\n        EuiDataGrid,\n        EuiDataGridColumn,\n      },\n      demo: <DataGridColumnWidths />,\n    },\n    {\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: dataGridColumnActionsSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: dataGridColumnActionsHtml,\n        },\n      ],\n      title: 'Column actions',\n      text: (\n        <Fragment>\n          <p>\n            By default, columns provide actions for sorting, moving and hiding.\n            These can be extended with custom actions. You can customize the\n            actions by setting the <EuiCode>actions</EuiCode> value of{' '}\n            <strong>EuiDataGridColumn</strong>. Setting it to{' '}\n            <EuiCode>false</EuiCode> removes the action menu displayed. You can\n            configure it by passing an object of type{' '}\n            <strong>EuiDataGridColumnAction</strong>. This allows you a hide,\n            configure the existing actions and add new ones.\n          </p>\n          <p>\n            Below, the first column provides no action, the second doesn&apos;t\n            provide the ability to hide the columns, the 3rd provides an\n            additional action, the 4th overwrites the hide action with a custom\n            label and icon.\n          </p>\n        </Fragment>\n      ),\n      components: { DataGridColumnActions },\n      props: {\n        EuiDataGrid,\n        EuiDataGridColumn,\n        EuiDataGridColumnActions,\n        EuiListGroupItem,\n      },\n      demo: <DataGridColumnActions />,\n    },\n    {\n      source: [\n        {\n          type: GuideSectionTypes.JS,\n          code: dataGridColumnCellActionsSource,\n        },\n        {\n          type: GuideSectionTypes.HTML,\n          code: dataGridColumnCellActionsHtml,\n        },\n      ],\n      title: 'Column cell actions',\n      text: (\n        <Fragment>\n          <p>\n            On top of making a cell expandable, you can add more custom actions\n            by setting <EuiCode>cellActions</EuiCode>. This contains functions\n            called to render additional buttons in the cell and in the popover\n            when expanded. Behind the scenes those are treated as a React\n            components allowing hooks, context, and other React concepts to be\n            used. The functions receives an argument of type\n            <code>EuiDataGridColumnCellActionProps</code>. The icons of these\n            actions are displayed on mouse over, and also appear in the popover\n            when the cell is expanded. Note that once you&apos;ve defined the{' '}\n            <EuiCode>cellAction</EuiCode> property, the cell&apos;s\n            automatically expandable.\n          </p>\n          <p>\n            Below, the email and city columns provide 1{' '}\n            <EuiCode>cellAction</EuiCode> each, while the country column\n            provides 2 <EuiCode>cellAction</EuiCode>s.\n            <br />\n            The email column cell action closes the popover if it&apos;s\n            expanded through the <EuiCode>closePopover</EuiCode> prop.\n          </p>\n        </Fragment>\n      ),\n      components: { DataGridColumnCellActions },\n      props: {\n        EuiDataGrid,\n        EuiDataGridColumn,\n        EuiDataGridColumnActions,\n        EuiDataGridColumnCellAction,\n        EuiDataGridColumnCellActionProps,\n        EuiListGroupItem,\n      },\n      demo: <DataGridColumnCellActions />,\n    },\n  ],\n};\n"]}]}