{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\services\\color_picker\\color_picker.ts","dependencies":[{"path":"D:\\work\\eui\\src\\services\\color_picker\\color_picker.ts","mtime":1649070093835},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmciOwoKZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7IHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7IH0KCmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuIik7IH0KCmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHsgaWYgKCFvKSByZXR1cm47IGlmICh0eXBlb2YgbyA9PT0gInN0cmluZyIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7IGlmIChuID09PSAiT2JqZWN0IiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lOyBpZiAobiA9PT0gIk1hcCIgfHwgbiA9PT0gIlNldCIpIHJldHVybiBBcnJheS5mcm9tKG8pOyBpZiAobiA9PT0gIkFyZ3VtZW50cyIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB9CgpmdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikgeyBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH0KCmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHsgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJ1bmRlZmluZWQiIHx8ICEoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChhcnIpKSkgcmV0dXJuOyB2YXIgX2FyciA9IFtdOyB2YXIgX24gPSB0cnVlOyB2YXIgX2QgPSBmYWxzZTsgdmFyIF9lID0gdW5kZWZpbmVkOyB0cnkgeyBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVsicmV0dXJuIl0gIT0gbnVsbCkgX2lbInJldHVybiJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfQoKZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOyB9CgovKgogKiBMaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lIG9yIG1vcmUgY29udHJpYnV0b3IKICogbGljZW5zZSBhZ3JlZW1lbnRzLiBTZWUgdGhlIE5PVElDRSBmaWxlIGRpc3RyaWJ1dGVkIHdpdGgKICogdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIHJlZ2FyZGluZyBjb3B5cmlnaHQKICogb3duZXJzaGlwLiBFbGFzdGljc2VhcmNoIEIuVi4gbGljZW5zZXMgdGhpcyBmaWxlIHRvIHlvdSB1bmRlcgogKiB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsgeW91IG1heQogKiBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgogKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKICoKICogICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiAqCiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywKICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4KICogIkFTIElTIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZCiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZQogKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zCiAqIHVuZGVyIHRoZSBMaWNlbnNlLgogKi8KaW1wb3J0IHsgdXNlTWVtbywgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7Cgp2YXIgZ2VuZXJhdGVSYW5kb21Db2xvciA9IGZ1bmN0aW9uIGdlbmVyYXRlUmFuZG9tQ29sb3IoKSB7CiAgcmV0dXJuICgvLyBodHRwczovL3d3dy5wYXVsaXJpc2guY29tLzIwMDkvcmFuZG9tLWhleC1jb2xvci1jb2RlLXNuaXBwZXRzLwogICAgIiMiLmNvbmNhdChNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxNjc3NzIxNSkudG9TdHJpbmcoMTYpKQogICk7Cn07CgpleHBvcnQgdmFyIHVzZUNvbG9yU3RvcHNTdGF0ZSA9IGZ1bmN0aW9uIHVzZUNvbG9yU3RvcHNTdGF0ZSgpIHsKICB2YXIgdXNlUmFuZG9tQ29sb3IgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IGZhbHNlOwogIHZhciBpbml0aWFsQ29sb3JTdG9wcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogW3sKICAgIHN0b3A6IDIwLAogICAgY29sb3I6ICcjNTRCMzk5JwogIH0sIHsKICAgIHN0b3A6IDUwLAogICAgY29sb3I6ICcjRDM2MDg2JwogIH0sIHsKICAgIHN0b3A6IDY1LAogICAgY29sb3I6ICcjOTE3MEI4JwogIH1dOwoKICB2YXIgX3VzZVN0YXRlID0gdXNlU3RhdGUoZ2VuZXJhdGVSYW5kb21Db2xvcigpKSwKICAgICAgX3VzZVN0YXRlMiA9IF9zbGljZWRUb0FycmF5KF91c2VTdGF0ZSwgMiksCiAgICAgIGFkZENvbG9yID0gX3VzZVN0YXRlMlswXSwKICAgICAgc2V0QWRkQ29sb3IgPSBfdXNlU3RhdGUyWzFdOwoKICB2YXIgX3VzZVN0YXRlMyA9IHVzZVN0YXRlKGluaXRpYWxDb2xvclN0b3BzKSwKICAgICAgX3VzZVN0YXRlNCA9IF9zbGljZWRUb0FycmF5KF91c2VTdGF0ZTMsIDIpLAogICAgICBjb2xvclN0b3BzID0gX3VzZVN0YXRlNFswXSwKICAgICAgc2V0Q29sb3JTdG9wcyA9IF91c2VTdGF0ZTRbMV07CgogIHZhciB1cGRhdGVDb2xvclN0b3BzID0gZnVuY3Rpb24gdXBkYXRlQ29sb3JTdG9wcyhjb2xvclN0b3BzKSB7CiAgICBzZXRDb2xvclN0b3BzKGNvbG9yU3RvcHMpOwoKICAgIGlmICh1c2VSYW5kb21Db2xvcikgewogICAgICBzZXRBZGRDb2xvcihnZW5lcmF0ZVJhbmRvbUNvbG9yKCkpOwogICAgfQogIH07CgogIHJldHVybiBbY29sb3JTdG9wcywgdXBkYXRlQ29sb3JTdG9wcywgYWRkQ29sb3JdOwp9OwpleHBvcnQgdmFyIHVzZUNvbG9yUGlja2VyU3RhdGUgPSBmdW5jdGlvbiB1c2VDb2xvclBpY2tlclN0YXRlKCkgewogIHZhciBpbml0aWFsQ29sb3IgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6ICcnOwoKICB2YXIgX3VzZVN0YXRlNSA9IHVzZVN0YXRlKGluaXRpYWxDb2xvciksCiAgICAgIF91c2VTdGF0ZTYgPSBfc2xpY2VkVG9BcnJheShfdXNlU3RhdGU1LCAyKSwKICAgICAgY29sb3IgPSBfdXNlU3RhdGU2WzBdLAogICAgICBzZXRDb2xvclZhbHVlID0gX3VzZVN0YXRlNlsxXTsKCiAgdmFyIF91c2VTdGF0ZTcgPSB1c2VTdGF0ZSh0cnVlKSwKICAgICAgX3VzZVN0YXRlOCA9IF9zbGljZWRUb0FycmF5KF91c2VTdGF0ZTcsIDIpLAogICAgICBpc1ZhbGlkID0gX3VzZVN0YXRlOFswXSwKICAgICAgc2V0SXNWYWxpZCA9IF91c2VTdGF0ZThbMV07CgogIHZhciBzZXRDb2xvciA9IGZ1bmN0aW9uIHNldENvbG9yKHRleHQsIF9yZWYpIHsKICAgIHZhciBpc1ZhbGlkID0gX3JlZi5pc1ZhbGlkOwogICAgc2V0Q29sb3JWYWx1ZSh0ZXh0KTsKICAgIHNldElzVmFsaWQoaXNWYWxpZCk7CiAgfTsKCiAgdmFyIGVycm9ycyA9IHVzZU1lbW8oZnVuY3Rpb24gKCkgewogICAgdmFyIGhhc0Vycm9ycyA9ICFpc1ZhbGlkOwogICAgcmV0dXJuIGhhc0Vycm9ycyA/IFsnUHJvdmlkZSBhIHZhbGlkIGNvbG9yIHZhbHVlJ10gOiBudWxsOwogIH0sIFtpc1ZhbGlkXSk7CiAgcmV0dXJuIFtjb2xvciwgc2V0Q29sb3IsIGVycm9yc107Cn07Cgp0cnkgewogIHVzZUNvbG9yUGlja2VyU3RhdGUuX19kb2NnZW5JbmZvID0gewogICAgZGVzY3JpcHRpb246ICcnLAogICAgZGlzcGxheU5hbWU6ICd1c2VDb2xvclBpY2tlclN0YXRlJywKICAgIG1ldGhvZHM6IFtdLAogICAgcHJvcHM6IHt9LAogICAgZXh0ZW5kZWRJbnRlcmZhY2VzOiBbJ1N0cmluZyddCiAgfTsKfSBjYXRjaCAoZSkge30="},{"version":3,"sources":["D:/work/eui/src/services/color_picker/color_picker.ts"],"names":["useMemo","useState","generateRandomColor","Math","floor","random","toString","useColorStopsState","useRandomColor","initialColorStops","stop","color","addColor","setAddColor","colorStops","setColorStops","updateColorStops","useColorPickerState","initialColor","setColorValue","isValid","setIsValid","setColor","text","errors","hasErrors"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,OAAT,EAAkBC,QAAlB,QAAkC,OAAlC;;AAOA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,SAC1B;AAD0B,eAEtBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,QAA3B,EAAqCC,QAArC,CAA8C,EAA9C,CAFsB;AAAA;AAAA,CAA5B;;AAIA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAgB7B;AAAA,MAfHC,cAeG,uEAfuB,KAevB;AAAA,MAdHC,iBAcG,uEAdmC,CACpC;AACEC,IAAAA,IAAI,EAAE,EADR;AAEEC,IAAAA,KAAK,EAAE;AAFT,GADoC,EAKpC;AACED,IAAAA,IAAI,EAAE,EADR;AAEEC,IAAAA,KAAK,EAAE;AAFT,GALoC,EASpC;AACED,IAAAA,IAAI,EAAE,EADR;AAEEC,IAAAA,KAAK,EAAE;AAFT,GAToC,CAcnC;;AAAA,kBAC6BV,QAAQ,CAACC,mBAAmB,EAApB,CADrC;AAAA;AAAA,MACIU,QADJ;AAAA,MACcC,WADd;;AAAA,mBAEiCZ,QAAQ,CAACQ,iBAAD,CAFzC;AAAA;AAAA,MAEIK,UAFJ;AAAA,MAEgBC,aAFhB;;AAIH,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACF,UAAD,EAAkC;AACzDC,IAAAA,aAAa,CAACD,UAAD,CAAb;;AACA,QAAIN,cAAJ,EAAoB;AAClBK,MAAAA,WAAW,CAACX,mBAAmB,EAApB,CAAX;AACD;AACF,GALD;;AAMA,SAAO,CAACY,UAAD,EAAaE,gBAAb,EAA+BJ,QAA/B,CAAP;AACD,CA3BM;AA6BP,OAAO,IAAMK,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAuB;AAAA,MAAtBC,YAAsB,uEAAP,EAAO;;AAAA,mBACzBjB,QAAQ,CAACiB,YAAD,CADiB;AAAA;AAAA,MACjDP,KADiD;AAAA,MAC1CQ,aAD0C;;AAAA,mBAE1BlB,QAAQ,CAAC,IAAD,CAFkB;AAAA;AAAA,MAEjDmB,OAFiD;AAAA,MAExCC,UAFwC;;AAGxD,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,QAAqD;AAAA,QAApCH,OAAoC,QAApCA,OAAoC;AACpED,IAAAA,aAAa,CAACI,IAAD,CAAb;AACAF,IAAAA,UAAU,CAACD,OAAD,CAAV;AACD,GAHD;;AAIA,MAAMI,MAAM,GAAGxB,OAAO,CAAC,YAAM;AAC3B,QAAMyB,SAAS,GAAG,CAACL,OAAnB;AACA,WAAOK,SAAS,GAAG,CAAC,6BAAD,CAAH,GAAqC,IAArD;AACD,GAHqB,EAGnB,CAACL,OAAD,CAHmB,CAAtB;AAKA,SAAO,CAACT,KAAD,EAAQW,QAAR,EAAkBE,MAAlB,CAAP;AACD,CAbM","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { useMemo, useState } from 'react';\n\ninterface colorStopsType {\n  stop: number;\n  color: string;\n}\n\nconst generateRandomColor = () =>\n  // https://www.paulirish.com/2009/random-hex-color-code-snippets/\n  `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n\nexport const useColorStopsState = (\n  useRandomColor: boolean = false,\n  initialColorStops: colorStopsType[] = [\n    {\n      stop: 20,\n      color: '#54B399',\n    },\n    {\n      stop: 50,\n      color: '#D36086',\n    },\n    {\n      stop: 65,\n      color: '#9170B8',\n    },\n  ]\n) => {\n  const [addColor, setAddColor] = useState(generateRandomColor());\n  const [colorStops, setColorStops] = useState(initialColorStops);\n\n  const updateColorStops = (colorStops: colorStopsType[]) => {\n    setColorStops(colorStops);\n    if (useRandomColor) {\n      setAddColor(generateRandomColor());\n    }\n  };\n  return [colorStops, updateColorStops, addColor];\n};\n\nexport const useColorPickerState = (initialColor = '') => {\n  const [color, setColorValue] = useState(initialColor);\n  const [isValid, setIsValid] = useState(true);\n  const setColor = (text: string, { isValid }: { isValid: boolean }) => {\n    setColorValue(text);\n    setIsValid(isValid);\n  };\n  const errors = useMemo(() => {\n    const hasErrors = !isValid;\n    return hasErrors ? ['Provide a valid color value'] : null;\n  }, [isValid]);\n\n  return [color, setColor, errors];\n};\n"]}]}