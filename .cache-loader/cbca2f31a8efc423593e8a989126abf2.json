{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\search_bar\\search_filters.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\search_bar\\search_filters.tsx","mtime":1649070093756},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/search_bar/search_filters.tsx"],"names":["React","Component","Fragment","createFilter","EuiFilterGroup","EuiSearchFilters","props","filters","query","onChange","items","forEach","filterConfig","index","available","key","control","push"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAAyD,OAAzD;;AACA,SAASC,YAAT,QAAiD,WAAjD;AAEA,SAASC,cAAT,QAA+B,iBAA/B;AAEA,eAAmC,WAAnC;AAUA,WAAaC,gBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAKW;AAAA,wBACmC,KAAKC,KADxC;AAAA,4CACCC,OADD;AAAA,UACCA,OADD,oCACW,EADX;AAAA,UACeC,KADf,eACeA,KADf;AAAA,UACsBC,QADtB,eACsBA,QADtB;AAGP,UAAMC,KAAqB,GAAG,EAA9B;AAEAH,MAAAA,OAAO,CAACI,OAAR,CAAgB,UAACC,YAAD,EAAeC,KAAf,EAAyB;AACvC,YAAID,YAAY,CAACE,SAAb,IAA0B,CAACF,YAAY,CAACE,SAAb,EAA/B,EAAyD;AACvD;AACD;;AACD,YAAMC,GAAG,oBAAaF,KAAb,CAAT;AACA,YAAMG,OAAO,GAAGb,YAAY,CAACU,KAAD,EAAQD,YAAR,EAAsBJ,KAAtB,EAA6BC,QAA7B,CAA5B;AACAC,QAAAA,KAAK,CAACO,IAAN,eAAW,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEF;AAAf,WAAqBC,OAArB,CAAX;AACD,OAPD;AASA,0BAAO,oBAAC,cAAD,QAAiBN,KAAjB,CAAP;AACD;AApBH;;AAAA;AAAA,EAAsCT,SAAtC;;gBAAaI,gB,kBACyB;AAClCE,EAAAA,OAAO,EAAE;AADyB,C;;;;;;;;;;;;;;;;;AAnCtC;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADA;AACA","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from \"prop-types\";\nimport { createFilter } from './filters';\nimport { EuiFilterGroup } from '../filter_group';\nexport { SearchFilterConfig } from './filters';\nexport class EuiSearchFilters extends Component {\n  static defaultProps = {\n    filters: []\n  };\n\n  render() {\n    const {\n      filters = [],\n      query,\n      onChange\n    } = this.props;\n    const items = [];\n    filters.forEach((filterConfig, index) => {\n      if (filterConfig.available && !filterConfig.available()) {\n        return;\n      }\n\n      const key = `filter_${index}`;\n      const control = createFilter(index, filterConfig, query, onChange);\n      items.push(<Fragment key={key}>{control}</Fragment>);\n    });\n    return <EuiFilterGroup>{items}</EuiFilterGroup>;\n  }\n\n}\nEuiSearchFilters.propTypes = {\n  query: PropTypes.any.isRequired,\n  onChange: PropTypes.func.isRequired,\n  filters: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.shape({\n    type: PropTypes.oneOf([\"is\"]).isRequired,\n    field: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    negatedName: PropTypes.string,\n    available: PropTypes.func\n  }).isRequired, PropTypes.shape({\n    type: PropTypes.oneOf([\"field_value_selection\"]).isRequired,\n    field: PropTypes.string,\n    name: PropTypes.string.isRequired,\n\n    /**\n       * See #FieldValueOptionType\n       */\n    options: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.shape({\n      field: PropTypes.string,\n      value: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.number.isRequired, PropTypes.bool.isRequired, PropTypes.shape({\n        type: PropTypes.oneOf([\"date\"]).isRequired,\n        raw: PropTypes.any.isRequired,\n        granularity: PropTypes.oneOfType([PropTypes.shape({\n          es: PropTypes.oneOf([\"d\", \"w\", \"M\", \"y\"]).isRequired,\n          js: PropTypes.oneOf([\"day\", \"week\", \"month\", \"year\"]).isRequired,\n          isSame: PropTypes.func.isRequired,\n          start: PropTypes.func.isRequired,\n          startOfNext: PropTypes.func.isRequired,\n          iso8601: PropTypes.func.isRequired\n        }).isRequired, PropTypes.oneOf([undefined])]).isRequired,\n        text: PropTypes.string.isRequired,\n        resolve: PropTypes.func.isRequired\n      }).isRequired]).isRequired,\n      name: PropTypes.string,\n      view: PropTypes.node\n    }).isRequired).isRequired, PropTypes.func.isRequired]).isRequired,\n    filterWith: PropTypes.oneOfType([PropTypes.oneOf([\"prefix\", \"includes\"]), PropTypes.func.isRequired]),\n    cache: PropTypes.number,\n    multiSelect: PropTypes.oneOfType([PropTypes.bool.isRequired, PropTypes.oneOf([\"and\", \"or\"])]),\n    loadingMessage: PropTypes.string,\n    noOptionsMessage: PropTypes.string,\n    searchThreshold: PropTypes.number,\n    available: PropTypes.func,\n    autoClose: PropTypes.bool,\n    operator: PropTypes.oneOf([\"eq\", \"exact\", \"gt\", \"gte\", \"lt\", \"lte\"])\n  }).isRequired, PropTypes.shape({\n    type: PropTypes.oneOf([\"field_value_toggle\"]).isRequired,\n    field: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.number.isRequired, PropTypes.bool.isRequired, PropTypes.shape({\n      type: PropTypes.oneOf([\"date\"]).isRequired,\n      raw: PropTypes.any.isRequired,\n      granularity: PropTypes.oneOfType([PropTypes.shape({\n        es: PropTypes.oneOf([\"d\", \"w\", \"M\", \"y\"]).isRequired,\n        js: PropTypes.oneOf([\"day\", \"week\", \"month\", \"year\"]).isRequired,\n        isSame: PropTypes.func.isRequired,\n        start: PropTypes.func.isRequired,\n        startOfNext: PropTypes.func.isRequired,\n        iso8601: PropTypes.func.isRequired\n      }).isRequired, PropTypes.oneOf([undefined])]).isRequired,\n      text: PropTypes.string.isRequired,\n      resolve: PropTypes.func.isRequired\n    }).isRequired]).isRequired,\n    name: PropTypes.string.isRequired,\n    negatedName: PropTypes.string,\n    available: PropTypes.func,\n    operator: PropTypes.oneOf([\"eq\", \"exact\", \"gt\", \"gte\", \"lt\", \"lte\"])\n  }).isRequired, PropTypes.shape({\n    type: PropTypes.oneOf([\"field_value_toggle_group\"]).isRequired,\n    field: PropTypes.string.isRequired,\n\n    /**\n       * See #FieldValueToggleGroupFilterItemType\n       */\n    items: PropTypes.arrayOf(PropTypes.shape({\n      value: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.number.isRequired, PropTypes.bool.isRequired]).isRequired,\n      name: PropTypes.string.isRequired,\n      negatedName: PropTypes.string,\n      operator: PropTypes.oneOf([\"eq\", \"exact\", \"gt\", \"gte\", \"lt\", \"lte\"])\n    }).isRequired).isRequired,\n    available: PropTypes.func\n  }).isRequired]).isRequired).isRequired\n};\n\ntry {\n  EuiSearchFilters.__docgenInfo = {\n    description: '',\n    displayName: 'EuiSearchFilters',\n    methods: [],\n    props: {\n      query: {\n        defaultValue: null,\n        description: '',\n        name: 'query',\n        parent: {\n          fileName: 'eui/src/components/search_bar/search_filters.tsx',\n          name: 'EuiSearchFiltersProps'\n        },\n        required: true,\n        type: {\n          name: 'Query'\n        }\n      },\n      onChange: {\n        defaultValue: null,\n        description: '',\n        name: 'onChange',\n        parent: {\n          fileName: 'eui/src/components/search_bar/search_filters.tsx',\n          name: 'EuiSearchFiltersProps'\n        },\n        required: true,\n        type: {\n          name: '(query: Query) => void'\n        }\n      },\n      filters: {\n        defaultValue: {\n          value: '[]'\n        },\n        description: '',\n        name: 'filters',\n        parent: {\n          fileName: 'eui/src/components/search_bar/search_filters.tsx',\n          name: 'EuiSearchFiltersProps'\n        },\n        required: false,\n        type: {\n          name: 'SearchFilterConfig[]'\n        }\n      }\n    },\n    extendedInterfaces: ['EuiSearchFiltersProps']\n  };\n} catch (e) {}"]}]}