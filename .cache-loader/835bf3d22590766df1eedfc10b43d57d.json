{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\color_picker\\saturation.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\color_picker\\saturation.tsx","mtime":1649070093338},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/color_picker/saturation.tsx"],"names":["React","forwardRef","useEffect","useRef","useState","classNames","keys","useMouseMove","isNil","EuiScreenReaderOnly","EuiI18n","getEventPosition","EuiSaturation","ref","className","color","dataTestSubj","hex","id","onChange","tabIndex","rest","left","top","indicator","setIndicator","lastColor","setlastColor","boxRef","s","v","current","join","getBoundingClientRect","height","width","calculateColor","h","handleUpdate","box","newColor","handleChange","location","handleMouseDown","handleInteraction","handleKeyDown","event","heightScale","widthScale","newLeft","newTop","key","ARROW_DOWN","preventDefault","ARROW_LEFT","ARROW_UP","ARROW_RIGHT","newPosition","classes","roleDescription","background","displayName"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { keys, useMouseMove } from '../../services';\nimport { isNil } from '../../services/predicate';\nimport { EuiScreenReaderOnly } from '../accessibility';\nimport { EuiI18n } from '../i18n';\nimport { getEventPosition } from './utils';\nexport var EuiSaturation = forwardRef(({\n  className,\n  color = [1, 0, 0],\n  'data-test-subj': dataTestSubj = 'euiSaturation',\n  hex,\n  id,\n  onChange,\n  tabIndex = 0,\n  ...rest\n}, ref) => {\n  const [indicator, setIndicator] = useState({\n    left: 0,\n    top: 0\n  });\n  const [lastColor, setlastColor] = useState([]);\n  const boxRef = useRef(null);\n  useEffect(() => {\n    // Mimics `componentDidMount` and `componentDidUpdate`\n    const [, s, v] = color;\n\n    if (!isNil(boxRef.current) && lastColor.join() !== color.join()) {\n      const {\n        height,\n        width\n      } = boxRef.current.getBoundingClientRect();\n      setIndicator({\n        left: s * width,\n        top: (1 - v) * height\n      });\n    }\n  }, [color, lastColor]);\n\n  const calculateColor = ({\n    top,\n    height,\n    left,\n    width\n  }) => {\n    const [h] = color;\n    const s = left / width;\n    const v = 1 - top / height;\n    return [h, s, v];\n  };\n\n  const handleUpdate = box => {\n    const {\n      left,\n      top\n    } = box;\n    setIndicator({\n      left,\n      top\n    });\n    const newColor = calculateColor(box);\n    setlastColor(newColor);\n    onChange(newColor);\n  };\n\n  const handleChange = location => {\n    if (isNil(boxRef) || isNil(boxRef.current)) {\n      return;\n    }\n\n    const box = getEventPosition(location, boxRef.current);\n    handleUpdate(box);\n  };\n\n  const [handleMouseDown, handleInteraction] = useMouseMove(handleChange, boxRef.current);\n\n  const handleKeyDown = event => {\n    if (isNil(boxRef) || isNil(boxRef.current)) {\n      return;\n    }\n\n    const {\n      height,\n      width\n    } = boxRef.current.getBoundingClientRect();\n    const {\n      left,\n      top\n    } = indicator;\n    const heightScale = height / 100;\n    const widthScale = width / 100;\n    let newLeft = left;\n    let newTop = top;\n\n    switch (event.key) {\n      case keys.ARROW_DOWN:\n        event.preventDefault();\n        newTop = top < height ? top + heightScale : height;\n        break;\n\n      case keys.ARROW_LEFT:\n        event.preventDefault();\n        newLeft = left > 0 ? left - widthScale : 0;\n        break;\n\n      case keys.ARROW_UP:\n        event.preventDefault();\n        newTop = top > 0 ? top - heightScale : 0;\n        break;\n\n      case keys.ARROW_RIGHT:\n        event.preventDefault();\n        newLeft = left < width ? left + widthScale : width;\n        break;\n\n      default:\n        return;\n    }\n\n    const newPosition = {\n      left: newLeft,\n      top: newTop\n    };\n    setIndicator(newPosition);\n    const newColor = calculateColor({\n      width,\n      height,\n      ...newPosition\n    });\n    onChange(newColor);\n  };\n\n  const classes = classNames('euiSaturation', className);\n  return <EuiI18n token=\"euiSaturation.roleDescription\" default=\"HSV color mode saturation and value selection\">\n        {roleDescription => // Unsure why this element causes errors as `tabIndex` and focus/interactivity (by extension) are accounted for.\n    // eslint-disable-next-line jsx-a11y/aria-activedescendant-has-tabindex, jsx-a11y/no-noninteractive-element-interactions\n    <div role=\"application\" aria-roledescription={roleDescription} aria-describedby={`${id}-saturationDescription`} aria-activedescendant={`${id}-saturationIndicator`} onMouseDown={handleMouseDown} onTouchStart={handleInteraction} onTouchMove={handleInteraction} onKeyDown={handleKeyDown} ref={ref} tabIndex={tabIndex} className={classes} data-test-subj={dataTestSubj} style={{\n      background: `hsl(${color[0]}, 100%, 50%)`\n    }} {...rest}>\n            <EuiScreenReaderOnly>\n              <p>\n                <EuiI18n token=\"euiSaturation.screenReaderAnnouncement\" default=\"Use the arrow keys to navigate the square color gradient. The coordinates resulting from each key press will be used to calculate HSV color mode 'saturation' and 'value' numbers, in the range of 0 to 1. Left and right decrease and increase (respectively) the 'saturation' value. Up and down decrease and increase (respectively) the 'value' value.\" />\n              </p>\n            </EuiScreenReaderOnly>\n            <EuiScreenReaderOnly>\n              <p aria-live=\"polite\">{hex}</p>\n            </EuiScreenReaderOnly>\n            <div className=\"euiSaturation__lightness\" ref={boxRef}>\n              <div className=\"euiSaturation__saturation\" />\n            </div>\n            <div id={`${id}-saturationIndicator`} className=\"euiSaturation__indicator\" style={{ ...indicator\n      }} />\n          </div>}\n      </EuiI18n>;\n});\nEuiSaturation.propTypes = {\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n  color: PropTypes.any,\n  onChange: PropTypes.func.isRequired,\n  hex: PropTypes.string\n};\nEuiSaturation.displayName = 'EuiSaturation';\n\ntry {\n  EuiSaturation.__docgenInfo = {\n    description: '',\n    displayName: 'EuiSaturation',\n    methods: [],\n    props: {\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/node_modules/@types/react/index.d.ts',\n          name: 'HTMLAttributes'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: 'Defines a string value that labels the current element.\\n' + '@see aria-labelledby.',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/node_modules/@types/react/index.d.ts',\n          name: 'AriaAttributes'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'data-test-subj': {\n        defaultValue: null,\n        description: '',\n        name: 'data-test-subj',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      color: {\n        defaultValue: {\n          value: '[1, 0, 0]'\n        },\n        description: '',\n        name: 'color',\n        parent: {\n          fileName: 'eui/src/components/color_picker/saturation.tsx',\n          name: 'HTMLDivElementOverrides'\n        },\n        required: false,\n        type: {\n          name: '[number, number, number]'\n        }\n      },\n      onChange: {\n        defaultValue: null,\n        description: '',\n        name: 'onChange',\n        parent: {\n          fileName: 'eui/src/components/color_picker/saturation.tsx',\n          name: 'HTMLDivElementOverrides'\n        },\n        required: true,\n        type: {\n          name: '(color: [number, number, number]) => void'\n        }\n      },\n      hex: {\n        defaultValue: null,\n        description: '',\n        name: 'hex',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      ref: {\n        defaultValue: null,\n        description: '',\n        name: 'ref',\n        parent: {\n          fileName: 'eui/node_modules/@types/react/index.d.ts',\n          name: 'RefAttributes'\n        },\n        required: false,\n        type: {\n          name: 'Ref<HTMLDivElement>'\n        }\n      }\n    },\n    extendedInterfaces: ['HTMLAttributes', 'AriaAttributes', 'DOMAttributes', 'CommonProps', 'HTMLDivElementOverrides', 'Attributes']\n  };\n} catch (e) {}"]}]}