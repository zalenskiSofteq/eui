{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\form\\field_search\\field_search.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\form\\field_search\\field_search.tsx","mtime":1649070093422},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/form/field_search/field_search.tsx"],"names":["React","Component","classNames","Browser","keys","EuiFormControlLayout","EuiValidatableControl","isSearchSupported","EuiFieldSearch","value","props","defaultValue","nativeInputValue","Object","getOwnPropertyDescriptor","HTMLInputElement","prototype","nativeInputValueSetter","set","undefined","call","inputElement","event","window","Event","bubbles","cancelable","document","createEvent","initEvent","dispatchEvent","focus","setState","incremental","onSearch","inputRef","target","onKeyUp","defaultPrevented","key","ENTER","isEventSupported","addEventListener","cleanups","push","removeEventListener","onChange","state","forEach","cleanup","className","id","name","placeholder","isInvalid","fullWidth","isLoading","compressed","isClearable","append","prepend","rest","classes","readOnly","disabled","onClick","onClear","e","setRef"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { Browser } from '../../../services/browser';\nimport { keys } from '../../../services';\nimport { EuiFormControlLayout } from '../form_control_layout';\nimport { EuiValidatableControl } from '../validatable_control';\nvar isSearchSupported = false;\nexport class EuiFieldSearch extends Component {\n  static defaultProps = {\n    fullWidth: false,\n    isLoading: false,\n    incremental: false,\n    compressed: false,\n    isClearable: true\n  };\n  state = {\n    value: this.props.value || (this.props.defaultValue ? `${this.props.defaultValue}` : '')\n  };\n  inputElement = null;\n  cleanups = [];\n\n  componentDidMount() {\n    if (!this.inputElement) return;\n    isSearchSupported = Browser.isEventSupported('search', this.inputElement);\n\n    if (isSearchSupported) {\n      const onSearch = event => {\n        if (this.props.onSearch) {\n          if (!event || !event.target || event.defaultPrevented) return;\n          this.props.onSearch(event.target.value);\n        }\n      };\n\n      this.inputElement.addEventListener('search', onSearch);\n      this.cleanups.push(() => {\n        if (!this.inputElement) return;\n        this.inputElement.removeEventListener('search', onSearch);\n      });\n    }\n\n    const onChange = event => {\n      if (event.target && event.target.value !== this.state.value) {\n        this.setState({\n          value: event.target.value\n        });\n\n        if (this.props.onSearch) {\n          this.props.onSearch(event.target.value);\n        }\n      }\n    };\n\n    this.inputElement.addEventListener('change', onChange);\n  }\n\n  onClear = () => {\n    // clear the field's value\n    // 1. React doesn't listen for `change` events, instead it maps `input` events to `change`\n    // 2. React only fires the mapped `change` event if the element's value has changed\n    // 3. An input's value is, in addition to other methods, tracked by intercepting element.value = '...'\n    //\n    // So we have to go below the element's value setter to avoid React intercepting it,\n    // only then will React treat the value as different and fire its `change` event\n    //\n    // https://stackoverflow.com/questions/23892547/what-is-the-best-way-to-trigger-onchange-event-in-react-js\n    const nativeInputValue = Object.getOwnPropertyDescriptor(HTMLInputElement.prototype, 'value');\n    const nativeInputValueSetter = nativeInputValue ? nativeInputValue.set : undefined;\n\n    if (nativeInputValueSetter) {\n      nativeInputValueSetter.call(this.inputElement, '');\n    } // dispatch input event, with IE11 support/fallback\n\n\n    let event;\n\n    if ('Event' in window && typeof Event === 'function') {\n      event = new Event('input', {\n        bubbles: true,\n        cancelable: false\n      });\n    } else {\n      // IE11\n      event = document.createEvent('Event');\n      event.initEvent('input', true, false);\n    }\n\n    if (this.inputElement) {\n      if (event) {\n        this.inputElement.dispatchEvent(event);\n      } // set focus on the search field\n\n\n      this.inputElement.focus();\n      this.inputElement.dispatchEvent(new Event('change'));\n    }\n\n    this.setState({\n      value: ''\n    });\n    const {\n      incremental,\n      onSearch\n    } = this.props;\n\n    if (onSearch && incremental) {\n      onSearch('');\n    }\n  };\n\n  componentWillUnmount() {\n    this.cleanups.forEach(cleanup => cleanup());\n  }\n\n  setRef = inputElement => {\n    this.inputElement = inputElement;\n\n    if (this.props.inputRef) {\n      this.props.inputRef(inputElement);\n    }\n  };\n  onKeyUp = (event, incremental, onSearch) => {\n    this.setState({\n      value: event.target.value\n    });\n\n    if (this.props.onKeyUp) {\n      this.props.onKeyUp(event);\n\n      if (event.defaultPrevented) {\n        return;\n      }\n    }\n\n    if (onSearch && (event.key !== keys.ENTER && incremental || event.key === keys.ENTER && !isSearchSupported)) {\n      onSearch(event.target.value);\n    }\n  };\n\n  render() {\n    const {\n      className,\n      id,\n      name,\n      placeholder,\n      isInvalid,\n      fullWidth,\n      isLoading,\n      inputRef,\n      incremental,\n      compressed,\n      onSearch,\n      isClearable,\n      append,\n      prepend,\n      ...rest\n    } = this.props;\n    let value = this.props.value;\n    if (typeof this.props.value !== 'string') value = this.state.value;\n    const classes = classNames('euiFieldSearch', {\n      'euiFieldSearch--fullWidth': fullWidth,\n      'euiFieldSearch--compressed': compressed,\n      'euiFieldSearch--inGroup': prepend || append,\n      'euiFieldSearch-isLoading': isLoading,\n      'euiFieldSearch-isClearable': isClearable && value\n    }, className);\n    return <EuiFormControlLayout icon=\"search\" fullWidth={fullWidth} isLoading={isLoading} clear={isClearable && value && !rest.readOnly && !rest.disabled ? {\n      onClick: this.onClear\n    } : undefined} compressed={compressed} append={append} prepend={prepend}>\n        <EuiValidatableControl isInvalid={isInvalid}>\n          <input type=\"search\" id={id} name={name} placeholder={placeholder} className={classes} onKeyUp={e => this.onKeyUp(e, incremental, onSearch)} ref={this.setRef} {...rest} />\n        </EuiValidatableControl>\n      </EuiFormControlLayout>;\n  }\n\n}\nEuiFieldSearch.propTypes = {\n  name: PropTypes.string,\n  id: PropTypes.string,\n  placeholder: PropTypes.string,\n  value: PropTypes.string,\n  isInvalid: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n  isLoading: PropTypes.bool,\n\n  /**\n     * Called when the user presses [Enter] OR on change if the incremental prop is `true`.\n     * If you don't need the on[Enter] functionality, prefer using onChange\n     */\n  onSearch: PropTypes.func,\n\n  /**\n     * When `true` the search will be executed (that is, the `onSearch` will be called) as the\n     * user types.\n     */\n  incremental: PropTypes.bool,\n\n  /**\n     * when `true` creates a shorter height input\n     */\n  compressed: PropTypes.bool,\n  inputRef: PropTypes.func,\n\n  /**\n     * Shows a button that quickly clears any input\n     */\n  isClearable: PropTypes.bool,\n\n  /**\n     * Creates an input group with element(s) coming before input\n     * `string` | `ReactElement` or an array of these\n     */\n  prepend: PropTypes.oneOfType([PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.element.isRequired]).isRequired, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.element.isRequired]).isRequired).isRequired]),\n\n  /**\n     * Creates an input group with element(s) coming after input.\n     * `string` | `ReactElement` or an array of these\n     */\n  append: PropTypes.oneOfType([PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.element.isRequired]).isRequired, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.element.isRequired]).isRequired).isRequired]),\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string\n};\n\ntry {\n  EuiFieldSearch.__docgenInfo = {\n    description: '',\n    displayName: 'EuiFieldSearch',\n    methods: [],\n    props: {\n      name: {\n        defaultValue: null,\n        description: '',\n        name: 'name',\n        parent: {\n          fileName: 'eui/src/components/form/field_search/field_search.tsx',\n          name: 'EuiFieldSearchProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      id: {\n        defaultValue: null,\n        description: '',\n        name: 'id',\n        parent: {\n          fileName: 'eui/src/components/form/field_search/field_search.tsx',\n          name: 'EuiFieldSearchProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      placeholder: {\n        defaultValue: null,\n        description: '',\n        name: 'placeholder',\n        parent: {\n          fileName: 'eui/src/components/form/field_search/field_search.tsx',\n          name: 'EuiFieldSearchProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      value: {\n        defaultValue: null,\n        description: '',\n        name: 'value',\n        parent: {\n          fileName: 'eui/src/components/form/field_search/field_search.tsx',\n          name: 'EuiFieldSearchProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      isInvalid: {\n        defaultValue: null,\n        description: '',\n        name: 'isInvalid',\n        parent: {\n          fileName: 'eui/src/components/form/field_search/field_search.tsx',\n          name: 'EuiFieldSearchProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      fullWidth: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: '',\n        name: 'fullWidth',\n        parent: {\n          fileName: 'eui/src/components/form/field_search/field_search.tsx',\n          name: 'EuiFieldSearchProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      isLoading: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: '',\n        name: 'isLoading',\n        parent: {\n          fileName: 'eui/src/components/form/field_search/field_search.tsx',\n          name: 'EuiFieldSearchProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      onSearch: {\n        defaultValue: null,\n        description: 'Called when the user presses [Enter] OR on change if the incremental prop is `true`.\\n' + \"If you don't need the on[Enter] functionality, prefer using onChange\",\n        name: 'onSearch',\n        parent: {\n          fileName: 'eui/src/components/form/field_search/field_search.tsx',\n          name: 'EuiFieldSearchProps'\n        },\n        required: false,\n        type: {\n          name: '(value: string) => void'\n        }\n      },\n      incremental: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: 'When `true` the search will be executed (that is, the `onSearch` will be called) as the\\n' + 'user types.',\n        name: 'incremental',\n        parent: {\n          fileName: 'eui/src/components/form/field_search/field_search.tsx',\n          name: 'EuiFieldSearchProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      compressed: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: 'when `true` creates a shorter height input',\n        name: 'compressed',\n        parent: {\n          fileName: 'eui/src/components/form/field_search/field_search.tsx',\n          name: 'EuiFieldSearchProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      inputRef: {\n        defaultValue: null,\n        description: '',\n        name: 'inputRef',\n        parent: {\n          fileName: 'eui/src/components/form/field_search/field_search.tsx',\n          name: 'EuiFieldSearchProps'\n        },\n        required: false,\n        type: {\n          name: '(node: HTMLInputElement) => void'\n        }\n      },\n      isClearable: {\n        defaultValue: {\n          value: 'true'\n        },\n        description: 'Shows a button that quickly clears any input',\n        name: 'isClearable',\n        parent: {\n          fileName: 'eui/src/components/form/field_search/field_search.tsx',\n          name: 'EuiFieldSearchProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      prepend: {\n        defaultValue: null,\n        description: 'Creates an input group with element(s) coming before input\\n' + '`string` | `ReactElement` or an array of these',\n        name: 'prepend',\n        parent: {\n          fileName: 'eui/src/components/form/field_search/field_search.tsx',\n          name: 'EuiFieldSearchProps'\n        },\n        required: false,\n        type: {\n          name: 'PrependAppendType'\n        }\n      },\n      append: {\n        defaultValue: null,\n        description: 'Creates an input group with element(s) coming after input.\\n' + '`string` | `ReactElement` or an array of these',\n        name: 'append',\n        parent: {\n          fileName: 'eui/src/components/form/field_search/field_search.tsx',\n          name: 'EuiFieldSearchProps'\n        },\n        required: false,\n        type: {\n          name: 'PrependAppendType'\n        }\n      },\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: '',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'data-test-subj': {\n        defaultValue: null,\n        description: '',\n        name: 'data-test-subj',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      }\n    },\n    extendedInterfaces: ['EuiFieldSearchProps', 'CommonProps', 'InputHTMLAttributes', 'HTMLAttributes', 'AriaAttributes', 'DOMAttributes']\n  };\n} catch (e) {}"]}]}