{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\form\\super_select\\super_select.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\form\\super_select\\super_select.tsx","mtime":1649070093440},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/form/super_select/super_select.tsx"],"names":["React","Component","classNames","EuiScreenReaderOnly","EuiSuperSelectControl","EuiInputPopover","EuiContextMenuItem","keys","EuiI18n","ShiftDirection","EuiSuperSelect","isPopoverOpen","props","isOpen","node","index","itemNodes","setState","focusSelected","indexOfSelected","options","reduce","option","value","valueOfSelected","requestAnimationFrame","_isMounted","focusItemAt","onChange","event","key","ARROW_UP","ARROW_DOWN","preventDefault","stopPropagation","openPopover","ESCAPE","closePopover","TAB","shiftFocus","BACK","FORWARD","targetElement","focus","direction","currentIndex","indexOf","document","activeElement","targetElementIndex","length","className","isInvalid","hasDividers","itemClassName","itemLayoutAlign","fullWidth","popoverClassName","compressed","rest","popoverClasses","buttonClasses","state","itemClasses","button","onSelectKeyDown","items","map","dropdownDisplay","inputDisplay","optionRest","itemClicked","onItemKeyDown","setItemNode","optionsCount","isLoading"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { EuiScreenReaderOnly } from '../../accessibility';\nimport { EuiSuperSelectControl } from './super_select_control';\nimport { EuiInputPopover } from '../../popover';\nimport { EuiContextMenuItem } from '../../context_menu';\nimport { keys } from '../../../services';\nimport { EuiI18n } from '../../i18n';\nvar ShiftDirection;\n\n(function (ShiftDirection) {\n  ShiftDirection[\"BACK\"] = \"back\";\n  ShiftDirection[\"FORWARD\"] = \"forward\";\n})(ShiftDirection || (ShiftDirection = {}));\n\nexport class EuiSuperSelect extends Component {\n  static defaultProps = {\n    hasDividers: false,\n    fullWidth: false,\n    compressed: false,\n    isInvalid: false,\n    isLoading: false\n  };\n  itemNodes = [];\n  _isMounted = false;\n  state = {\n    isPopoverOpen: this.props.isOpen || false\n  };\n\n  componentDidMount() {\n    this._isMounted = true;\n\n    if (this.props.isOpen) {\n      this.openPopover();\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  setItemNode = (node, index) => {\n    this.itemNodes[index] = node;\n  };\n  openPopover = () => {\n    this.setState({\n      isPopoverOpen: true\n    });\n\n    const focusSelected = () => {\n      const indexOfSelected = this.props.options.reduce((indexOfSelected, option, index) => {\n        if (indexOfSelected != null) return indexOfSelected;\n        if (option == null) return null;\n        return option.value === this.props.valueOfSelected ? index : null;\n      }, null);\n      requestAnimationFrame(() => {\n        if (!this._isMounted) {\n          return;\n        }\n\n        if (this.props.valueOfSelected != null) {\n          if (indexOfSelected != null) {\n            this.focusItemAt(indexOfSelected);\n          } else {\n            focusSelected();\n          }\n        }\n      });\n    };\n\n    requestAnimationFrame(focusSelected);\n  };\n  closePopover = () => {\n    this.setState({\n      isPopoverOpen: false\n    });\n  };\n  itemClicked = value => {\n    this.setState({\n      isPopoverOpen: false\n    });\n\n    if (this.props.onChange) {\n      this.props.onChange(value);\n    }\n  };\n  onSelectKeyDown = event => {\n    if (event.key === keys.ARROW_UP || event.key === keys.ARROW_DOWN) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.openPopover();\n    }\n  };\n  onItemKeyDown = event => {\n    switch (event.key) {\n      case keys.ESCAPE:\n        // close the popover and prevent ancestors from handling\n        event.preventDefault();\n        event.stopPropagation();\n        this.closePopover();\n        break;\n\n      case keys.TAB:\n        // no-op\n        event.preventDefault();\n        event.stopPropagation();\n        break;\n\n      case keys.ARROW_UP:\n        event.preventDefault();\n        event.stopPropagation();\n        this.shiftFocus(ShiftDirection.BACK);\n        break;\n\n      case keys.ARROW_DOWN:\n        event.preventDefault();\n        event.stopPropagation();\n        this.shiftFocus(ShiftDirection.FORWARD);\n        break;\n    }\n  };\n\n  focusItemAt(index) {\n    const targetElement = this.itemNodes[index];\n\n    if (targetElement != null) {\n      targetElement.focus();\n    }\n  }\n\n  shiftFocus(direction) {\n    const currentIndex = this.itemNodes.indexOf(document.activeElement);\n    let targetElementIndex;\n\n    if (currentIndex === -1) {\n      // somehow the select options has lost focus\n      targetElementIndex = 0;\n    } else {\n      if (direction === ShiftDirection.BACK) {\n        targetElementIndex = currentIndex === 0 ? this.itemNodes.length - 1 : currentIndex - 1;\n      } else {\n        targetElementIndex = currentIndex === this.itemNodes.length - 1 ? 0 : currentIndex + 1;\n      }\n    }\n\n    this.focusItemAt(targetElementIndex);\n  }\n\n  render() {\n    const {\n      className,\n      options,\n      valueOfSelected,\n      onChange,\n      isOpen,\n      isInvalid,\n      hasDividers,\n      itemClassName,\n      itemLayoutAlign,\n      fullWidth,\n      popoverClassName,\n      compressed,\n      ...rest\n    } = this.props;\n    const popoverClasses = classNames('euiSuperSelect', popoverClassName);\n    const buttonClasses = classNames({\n      'euiSuperSelect--isOpen__button': this.state.isPopoverOpen\n    }, className);\n    const itemClasses = classNames('euiSuperSelect__item', {\n      'euiSuperSelect__item--hasDividers': hasDividers\n    }, itemClassName);\n    const button = <EuiSuperSelectControl options={options} value={valueOfSelected} onClick={this.state.isPopoverOpen ? this.closePopover : this.openPopover} onKeyDown={this.onSelectKeyDown} className={buttonClasses} fullWidth={fullWidth} isInvalid={isInvalid} compressed={compressed} {...rest} />;\n    const items = options.map((option, index) => {\n      const {\n        value,\n        dropdownDisplay,\n        inputDisplay,\n        ...optionRest\n      } = option;\n      return <EuiContextMenuItem key={index} className={itemClasses} icon={valueOfSelected === value ? 'check' : 'empty'} onClick={() => this.itemClicked(value)} onKeyDown={this.onItemKeyDown} layoutAlign={itemLayoutAlign} buttonRef={node => this.setItemNode(node, index)} role=\"option\" id={value} aria-selected={valueOfSelected === value} {...optionRest}>\n          {dropdownDisplay || inputDisplay}\n        </EuiContextMenuItem>;\n    });\n    return <EuiInputPopover className={popoverClasses} input={button} isOpen={isOpen || this.state.isPopoverOpen} closePopover={this.closePopover} panelPaddingSize=\"none\" fullWidth={fullWidth}>\n        <EuiScreenReaderOnly>\n          <p role=\"alert\">\n            <EuiI18n token=\"euiSuperSelect.screenReaderAnnouncement\" default=\"You are in a form selector of {optionsCount} items and must select a single option.\n              Use the up and down keys to navigate or escape to close.\" values={{\n            optionsCount: options.length\n          }} />\n          </p>\n        </EuiScreenReaderOnly>\n        <div className=\"euiSuperSelect__listbox\" role=\"listbox\" aria-activedescendant={valueOfSelected} tabIndex={0}>\n          {items}\n        </div>\n      </EuiInputPopover>;\n  }\n\n}\nEuiSuperSelect.propTypes = {\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n  compressed: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n  isInvalid: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  name: PropTypes.string,\n\n  /**\n     * Creates an input group with element(s) coming before input.\n     * `string` | `ReactElement` or an array of these\n     */\n  prepend: PropTypes.oneOfType([PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.element.isRequired]).isRequired, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.element.isRequired]).isRequired).isRequired]),\n\n  /**\n     * Creates an input group with element(s) coming after input.\n     * `string` | `ReactElement` or an array of these\n     */\n  append: PropTypes.oneOfType([PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.element.isRequired]).isRequired, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.element.isRequired]).isRequired).isRequired]),\n\n  /**\n       * Pass an array of options that must at least include:\n       * `value`: storing unique value of item,\n       * `inputDisplay`: what shows inside the form input when selected\n       * `dropdownDisplay` (optional): what shows for the item in the dropdown\n       */\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.any.isRequired,\n    inputDisplay: PropTypes.node,\n    dropdownDisplay: PropTypes.node,\n    disabled: PropTypes.bool,\n    \"data-test-subj\": PropTypes.string\n  }).isRequired).isRequired,\n  valueOfSelected: PropTypes.any,\n\n  /**\n       * Classes for the context menu item\n       */\n  itemClassName: PropTypes.string,\n\n  /**\n       * You must pass an `onChange` function to handle the update of the value\n       */\n  onChange: PropTypes.func,\n\n  /**\n       * Change to `true` if you want horizontal lines between options.\n       * This is best used when options are multi-line.\n       */\n  hasDividers: PropTypes.bool,\n\n  /**\n       * Change `EuiContextMenuItem` layout position of icon\n       */\n  itemLayoutAlign: PropTypes.oneOf([\"center\", \"top\", \"bottom\"]),\n\n  /**\n       * Applied to the outermost wrapper (popover)\n       */\n  popoverClassName: PropTypes.string,\n\n  /**\n       * Controls whether the options are shown. Default: false\n       */\n  isOpen: PropTypes.bool\n};\n\ntry {\n  EuiSuperSelect.__docgenInfo = {\n    description: '',\n    displayName: 'EuiSuperSelect',\n    methods: [],\n    props: {\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: '',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'data-test-subj': {\n        defaultValue: null,\n        description: '',\n        name: 'data-test-subj',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      append: {\n        defaultValue: null,\n        description: 'Creates an input group with element(s) coming after input.\\n' + '`string` | `ReactElement` or an array of these',\n        name: 'append',\n        parent: {\n          fileName: 'eui/src/components/form/super_select/super_select_control.tsx',\n          name: 'EuiSuperSelectControlProps'\n        },\n        required: false,\n        type: {\n          name: 'PrependAppendType'\n        }\n      },\n      isLoading: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: '',\n        name: 'isLoading',\n        parent: {\n          fileName: 'eui/src/components/form/super_select/super_select_control.tsx',\n          name: 'EuiSuperSelectControlProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      name: {\n        defaultValue: null,\n        description: '',\n        name: 'name',\n        parent: {\n          fileName: 'eui/src/components/form/super_select/super_select_control.tsx',\n          name: 'EuiSuperSelectControlProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      compressed: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: '',\n        name: 'compressed',\n        parent: {\n          fileName: 'eui/src/components/form/super_select/super_select_control.tsx',\n          name: 'EuiSuperSelectControlProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      readOnly: {\n        defaultValue: null,\n        description: '',\n        name: 'readOnly',\n        parent: {\n          fileName: 'eui/src/components/form/super_select/super_select_control.tsx',\n          name: 'EuiSuperSelectControlProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      isInvalid: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: '',\n        name: 'isInvalid',\n        parent: {\n          fileName: 'eui/src/components/form/super_select/super_select_control.tsx',\n          name: 'EuiSuperSelectControlProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      fullWidth: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: '',\n        name: 'fullWidth',\n        parent: {\n          fileName: 'eui/src/components/form/super_select/super_select_control.tsx',\n          name: 'EuiSuperSelectControlProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      prepend: {\n        defaultValue: null,\n        description: 'Creates an input group with element(s) coming before input.\\n' + '`string` | `ReactElement` or an array of these',\n        name: 'prepend',\n        parent: {\n          fileName: 'eui/src/components/form/super_select/super_select_control.tsx',\n          name: 'EuiSuperSelectControlProps'\n        },\n        required: false,\n        type: {\n          name: 'PrependAppendType'\n        }\n      },\n      options: {\n        defaultValue: null,\n        description: 'Pass an array of options that must at least include:\\n' + '`value`: storing unique value of item,\\n' + '`inputDisplay`: what shows inside the form input when selected\\n' + '`dropdownDisplay` (optional): what shows for the item in the dropdown',\n        name: 'options',\n        parent: undefined,\n        required: true,\n        type: {\n          name: 'EuiSuperSelectOption<T>[]'\n        }\n      },\n      valueOfSelected: {\n        defaultValue: null,\n        description: '',\n        name: 'valueOfSelected',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'T'\n        }\n      },\n      itemClassName: {\n        defaultValue: null,\n        description: 'Classes for the context menu item',\n        name: 'itemClassName',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      onChange: {\n        defaultValue: null,\n        description: 'You must pass an `onChange` function to handle the update of the value',\n        name: 'onChange',\n        parent: undefined,\n        required: false,\n        type: {\n          name: '(value: T) => void'\n        }\n      },\n      hasDividers: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: 'Change to `true` if you want horizontal lines between options.\\n' + 'This is best used when options are multi-line.',\n        name: 'hasDividers',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      itemLayoutAlign: {\n        defaultValue: null,\n        description: 'Change `EuiContextMenuItem` layout position of icon',\n        name: 'itemLayoutAlign',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'enum',\n          raw: 'EuiContextMenuItemLayoutAlignment',\n          value: [{\n            value: '\"center\"'\n          }, {\n            value: '\"top\"'\n          }, {\n            value: '\"bottom\"'\n          }]\n        }\n      },\n      popoverClassName: {\n        defaultValue: null,\n        description: 'Applied to the outermost wrapper (popover)',\n        name: 'popoverClassName',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      isOpen: {\n        defaultValue: null,\n        description: 'Controls whether the options are shown. Default: false',\n        name: 'isOpen',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      }\n    },\n    extendedInterfaces: ['CommonProps', 'EuiSuperSelectControlProps', 'HTMLAttributes', 'ButtonHTMLAttributes', 'AriaAttributes', 'DOMAttributes']\n  };\n} catch (e) {}"]}]}