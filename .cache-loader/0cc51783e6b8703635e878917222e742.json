{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\datagrid\\data_grid_control_header_cell.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\datagrid\\data_grid_control_header_cell.tsx","mtime":1649070093365},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/datagrid/data_grid_control_header_cell.tsx"],"names":["React","useContext","useEffect","useRef","useState","classnames","keys","tabbable","DataGridFocusContext","EuiDataGridControlHeaderCell","props","controlColumn","index","headerIsInteractive","className","setFocusedCell","onFocusUpdate","HeaderCellRender","headerCellRender","width","id","classes","isFocused","setIsFocused","headerRef","isCellEntered","setIsCellEntered","current","enableInteractives","interactiveElements","querySelectorAll","i","length","setAttribute","disableInteractives","tababbles","console","warn","element","tabbables","focus","onFocusIn","e","requestAnimationFrame","blur","preventDefault","onFocusOut","contains","document","activeElement","onKeyUp","event","key","ENTER","ESCAPE","F2","interactives","headerNode","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport PropTypes from \"prop-types\";\nimport classnames from 'classnames';\nimport { keys } from '../../services';\nimport tabbable from 'tabbable';\nimport { DataGridFocusContext } from './data_grid_context';\nexport var EuiDataGridControlHeaderCell = props => {\n  const {\n    controlColumn,\n    index,\n    headerIsInteractive,\n    className\n  } = props;\n  const {\n    setFocusedCell,\n    onFocusUpdate\n  } = useContext(DataGridFocusContext);\n  const {\n    headerCellRender: HeaderCellRender,\n    width,\n    id\n  } = controlColumn;\n  const classes = classnames('euiDataGridHeaderCell', className);\n  const [isFocused, setIsFocused] = useState(false);\n  useEffect(() => {\n    onFocusUpdate([index, -1], isFocused => {\n      setIsFocused(isFocused);\n    });\n  }, [index, onFocusUpdate]);\n  const headerRef = useRef(null);\n  const [isCellEntered, setIsCellEntered] = useState(false);\n  useEffect(() => {\n    if (headerRef.current) {\n      function enableInteractives() {\n        const interactiveElements = headerRef.current.querySelectorAll('[data-euigrid-tab-managed]');\n\n        for (let i = 0; i < interactiveElements.length; i++) {\n          interactiveElements[i].setAttribute('tabIndex', '0');\n        }\n      }\n\n      function disableInteractives() {\n        const tababbles = tabbable(headerRef.current);\n\n        if (tababbles.length > 1) {\n          console.warn(`EuiDataGridHeaderCell expects at most 1 tabbable element, ${tababbles.length} found instead`);\n        }\n\n        for (let i = 0; i < tababbles.length; i++) {\n          const element = tababbles[i];\n          element.setAttribute('data-euigrid-tab-managed', 'true');\n          element.setAttribute('tabIndex', '-1');\n        }\n      }\n\n      if (isCellEntered) {\n        enableInteractives();\n        const tabbables = tabbable(headerRef.current);\n\n        if (tabbables.length > 0) {\n          tabbables[0].focus();\n        }\n      } else {\n        disableInteractives();\n      }\n    }\n  }, [isCellEntered]);\n  useEffect(() => {\n    if (headerRef.current) {\n      if (isFocused) {\n        const interactives = headerRef.current.querySelectorAll('[data-euigrid-tab-managed]');\n\n        if (interactives.length === 1) {\n          setIsCellEntered(true);\n        } else {\n          headerRef.current.focus();\n        }\n      } else {\n        setIsCellEntered(false);\n      } // focusin bubbles while focus does not, and this needs to react to children gaining focus\n\n\n      function onFocusIn(e) {\n        if (headerIsInteractive === false) {\n          // header is not interactive, avoid focusing\n          requestAnimationFrame(() => headerRef.current.blur());\n          e.preventDefault();\n          return false;\n        } else {\n          // take the focus\n          setFocusedCell([index, -1]);\n        }\n      } // focusout bubbles while blur does not, and this needs to react to the children losing focus\n\n\n      function onFocusOut() {\n        // wait for the next element to receive focus, then update interactives' state\n        requestAnimationFrame(() => {\n          if (headerRef.current) {\n            if (headerRef.current.contains(document.activeElement) === false) {\n              setIsCellEntered(false);\n            }\n          }\n        });\n      }\n\n      function onKeyUp(event) {\n        switch (event.key) {\n          case keys.ENTER:\n            {\n              event.preventDefault();\n              setIsCellEntered(true);\n              break;\n            }\n\n          case keys.ESCAPE:\n            {\n              event.preventDefault(); // move focus to cell\n\n              setIsCellEntered(false);\n              headerRef.current.focus();\n              break;\n            }\n\n          case keys.F2:\n            {\n              event.preventDefault();\n\n              if (document.activeElement === headerRef.current) {\n                // move focus into cell's interactives\n                setIsCellEntered(true);\n              } else {\n                // move focus to cell\n                setIsCellEntered(false);\n                headerRef.current.focus();\n              }\n\n              break;\n            }\n        }\n      }\n\n      const headerNode = headerRef.current; // @ts-ignore-next line TS doesn't have focusin\n\n      headerNode.addEventListener('focusin', onFocusIn);\n      headerNode.addEventListener('focusout', onFocusOut);\n      headerNode.addEventListener('keyup', onKeyUp);\n      return () => {\n        // @ts-ignore-next line TS doesn't have focusin\n        headerNode.removeEventListener('focusin', onFocusIn);\n        headerNode.removeEventListener('focusout', onFocusOut);\n        headerNode.removeEventListener('keyup', onKeyUp);\n      };\n    }\n  }, [setFocusedCell, headerIsInteractive, isFocused, setIsCellEntered, index]);\n  return <div role=\"columnheader\" ref={headerRef} tabIndex={isFocused ? 0 : -1} className={classes} data-test-subj={`dataGridHeaderCell-${id}`} style={width != null ? {\n    width: `${width}px`\n  } : {}}>\n      <div className=\"euiDataGridHeaderCell__content\">\n        <HeaderCellRender />\n      </div>\n    </div>;\n};\nEuiDataGridControlHeaderCell.propTypes = {\n  index: PropTypes.number.isRequired,\n  controlColumn: PropTypes.shape({\n    /**\n       * Used as the React `key` when rendering content\n       */\n    id: PropTypes.string.isRequired,\n\n    /**\n       * Component to render in the column header\n       */\n    headerCellRender: PropTypes.elementType.isRequired,\n\n    /**\n       * Component to render for each row in the column\n       */\n    rowCellRender: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.func.isRequired]).isRequired,\n\n    /**\n       * Width of the column, uses are unable to change this\n       */\n    width: PropTypes.number.isRequired\n  }).isRequired,\n  headerIsInteractive: PropTypes.bool.isRequired,\n  className: PropTypes.string\n};\n\ntry {\n  EuiDataGridControlHeaderCell.__docgenInfo = {\n    description: '',\n    displayName: 'EuiDataGridControlHeaderCell',\n    methods: [],\n    props: {\n      index: {\n        defaultValue: null,\n        description: '',\n        name: 'index',\n        parent: {\n          fileName: 'eui/src/components/datagrid/data_grid_control_header_cell.tsx',\n          name: 'EuiDataGridControlHeaderRowProps'\n        },\n        required: true,\n        type: {\n          name: 'number'\n        }\n      },\n      controlColumn: {\n        defaultValue: null,\n        description: '',\n        name: 'controlColumn',\n        parent: {\n          fileName: 'eui/src/components/datagrid/data_grid_control_header_cell.tsx',\n          name: 'EuiDataGridControlHeaderRowProps'\n        },\n        required: true,\n        type: {\n          name: 'EuiDataGridControlColumn'\n        }\n      },\n      headerIsInteractive: {\n        defaultValue: null,\n        description: '',\n        name: 'headerIsInteractive',\n        parent: {\n          fileName: 'eui/src/components/datagrid/data_grid_control_header_cell.tsx',\n          name: 'EuiDataGridControlHeaderRowProps'\n        },\n        required: true,\n        type: {\n          name: 'boolean'\n        }\n      },\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/src/components/datagrid/data_grid_control_header_cell.tsx',\n          name: 'EuiDataGridControlHeaderRowProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      }\n    },\n    extendedInterfaces: ['EuiDataGridControlHeaderRowProps']\n  };\n} catch (e) {}"]}]}