{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src-docs\\src\\views\\badge\\badge.js","dependencies":[{"path":"D:\\work\\eui\\src-docs\\src\\views\\badge\\badge.js","mtime":1649070093090},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKCmZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkgeyByZXR1cm4gX2FycmF5V2l0aEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgfHwgX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFyciwgaSkgfHwgX25vbkl0ZXJhYmxlUmVzdCgpOyB9CgpmdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLiIpOyB9CgpmdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7IGlmICghbykgcmV0dXJuOyBpZiAodHlwZW9mIG8gPT09ICJzdHJpbmciKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpOyBpZiAobiA9PT0gIk9iamVjdCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTsgaWYgKG4gPT09ICJNYXAiIHx8IG4gPT09ICJTZXQiKSByZXR1cm4gQXJyYXkuZnJvbShvKTsgaWYgKG4gPT09ICJBcmd1bWVudHMiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgfQoKZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHsgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykgeyBhcnIyW2ldID0gYXJyW2ldOyB9IHJldHVybiBhcnIyOyB9CgpmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7IGlmICh0eXBlb2YgU3ltYm9sID09PSAidW5kZWZpbmVkIiB8fCAhKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoYXJyKSkpIHJldHVybjsgdmFyIF9hcnIgPSBbXTsgdmFyIF9uID0gdHJ1ZTsgdmFyIF9kID0gZmFsc2U7IHZhciBfZSA9IHVuZGVmaW5lZDsgdHJ5IHsgZm9yICh2YXIgX2kgPSBhcnJbU3ltYm9sLml0ZXJhdG9yXSgpLCBfczsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkgeyBfYXJyLnB1c2goX3MudmFsdWUpOyBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7IH0gfSBjYXRjaCAoZXJyKSB7IF9kID0gdHJ1ZTsgX2UgPSBlcnI7IH0gZmluYWxseSB7IHRyeSB7IGlmICghX24gJiYgX2lbInJldHVybiJdICE9IG51bGwpIF9pWyJyZXR1cm4iXSgpOyB9IGZpbmFsbHkgeyBpZiAoX2QpIHRocm93IF9lOyB9IH0gcmV0dXJuIF9hcnI7IH0KCmZ1bmN0aW9uIF9hcnJheVdpdGhIb2xlcyhhcnIpIHsgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIGFycjsgfQoKaW1wb3J0IFJlYWN0LCB7IEZyYWdtZW50LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JzsKaW1wb3J0IHsgRXVpQmFkZ2UsIEV1aUZsZXhJdGVtLCBFdWlGbGV4R3JvdXAsIEV1aVNwYWNlciwgRXVpU3dpdGNoLCBFdWlUZXh0LCBFdWlUaXRsZSB9IGZyb20gJy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzJzsKdmFyIGJhZGdlcyA9IFsnZGVmYXVsdCcsICdob2xsb3cnLCAncHJpbWFyeScsICdzdWNjZXNzJywgJ2FjY2VudCcsICd3YXJuaW5nJywgJ2RhbmdlciddOwp2YXIgY3VzdG9tQmFkZ2VzID0gWycjREREJywgJyNBQUEnLCAnIzY2NicsICcjMzMzJywgJyNCQURBNTUnLCAnI0ZDRjdCQycsICcjRkVBMjdGJywgJyNGRkE1MDAnLCAnIzAwMDBGRiddOwpleHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gKCkgewogIHZhciBfdXNlU3RhdGUgPSB1c2VTdGF0ZShmYWxzZSksCiAgICAgIF91c2VTdGF0ZTIgPSBfc2xpY2VkVG9BcnJheShfdXNlU3RhdGUsIDIpLAogICAgICBpc0Rpc2FibGVkID0gX3VzZVN0YXRlMlswXSwKICAgICAgc2V0RGlzYWJsZWQgPSBfdXNlU3RhdGUyWzFdOwoKICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRnJhZ21lbnQsIG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEV1aVRpdGxlLCB7CiAgICBzaXplOiAieHMiCiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImgyIiwgbnVsbCwgIkFjY2VwdGVkIGNvbG9yIG5hbWVzIikpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlTcGFjZXIsIHsKICAgIHNpemU6ICJtIgogIH0pLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlGbGV4R3JvdXAsIHsKICAgIHdyYXA6IHRydWUsCiAgICByZXNwb25zaXZlOiBmYWxzZSwKICAgIGd1dHRlclNpemU6ICJ4cyIKICB9LCBiYWRnZXMubWFwKGZ1bmN0aW9uIChiYWRnZSkgewogICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEV1aUZsZXhJdGVtLCB7CiAgICAgIGdyb3c6IGZhbHNlLAogICAgICBrZXk6IGJhZGdlCiAgICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlCYWRnZSwgewogICAgICBjb2xvcjogYmFkZ2UKICAgIH0sIGJhZGdlKSk7CiAgfSkpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlTcGFjZXIsIG51bGwpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlUaXRsZSwgewogICAgc2l6ZTogInhzIgogIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJoMyIsIG51bGwsICJDdXN0b20gY29sb3IgZXhhbXBsZXMiKSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEV1aVNwYWNlciwgewogICAgc2l6ZTogIm0iCiAgfSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEV1aUZsZXhHcm91cCwgewogICAgd3JhcDogdHJ1ZSwKICAgIHJlc3BvbnNpdmU6IGZhbHNlLAogICAgZ3V0dGVyU2l6ZTogInhzIiwKICAgIHN0eWxlOiB7CiAgICAgIG1heFdpZHRoOiAnMzAwcHgnCiAgICB9CiAgfSwgY3VzdG9tQmFkZ2VzLm1hcChmdW5jdGlvbiAoYmFkZ2UpIHsKICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlGbGV4SXRlbSwgewogICAgICBncm93OiBmYWxzZSwKICAgICAga2V5OiBiYWRnZQogICAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRXVpQmFkZ2UsIHsKICAgICAgY29sb3I6IGJhZGdlCiAgICB9LCBiYWRnZSkpOwogIH0pKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRXVpU3BhY2VyLCBudWxsKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRXVpVGl0bGUsIHsKICAgIHNpemU6ICJ4cyIKICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgiaDMiLCBudWxsLCAiRGlzYWJsZWQgc3RhdGUiKSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEV1aVNwYWNlciwgewogICAgc2l6ZTogIm0iCiAgfSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEV1aVRleHQsIHsKICAgIHNpemU6ICJzIgogIH0sICJSZWdhcmRsZXNzIG9mIHRoZSBhc3NpZ25lZCBjb2xvciwgYWxsIGJhZGdlcyB1c2UgdGhlIHNhbWUgZGlzYWJsZWQgc3RhdGUgc3R5bGVzLiIpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlTcGFjZXIsIHsKICAgIHNpemU6ICJtIgogIH0pLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlTd2l0Y2gsIHsKICAgIGxhYmVsOiAiU2hvdyBkaXNhYmxlZCBzdGF0ZSIsCiAgICBjaGVja2VkOiBpc0Rpc2FibGVkLAogICAgb25DaGFuZ2U6IGZ1bmN0aW9uIG9uQ2hhbmdlKGUpIHsKICAgICAgcmV0dXJuIHNldERpc2FibGVkKGUudGFyZ2V0LmNoZWNrZWQpOwogICAgfQogIH0pLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlTcGFjZXIsIHsKICAgIHNpemU6ICJtIgogIH0pLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlGbGV4R3JvdXAsIHsKICAgIHdyYXA6IHRydWUsCiAgICByZXNwb25zaXZlOiBmYWxzZSwKICAgIGd1dHRlclNpemU6ICJ4cyIKICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlGbGV4SXRlbSwgewogICAgZ3JvdzogZmFsc2UKICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlCYWRnZSwgewogICAgY29sb3I6ICJzdWNjZXNzIiwKICAgIGlzRGlzYWJsZWQ6IGlzRGlzYWJsZWQKICB9LCBpc0Rpc2FibGVkID8gJ0Rpc2FibGVkIGJhZGdlJyA6ICdEaXNhYmxlIG1lIScpKSkpOwp9KTs="},{"version":3,"sources":["D:/work/eui/src-docs/src/views/badge/badge.js"],"names":["React","Fragment","useState","EuiBadge","EuiFlexItem","EuiFlexGroup","EuiSpacer","EuiSwitch","EuiText","EuiTitle","badges","customBadges","isDisabled","setDisabled","map","badge","maxWidth","e","target","checked"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\n\nimport {\n  EuiBadge,\n  EuiFlexItem,\n  EuiFlexGroup,\n  EuiSpacer,\n  EuiSwitch,\n  EuiText,\n  EuiTitle,\n} from '../../../../src/components';\n\nconst badges = [\n  'default',\n  'hollow',\n  'primary',\n  'success',\n  'accent',\n  'warning',\n  'danger',\n];\n\nconst customBadges = [\n  '#DDD',\n  '#AAA',\n  '#666',\n  '#333',\n  '#BADA55',\n  '#FCF7BC',\n  '#FEA27F',\n  '#FFA500',\n  '#0000FF',\n];\n\nexport default () => {\n  const [isDisabled, setDisabled] = useState(false);\n\n  return (\n    <Fragment>\n      <EuiTitle size=\"xs\">\n        <h2>Accepted color names</h2>\n      </EuiTitle>\n      <EuiSpacer size=\"m\" />\n      <EuiFlexGroup wrap responsive={false} gutterSize=\"xs\">\n        {badges.map((badge) => (\n          <EuiFlexItem grow={false} key={badge}>\n            <EuiBadge color={badge}>{badge}</EuiBadge>\n          </EuiFlexItem>\n        ))}\n      </EuiFlexGroup>\n      <EuiSpacer />\n      <EuiTitle size=\"xs\">\n        <h3>Custom color examples</h3>\n      </EuiTitle>\n      <EuiSpacer size=\"m\" />\n      <EuiFlexGroup\n        wrap\n        responsive={false}\n        gutterSize=\"xs\"\n        style={{ maxWidth: '300px' }}>\n        {customBadges.map((badge) => (\n          <EuiFlexItem grow={false} key={badge}>\n            <EuiBadge color={badge}>{badge}</EuiBadge>\n          </EuiFlexItem>\n        ))}\n      </EuiFlexGroup>\n      <EuiSpacer />\n      <EuiTitle size=\"xs\">\n        <h3>Disabled state</h3>\n      </EuiTitle>\n      <EuiSpacer size=\"m\" />\n      <EuiText size=\"s\">\n        Regardless of the assigned color, all badges use the same disabled state\n        styles.\n      </EuiText>\n      <EuiSpacer size=\"m\" />\n      <EuiSwitch\n        label=\"Show disabled state\"\n        checked={isDisabled}\n        onChange={(e) => setDisabled(e.target.checked)}\n      />\n      <EuiSpacer size=\"m\" />\n      <EuiFlexGroup wrap responsive={false} gutterSize=\"xs\">\n        <EuiFlexItem grow={false}>\n          <EuiBadge color=\"success\" isDisabled={isDisabled}>\n            {isDisabled ? 'Disabled badge' : 'Disable me!'}\n          </EuiBadge>\n        </EuiFlexItem>\n      </EuiFlexGroup>\n    </Fragment>\n  );\n};\n"]}]}