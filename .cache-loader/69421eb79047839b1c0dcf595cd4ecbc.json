{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\services\\transition\\transition.ts","dependencies":[{"path":"D:\\work\\eui\\src\\services\\transition\\transition.ts","mtime":1649070093846},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucmVkdWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucGFyc2UtZmxvYXQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaCI7CgovKgogKiBMaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lIG9yIG1vcmUgY29udHJpYnV0b3IKICogbGljZW5zZSBhZ3JlZW1lbnRzLiBTZWUgdGhlIE5PVElDRSBmaWxlIGRpc3RyaWJ1dGVkIHdpdGgKICogdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIHJlZ2FyZGluZyBjb3B5cmlnaHQKICogb3duZXJzaGlwLiBFbGFzdGljc2VhcmNoIEIuVi4gbGljZW5zZXMgdGhpcyBmaWxlIHRvIHlvdSB1bmRlcgogKiB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsgeW91IG1heQogKiBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgogKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKICoKICogICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiAqCiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywKICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4KICogIkFTIElTIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZCiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZQogKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zCiAqIHVuZGVyIHRoZSBMaWNlbnNlLgogKi8KdmFyIEdST1VQX05VTUVSSUMgPSAvXihbXGQuXSspKHN8bXMpLzsKCmZ1bmN0aW9uIGdldE1pbGxpc2Vjb25kcyh2YWx1ZSwgdW5pdCkgewogIC8vIEdpdmVuIHRoZSByZWdleCBtYXRjaCBhbmQgY2FwdHVyZSBncm91cHMsIHdlIGNhbiBhc3N1bWUgYHVuaXRgIHRvIGJlIGVpdGhlciAncycgb3IgJ21zJwogIHZhciBtdWx0aXBsaWVyID0gdW5pdCA9PT0gJ3MnID8gMTAwMCA6IDE7CiAgcmV0dXJuIHBhcnNlRmxvYXQodmFsdWUpICogbXVsdGlwbGllcjsKfSAvLyBGaW5kIENTUyBgdHJhbnNpdGlvbi1kdXJhdGlvbmAgYW5kIGB0cmFuc2l0aW9uLWRlbGF5YCBpbnRlcnZhbHMKLy8gYW5kIHJldHVybiB0aGUgdmFsdWUgb2YgZWFjaCBjb21wdXRlZCBwcm9wZXJ0eSBpbiAnbXMnCgoKZXhwb3J0IHZhciBnZXRUcmFuc2l0aW9uVGltaW5ncyA9IGZ1bmN0aW9uIGdldFRyYW5zaXRpb25UaW1pbmdzKGVsZW1lbnQpIHsKICB2YXIgY29tcHV0ZWRTdHlsZSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGVsZW1lbnQpOwogIHZhciBjb21wdXRlZER1cmF0aW9uID0gY29tcHV0ZWRTdHlsZS5nZXRQcm9wZXJ0eVZhbHVlKCd0cmFuc2l0aW9uLWR1cmF0aW9uJyk7CiAgdmFyIGR1cmF0aW9uTWF0Y2hBcnJheSA9IGNvbXB1dGVkRHVyYXRpb24ubWF0Y2goR1JPVVBfTlVNRVJJQyk7CiAgdmFyIGR1cmF0aW9uTWF0Y2ggPSBkdXJhdGlvbk1hdGNoQXJyYXkgPyBnZXRNaWxsaXNlY29uZHMoZHVyYXRpb25NYXRjaEFycmF5WzFdLCBkdXJhdGlvbk1hdGNoQXJyYXlbMl0pIDogMDsKICB2YXIgY29tcHV0ZWREZWxheSA9IGNvbXB1dGVkU3R5bGUuZ2V0UHJvcGVydHlWYWx1ZSgndHJhbnNpdGlvbi1kZWxheScpOwogIHZhciBkZWxheU1hdGNoQXJyYXkgPSBjb21wdXRlZERlbGF5Lm1hdGNoKEdST1VQX05VTUVSSUMpOwogIHZhciBkZWxheU1hdGNoID0gZGVsYXlNYXRjaEFycmF5ID8gZ2V0TWlsbGlzZWNvbmRzKGRlbGF5TWF0Y2hBcnJheVsxXSwgZGVsYXlNYXRjaEFycmF5WzJdKSA6IDA7CiAgcmV0dXJuIHsKICAgIGR1cmF0aW9uTWF0Y2g6IGR1cmF0aW9uTWF0Y2gsCiAgICBkZWxheU1hdGNoOiBkZWxheU1hdGNoCiAgfTsKfTsKCmZ1bmN0aW9uIGlzRWxlbWVudE5vZGUoZWxlbWVudCkgewogIHJldHVybiBlbGVtZW50Lm5vZGVUeXBlID09PSBkb2N1bWVudC5FTEVNRU5UX05PREU7Cn0gLy8gVXNlcyBgZ2V0VHJhbnNpdGlvblRpbWluZ3NgIHRvIGZpbmQgdGhlIHRvdGFsIHRyYW5zaXRpb24gdGltZSBmb3IKLy8gYWxsIGVsZW1lbnRzIHRhcmdldGVkIGJ5IGEgTXV0YXRpb25PYnNlcnZlciBjYWxsYmFjawoKCmV4cG9ydCB2YXIgZ2V0V2FpdER1cmF0aW9uID0gZnVuY3Rpb24gZ2V0V2FpdER1cmF0aW9uKHJlY29yZHMpIHsKICByZXR1cm4gcmVjb3Jkcy5yZWR1Y2UoZnVuY3Rpb24gKHdhaXREdXJhdGlvbiwgcmVjb3JkKSB7CiAgICAvLyBvbmx5IGNoZWNrIGZvciBDU1MgdHJhbnNpdGlvbiB2YWx1ZXMgZm9yIEVMRU1FTlQgbm9kZXMKICAgIGlmIChpc0VsZW1lbnROb2RlKHJlY29yZC50YXJnZXQpKSB7CiAgICAgIHZhciBfZ2V0VHJhbnNpdGlvblRpbWluZ3MgPSBnZXRUcmFuc2l0aW9uVGltaW5ncyhyZWNvcmQudGFyZ2V0KSwKICAgICAgICAgIGR1cmF0aW9uTWF0Y2ggPSBfZ2V0VHJhbnNpdGlvblRpbWluZ3MuZHVyYXRpb25NYXRjaCwKICAgICAgICAgIGRlbGF5TWF0Y2ggPSBfZ2V0VHJhbnNpdGlvblRpbWluZ3MuZGVsYXlNYXRjaDsKCiAgICAgIHdhaXREdXJhdGlvbiA9IE1hdGgubWF4KHdhaXREdXJhdGlvbiwgZHVyYXRpb25NYXRjaCArIGRlbGF5TWF0Y2gpOwogICAgfQoKICAgIHJldHVybiB3YWl0RHVyYXRpb247CiAgfSwgMCk7Cn07IC8vIFVzZXMgYHJlcXVlc3RBbmltYXRpb25GcmFtZWAgdG8gcGVyZm9ybSBhIGdpdmVuIGNhbGxiYWNrIGFmdGVyIGEgc3BlY2lmaWVkIHdhaXRpbmcgcGVyaW9kCgpleHBvcnQgdmFyIHBlcmZvcm1PbkZyYW1lID0gZnVuY3Rpb24gcGVyZm9ybU9uRnJhbWUod2FpdER1cmF0aW9uLCB0b1BlcmZvcm0pIHsKICBpZiAod2FpdER1cmF0aW9uID4gMCkgewogICAgdmFyIHN0YXJ0VGltZSA9IERhdGUubm93KCk7CiAgICB2YXIgZW5kVGltZSA9IHN0YXJ0VGltZSArIHdhaXREdXJhdGlvbjsKCiAgICB2YXIgb25GcmFtZSA9IGZ1bmN0aW9uIG9uRnJhbWUoKSB7CiAgICAgIHRvUGVyZm9ybSgpOwoKICAgICAgaWYgKGVuZFRpbWUgPiBEYXRlLm5vdygpKSB7CiAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKG9uRnJhbWUpOwogICAgICB9CiAgICB9OwoKICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShvbkZyYW1lKTsKICB9Cn07IC8vIENvbnZlbmllbmNlIG1ldGhvZCBmb3IgY29tYmluaW5nIHRoZSByZXN1bHQgb2YgJ2dldFdhaXREdXJhdGlvbicgZGlyZWN0bHkgd2l0aCAncGVyZm9ybU9uRnJhbWUnCgpleHBvcnQgdmFyIGdldER1cmF0aW9uQW5kUGVyZm9ybU9uRnJhbWUgPSBmdW5jdGlvbiBnZXREdXJhdGlvbkFuZFBlcmZvcm1PbkZyYW1lKHJlY29yZHMsIHRvUGVyZm9ybSkgewogIHBlcmZvcm1PbkZyYW1lKGdldFdhaXREdXJhdGlvbihyZWNvcmRzKSwgdG9QZXJmb3JtKTsKfTsKCnRyeSB7CiAgZ2V0VHJhbnNpdGlvblRpbWluZ3MuX19kb2NnZW5JbmZvID0gewogICAgZGVzY3JpcHRpb246ICcnLAogICAgZGlzcGxheU5hbWU6ICdnZXRUcmFuc2l0aW9uVGltaW5ncycsCiAgICBtZXRob2RzOiBbXSwKICAgIHByb3BzOiB7CiAgICAgIGNsYXNzTmFtZTogewogICAgICAgIGRlZmF1bHRWYWx1ZTogbnVsbCwKICAgICAgICBkZXNjcmlwdGlvbjogIlJldHVybnMgdGhlIHZhbHVlIG9mIGVsZW1lbnQncyBjbGFzcyBjb250ZW50IGF0dHJpYnV0ZS4gQ2FuIGJlIHNldCB0byBjaGFuZ2UgaXQuIiwKICAgICAgICBuYW1lOiAnY2xhc3NOYW1lJywKICAgICAgICBwYXJlbnQ6IHsKICAgICAgICAgIGZpbGVOYW1lOiAnZXVpL25vZGVfbW9kdWxlcy90eXBlc2NyaXB0L2xpYi9saWIuZG9tLmQudHMnLAogICAgICAgICAgbmFtZTogJ0VsZW1lbnQnCiAgICAgICAgfSwKICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICB0eXBlOiB7CiAgICAgICAgICBuYW1lOiAnc3RyaW5nJwogICAgICAgIH0KICAgICAgfSwKICAgICAgY2hpbGRyZW46IHsKICAgICAgICBkZWZhdWx0VmFsdWU6IG51bGwsCiAgICAgICAgZGVzY3JpcHRpb246ICdSZXR1cm5zIHRoZSBjaGlsZCBlbGVtZW50cy4nLAogICAgICAgIG5hbWU6ICdjaGlsZHJlbicsCiAgICAgICAgcGFyZW50OiB7CiAgICAgICAgICBmaWxlTmFtZTogJ2V1aS9ub2RlX21vZHVsZXMvdHlwZXNjcmlwdC9saWIvbGliLmRvbS5kLnRzJywKICAgICAgICAgIG5hbWU6ICdQYXJlbnROb2RlJwogICAgICAgIH0sCiAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgdHlwZTogewogICAgICAgICAgbmFtZTogJ0hUTUxDb2xsZWN0aW9uJwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIGV4dGVuZGVkSW50ZXJmYWNlczogWydFbGVtZW50JywgJ05vZGUnLCAnRXZlbnRUYXJnZXQnLCAnQW5pbWF0YWJsZScsICdDaGlsZE5vZGUnLCAnSW5uZXJIVE1MJywgJ05vbkRvY3VtZW50VHlwZUNoaWxkTm9kZScsICdQYXJlbnROb2RlJywgJ0FycmF5J10KICB9Owp9IGNhdGNoIChlKSB7fQoKdHJ5IHsKICBnZXRXYWl0RHVyYXRpb24uX19kb2NnZW5JbmZvID0gewogICAgZGVzY3JpcHRpb246ICcnLAogICAgZGlzcGxheU5hbWU6ICdnZXRXYWl0RHVyYXRpb24nLAogICAgbWV0aG9kczogW10sCiAgICBwcm9wczoge30sCiAgICBleHRlbmRlZEludGVyZmFjZXM6IFsnRWxlbWVudCcsICdOb2RlJywgJ0V2ZW50VGFyZ2V0JywgJ0FuaW1hdGFibGUnLCAnQ2hpbGROb2RlJywgJ0lubmVySFRNTCcsICdOb25Eb2N1bWVudFR5cGVDaGlsZE5vZGUnLCAnUGFyZW50Tm9kZScsICdBcnJheSddCiAgfTsKfSBjYXRjaCAoZSkge30="},{"version":3,"sources":["D:/work/eui/src/services/transition/transition.ts"],"names":["GROUP_NUMERIC","getMilliseconds","value","unit","multiplier","parseFloat","getTransitionTimings","element","computedStyle","window","getComputedStyle","computedDuration","getPropertyValue","durationMatchArray","match","durationMatch","computedDelay","delayMatchArray","delayMatch","isElementNode","nodeType","document","ELEMENT_NODE","getWaitDuration","records","reduce","waitDuration","record","target","Math","max","performOnFrame","toPerform","startTime","Date","now","endTime","onFrame","requestAnimationFrame","getDurationAndPerformOnFrame"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nconst GROUP_NUMERIC = /^([\\d.]+)(s|ms)/;\n\nfunction getMilliseconds(value: string, unit: string) {\n  // Given the regex match and capture groups, we can assume `unit` to be either 's' or 'ms'\n  const multiplier = unit === 's' ? 1000 : 1;\n  return parseFloat(value) * multiplier;\n}\n// Find CSS `transition-duration` and `transition-delay` intervals\n// and return the value of each computed property in 'ms'\nexport const getTransitionTimings = (element: Element) => {\n  const computedStyle = window.getComputedStyle(element);\n\n  const computedDuration = computedStyle.getPropertyValue(\n    'transition-duration'\n  );\n  const durationMatchArray = computedDuration.match(GROUP_NUMERIC);\n  const durationMatch = durationMatchArray\n    ? getMilliseconds(durationMatchArray[1], durationMatchArray[2])\n    : 0;\n\n  const computedDelay = computedStyle.getPropertyValue('transition-delay');\n  const delayMatchArray = computedDelay.match(GROUP_NUMERIC);\n  const delayMatch = delayMatchArray\n    ? getMilliseconds(delayMatchArray[1], delayMatchArray[2])\n    : 0;\n\n  return { durationMatch, delayMatch };\n};\n\nfunction isElementNode(element: Node): element is Element {\n  return element.nodeType === document.ELEMENT_NODE;\n}\n// Uses `getTransitionTimings` to find the total transition time for\n// all elements targeted by a MutationObserver callback\nexport const getWaitDuration = (records: MutationRecord[]) => {\n  return records.reduce((waitDuration, record) => {\n    // only check for CSS transition values for ELEMENT nodes\n    if (isElementNode(record.target)) {\n      const { durationMatch, delayMatch } = getTransitionTimings(record.target);\n      waitDuration = Math.max(waitDuration, durationMatch + delayMatch);\n    }\n\n    return waitDuration;\n  }, 0);\n};\n\n// Uses `requestAnimationFrame` to perform a given callback after a specified waiting period\nexport const performOnFrame = (waitDuration: number, toPerform: () => void) => {\n  if (waitDuration > 0) {\n    const startTime = Date.now();\n    const endTime = startTime + waitDuration;\n\n    const onFrame = () => {\n      toPerform();\n\n      if (endTime > Date.now()) {\n        requestAnimationFrame(onFrame);\n      }\n    };\n\n    requestAnimationFrame(onFrame);\n  }\n};\n\n// Convenience method for combining the result of 'getWaitDuration' directly with 'performOnFrame'\nexport const getDurationAndPerformOnFrame = (\n  records: MutationRecord[],\n  toPerform: () => void\n) => {\n  performOnFrame(getWaitDuration(records), toPerform);\n};\n"]}]}