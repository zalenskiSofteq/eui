{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\search_bar\\query\\date_value.ts","dependencies":[{"path":"D:\\work\\eui\\src\\components\\search_bar\\query\\date_value.ts","mtime":1649070093751},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmciOwoKLyoKICogTGljZW5zZWQgdG8gRWxhc3RpY3NlYXJjaCBCLlYuIHVuZGVyIG9uZSBvciBtb3JlIGNvbnRyaWJ1dG9yCiAqIGxpY2Vuc2UgYWdyZWVtZW50cy4gU2VlIHRoZSBOT1RJQ0UgZmlsZSBkaXN0cmlidXRlZCB3aXRoCiAqIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiByZWdhcmRpbmcgY29weXJpZ2h0CiAqIG93bmVyc2hpcC4gRWxhc3RpY3NlYXJjaCBCLlYuIGxpY2Vuc2VzIHRoaXMgZmlsZSB0byB5b3UgdW5kZXIKICogdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7IHlvdSBtYXkKICogbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiAqCiAqICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsCiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuCiAqICJBUyBJUyIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWQogKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUKICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucwogKiB1bmRlciB0aGUgTGljZW5zZS4KICovCmltcG9ydCB7IGlzRGF0ZUxpa2UsIGlzTnVtYmVyIH0gZnJvbSAnLi4vLi4vLi4vc2VydmljZXMvcHJlZGljYXRlJzsKaW1wb3J0IHsgZGF0ZUZvcm1hdCBhcyBkZWZhdWx0RGF0ZUZvcm1hdCwgZGF0ZUdyYW51bGFyaXR5IH0gZnJvbSAnLi9kYXRlX2Zvcm1hdCc7IC8vIEVTTGludCBkb2Vzbid0IHJlYWxpc2UgdGhhdCB3ZSBjYW4gaW1wb3J0IE1vbWVudCBkaXJlY3RseS4KLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uYW1lZAoKaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnOwpleHBvcnQgdmFyIERBVEVfVFlQRSA9ICdkYXRlJzsKZXhwb3J0IHZhciBkYXRlVmFsdWVzRXF1YWwgPSBmdW5jdGlvbiBkYXRlVmFsdWVzRXF1YWwodjEsIHYyKSB7CiAgcmV0dXJuIHYxLnJhdyA9PT0gdjIucmF3ICYmIHYxLmdyYW51bGFyaXR5ID09PSB2Mi5ncmFudWxhcml0eSAmJiB2MS50ZXh0ID09PSB2Mi50ZXh0Owp9OwpleHBvcnQgdmFyIGlzRGF0ZVZhbHVlID0gZnVuY3Rpb24gaXNEYXRlVmFsdWUodmFsdWUpIHsKICByZXR1cm4gISF2YWx1ZSAmJiB2YWx1ZS50eXBlID09PSBEQVRFX1RZUEUgJiYgISF2YWx1ZS5yYXcgJiYgISF2YWx1ZS50ZXh0ICYmICEhdmFsdWUucmVzb2x2ZTsKfTsKZXhwb3J0IHZhciBkYXRlVmFsdWUgPSBmdW5jdGlvbiBkYXRlVmFsdWUocmF3LCBncmFudWxhcml0eSkgewogIHZhciBkYXRlRm9ybWF0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBkZWZhdWx0RGF0ZUZvcm1hdDsKCiAgaWYgKCFyYXcpIHsKICAgIHJldHVybiB1bmRlZmluZWQ7CiAgfQoKICBpZiAoaXNEYXRlTGlrZShyYXcpKSB7CiAgICB2YXIgX2RhdGVWYWx1ZSA9IHsKICAgICAgdHlwZTogREFURV9UWVBFLAogICAgICByYXc6IHJhdywKICAgICAgZ3JhbnVsYXJpdHk6IGdyYW51bGFyaXR5LAogICAgICB0ZXh0OiBkYXRlRm9ybWF0LnByaW50KHJhdyksCiAgICAgIHJlc29sdmU6IGZ1bmN0aW9uIHJlc29sdmUoKSB7CiAgICAgICAgcmV0dXJuIG1vbWVudChyYXcpOwogICAgICB9CiAgICB9OwogICAgcmV0dXJuIF9kYXRlVmFsdWU7CiAgfQoKICBpZiAoaXNOdW1iZXIocmF3KSkgewogICAgcmV0dXJuIHsKICAgICAgdHlwZTogREFURV9UWVBFLAogICAgICByYXc6IHJhdywKICAgICAgZ3JhbnVsYXJpdHk6IGdyYW51bGFyaXR5LAogICAgICB0ZXh0OiByYXcudG9TdHJpbmcoKSwKICAgICAgcmVzb2x2ZTogZnVuY3Rpb24gcmVzb2x2ZSgpIHsKICAgICAgICByZXR1cm4gbW9tZW50KHJhdyk7CiAgICAgIH0KICAgIH07CiAgfQoKICB2YXIgdGV4dCA9IHJhdy50b1N0cmluZygpOwogIHJldHVybiB7CiAgICB0eXBlOiBEQVRFX1RZUEUsCiAgICByYXc6IHJhdywKICAgIGdyYW51bGFyaXR5OiBncmFudWxhcml0eSwKICAgIHRleHQ6IHRleHQsCiAgICByZXNvbHZlOiBmdW5jdGlvbiByZXNvbHZlKCkgewogICAgICByZXR1cm4gZGF0ZUZvcm1hdC5wYXJzZSh0ZXh0KTsKICAgIH0KICB9Owp9OwpleHBvcnQgdmFyIGRhdGVWYWx1ZVBhcnNlciA9IGZ1bmN0aW9uIGRhdGVWYWx1ZVBhcnNlcigpIHsKICB2YXIgZm9ybWF0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBkZWZhdWx0RGF0ZUZvcm1hdDsKICByZXR1cm4gZnVuY3Rpb24gKHRleHQpIHsKICAgIHZhciBwYXJzZWQgPSBmb3JtYXQucGFyc2UodGV4dCk7CiAgICByZXR1cm4gZGF0ZVZhbHVlKHRleHQsIGRhdGVHcmFudWxhcml0eShwYXJzZWQpLCBmb3JtYXQpOwogIH07Cn07Cgp0cnkgewogIGlzRGF0ZVZhbHVlLl9fZG9jZ2VuSW5mbyA9IHsKICAgIGRlc2NyaXB0aW9uOiAnJywKICAgIGRpc3BsYXlOYW1lOiAnaXNEYXRlVmFsdWUnLAogICAgbWV0aG9kczogW10sCiAgICBwcm9wczoge30sCiAgICBleHRlbmRlZEludGVyZmFjZXM6IFtdCiAgfTsKfSBjYXRjaCAoZSkge30KCnRyeSB7CiAgZGF0ZVZhbHVlUGFyc2VyLl9fZG9jZ2VuSW5mbyA9IHsKICAgIGRlc2NyaXB0aW9uOiAnJywKICAgIGRpc3BsYXlOYW1lOiAnZGF0ZVZhbHVlUGFyc2VyJywKICAgIG1ldGhvZHM6IFtdLAogICAgcHJvcHM6IHsKICAgICAgcGFyc2U6IHsKICAgICAgICBkZWZhdWx0VmFsdWU6IG51bGwsCiAgICAgICAgZGVzY3JpcHRpb246ICcnLAogICAgICAgIG5hbWU6ICdwYXJzZScsCiAgICAgICAgcGFyZW50OiB1bmRlZmluZWQsCiAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgdHlwZTogewogICAgICAgICAgbmFtZTogJyh2YWx1ZTogc3RyaW5nKSA9PiBFdWlNb21lbnQnCiAgICAgICAgfQogICAgICB9LAogICAgICBwcmludDogewogICAgICAgIGRlZmF1bHRWYWx1ZTogbnVsbCwKICAgICAgICBkZXNjcmlwdGlvbjogJycsCiAgICAgICAgbmFtZTogJ3ByaW50JywKICAgICAgICBwYXJlbnQ6IHVuZGVmaW5lZCwKICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICB0eXBlOiB7CiAgICAgICAgICBuYW1lOiAnKGRhdGU6IHN0cmluZyB8IG51bWJlciB8IERhdGUgfCBFdWlNb21lbnQgfCBNb21lbnQgfCBSZWFjdFRleHRbXSB8IE1vbWVudElucHV0T2JqZWN0LCBkZWZhdWx0R3JhbnVsYXJpdHk/OiBhbnkpID0+IGFueScKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBleHRlbmRlZEludGVyZmFjZXM6IFtdCiAgfTsKfSBjYXRjaCAoZSkge30="},{"version":3,"sources":["D:/work/eui/src/components/search_bar/query/date_value.ts"],"names":["isDateLike","isNumber","dateFormat","defaultDateFormat","dateGranularity","moment","DATE_TYPE","dateValuesEqual","v1","v2","raw","granularity","text","isDateValue","value","type","resolve","dateValue","undefined","print","toString","parse","dateValueParser","format","parsed"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,6BAArC;AACA,SACEC,UAAU,IAAIC,iBADhB,EAEEC,eAFF,QAIO,eAJP,C,CAKA;AACA;;AACA,OAAOC,MAAP,MAAoC,QAApC;AAEA,OAAO,IAAMC,SAAS,GAAG,MAAlB;AAUP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,EAAD,EAAgBC,EAAhB,EAAkC;AAC/D,SACED,EAAE,CAACE,GAAH,KAAWD,EAAE,CAACC,GAAd,IACAF,EAAE,CAACG,WAAH,KAAmBF,EAAE,CAACE,WADtB,IAEAH,EAAE,CAACI,IAAH,KAAYH,EAAE,CAACG,IAHjB;AAKD,CANM;AAQP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAoC;AAC7D,SACE,CAAC,CAACA,KAAF,IACAA,KAAK,CAACC,IAAN,KAAeT,SADf,IAEA,CAAC,CAACQ,KAAK,CAACJ,GAFR,IAGA,CAAC,CAACI,KAAK,CAACF,IAHR,IAIA,CAAC,CAACE,KAAK,CAACE,OALV;AAOD,CARM;AAUP,OAAO,IAAMC,SAIa,GAAG,SAJhBA,SAIgB,CAC3BP,GAD2B,EAE3BC,WAF2B,EAIxB;AAAA,MADHT,UACG,uEADUC,iBACV;;AACH,MAAI,CAACO,GAAL,EAAU;AACR,WAAOQ,SAAP;AACD;;AAED,MAAIlB,UAAU,CAACU,GAAD,CAAd,EAAqB;AACnB,QAAMO,UAAoB,GAAG;AAC3BF,MAAAA,IAAI,EAAET,SADqB;AAE3BI,MAAAA,GAAG,EAAHA,GAF2B;AAG3BC,MAAAA,WAAW,EAAXA,WAH2B;AAI3BC,MAAAA,IAAI,EAAEV,UAAU,CAACiB,KAAX,CAAiBT,GAAjB,CAJqB;AAK3BM,MAAAA,OAAO,EAAE;AAAA,eAAMX,MAAM,CAACK,GAAD,CAAZ;AAAA;AALkB,KAA7B;AAOA,WAAOO,UAAP;AACD;;AACD,MAAIhB,QAAQ,CAACS,GAAD,CAAZ,EAAmB;AACjB,WAAO;AACLK,MAAAA,IAAI,EAAET,SADD;AAELI,MAAAA,GAAG,EAAHA,GAFK;AAGLC,MAAAA,WAAW,EAAXA,WAHK;AAILC,MAAAA,IAAI,EAAEF,GAAG,CAACU,QAAJ,EAJD;AAKLJ,MAAAA,OAAO,EAAE;AAAA,eAAMX,MAAM,CAACK,GAAD,CAAZ;AAAA;AALJ,KAAP;AAOD;;AACD,MAAME,IAAI,GAAGF,GAAG,CAACU,QAAJ,EAAb;AACA,SAAO;AACLL,IAAAA,IAAI,EAAET,SADD;AAELI,IAAAA,GAAG,EAAHA,GAFK;AAGLC,IAAAA,WAAW,EAAXA,WAHK;AAILC,IAAAA,IAAI,EAAJA,IAJK;AAKLI,IAAAA,OAAO,EAAE;AAAA,aAAMd,UAAU,CAACmB,KAAX,CAAiBT,IAAjB,CAAN;AAAA;AALJ,GAAP;AAOD,CAxCM;AA0CP,OAAO,IAAMU,eAAe,GAAG,SAAlBA,eAAkB,GAAgC;AAAA,MAA/BC,MAA+B,uEAAtBpB,iBAAsB;AAC7D,SAAO,UAACS,IAAD,EAAkB;AACvB,QAAMY,MAAM,GAAGD,MAAM,CAACF,KAAP,CAAaT,IAAb,CAAf;AACA,WAAOK,SAAS,CAACL,IAAD,EAAOR,eAAe,CAACoB,MAAD,CAAtB,EAAgCD,MAAhC,CAAhB;AACD,GAHD;AAID,CALM","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { isDateLike, isNumber } from '../../../services/predicate';\nimport {\n  dateFormat as defaultDateFormat,\n  dateGranularity,\n  GranularityType,\n} from './date_format';\n// ESLint doesn't realise that we can import Moment directly.\n// eslint-disable-next-line import/named\nimport moment, { MomentInput } from 'moment';\n\nexport const DATE_TYPE = 'date';\n\nexport interface DateValue {\n  type: 'date';\n  raw: MomentInput;\n  granularity: GranularityType | undefined;\n  text: string;\n  resolve: () => moment.Moment;\n}\n\nexport const dateValuesEqual = (v1: DateValue, v2: DateValue) => {\n  return (\n    v1.raw === v2.raw &&\n    v1.granularity === v2.granularity &&\n    v1.text === v2.text\n  );\n};\n\nexport const isDateValue = (value: any): value is DateValue => {\n  return (\n    !!value &&\n    value.type === DATE_TYPE &&\n    !!value.raw &&\n    !!value.text &&\n    !!value.resolve\n  );\n};\n\nexport const dateValue: (\n  raw: MomentInput,\n  granularity?: GranularityType,\n  dateFormat?: any\n) => DateValue | undefined = (\n  raw,\n  granularity,\n  dateFormat = defaultDateFormat\n) => {\n  if (!raw) {\n    return undefined;\n  }\n\n  if (isDateLike(raw)) {\n    const dateValue: DateValue = {\n      type: DATE_TYPE,\n      raw,\n      granularity,\n      text: dateFormat.print(raw),\n      resolve: () => moment(raw),\n    };\n    return dateValue;\n  }\n  if (isNumber(raw)) {\n    return {\n      type: DATE_TYPE,\n      raw,\n      granularity,\n      text: raw.toString(),\n      resolve: () => moment(raw),\n    };\n  }\n  const text = raw.toString();\n  return {\n    type: DATE_TYPE,\n    raw,\n    granularity,\n    text,\n    resolve: () => dateFormat.parse(text),\n  };\n};\n\nexport const dateValueParser = (format = defaultDateFormat) => {\n  return (text: string) => {\n    const parsed = format.parse(text);\n    return dateValue(text, dateGranularity(parsed), format);\n  };\n};\n"]}]}