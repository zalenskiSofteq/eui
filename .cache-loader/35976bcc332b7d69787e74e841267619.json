{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\control_bar\\control_bar.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\control_bar\\control_bar.tsx","mtime":1649070093355},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/control_bar/control_bar.tsx"],"names":["classNames","React","Component","EuiScreenReaderOnly","EuiBreadcrumbs","EuiButton","EuiButtonIcon","EuiI18n","EuiIcon","EuiPortal","EuiControlBar","selectedTab","props","position","height","bar","clientHeight","document","body","style","paddingBottom","bodyClassName","classList","add","remove","children","className","showContent","controls","size","leftOffset","rightOffset","maxHeight","showOnMobile","landmarkHeading","rest","styles","left","right","classes","handleTabClick","control","e","setState","id","onClick","controlItem","index","controlType","color","label","iconType","href","text","tabClasses","state","event","controlBar","screenReaderHeading","node","map"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport classNames from 'classnames';\nimport PropTypes from \"prop-types\";\nimport React, { Component } from 'react';\nimport { EuiScreenReaderOnly } from '../accessibility';\nimport { EuiBreadcrumbs } from '../breadcrumbs';\nimport { EuiButton, EuiButtonIcon } from '../button';\nimport { EuiI18n } from '../i18n';\nimport { EuiIcon } from '../icon';\nimport { EuiPortal } from '../portal';\n/**\n * Extends EuiButton excluding `size`. Requires `label` as the `children`.\n */\n\nexport class EuiControlBar extends Component {\n  static defaultProps = {\n    leftOffset: 0,\n    rightOffset: 0,\n    position: 'fixed',\n    size: 'l',\n    showContent: false,\n    showOnMobile: false\n  };\n  bar = null;\n\n  componentDidMount() {\n    if (this.props.position === 'fixed') {\n      const height = this.bar ? this.bar.clientHeight : -1;\n      document.body.style.paddingBottom = `${height}px`;\n\n      if (this.props.bodyClassName) {\n        document.body.classList.add(this.props.bodyClassName);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    document.body.style.paddingBottom = '';\n\n    if (this.props.bodyClassName) {\n      document.body.classList.remove(this.props.bodyClassName);\n    }\n  }\n\n  state = {\n    selectedTab: ''\n  };\n\n  render() {\n    const {\n      children,\n      className,\n      showContent,\n      controls,\n      size,\n      leftOffset,\n      rightOffset,\n      maxHeight,\n      showOnMobile,\n      style,\n      position,\n      bodyClassName,\n      landmarkHeading,\n      ...rest\n    } = this.props;\n    const styles = { ...style,\n      left: leftOffset,\n      right: rightOffset,\n      maxHeight: maxHeight\n    };\n    const classes = classNames('euiControlBar', className, {\n      'euiControlBar-isOpen': showContent,\n      'euiControlBar--large': size === 'l',\n      'euiControlBar--medium': size === 'm',\n      'euiControlBar--small': size === 's',\n      'euiControlBar--fixed': position === 'fixed',\n      'euiControlBar--absolute': position === 'absolute',\n      'euiControlBar--relative': position === 'relative',\n      'euiControlBar--showOnMobile': showOnMobile\n    });\n\n    const handleTabClick = (control, e) => {\n      this.setState({\n        selectedTab: control.id\n      }, () => {\n        control.onClick(e);\n      });\n    };\n\n    const controlItem = (control, index) => {\n      switch (control.controlType) {\n        case 'button':\n          {\n            const {\n              controlType,\n              id,\n              color = 'ghost',\n              label,\n              className,\n              ...rest\n            } = control;\n            return <EuiButton key={id + index} className={classNames('euiControlBar__button', className)} color={color} {...rest} size=\"s\">\n              {label}\n            </EuiButton>;\n          }\n\n        case 'icon':\n          {\n            const {\n              controlType,\n              id,\n              iconType,\n              className,\n              color = 'ghost',\n              onClick,\n              href,\n              ...rest\n            } = control;\n            return onClick || href ? <EuiButtonIcon key={id + index} className={classNames('euiControlBar__buttonIcon', className)} onClick={onClick} href={href} color={color} {...rest} iconType={iconType} /> : <EuiIcon key={id + index} className={classNames('euiControlBar__icon', className)} type={iconType} color={color} {...rest} />;\n          }\n\n        case 'divider':\n          return <div key={control.controlType + index} className=\"euiControlBar__divider\" />;\n\n        case 'spacer':\n          return <div key={control.controlType + index} className=\"euiControlBar__spacer\" />;\n\n        case 'text':\n          {\n            const {\n              controlType,\n              id,\n              text,\n              className,\n              ...rest\n            } = control;\n            return <div key={id} className={classNames('euiControlBar__text', className)} {...rest}>\n              {text}\n            </div>;\n          }\n\n        case 'tab':\n          {\n            const {\n              controlType,\n              id,\n              label,\n              onClick,\n              className,\n              ...rest\n            } = control;\n            const tabClasses = classNames('euiControlBar__tab', {\n              'euiControlBar__tab--active': showContent && id === this.state.selectedTab\n            }, className);\n            return <button key={id + index} className={tabClasses} onClick={event => handleTabClick(control, event)} {...rest}>\n              {label}\n            </button>;\n          }\n\n        case 'breadcrumbs':\n          {\n            const {\n              controlType,\n              id,\n              ...rest\n            } = control;\n            return <EuiBreadcrumbs className=\"euiControlBar__breadcrumbs\" key={control.id} {...rest} />;\n          }\n      }\n    };\n\n    const controlBar = <EuiI18n token=\"euiControlBar.screenReaderHeading\" default=\"Page level controls\">\n        {screenReaderHeading => // Though it would be better to use aria-labelledby than aria-label and not repeat the same string twice\n      // A bug in voiceover won't list some landmarks in the rotor without an aria-label\n      <section className={classes} aria-label={landmarkHeading ? landmarkHeading : screenReaderHeading} {...rest} style={styles}>\n            <EuiScreenReaderOnly>\n              <h2>{landmarkHeading ? landmarkHeading : screenReaderHeading}</h2>\n            </EuiScreenReaderOnly>\n            <div className=\"euiControlBar__controls\" ref={node => {\n          this.bar = node;\n        }}>\n              {controls.map((control, index) => controlItem(control, index))}\n            </div>\n            {this.props.showContent ? <div className=\"euiControlBar__content\">{children}</div> : null}\n          </section>}\n      </EuiI18n>;\n    return position === 'fixed' ? <EuiPortal>\n        {controlBar}\n        <EuiScreenReaderOnly>\n          <p aria-live=\"assertive\">\n            {landmarkHeading ? <EuiI18n token=\"euiControlBar.customScreenReaderAnnouncement\" default=\"There is a new region landmark called {landmarkHeading} with page level controls at the end of the document.\" values={{\n            landmarkHeading\n          }} /> : <EuiI18n token=\"euiControlBar.screenReaderAnnouncement\" default=\"There is a new region landmark with page level controls at the end of the document.\" />}\n          </p>\n        </EuiScreenReaderOnly>\n      </EuiPortal> : controlBar;\n  }\n\n}\nEuiControlBar.propTypes = {\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n\n  /**\n       * Show or hide the content area containing the `children`\n       */\n  showContent: PropTypes.bool,\n\n  /**\n       * An array of controls, actions, and layout spacers to display.\n       * Accepts `'button' | 'tab' | 'breadcrumbs' | 'text' | 'icon' | 'spacer' | 'divider'`\n       */\n  controls: PropTypes.arrayOf(PropTypes.shape({\n    href: PropTypes.string,\n    onClick: PropTypes.func,\n    id: PropTypes.string,\n    label: PropTypes.oneOfType([PropTypes.node.isRequired, PropTypes.node]),\n    buttonRef: PropTypes.any,\n    controlType: PropTypes.oneOfType([PropTypes.oneOfType([PropTypes.oneOfType([PropTypes.oneOfType([PropTypes.oneOfType([PropTypes.oneOf([\"button\"]).isRequired, PropTypes.oneOfType([PropTypes.oneOf([\"breadcrumbs\"]).isRequired, PropTypes.oneOf([\"tab\"]).isRequired]).isRequired]).isRequired, PropTypes.oneOf([\"text\"]).isRequired]).isRequired, PropTypes.oneOf([\"icon\"]).isRequired]).isRequired, PropTypes.oneOf([\"divider\"]).isRequired]).isRequired, PropTypes.oneOf([\"spacer\"]).isRequired]).isRequired,\n    className: PropTypes.string,\n    \"aria-label\": PropTypes.string,\n    \"data-test-subj\": PropTypes.string,\n\n    /**\n       * Hides extra (above the max) breadcrumbs under a collapsed item as the window gets smaller.\n       * Pass a custom #EuiBreadcrumbResponsiveMaxCount object to change the number of breadcrumbs to show at the particular breakpoints.\n       * Omitting or passing a `0` value will show all breadcrumbs.\n       *\n       * Pass `false` to turn this behavior off.\n       *\n       * Default: `{ xs: 1, s: 2, m: 4 }`\n       */\n    responsive: PropTypes.oneOfType([PropTypes.bool.isRequired, PropTypes.any.isRequired]),\n\n    /**\n       * Forces all breadcrumbs to single line and\n       * truncates each breadcrumb to a particular width,\n       * except for the last item\n       */\n    truncate: PropTypes.bool,\n\n    /**\n       * Collapses the inner items past the maximum set here\n       * into a single ellipses item\n       */\n    max: PropTypes.oneOfType([PropTypes.number.isRequired, PropTypes.oneOf([null])]),\n\n    /**\n       * The array of individual #EuiBreadcrumb items\n       */\n    breadcrumbs: PropTypes.arrayOf(PropTypes.shape({\n      className: PropTypes.string,\n      \"aria-label\": PropTypes.string,\n      \"data-test-subj\": PropTypes.string,\n\n      /**\n         * Visible label of the breadcrumb\n         */\n      text: PropTypes.node.isRequired,\n      href: PropTypes.string,\n      onClick: PropTypes.func,\n\n      /**\n         * Force a max-width on the breadcrumb text\n         */\n      truncate: PropTypes.bool\n    }).isRequired),\n    text: PropTypes.node,\n    iconType: PropTypes.string\n  }).isRequired).isRequired,\n\n  /**\n       * The default height of the content area.\n       */\n  size: PropTypes.oneOf([\"s\", \"m\", \"l\"]),\n\n  /**\n       * Customize the max height.\n       * Best when used with `size=l` as this will ensure the actual height equals the max height set.\n       */\n  maxHeight: PropTypes.oneOfType([PropTypes.number.isRequired, PropTypes.string.isRequired]),\n\n  /**\n       * Set the offset from the left side of the screen.\n       */\n  leftOffset: PropTypes.oneOfType([PropTypes.number.isRequired, PropTypes.string.isRequired]),\n\n  /**\n       * Set the offset from the left side of the screen.\n       */\n  rightOffset: PropTypes.oneOfType([PropTypes.number.isRequired, PropTypes.string.isRequired]),\n\n  /**\n       * The control bar is hidden on mobile by default. Use the `showOnMobile` prop to force it's display on mobile screens.\n       * You'll need to ensure that the content you place into the bar renders as expected on mobile.\n       */\n  showOnMobile: PropTypes.bool,\n\n  /**\n       * By default EuiControlBar will live in a portal, fixed position to the browser window.\n       * Change the position of the bar to live inside a container and be positioned against its parent.\n       */\n  position: PropTypes.oneOf([\"fixed\", \"relative\", \"absolute\"]),\n\n  /**\n       * Optional class applied to the body used when `position = fixed`\n       */\n  bodyClassName: PropTypes.string,\n\n  /**\n       * Customize the screen reader heading that helps users find this control. Default is \"Page level controls\".\n       */\n  landmarkHeading: PropTypes.string\n};\n\ntry {\n  EuiControlBar.__docgenInfo = {\n    description: '',\n    displayName: 'EuiControlBar',\n    methods: [],\n    props: {\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/node_modules/@types/react/index.d.ts',\n          name: 'HTMLAttributes'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: 'Defines a string value that labels the current element.\\n' + '@see aria-labelledby.',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/node_modules/@types/react/index.d.ts',\n          name: 'AriaAttributes'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'data-test-subj': {\n        defaultValue: null,\n        description: '',\n        name: 'data-test-subj',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      showContent: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: 'Show or hide the content area containing the `children`',\n        name: 'showContent',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      controls: {\n        defaultValue: null,\n        description: 'An array of controls, actions, and layout spacers to display.\\n' + \"Accepts `'button' | 'tab' | 'breadcrumbs' | 'text' | 'icon' | 'spacer' | 'divider'`\",\n        name: 'controls',\n        parent: undefined,\n        required: true,\n        type: {\n          name: '((DisambiguateSet<(DisambiguateSet<(DisambiguateSet<(DisambiguateSet<(DisambiguateSet<ButtonControlProps, (DisambiguateSet<BreadcrumbControl, TabControl> & TabControl) | (DisambiguateSet<...> & BreadcrumbControl)> & DisambiguateSet<...> & TabControl) | (DisambiguateSet<...> & ... 1 more ... & BreadcrumbControl) | (D...'\n        }\n      },\n      size: {\n        defaultValue: {\n          value: 'l'\n        },\n        description: 'The default height of the content area.',\n        name: 'size',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"s\" | \"m\" | \"l\"',\n          value: [{\n            value: '\"s\"'\n          }, {\n            value: '\"m\"'\n          }, {\n            value: '\"l\"'\n          }]\n        }\n      },\n      maxHeight: {\n        defaultValue: null,\n        description: 'Customize the max height.\\n' + 'Best when used with `size=l` as this will ensure the actual height equals the max height set.',\n        name: 'maxHeight',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string | number'\n        }\n      },\n      leftOffset: {\n        defaultValue: {\n          value: '0'\n        },\n        description: 'Set the offset from the left side of the screen.',\n        name: 'leftOffset',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string | number'\n        }\n      },\n      rightOffset: {\n        defaultValue: {\n          value: '0'\n        },\n        description: 'Set the offset from the left side of the screen.',\n        name: 'rightOffset',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string | number'\n        }\n      },\n      showOnMobile: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: \"The control bar is hidden on mobile by default. Use the `showOnMobile` prop to force it's display on mobile screens.\\n\" + \"You'll need to ensure that the content you place into the bar renders as expected on mobile.\",\n        name: 'showOnMobile',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      position: {\n        defaultValue: {\n          value: 'fixed'\n        },\n        description: 'By default EuiControlBar will live in a portal, fixed position to the browser window.\\n' + 'Change the position of the bar to live inside a container and be positioned against its parent.',\n        name: 'position',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"fixed\" | \"absolute\" | \"relative\"',\n          value: [{\n            value: '\"fixed\"'\n          }, {\n            value: '\"absolute\"'\n          }, {\n            value: '\"relative\"'\n          }]\n        }\n      },\n      bodyClassName: {\n        defaultValue: null,\n        description: 'Optional class applied to the body used when `position = fixed`',\n        name: 'bodyClassName',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      landmarkHeading: {\n        defaultValue: null,\n        description: 'Customize the screen reader heading that helps users find this control. Default is \"Page level controls\".',\n        name: 'landmarkHeading',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string'\n        }\n      }\n    },\n    extendedInterfaces: ['HTMLAttributes', 'AriaAttributes', 'DOMAttributes', 'CommonProps']\n  };\n} catch (e) {}"]}]}