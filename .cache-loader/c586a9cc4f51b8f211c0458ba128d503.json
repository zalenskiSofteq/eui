{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\date_picker\\super_date_picker\\super_date_picker.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\date_picker\\super_date_picker\\super_date_picker.tsx","mtime":1649070093380},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/date_picker/super_date_picker/super_date_picker.tsx"],"names":["React","Component","classNames","prettyDuration","showPrettyDuration","commonDurationRanges","prettyInterval","dateMath","EuiSuperUpdateButton","EuiQuickSelectPopover","EuiDatePopoverButton","EuiDatePickerRange","EuiFormControlLayout","EuiFlexGroup","EuiFlexItem","AsyncInterval","EuiI18n","EuiI18nConsumer","isRangeInvalid","start","end","startMoment","parse","endMoment","roundUp","isValid","isAfter","EuiSuperDatePicker","prevProps","props","isInvalid","hasChanged","commonlyUsedRanges","isStartDatePopoverOpen","isEndDatePopoverOpen","setState","state","showUpdateButton","onTimeChange","isQuickSelection","isPaused","startInterval","refreshInterval","stopInterval","setTime","prevState","onRefreshChange","asyncInterval","stop","onRefresh","handler","dateFormat","isAutoRefreshOnly","isDisabled","locale","timeFormat","utcOffset","Boolean","hidePrettyDuration","contextLocale","setStart","onStartDatePopoverToggle","onStartDatePopoverClose","setEnd","onEndDatePopoverToggle","onEndDatePopoverClose","applyTime","isLoading","handleClickUpdateButton","updateButtonProps","customQuickSelectPanels","recentlyUsedRanges","quickSelect","undefined","applyQuickTime","flexWrapperClasses","renderDatePickerRange","renderUpdateButton","nextProps"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { prettyDuration, showPrettyDuration, commonDurationRanges } from './pretty_duration';\nimport { prettyInterval } from './pretty_interval';\nimport dateMath from '@elastic/datemath';\nimport { EuiSuperUpdateButton } from './super_update_button';\nimport { EuiQuickSelectPopover } from './quick_select_popover/quick_select_popover';\nimport { EuiDatePopoverButton } from './date_popover/date_popover_button';\nimport { EuiDatePickerRange } from '../date_picker_range';\nimport { EuiFormControlLayout } from '../../form';\nimport { EuiFlexGroup, EuiFlexItem } from '../../flex';\nimport { AsyncInterval } from './async_interval';\nimport { EuiI18n } from '../../i18n';\nimport { EuiI18nConsumer } from '../../context'; // eslint-disable-line import/named\n\nexport { prettyDuration, commonDurationRanges };\n\nfunction isRangeInvalid(start, end) {\n  if (start === 'now' && end === 'now') {\n    return true;\n  }\n\n  var startMoment = dateMath.parse(start);\n  var endMoment = dateMath.parse(end, {\n    roundUp: true\n  });\n\n  if (!startMoment || !endMoment || !startMoment.isValid() || !endMoment.isValid()) {\n    return true;\n  }\n\n  if (startMoment.isAfter(endMoment)) {\n    return true;\n  }\n\n  return false;\n}\n\nexport class EuiSuperDatePicker extends Component {\n  static defaultProps = {\n    commonlyUsedRanges: commonDurationRanges,\n    dateFormat: 'MMM D, YYYY @ HH:mm:ss.SSS',\n    end: 'now',\n    isAutoRefreshOnly: false,\n    isDisabled: false,\n    isPaused: true,\n    recentlyUsedRanges: [],\n    refreshInterval: 0,\n    showUpdateButton: true,\n    start: 'now-15m',\n    timeFormat: 'HH:mm'\n  };\n  state = {\n    prevProps: {\n      start: this.props.start,\n      end: this.props.end\n    },\n    start: this.props.start,\n    end: this.props.end,\n    isInvalid: isRangeInvalid(this.props.start, this.props.end),\n    hasChanged: false,\n    showPrettyDuration: showPrettyDuration(this.props.start, this.props.end, this.props.commonlyUsedRanges),\n    isStartDatePopoverOpen: false,\n    isEndDatePopoverOpen: false\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.start !== prevState.prevProps.start || nextProps.end !== prevState.prevProps.end) {\n      return {\n        prevProps: {\n          start: nextProps.start,\n          end: nextProps.end\n        },\n        start: nextProps.start,\n        end: nextProps.end,\n        isInvalid: isRangeInvalid(nextProps.start, nextProps.end),\n        hasChanged: false,\n        showPrettyDuration: showPrettyDuration(nextProps.start, nextProps.end, nextProps.commonlyUsedRanges)\n      };\n    }\n\n    return null;\n  }\n\n  setTime = ({\n    end,\n    start\n  }) => {\n    const isInvalid = isRangeInvalid(start, end);\n    this.setState({\n      start,\n      end,\n      isInvalid,\n      hasChanged: !(this.state.prevProps.start === start && this.state.prevProps.end === end)\n    });\n\n    if (!this.props.showUpdateButton) {\n      this.props.onTimeChange({\n        start,\n        end,\n        isQuickSelection: false,\n        isInvalid\n      });\n    }\n  };\n  componentDidMount = () => {\n    if (!this.props.isPaused) {\n      this.startInterval(this.props.refreshInterval);\n    }\n  };\n  componentDidUpdate = () => {\n    this.stopInterval();\n\n    if (!this.props.isPaused) {\n      this.startInterval(this.props.refreshInterval);\n    }\n  };\n  componentWillUnmount = () => {\n    this.stopInterval();\n  };\n  setStart = start => {\n    this.setTime({\n      start,\n      end: this.state.end\n    });\n  };\n  setEnd = end => {\n    this.setTime({\n      start: this.state.start,\n      end\n    });\n  };\n  applyTime = () => {\n    this.props.onTimeChange({\n      start: this.state.start,\n      end: this.state.end,\n      isQuickSelection: false,\n      isInvalid: false\n    });\n  };\n  applyQuickTime = ({\n    start,\n    end\n  }) => {\n    this.setState({\n      showPrettyDuration: showPrettyDuration(start, end, commonDurationRanges)\n    });\n    this.props.onTimeChange({\n      start,\n      end,\n      isQuickSelection: true,\n      isInvalid: false\n    });\n  };\n  hidePrettyDuration = () => {\n    this.setState({\n      showPrettyDuration: false\n    });\n  };\n  onStartDatePopoverToggle = () => {\n    this.setState(prevState => {\n      return {\n        isStartDatePopoverOpen: !prevState.isStartDatePopoverOpen\n      };\n    });\n  };\n  onStartDatePopoverClose = () => {\n    this.setState({\n      isStartDatePopoverOpen: false\n    });\n  };\n  onEndDatePopoverToggle = () => {\n    this.setState(prevState => {\n      return {\n        isEndDatePopoverOpen: !prevState.isEndDatePopoverOpen\n      };\n    });\n  };\n  onEndDatePopoverClose = () => {\n    this.setState({\n      isEndDatePopoverOpen: false\n    });\n  };\n  onRefreshChange = ({\n    refreshInterval,\n    isPaused\n  }) => {\n    this.stopInterval();\n\n    if (!isPaused) {\n      this.startInterval(refreshInterval);\n    }\n\n    if (this.props.onRefreshChange) {\n      this.props.onRefreshChange({\n        refreshInterval,\n        isPaused\n      });\n    }\n  };\n  stopInterval = () => {\n    if (this.asyncInterval) {\n      this.asyncInterval.stop();\n    }\n  };\n  startInterval = refreshInterval => {\n    const {\n      onRefresh\n    } = this.props;\n\n    if (onRefresh) {\n      const handler = () => {\n        const {\n          start,\n          end\n        } = this.props;\n        onRefresh({\n          start,\n          end,\n          refreshInterval\n        });\n      };\n\n      this.asyncInterval = new AsyncInterval(handler, refreshInterval);\n    }\n  };\n  renderDatePickerRange = () => {\n    const {\n      end,\n      hasChanged,\n      isEndDatePopoverOpen,\n      isInvalid,\n      isStartDatePopoverOpen,\n      showPrettyDuration,\n      start\n    } = this.state;\n    const {\n      commonlyUsedRanges,\n      dateFormat,\n      isAutoRefreshOnly,\n      isDisabled,\n      isPaused,\n      locale,\n      refreshInterval,\n      timeFormat,\n      utcOffset\n    } = this.props;\n\n    if (isAutoRefreshOnly) {\n      return <EuiDatePickerRange className=\"euiDatePickerRange--inGroup\" iconType={false} isCustom startDateControl={<div />} endDateControl={<div />} readOnly>\n          <span className=\"euiSuperDatePicker__prettyFormat\">\n            {prettyInterval(Boolean(isPaused), refreshInterval)}\n          </span>\n        </EuiDatePickerRange>;\n    }\n\n    if (showPrettyDuration && !isStartDatePopoverOpen && !isEndDatePopoverOpen) {\n      return <EuiDatePickerRange className=\"euiDatePickerRange--inGroup\" iconType={false} isCustom startDateControl={<div />} endDateControl={<div />}>\n          <button className={classNames('euiSuperDatePicker__prettyFormat', {\n          'euiSuperDatePicker__prettyFormat--disabled': isDisabled\n        })} data-test-subj=\"superDatePickerShowDatesButton\" disabled={isDisabled} onClick={this.hidePrettyDuration}>\n            {prettyDuration(start, end, commonlyUsedRanges, dateFormat)}\n            <span className=\"euiSuperDatePicker__prettyFormatLink\">\n              <EuiI18n token=\"euiSuperDatePicker.showDatesButtonLabel\" default=\"Show dates\" />\n            </span>\n          </button>\n        </EuiDatePickerRange>;\n    }\n\n    return <EuiI18nConsumer>\n        {({\n        locale: contextLocale\n      }) => <EuiDatePickerRange className=\"euiDatePickerRange--inGroup\" iconType={false} isCustom startDateControl={<EuiDatePopoverButton className=\"euiSuperDatePicker__startPopoverButton\" position=\"start\" needsUpdating={hasChanged} isInvalid={isInvalid} isDisabled={isDisabled} onChange={this.setStart} value={start} dateFormat={dateFormat} utcOffset={utcOffset} timeFormat={timeFormat} locale={locale || contextLocale} isOpen={this.state.isStartDatePopoverOpen} onPopoverToggle={this.onStartDatePopoverToggle} onPopoverClose={this.onStartDatePopoverClose} />} endDateControl={<EuiDatePopoverButton position=\"end\" needsUpdating={hasChanged} isInvalid={isInvalid} isDisabled={isDisabled} onChange={this.setEnd} value={end} dateFormat={dateFormat} utcOffset={utcOffset} timeFormat={timeFormat} locale={locale || contextLocale} roundUp isOpen={this.state.isEndDatePopoverOpen} onPopoverToggle={this.onEndDatePopoverToggle} onPopoverClose={this.onEndDatePopoverClose} />} />}\n      </EuiI18nConsumer>;\n  };\n  handleClickUpdateButton = () => {\n    if (!this.state.hasChanged && this.props.onRefresh) {\n      const {\n        start,\n        end,\n        refreshInterval\n      } = this.props;\n      this.props.onRefresh({\n        start,\n        end,\n        refreshInterval\n      });\n    } else {\n      this.applyTime();\n    }\n  };\n  renderUpdateButton = () => {\n    if (!this.props.showUpdateButton || this.props.isAutoRefreshOnly) {\n      return;\n    }\n\n    return <EuiFlexItem grow={false}>\n        <EuiSuperUpdateButton needsUpdate={this.state.hasChanged} showTooltip={!this.state.isStartDatePopoverOpen && !this.state.isEndDatePopoverOpen} isLoading={this.props.isLoading} isDisabled={this.props.isDisabled || this.state.isInvalid} onClick={this.handleClickUpdateButton} data-test-subj=\"superDatePickerApplyTimeButton\" {...this.props.updateButtonProps} />\n      </EuiFlexItem>;\n  };\n\n  render() {\n    const {\n      commonlyUsedRanges,\n      customQuickSelectPanels,\n      dateFormat,\n      end,\n      isAutoRefreshOnly,\n      isDisabled,\n      isPaused,\n      onRefreshChange,\n      recentlyUsedRanges,\n      refreshInterval,\n      showUpdateButton,\n      start\n    } = this.props;\n    const quickSelect = <EuiQuickSelectPopover applyRefreshInterval={onRefreshChange ? this.onRefreshChange : undefined} applyTime={this.applyQuickTime} commonlyUsedRanges={commonlyUsedRanges} customQuickSelectPanels={customQuickSelectPanels} dateFormat={dateFormat} end={end} isAutoRefreshOnly={isAutoRefreshOnly} isDisabled={isDisabled} isPaused={isPaused} recentlyUsedRanges={recentlyUsedRanges} refreshInterval={refreshInterval} start={start} />;\n    const flexWrapperClasses = classNames('euiSuperDatePicker__flexWrapper', {\n      'euiSuperDatePicker__flexWrapper--noUpdateButton': !showUpdateButton,\n      'euiSuperDatePicker__flexWrapper--isAutoRefreshOnly': isAutoRefreshOnly\n    });\n    return <EuiFlexGroup gutterSize=\"s\" responsive={false} className={flexWrapperClasses}>\n        <EuiFlexItem>\n          <EuiFormControlLayout className=\"euiSuperDatePicker\" isDisabled={isDisabled} prepend={quickSelect}>\n            {this.renderDatePickerRange()}\n          </EuiFormControlLayout>\n        </EuiFlexItem>\n        {this.renderUpdateButton()}\n      </EuiFlexGroup>;\n  }\n\n}\nEuiSuperDatePicker.propTypes = {\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n  commonlyUsedRanges: PropTypes.arrayOf(PropTypes.shape({\n    end: PropTypes.oneOfType([PropTypes.oneOf([\"now\"]), PropTypes.string.isRequired]).isRequired,\n    label: PropTypes.string,\n    start: PropTypes.oneOfType([PropTypes.oneOf([\"now\"]), PropTypes.string.isRequired]).isRequired\n  }).isRequired).isRequired,\n  customQuickSelectPanels: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    content: PropTypes.element.isRequired\n  }).isRequired),\n\n  /**\n     * Specifies the formatted used when displaying dates and/or datetimes\n     */\n  dateFormat: PropTypes.string.isRequired,\n  end: PropTypes.oneOfType([PropTypes.oneOf([\"now\"]), PropTypes.string.isRequired]).isRequired,\n\n  /**\n     * Set isAutoRefreshOnly to true to limit the component to only display auto refresh content.\n     */\n  isAutoRefreshOnly: PropTypes.bool.isRequired,\n  isDisabled: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool,\n  isPaused: PropTypes.bool.isRequired,\n\n  /**\n     * Used to localize e.g. month names, passed to `moment`\n     */\n  locale: PropTypes.any,\n\n  /**\n     * Callback for when the refresh interval is fired.\n     * EuiSuperDatePicker will only manage a refresh interval timer when onRefresh callback is supplied\n     * If a promise is returned, the next refresh interval will not start until the promise has resolved.\n     * If the promise rejects the refresh interval will stop and the error thrown\n     */\n  onRefresh: PropTypes.func,\n\n  /**\n     * Callback for when the refresh interval changes.\n     * Supply onRefreshChange to show refresh interval inputs in quick select popover\n     */\n  onRefreshChange: PropTypes.func,\n\n  /**\n     * Callback for when the time changes.\n     */\n  onTimeChange: PropTypes.func.isRequired,\n  recentlyUsedRanges: PropTypes.arrayOf(PropTypes.shape({\n    end: PropTypes.oneOfType([PropTypes.oneOf([\"now\"]), PropTypes.string.isRequired]).isRequired,\n    label: PropTypes.string,\n    start: PropTypes.oneOfType([PropTypes.oneOf([\"now\"]), PropTypes.string.isRequired]).isRequired\n  }).isRequired).isRequired,\n\n  /**\n     * Refresh interval in milliseconds\n     */\n  refreshInterval: PropTypes.number.isRequired,\n\n  /**\n     * Set showUpdateButton to false to immediately invoke onTimeChange for all start and end changes.\n     */\n  showUpdateButton: PropTypes.bool.isRequired,\n  start: PropTypes.oneOfType([PropTypes.oneOf([\"now\"]), PropTypes.string.isRequired]).isRequired,\n\n  /**\n     * Specifies the formatted used when displaying times\n     */\n  timeFormat: PropTypes.string.isRequired,\n  utcOffset: PropTypes.number,\n\n  /**\n     * Props passed to the update button\n     */\n  updateButtonProps: PropTypes.any\n};\n\ntry {\n  EuiSuperDatePicker.__docgenInfo = {\n    description: '',\n    displayName: 'EuiSuperDatePicker',\n    methods: [],\n    props: {\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: '',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'data-test-subj': {\n        defaultValue: null,\n        description: '',\n        name: 'data-test-subj',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      commonlyUsedRanges: {\n        defaultValue: {\n          value: null\n        },\n        description: '',\n        name: 'commonlyUsedRanges',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'DurationRange[]'\n        }\n      },\n      customQuickSelectPanels: {\n        defaultValue: null,\n        description: '',\n        name: 'customQuickSelectPanels',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'QuickSelectPanel[]'\n        }\n      },\n      dateFormat: {\n        defaultValue: {\n          value: 'MMM D, YYYY @ HH:mm:ss.SSS'\n        },\n        description: 'Specifies the formatted used when displaying dates and/or datetimes',\n        name: 'dateFormat',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      end: {\n        defaultValue: {\n          value: 'now'\n        },\n        description: '',\n        name: 'end',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      isAutoRefreshOnly: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: 'Set isAutoRefreshOnly to true to limit the component to only display auto refresh content.',\n        name: 'isAutoRefreshOnly',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      isDisabled: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: '',\n        name: 'isDisabled',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      isLoading: {\n        defaultValue: null,\n        description: '',\n        name: 'isLoading',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      isPaused: {\n        defaultValue: {\n          value: 'true'\n        },\n        description: '',\n        name: 'isPaused',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      locale: {\n        defaultValue: null,\n        description: 'Used to localize e.g. month names, passed to `moment`',\n        name: 'locale',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'LocaleSpecifier'\n        }\n      },\n      onRefresh: {\n        defaultValue: null,\n        description: 'Callback for when the refresh interval is fired.\\n' + 'EuiSuperDatePicker will only manage a refresh interval timer when onRefresh callback is supplied\\n' + 'If a promise is returned, the next refresh interval will not start until the promise has resolved.\\n' + 'If the promise rejects the refresh interval will stop and the error thrown',\n        name: 'onRefresh',\n        parent: undefined,\n        required: false,\n        type: {\n          name: '(props: OnRefreshProps) => void'\n        }\n      },\n      onRefreshChange: {\n        defaultValue: null,\n        description: 'Callback for when the refresh interval changes.\\n' + 'Supply onRefreshChange to show refresh interval inputs in quick select popover',\n        name: 'onRefreshChange',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'ApplyRefreshInterval'\n        }\n      },\n      onTimeChange: {\n        defaultValue: null,\n        description: 'Callback for when the time changes.',\n        name: 'onTimeChange',\n        parent: undefined,\n        required: true,\n        type: {\n          name: '(props: OnTimeChangeProps) => void'\n        }\n      },\n      recentlyUsedRanges: {\n        defaultValue: {\n          value: '[]'\n        },\n        description: '',\n        name: 'recentlyUsedRanges',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'DurationRange[]'\n        }\n      },\n      refreshInterval: {\n        defaultValue: {\n          value: '0'\n        },\n        description: 'Refresh interval in milliseconds',\n        name: 'refreshInterval',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'number'\n        }\n      },\n      showUpdateButton: {\n        defaultValue: {\n          value: 'true'\n        },\n        description: 'Set showUpdateButton to false to immediately invoke onTimeChange for all start and end changes.',\n        name: 'showUpdateButton',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      start: {\n        defaultValue: {\n          value: 'now-15m'\n        },\n        description: '',\n        name: 'start',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      timeFormat: {\n        defaultValue: {\n          value: 'HH:mm'\n        },\n        description: 'Specifies the formatted used when displaying times',\n        name: 'timeFormat',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      utcOffset: {\n        defaultValue: null,\n        description: '',\n        name: 'utcOffset',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'number'\n        }\n      },\n      updateButtonProps: {\n        defaultValue: null,\n        description: 'Props passed to the update button',\n        name: 'updateButtonProps',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'Partial<Pick<EuiSuperUpdateButtonProps, \"style\" | \"children\" | \"className\" | \"color\" | \"aria-label\" | \"data-test-subj\" | \"size\" | \"fill\" | \"iconType\" | ... 7 more ... | \"toolTipProps\">>'\n        }\n      }\n    },\n    extendedInterfaces: ['CommonProps']\n  };\n} catch (e) {}"]}]}