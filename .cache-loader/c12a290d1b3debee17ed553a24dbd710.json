{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\button\\button_group\\button_group_button.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\button\\button_group\\button_group_button.tsx","mtime":1649070093308},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cyI7CgpmdW5jdGlvbiBfZXh0ZW5kcygpIHsgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9OyByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfQoKZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7IHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7IH0KCmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuIik7IH0KCmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHsgaWYgKCFvKSByZXR1cm47IGlmICh0eXBlb2YgbyA9PT0gInN0cmluZyIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7IGlmIChuID09PSAiT2JqZWN0IiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lOyBpZiAobiA9PT0gIk1hcCIgfHwgbiA9PT0gIlNldCIpIHJldHVybiBBcnJheS5mcm9tKG8pOyBpZiAobiA9PT0gIkFyZ3VtZW50cyIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB9CgpmdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikgeyBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH0KCmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHsgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJ1bmRlZmluZWQiIHx8ICEoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChhcnIpKSkgcmV0dXJuOyB2YXIgX2FyciA9IFtdOyB2YXIgX24gPSB0cnVlOyB2YXIgX2QgPSBmYWxzZTsgdmFyIF9lID0gdW5kZWZpbmVkOyB0cnkgeyBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVsicmV0dXJuIl0gIT0gbnVsbCkgX2lbInJldHVybiJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfQoKZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOyB9CgpmdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsgaWYgKGVudW1lcmFibGVPbmx5KSBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSk7IGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsgfSByZXR1cm4ga2V5czsgfQoKZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307IGlmIChpICUgMikgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pOyB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7IH0gZWxzZSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gfSByZXR1cm4gdGFyZ2V0OyB9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfQoKZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKHNvdXJjZSwgZXhjbHVkZWQpIHsgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307IHZhciB0YXJnZXQgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKTsgdmFyIGtleSwgaTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHNvdXJjZVN5bWJvbEtleXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZSk7IGZvciAoaSA9IDA7IGkgPCBzb3VyY2VTeW1ib2xLZXlzLmxlbmd0aDsgaSsrKSB7IGtleSA9IHNvdXJjZVN5bWJvbEtleXNbaV07IGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7IGlmICghT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHNvdXJjZSwga2V5KSkgY29udGludWU7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSByZXR1cm4gdGFyZ2V0OyB9CgpmdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7IGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9OyB2YXIgdGFyZ2V0ID0ge307IHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTsgdmFyIGtleSwgaTsgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHsga2V5ID0gc291cmNlS2V5c1tpXTsgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSByZXR1cm4gdGFyZ2V0OyB9CgovKgogKiBMaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lIG9yIG1vcmUgY29udHJpYnV0b3IKICogbGljZW5zZSBhZ3JlZW1lbnRzLiBTZWUgdGhlIE5PVElDRSBmaWxlIGRpc3RyaWJ1dGVkIHdpdGgKICogdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIHJlZ2FyZGluZyBjb3B5cmlnaHQKICogb3duZXJzaGlwLiBFbGFzdGljc2VhcmNoIEIuVi4gbGljZW5zZXMgdGhpcyBmaWxlIHRvIHlvdSB1bmRlcgogKiB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsgeW91IG1heQogKiBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgogKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKICoKICogICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiAqCiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywKICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4KICogIkFTIElTIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZCiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZQogKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zCiAqIHVuZGVyIHRoZSBMaWNlbnNlLgogKi8KaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7CmltcG9ydCBQcm9wVHlwZXMgZnJvbSAicHJvcC10eXBlcyI7CmltcG9ydCBSZWFjdCwgeyB1c2VSZWYgfSBmcm9tICdyZWFjdCc7CmltcG9ydCB7IEV1aUJ1dHRvbkRpc3BsYXkgfSBmcm9tICcuLi9idXR0b24nOwppbXBvcnQgeyB1c2VJbm5lclRleHQgfSBmcm9tICcuLi8uLi9pbm5lcl90ZXh0JzsKaW1wb3J0IHsgaHRtbElkR2VuZXJhdG9yIH0gZnJvbSAnLi4vLi4vLi4vc2VydmljZXMnOwpleHBvcnQgdmFyIEV1aUJ1dHRvbkdyb3VwQnV0dG9uID0gZnVuY3Rpb24gRXVpQnV0dG9uR3JvdXBCdXR0b24oX3JlZikgewogIHZhciBjbGFzc05hbWUgPSBfcmVmLmNsYXNzTmFtZSwKICAgICAgaWQgPSBfcmVmLmlkLAogICAgICBpc0Rpc2FibGVkID0gX3JlZi5pc0Rpc2FibGVkLAogICAgICBpc0ljb25Pbmx5ID0gX3JlZi5pc0ljb25Pbmx5LAogICAgICBfcmVmJGlzU2VsZWN0ZWQgPSBfcmVmLmlzU2VsZWN0ZWQsCiAgICAgIGlzU2VsZWN0ZWQgPSBfcmVmJGlzU2VsZWN0ZWQgPT09IHZvaWQgMCA/IGZhbHNlIDogX3JlZiRpc1NlbGVjdGVkLAogICAgICBsYWJlbCA9IF9yZWYubGFiZWwsCiAgICAgIG5hbWUgPSBfcmVmLm5hbWUsCiAgICAgIF9vbkNoYW5nZSA9IF9yZWYub25DaGFuZ2UsCiAgICAgIHNpemUgPSBfcmVmLnNpemUsCiAgICAgIHZhbHVlID0gX3JlZi52YWx1ZSwKICAgICAgX3JlZiRlbGVtZW50ID0gX3JlZi5lbGVtZW50LAogICAgICBlbGVtZW50ID0gX3JlZiRlbGVtZW50ID09PSB2b2lkIDAgPyAnYnV0dG9uJyA6IF9yZWYkZWxlbWVudCwKICAgICAgX3JlZiR0eXBlID0gX3JlZi50eXBlLAogICAgICB0eXBlID0gX3JlZiR0eXBlID09PSB2b2lkIDAgPyAnYnV0dG9uJyA6IF9yZWYkdHlwZSwKICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLCBbImNsYXNzTmFtZSIsICJpZCIsICJpc0Rpc2FibGVkIiwgImlzSWNvbk9ubHkiLCAiaXNTZWxlY3RlZCIsICJsYWJlbCIsICJuYW1lIiwgIm9uQ2hhbmdlIiwgInNpemUiLCAidmFsdWUiLCAiZWxlbWVudCIsICJ0eXBlIl0pOwoKICAvLyBGb3JjZSBlbGVtZW50IHRvIGJlIGEgYnV0dG9uIGlmIGRpc2FibGVkCiAgdmFyIGVsID0gaXNEaXNhYmxlZCA/ICdidXR0b24nIDogZWxlbWVudDsKICB2YXIgbmV3SWQgPSB1c2VSZWYoaHRtbElkR2VuZXJhdG9yKCkoKSkuY3VycmVudDsKICB2YXIgZWxlbWVudFByb3BzID0ge307CiAgdmFyIHNpbmdsZUlucHV0OwoKICBpZiAoZWwgPT09ICdsYWJlbCcpIHsKICAgIGVsZW1lbnRQcm9wcyA9IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgZWxlbWVudFByb3BzKSwge30sIHsKICAgICAgaHRtbEZvcjogbmV3SWQsCiAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soKSB7CiAgICAgICAgcmV0dXJuIF9vbkNoYW5nZShpZCwgdmFsdWUpOwogICAgICB9CiAgICB9KTsKICAgIHNpbmdsZUlucHV0ID0gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImlucHV0IiwgewogICAgICBpZDogbmV3SWQsCiAgICAgIGNsYXNzTmFtZTogImV1aVNjcmVlblJlYWRlck9ubHkiLAogICAgICBuYW1lOiBuYW1lLAogICAgICBjaGVja2VkOiBpc1NlbGVjdGVkLAogICAgICBkaXNhYmxlZDogaXNEaXNhYmxlZCwKICAgICAgdmFsdWU6IHZhbHVlLAogICAgICB0eXBlOiAicmFkaW8iLAogICAgICBvbkNoYW5nZTogZnVuY3Rpb24gb25DaGFuZ2UoKSB7CiAgICAgICAgcmV0dXJuIF9vbkNoYW5nZShpZCwgdmFsdWUpOwogICAgICB9LAogICAgICAiZGF0YS10ZXN0LXN1YmoiOiBpZAogICAgfSk7CiAgfSBlbHNlIHsKICAgIGVsZW1lbnRQcm9wcyA9IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgZWxlbWVudFByb3BzKSwge30sIHsKICAgICAgaWQ6IG5ld0lkLAogICAgICAnZGF0YS10ZXN0LXN1YmonOiBpZCwKICAgICAgaXNTZWxlY3RlZDogaXNTZWxlY3RlZCwKICAgICAgdHlwZTogdHlwZSwKICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljaygpIHsKICAgICAgICByZXR1cm4gX29uQ2hhbmdlKGlkKTsKICAgICAgfQogICAgfSk7CiAgfQoKICB2YXIgYnV0dG9uQ2xhc3NlcyA9IGNsYXNzTmFtZXMoewogICAgJ2V1aUJ1dHRvbkdyb3VwQnV0dG9uLWlzU2VsZWN0ZWQnOiBpc1NlbGVjdGVkLAogICAgJ2V1aUJ1dHRvbkdyb3VwQnV0dG9uLWlzSWNvbk9ubHknOiBpc0ljb25Pbmx5CiAgfSwgY2xhc3NOYW1lKTsKICAvKioKICAgKiBCZWNhdXNlIHRoZSBzZWxlY3RlZCBidXR0b25zIGFsc28gaW5jcmVhc2UgdGhlaXIgdGV4dCB3ZWlnaHQgdG8gJ2JvbGQnLAogICAqIHdlIGRvbid0IHdhbnQgdGhlIHdob2xlIGJ1dHRvbiBzaXplIHRvIHNoaWZ0IHdoZW4gc2VsZWN0ZWQsIHNvIHdlIGRldGVybWluZQogICAqIHRoZSBiYXNlIHdpZHRoIG9mIHRoZSBidXR0b24gdmlhIHRoZSBgZXVpVGV4dFNoaWZ0KClgIG1ldGhvZCBpbiBTQVNTLgogICAqLwoKICB2YXIgX3VzZUlubmVyVGV4dCA9IHVzZUlubmVyVGV4dCgpLAogICAgICBfdXNlSW5uZXJUZXh0MiA9IF9zbGljZWRUb0FycmF5KF91c2VJbm5lclRleHQsIDIpLAogICAgICBidXR0b25UZXh0UmVmID0gX3VzZUlubmVyVGV4dDJbMF0sCiAgICAgIGlubmVyVGV4dCA9IF91c2VJbm5lclRleHQyWzFdOwoKICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRXVpQnV0dG9uRGlzcGxheSwgX2V4dGVuZHMoewogICAgYmFzZUNsYXNzTmFtZTogImV1aUJ1dHRvbkdyb3VwQnV0dG9uIiwKICAgIGNsYXNzTmFtZTogYnV0dG9uQ2xhc3NlcywKICAgIGVsZW1lbnQ6IGVsLAogICAgZmlsbDogc2l6ZSAhPT0gJ2NvbXByZXNzZWQnICYmIGlzU2VsZWN0ZWQsCiAgICBpc0Rpc2FibGVkOiBpc0Rpc2FibGVkLAogICAgc2l6ZTogc2l6ZSA9PT0gJ2NvbXByZXNzZWQnID8gJ3MnIDogc2l6ZSwKICAgIHRleHRQcm9wczogewogICAgICBjbGFzc05hbWU6IGlzSWNvbk9ubHkgPyAnZXVpU2NyZWVuUmVhZGVyT25seScgOiAnZXVpQnV0dG9uR3JvdXBCdXR0b25fX3RleHRTaGlmdCcsCiAgICAgIHJlZjogYnV0dG9uVGV4dFJlZiwKICAgICAgJ2RhdGEtdGV4dCc6IGlubmVyVGV4dCwKICAgICAgdGl0bGU6IGlubmVyVGV4dAogICAgfQogIH0sIGVsZW1lbnRQcm9wcywgcmVzdCksIHNpbmdsZUlucHV0LCBsYWJlbCk7Cn07CkV1aUJ1dHRvbkdyb3VwQnV0dG9uLnByb3BUeXBlcyA9IHsKICAvKioKICAgICAqIEVhY2ggb3B0aW9uIG11c3QgaGF2ZSBhIHVuaXF1ZSBgaWRgIGZvciBtYWludGFpbmluZyBzZWxlY3Rpb24KICAgICAqLwogIGlkOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsCgogIC8qKgogICAgICogRWFjaCBvcHRpb24gbXVzdCBoYXZlIGEgYGxhYmVsYCBldmVuIGZvciBpY29ucyB3aGljaCB3aWxsIGJlIGFwcGxpZWQgYXMgdGhlIGBhcmlhLWxhYmVsYAogICAgICovCiAgbGFiZWw6IFByb3BUeXBlcy5ub2RlLmlzUmVxdWlyZWQsCiAgaXNEaXNhYmxlZDogUHJvcFR5cGVzLmJvb2wsCgogIC8qKgogICAgICogVGhlIHZhbHVlIG9mIHRoZSByYWRpbyBpbnB1dCBmb3IgJ3NpbmdsZScuCiAgICAgKi8KCiAgLyoqCiAgICAgKiBUaGUgdmFsdWUgb2YgdGhlIHJhZGlvIGlucHV0LgogICAgICovCiAgdmFsdWU6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5hbnksIFByb3BUeXBlcy5zdHJpbmddKSwKCiAgLyoqCiAgICAgKiBUaGUgdHlwZSBvZiB0aGUgdW5kZXJseWluZyBIVE1MIGJ1dHRvbgogICAgICovCiAgdHlwZTogUHJvcFR5cGVzLm9uZU9mKFsiYnV0dG9uIiwgInN1Ym1pdCIsICJyZXNldCJdKSwKCiAgLyoqCiAgICAgKiBBbnkgYHR5cGVgIGFjY2VwdGVkIGJ5IEV1aUljb24KICAgICAqLwogIGljb25UeXBlOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMub25lT2YoWyJhY2Nlc3NpYmlsaXR5IiwgImFkZERhdGFBcHAiLCAiYWR2YW5jZWRTZXR0aW5nc0FwcCIsICJhZ2dyZWdhdGUiLCAiYWxlcnQiLCAiYW5hbHl6ZUV2ZW50IiwgImFubm90YXRpb24iLCAiYXBtQXBwIiwgImFwbVRyYWNlIiwgImFwcHMiLCAiYXBwU2VhcmNoQXBwIiwgImFycm93RG93biIsICJhcnJvd0xlZnQiLCAiYXJyb3dSaWdodCIsICJhcnJvd1VwIiwgImFzdGVyaXNrIiwgImF1ZGl0YmVhdEFwcCIsICJiZWFrZXIiLCAiYmVsbCIsICJiZWxsU2xhc2giLCAiYm9sdCIsICJib3hlc0hvcml6b250YWwiLCAiYm94ZXNWZXJ0aWNhbCIsICJicmFuY2giLCAiYnJvb20iLCAiYnJ1c2giLCAiYnVnIiwgImJ1bGxzZXllIiwgImNhbGVuZGFyIiwgImNhbnZhc0FwcCIsICJjb2RlQXBwIiwgImNoZWNrIiwgImNoZWNrSW5DaXJjbGVGaWxsZWQiLCAiY2hlZXIiLCAiY2xhc3NpZmljYXRpb25Kb2IiLCAiY2xvY2siLCAiY2xvdWREcml6emxlIiwgImNsb3VkU3Rvcm15IiwgImNsb3VkU3VubnkiLCAiY29sb3IiLCAiY29tcHV0ZSIsICJjb25zb2xlIiwgImNvbnNvbGVBcHAiLCAiY29udGludWl0eUFib3ZlIiwgImNvbnRpbnVpdHlBYm92ZUJlbG93IiwgImNvbnRpbnVpdHlCZWxvdyIsICJjb250aW51aXR5V2l0aGluIiwgImNvbnRyb2xzSG9yaXpvbnRhbCIsICJjb250cm9sc1ZlcnRpY2FsIiwgImNvcHkiLCAiY29weUNsaXBib2FyZCIsICJjcmVhdGVBZHZhbmNlZEpvYiIsICJjcmVhdGVNdWx0aU1ldHJpY0pvYiIsICJjcmVhdGVQb3B1bGF0aW9uSm9iIiwgImNyZWF0ZVNpbmdsZU1ldHJpY0pvYiIsICJjcm9zcyIsICJjcm9zc0NsdXN0ZXJSZXBsaWNhdGlvbkFwcCIsICJjcm9zc2hhaXJzIiwgImNyb3NzSW5BQ2lyY2xlRmlsbGVkIiwgImN1cnJlbmN5IiwgImN1dCIsICJkYXNoYm9hcmRBcHAiLCAiZGF0YWJhc2UiLCAiZGF0YVZpc3VhbGl6ZXIiLCAiZGV2VG9vbHNBcHAiLCAiZGlzY292ZXJBcHAiLCAiZG9jdW1lbnQiLCAiZG9jdW1lbnRhdGlvbiIsICJkb2N1bWVudEVkaXQiLCAiZG9jdW1lbnRzIiwgImRvdCIsICJkb3dubG9hZCIsICJlZGl0b3JBbGlnbkNlbnRlciIsICJlZGl0b3JBbGlnbkxlZnQiLCAiZWRpdG9yQWxpZ25SaWdodCIsICJlZGl0b3JCb2xkIiwgImVkaXRvckNvZGVCbG9jayIsICJlZGl0b3JDb21tZW50IiwgImVkaXRvckRpc3RyaWJ1dGVIb3Jpem9udGFsIiwgImVkaXRvckRpc3RyaWJ1dGVWZXJ0aWNhbCIsICJlZGl0b3JIZWFkaW5nIiwgImVkaXRvckl0YWxpYyIsICJlZGl0b3JJdGVtQWxpZ25MZWZ0IiwgImVkaXRvckl0ZW1BbGlnbkJvdHRvbSIsICJlZGl0b3JJdGVtQWxpZ25DZW50ZXIiLCAiZWRpdG9ySXRlbUFsaWduTWlkZGxlIiwgImVkaXRvckl0ZW1BbGlnblJpZ2h0IiwgImVkaXRvckl0ZW1BbGlnblRvcCIsICJlZGl0b3JMaW5rIiwgImVkaXRvck9yZGVyZWRMaXN0IiwgImVkaXRvclBvc2l0aW9uQm90dG9tTGVmdCIsICJlZGl0b3JQb3NpdGlvbkJvdHRvbVJpZ2h0IiwgImVkaXRvclBvc2l0aW9uVG9wTGVmdCIsICJlZGl0b3JQb3NpdGlvblRvcFJpZ2h0IiwgImVkaXRvclJlZG8iLCAiZWRpdG9yU3RyaWtlIiwgImVkaXRvclRhYmxlIiwgImVkaXRvclVuZGVybGluZSIsICJlZGl0b3JVbmRvIiwgImVkaXRvclVub3JkZXJlZExpc3QiLCAiZW1haWwiLCAiZW1wdHkiLCAiZW1zQXBwIiwgImVxbCIsICJlcmFzZXIiLCAiZXhpdCIsICJleHBhbmQiLCAiZXhwYW5kTWluaSIsICJleHBvcnRBY3Rpb24iLCAiZXllIiwgImV5ZUNsb3NlZCIsICJmYWNlSGFwcHkiLCAiZmFjZU5ldXRyYWwiLCAiZmFjZVNhZCIsICJmaWxlYmVhdEFwcCIsICJmaWx0ZXIiLCAiZmxhZyIsICJmb2xkIiwgImZvbGRlckNoZWNrIiwgImZvbGRlckNsb3NlZCIsICJmb2xkZXJFeGNsYW1hdGlvbiIsICJmb2xkZXJPcGVuIiwgImZyYW1lTmV4dCIsICJmcmFtZVByZXZpb3VzIiwgImZ1bGxTY3JlZW4iLCAiZnVsbFNjcmVlbkV4aXQiLCAiZnVuY3Rpb24iLCAiZ2VhciIsICJnaXNBcHAiLCAiZ2xhc3NlcyIsICJnbG9iZSIsICJncmFiIiwgImdyYWJIb3Jpem9udGFsIiwgImdyYXBoQXBwIiwgImdyaWQiLCAiZ3Jva0FwcCIsICJoZWFydCIsICJoZWFydGJlYXRBcHAiLCAiaGVhdG1hcCIsICJoZWxwIiwgImhvbWUiLCAiaUluQ2lyY2xlIiwgImltYWdlIiwgImltcG9ydEFjdGlvbiIsICJpbmRleENsb3NlIiwgImluZGV4RWRpdCIsICJpbmRleEZsdXNoIiwgImluZGV4TWFuYWdlbWVudEFwcCIsICJpbmRleE1hcHBpbmciLCAiaW5kZXhPcGVuIiwgImluZGV4UGF0dGVybkFwcCIsICJpbmRleFJvbGx1cEFwcCIsICJpbmRleFJ1bnRpbWUiLCAiaW5kZXhTZXR0aW5ncyIsICJpbnB1dE91dHB1dCIsICJpbnNwZWN0IiwgImludmVydCIsICJpcCIsICJrZXlib2FyZFNob3J0Y3V0IiwgImtxbEZpZWxkIiwgImtxbEZ1bmN0aW9uIiwgImtxbE9wZXJhbmQiLCAia3FsU2VsZWN0b3IiLCAia3FsVmFsdWUiLCAibGF5ZXJzIiwgImxlbnNBcHAiLCAibGluayIsICJsaXN0IiwgImxpc3RBZGQiLCAibG9jayIsICJsb2NrT3BlbiIsICJsb2dzQXBwIiwgImxvZ29BZXJvc3Bpa2UiLCAibG9nb0FwYWNoZSIsICJsb2dvQXBwU2VhcmNoIiwgImxvZ29BV1MiLCAibG9nb0FXU01vbm8iLCAibG9nb0F6dXJlIiwgImxvZ29BenVyZU1vbm8iLCAibG9nb0JlYXRzIiwgImxvZ29CdXNpbmVzc0FuYWx5dGljcyIsICJsb2dvQ2VwaCIsICJsb2dvQ2xvdWQiLCAibG9nb0Nsb3VkRW50ZXJwcmlzZSIsICJsb2dvQ29kZSIsICJsb2dvQ29kZXNhbmRib3giLCAibG9nb0NvdWNoYmFzZSIsICJsb2dvRG9ja2VyIiwgImxvZ29Ecm9wd2l6YXJkIiwgImxvZ29FbGFzdGljIiwgImxvZ29FbGFzdGljc2VhcmNoIiwgImxvZ29FbGFzdGljU3RhY2siLCAibG9nb0VudGVycHJpc2VTZWFyY2giLCAibG9nb0V0Y2QiLCAibG9nb0dDUCIsICJsb2dvR0NQTW9ubyIsICJsb2dvR2l0aHViIiwgImxvZ29HbWFpbCIsICJsb2dvR29sYW5nIiwgImxvZ29Hb29nbGVHIiwgImxvZ29IQXByb3h5IiwgImxvZ29JQk0iLCAibG9nb0lCTU1vbm8iLCAibG9nb0thZmthIiwgImxvZ29LaWJhbmEiLCAibG9nb0t1YmVybmV0ZXMiLCAibG9nb0xvZ2dpbmciLCAibG9nb0xvZ3N0YXNoIiwgImxvZ29NYXBzIiwgImxvZ29NZW1jYWNoZWQiLCAibG9nb01ldHJpY3MiLCAibG9nb01vbmdvZGIiLCAibG9nb015U1FMIiwgImxvZ29OZ2lueCIsICJsb2dvT2JzZXJ2YWJpbGl0eSIsICJsb2dvT3NxdWVyeSIsICJsb2dvUGhwIiwgImxvZ29Qb3N0Z3JlcyIsICJsb2dvUHJvbWV0aGV1cyIsICJsb2dvUmFiYml0bXEiLCAibG9nb1JlZGlzIiwgImxvZ29TZWN1cml0eSIsICJsb2dvU2l0ZVNlYXJjaCIsICJsb2dvU2tldGNoIiwgImxvZ29TbGFjayIsICJsb2dvVXB0aW1lIiwgImxvZ29XZWJob29rIiwgImxvZ29XaW5kb3dzIiwgImxvZ29Xb3JrcGxhY2VTZWFyY2giLCAibG9nc3Rhc2hGaWx0ZXIiLCAibG9nc3Rhc2hJZiIsICJsb2dzdGFzaElucHV0IiwgImxvZ3N0YXNoT3V0cHV0IiwgImxvZ3N0YXNoUXVldWUiLCAibWFjaGluZUxlYXJuaW5nQXBwIiwgIm1hZ25ldCIsICJtYWduaWZ5V2l0aE1pbnVzIiwgIm1hZ25pZnlXaXRoUGx1cyIsICJtYW5hZ2VtZW50QXBwIiwgIm1hcE1hcmtlciIsICJtZW1vcnkiLCAibWVudSIsICJtZW51RG93biIsICJtZW51TGVmdCIsICJtZW51UmlnaHQiLCAibWVudVVwIiwgIm1lcmdlIiwgIm1ldHJpY2JlYXRBcHAiLCAibWV0cmljc0FwcCIsICJtaW5pbWl6ZSIsICJtaW51cyIsICJtaW51c0luQ2lyY2xlIiwgIm1pbnVzSW5DaXJjbGVGaWxsZWQiLCAibW9iaWxlIiwgIm1vbml0b3JpbmdBcHAiLCAibW9vbiIsICJuZXN0ZWQiLCAibm9kZSIsICJub3RlYm9va0FwcCIsICJudW1iZXIiLCAib2ZmbGluZSIsICJvbmxpbmUiLCAib3V0bGllckRldGVjdGlvbkpvYiIsICJwYWNrYWdlIiwgInBhY2tldGJlYXRBcHAiLCAicGFnZVNlbGVjdCIsICJwYWdlc1NlbGVjdCIsICJwYXJ0aWFsIiwgInBhcGVyQ2xpcCIsICJwYXVzZSIsICJwZW5jaWwiLCAicGVyY2VudCIsICJwaW4iLCAicGluRmlsbGVkIiwgInBpcGVsaW5lQXBwIiwgInBsYXkiLCAicGxheUZpbGxlZCIsICJwbHVzIiwgInBsdXNJbkNpcmNsZSIsICJwbHVzSW5DaXJjbGVGaWxsZWQiLCAicG9wb3V0IiwgInB1c2giLCAicXVlc3Rpb25JbkNpcmNsZSIsICJxdW90ZSIsICJyZWNlbnRseVZpZXdlZEFwcCIsICJyZWZyZXNoIiwgInJlZ3Jlc3Npb25Kb2IiLCAicmVwb3J0ZXIiLCAicmVwb3J0aW5nQXBwIiwgInJldHVybktleSIsICJzYXZlIiwgInNhdmVkT2JqZWN0c0FwcCIsICJzY2FsZSIsICJzZWFyY2giLCAic2VhcmNoUHJvZmlsZXJBcHAiLCAic2VjdXJpdHlBbmFseXRpY3NBcHAiLCAic2VjdXJpdHlBcHAiLCAic2VjdXJpdHlTaWduYWwiLCAic2VjdXJpdHlTaWduYWxEZXRlY3RlZCIsICJzZWN1cml0eVNpZ25hbFJlc29sdmVkIiwgInNoYXJkIiwgInNoYXJlIiwgInNub3dmbGFrZSIsICJzb3J0YWJsZSIsICJzb3J0RG93biIsICJzb3J0TGVmdCIsICJzb3J0UmlnaHQiLCAic29ydFVwIiwgInNwYWNlc0FwcCIsICJzcWxBcHAiLCAic3RhckVtcHR5IiwgInN0YXJFbXB0eVNwYWNlIiwgInN0YXJGaWxsZWQiLCAic3RhckZpbGxlZFNwYWNlIiwgInN0YXJNaW51c0VtcHR5IiwgInN0YXJNaW51c0ZpbGxlZCIsICJzdGFyUGx1c0VtcHR5IiwgInN0YXJQbHVzRmlsbGVkIiwgInN0YXRzIiwgInN0b3AiLCAic3RvcEZpbGxlZCIsICJzdG9wU2xhc2giLCAic3RvcmFnZSIsICJzdHJpbmciLCAic3VibW9kdWxlIiwgInN3YXRjaElucHV0IiwgInN5bWxpbmsiLCAidGFibGVPZkNvbnRlbnRzIiwgInRhYmxlRGVuc2l0eUV4cGFuZGVkIiwgInRhYmxlRGVuc2l0eUNvbXBhY3QiLCAidGFibGVEZW5zaXR5Tm9ybWFsIiwgInRhZyIsICJ0ZWFyIiwgInRlbXBlcmF0dXJlIiwgInRpbWVsaW5lIiwgInRpbWVsaW9uQXBwIiwgInRpbWVzbGlkZXIiLCAidHJhaW5pbmciLCAidHJhc2giLCAidXBncmFkZUFzc2lzdGFudEFwcCIsICJ1cHRpbWVBcHAiLCAidW5mb2xkIiwgInVubGluayIsICJ1c2VyIiwgInVzZXJzIiwgInVzZXJzUm9sZXNBcHAiLCAidmVjdG9yIiwgInZpZGVvUGxheWVyIiwgInZpc0FyZWEiLCAidmlzQXJlYVN0YWNrZWQiLCAidmlzQmFySG9yaXpvbnRhbCIsICJ2aXNCYXJIb3Jpem9udGFsU3RhY2tlZCIsICJ2aXNCYXJWZXJ0aWNhbCIsICJ2aXNCYXJWZXJ0aWNhbFN0YWNrZWQiLCAidmlzR2F1Z2UiLCAidmlzR29hbCIsICJ2aXNMaW5lIiwgInZpc01hcENvb3JkaW5hdGUiLCAidmlzTWFwUmVnaW9uIiwgInZpc01ldHJpYyIsICJ2aXNQaWUiLCAidmlzVGFibGUiLCAidmlzVGFnQ2xvdWQiLCAidmlzVGV4dCIsICJ2aXNUaW1lbGlvbiIsICJ2aXN1YWxpemVBcHAiLCAidmlzVmVnYSIsICJ2aXNWaXN1YWxCdWlsZGVyIiwgIndhdGNoZXNBcHAiLCAid29yZFdyYXAiLCAid29yZFdyYXBEaXNhYmxlZCIsICJ3b3JrcGxhY2VTZWFyY2hBcHAiLCAid3JlbmNoIiwgInRva2VuQ2xhc3MiLCAidG9rZW5Qcm9wZXJ0eSIsICJ0b2tlbkVudW0iLCAidG9rZW5WYXJpYWJsZSIsICJ0b2tlbk1ldGhvZCIsICJ0b2tlbkFubm90YXRpb24iLCAidG9rZW5FeGNlcHRpb24iLCAidG9rZW5JbnRlcmZhY2UiLCAidG9rZW5QYXJhbWV0ZXIiLCAidG9rZW5GaWVsZCIsICJ0b2tlbkVsZW1lbnQiLCAidG9rZW5GdW5jdGlvbiIsICJ0b2tlbkJvb2xlYW4iLCAidG9rZW5TdHJpbmciLCAidG9rZW5BcnJheSIsICJ0b2tlbk51bWJlciIsICJ0b2tlbkNvbnN0YW50IiwgInRva2VuT2JqZWN0IiwgInRva2VuRXZlbnQiLCAidG9rZW5LZXkiLCAidG9rZW5OdWxsIiwgInRva2VuU3RydWN0IiwgInRva2VuUGFja2FnZSIsICJ0b2tlbk9wZXJhdG9yIiwgInRva2VuRW51bU1lbWJlciIsICJ0b2tlblJlcG8iLCAidG9rZW5TeW1ib2wiLCAidG9rZW5GaWxlIiwgInRva2VuTW9kdWxlIiwgInRva2VuTmFtZXNwYWNlIiwgInRva2VuRGF0ZSIsICJ0b2tlbklQIiwgInRva2VuTmVzdGVkIiwgInRva2VuQWxpYXMiLCAidG9rZW5TaGFwZSIsICJ0b2tlbkdlbyIsICJ0b2tlblJhbmdlIiwgInRva2VuQmluYXJ5IiwgInRva2VuSm9pbiIsICJ0b2tlblBlcmNvbGF0b3IiLCAidG9rZW5GbGF0dGVuZWQiLCAidG9rZW5SYW5rRmVhdHVyZSIsICJ0b2tlblJhbmtGZWF0dXJlcyIsICJ0b2tlbktleXdvcmQiLCAidG9rZW5Db21wbGV0aW9uU3VnZ2VzdGVyIiwgInRva2VuRGVuc2VWZWN0b3IiLCAidG9rZW5UZXh0IiwgInRva2VuVG9rZW5Db3VudCIsICJ0b2tlblNlYXJjaFR5cGUiLCAidG9rZW5IaXN0b2dyYW0iXSkuaXNSZXF1aXJlZCwgUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLCBQcm9wVHlwZXMuZWxlbWVudFR5cGUuaXNSZXF1aXJlZF0pLAoKICAvKioKICAgICAqIENhbiBvbmx5IGJlIG9uZSBzaWRlIGBsZWZ0YCBvciBgcmlnaHRgCiAgICAgKi8KICBpY29uU2lkZTogUHJvcFR5cGVzLm9uZU9mKFsibGVmdCIsICJyaWdodCJdKSwKICBpc0xvYWRpbmc6IFByb3BUeXBlcy5ib29sLAoKICAvKioKICAgICAqIE9iamVjdCBvZiBwcm9wcyBwYXNzZWQgdG8gdGhlIDxzcGFuLz4gd3JhcHBpbmcgdGhlIGNvbnRlbnQncyB0ZXh0L2NoaWxkcmVuIG9ubHkgKG5vdCBpY29uKQogICAgICovCiAgdGV4dFByb3BzOiBQcm9wVHlwZXMuc2hhcGUoewogICAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLAogICAgImFyaWEtbGFiZWwiOiBQcm9wVHlwZXMuc3RyaW5nLAogICAgImRhdGEtdGVzdC1zdWJqIjogUHJvcFR5cGVzLnN0cmluZywKICAgIHJlZjogUHJvcFR5cGVzLmFueSwKICAgICJkYXRhLXRleHQiOiBQcm9wVHlwZXMuc3RyaW5nCiAgfSksCiAgaWNvblNpemU6IFByb3BUeXBlcy5vbmVPZihbInMiLCAibSJdKSwKICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsCiAgImFyaWEtbGFiZWwiOiBQcm9wVHlwZXMuc3RyaW5nLAogICJkYXRhLXRlc3Qtc3ViaiI6IFByb3BUeXBlcy5zdHJpbmcsCgogIC8qKgogICAgICogRWxlbWVudCB0byBkaXNwbGF5IGJhc2VkIG9uIHNpbmdsZSBvciBtdWx0aQogICAgICovCiAgZWxlbWVudDogUHJvcFR5cGVzLm9uZU9mKFsiYnV0dG9uIiwgImxhYmVsIl0pLmlzUmVxdWlyZWQsCgogIC8qKgogICAgICogU3R5bGVzIHRoZSBzZWxlY3RlZCBidXR0b24gdG8gbG9vayBzZWxlY3RlZCAodXN1YWxseSB3aXRoIGBmaWxsYCkKICAgICAqLwogIGlzU2VsZWN0ZWQ6IFByb3BUeXBlcy5ib29sLAoKICAvKioKICAgICAqIE5hbWUgb2YgdGhlIHdob2xlIGdyb3VwIGZvciAnc2luZ2xlJy4KICAgICAqLwogIG5hbWU6IFByb3BUeXBlcy5zdHJpbmcsCgogIC8qKgogICAgICogSW5oZXJpdCBmcm9tIEV1aUJ1dHRvbkdyb3VwCiAgICAgKi8KICBjb2xvcjogUHJvcFR5cGVzLm9uZU9mKFsicHJpbWFyeSIsICJhY2NlbnQiLCAic2Vjb25kYXJ5IiwgInN1Y2Nlc3MiLCAid2FybmluZyIsICJkYW5nZXIiLCAiZ2hvc3QiLCAidGV4dCJdKS5pc1JlcXVpcmVkLAoKICAvKioKICAgICAqIEluaGVyaXQgZnJvbSBFdWlCdXR0b25Hcm91cAogICAgICovCiAgc2l6ZTogUHJvcFR5cGVzLm9uZU9mKFsicyIsICJtIiwgImNvbXByZXNzZWQiXSkuaXNSZXF1aXJlZCwKCiAgLyoqCiAgICAgKiBJbmhlcml0IGZyb20gRXVpQnV0dG9uR3JvdXAKICAgICAqLwogIGlzSWNvbk9ubHk6IFByb3BUeXBlcy5ib29sLmlzUmVxdWlyZWQsCgogIC8qKgogICAgICogSW5oZXJpdCBmcm9tIEV1aUJ1dHRvbkdyb3VwCiAgICAgKi8KICBvbkNoYW5nZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZAp9OwoKdHJ5IHsKICBFdWlCdXR0b25Hcm91cEJ1dHRvbi5fX2RvY2dlbkluZm8gPSB7CiAgICBkZXNjcmlwdGlvbjogJycsCiAgICBkaXNwbGF5TmFtZTogJ0V1aUJ1dHRvbkdyb3VwQnV0dG9uJywKICAgIG1ldGhvZHM6IFtdLAogICAgcHJvcHM6IHsKICAgICAgaWQ6IHsKICAgICAgICBkZWZhdWx0VmFsdWU6IG51bGwsCiAgICAgICAgZGVzY3JpcHRpb246ICdFYWNoIG9wdGlvbiBtdXN0IGhhdmUgYSB1bmlxdWUgYGlkYCBmb3IgbWFpbnRhaW5pbmcgc2VsZWN0aW9uJywKICAgICAgICBuYW1lOiAnaWQnLAogICAgICAgIHBhcmVudDogewogICAgICAgICAgZmlsZU5hbWU6ICdldWkvc3JjL2NvbXBvbmVudHMvYnV0dG9uL2J1dHRvbl9ncm91cC9idXR0b25fZ3JvdXAudHN4JywKICAgICAgICAgIG5hbWU6ICdFdWlCdXR0b25Hcm91cE9wdGlvblByb3BzJwogICAgICAgIH0sCiAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgdHlwZTogewogICAgICAgICAgbmFtZTogJ3N0cmluZycKICAgICAgICB9CiAgICAgIH0sCiAgICAgIGxhYmVsOiB7CiAgICAgICAgZGVmYXVsdFZhbHVlOiBudWxsLAogICAgICAgIGRlc2NyaXB0aW9uOiAnRWFjaCBvcHRpb24gbXVzdCBoYXZlIGEgYGxhYmVsYCBldmVuIGZvciBpY29ucyB3aGljaCB3aWxsIGJlIGFwcGxpZWQgYXMgdGhlIGBhcmlhLWxhYmVsYCcsCiAgICAgICAgbmFtZTogJ2xhYmVsJywKICAgICAgICBwYXJlbnQ6IHsKICAgICAgICAgIGZpbGVOYW1lOiAnZXVpL3NyYy9jb21wb25lbnRzL2J1dHRvbi9idXR0b25fZ3JvdXAvYnV0dG9uX2dyb3VwLnRzeCcsCiAgICAgICAgICBuYW1lOiAnRXVpQnV0dG9uR3JvdXBPcHRpb25Qcm9wcycKICAgICAgICB9LAogICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgIHR5cGU6IHsKICAgICAgICAgIG5hbWU6ICdSZWFjdE5vZGUnCiAgICAgICAgfQogICAgICB9LAogICAgICBpc0Rpc2FibGVkOiB7CiAgICAgICAgZGVmYXVsdFZhbHVlOiBudWxsLAogICAgICAgIGRlc2NyaXB0aW9uOiAnJywKICAgICAgICBuYW1lOiAnaXNEaXNhYmxlZCcsCiAgICAgICAgcGFyZW50OiB7CiAgICAgICAgICBmaWxlTmFtZTogJ2V1aS9zcmMvY29tcG9uZW50cy9idXR0b24vYnV0dG9uX2dyb3VwL2J1dHRvbl9ncm91cC50c3gnLAogICAgICAgICAgbmFtZTogJ0V1aUJ1dHRvbkdyb3VwT3B0aW9uUHJvcHMnCiAgICAgICAgfSwKICAgICAgICByZXF1aXJlZDogZmFsc2UsCiAgICAgICAgdHlwZTogewogICAgICAgICAgbmFtZTogJ2Jvb2xlYW4nCiAgICAgICAgfQogICAgICB9LAogICAgICB2YWx1ZTogewogICAgICAgIGRlZmF1bHRWYWx1ZTogbnVsbCwKICAgICAgICBkZXNjcmlwdGlvbjogJ1RoZSB2YWx1ZSBvZiB0aGUgcmFkaW8gaW5wdXQuXG4nICsgIlRoZSB2YWx1ZSBvZiB0aGUgcmFkaW8gaW5wdXQgZm9yICdzaW5nbGUnLiIsCiAgICAgICAgbmFtZTogJ3ZhbHVlJywKICAgICAgICBwYXJlbnQ6IHsKICAgICAgICAgIGZpbGVOYW1lOiAnZXVpL3NyYy9jb21wb25lbnRzL2J1dHRvbi9idXR0b25fZ3JvdXAvYnV0dG9uX2dyb3VwLnRzeCcsCiAgICAgICAgICBuYW1lOiAnRXVpQnV0dG9uR3JvdXBPcHRpb25Qcm9wcycKICAgICAgICB9LAogICAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgICB0eXBlOiB7CiAgICAgICAgICBuYW1lOiAnYW55JwogICAgICAgIH0KICAgICAgfSwKICAgICAgdHlwZTogewogICAgICAgIGRlZmF1bHRWYWx1ZTogewogICAgICAgICAgdmFsdWU6ICdidXR0b24nCiAgICAgICAgfSwKICAgICAgICBkZXNjcmlwdGlvbjogJ1RoZSB0eXBlIG9mIHRoZSB1bmRlcmx5aW5nIEhUTUwgYnV0dG9uJywKICAgICAgICBuYW1lOiAndHlwZScsCiAgICAgICAgcGFyZW50OiB7CiAgICAgICAgICBmaWxlTmFtZTogJ2V1aS9zcmMvY29tcG9uZW50cy9idXR0b24vYnV0dG9uX2dyb3VwL2J1dHRvbl9ncm91cC50c3gnLAogICAgICAgICAgbmFtZTogJ0V1aUJ1dHRvbkdyb3VwT3B0aW9uUHJvcHMnCiAgICAgICAgfSwKICAgICAgICByZXF1aXJlZDogZmFsc2UsCiAgICAgICAgdHlwZTogewogICAgICAgICAgbmFtZTogJ2VudW0nLAogICAgICAgICAgcmF3OiAnImJ1dHRvbiIgfCAic3VibWl0IiB8ICJyZXNldCInLAogICAgICAgICAgdmFsdWU6IFt7CiAgICAgICAgICAgIHZhbHVlOiAnImJ1dHRvbiInCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIHZhbHVlOiAnInN1Ym1pdCInCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIHZhbHVlOiAnInJlc2V0IicKICAgICAgICAgIH1dCiAgICAgICAgfQogICAgICB9LAogICAgICBpY29uVHlwZTogewogICAgICAgIGRlZmF1bHRWYWx1ZTogbnVsbCwKICAgICAgICBkZXNjcmlwdGlvbjogJ0FueSBgdHlwZWAgYWNjZXB0ZWQgYnkgRXVpSWNvbicsCiAgICAgICAgbmFtZTogJ2ljb25UeXBlJywKICAgICAgICBwYXJlbnQ6IHsKICAgICAgICAgIGZpbGVOYW1lOiAnZXVpL3NyYy9jb21wb25lbnRzL2J1dHRvbi9idXR0b25fY29udGVudC50c3gnLAogICAgICAgICAgbmFtZTogJ0V1aUJ1dHRvbkNvbnRlbnRQcm9wcycKICAgICAgICB9LAogICAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgICB0eXBlOiB7CiAgICAgICAgICBuYW1lOiAnSWNvblR5cGUnCiAgICAgICAgfQogICAgICB9LAogICAgICBpY29uU2lkZTogewogICAgICAgIGRlZmF1bHRWYWx1ZTogbnVsbCwKICAgICAgICBkZXNjcmlwdGlvbjogJ0NhbiBvbmx5IGJlIG9uZSBzaWRlIGBsZWZ0YCBvciBgcmlnaHRgJywKICAgICAgICBuYW1lOiAnaWNvblNpZGUnLAogICAgICAgIHBhcmVudDogewogICAgICAgICAgZmlsZU5hbWU6ICdldWkvc3JjL2NvbXBvbmVudHMvYnV0dG9uL2J1dHRvbl9jb250ZW50LnRzeCcsCiAgICAgICAgICBuYW1lOiAnRXVpQnV0dG9uQ29udGVudFByb3BzJwogICAgICAgIH0sCiAgICAgICAgcmVxdWlyZWQ6IGZhbHNlLAogICAgICAgIHR5cGU6IHsKICAgICAgICAgIG5hbWU6ICdlbnVtJywKICAgICAgICAgIHJhdzogJ1RvYXN0U2lkZScsCiAgICAgICAgICB2YWx1ZTogW3sKICAgICAgICAgICAgdmFsdWU6ICcibGVmdCInCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIHZhbHVlOiAnInJpZ2h0IicKICAgICAgICAgIH1dCiAgICAgICAgfQogICAgICB9LAogICAgICBpc0xvYWRpbmc6IHsKICAgICAgICBkZWZhdWx0VmFsdWU6IG51bGwsCiAgICAgICAgZGVzY3JpcHRpb246ICcnLAogICAgICAgIG5hbWU6ICdpc0xvYWRpbmcnLAogICAgICAgIHBhcmVudDogewogICAgICAgICAgZmlsZU5hbWU6ICdldWkvc3JjL2NvbXBvbmVudHMvYnV0dG9uL2J1dHRvbl9jb250ZW50LnRzeCcsCiAgICAgICAgICBuYW1lOiAnRXVpQnV0dG9uQ29udGVudFByb3BzJwogICAgICAgIH0sCiAgICAgICAgcmVxdWlyZWQ6IGZhbHNlLAogICAgICAgIHR5cGU6IHsKICAgICAgICAgIG5hbWU6ICdib29sZWFuJwogICAgICAgIH0KICAgICAgfSwKICAgICAgdGV4dFByb3BzOiB7CiAgICAgICAgZGVmYXVsdFZhbHVlOiBudWxsLAogICAgICAgIGRlc2NyaXB0aW9uOiAiT2JqZWN0IG9mIHByb3BzIHBhc3NlZCB0byB0aGUgPHNwYW4vPiB3cmFwcGluZyB0aGUgY29udGVudCdzIHRleHQvY2hpbGRyZW4gb25seSAobm90IGljb24pIiwKICAgICAgICBuYW1lOiAndGV4dFByb3BzJywKICAgICAgICBwYXJlbnQ6IHsKICAgICAgICAgIGZpbGVOYW1lOiAnZXVpL3NyYy9jb21wb25lbnRzL2J1dHRvbi9idXR0b25fY29udGVudC50c3gnLAogICAgICAgICAgbmFtZTogJ0V1aUJ1dHRvbkNvbnRlbnRQcm9wcycKICAgICAgICB9LAogICAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgICB0eXBlOiB7CiAgICAgICAgICBuYW1lOiAiSFRNTEF0dHJpYnV0ZXM8SFRNTFNwYW5FbGVtZW50PiAmIENvbW1vblByb3BzICYgeyByZWY/OiBSZWY8SFRNTFNwYW5FbGVtZW50PjsgJ2RhdGEtdGV4dCc/OiBzdHJpbmc7IH0iCiAgICAgICAgfQogICAgICB9LAogICAgICBpY29uU2l6ZTogewogICAgICAgIGRlZmF1bHRWYWx1ZTogbnVsbCwKICAgICAgICBkZXNjcmlwdGlvbjogJycsCiAgICAgICAgbmFtZTogJ2ljb25TaXplJywKICAgICAgICBwYXJlbnQ6IHsKICAgICAgICAgIGZpbGVOYW1lOiAnZXVpL3NyYy9jb21wb25lbnRzL2J1dHRvbi9idXR0b25fY29udGVudC50c3gnLAogICAgICAgICAgbmFtZTogJ0V1aUJ1dHRvbkNvbnRlbnRQcm9wcycKICAgICAgICB9LAogICAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgICB0eXBlOiB7CiAgICAgICAgICBuYW1lOiAnZW51bScsCiAgICAgICAgICByYXc6ICcicyIgfCAibSInLAogICAgICAgICAgdmFsdWU6IFt7CiAgICAgICAgICAgIHZhbHVlOiAnInMiJwogICAgICAgICAgfSwgewogICAgICAgICAgICB2YWx1ZTogJyJtIicKICAgICAgICAgIH1dCiAgICAgICAgfQogICAgICB9LAogICAgICBjbGFzc05hbWU6IHsKICAgICAgICBkZWZhdWx0VmFsdWU6IG51bGwsCiAgICAgICAgZGVzY3JpcHRpb246ICcnLAogICAgICAgIG5hbWU6ICdjbGFzc05hbWUnLAogICAgICAgIHBhcmVudDogewogICAgICAgICAgZmlsZU5hbWU6ICdldWkvc3JjL2NvbXBvbmVudHMvY29tbW9uLnRzJywKICAgICAgICAgIG5hbWU6ICdDb21tb25Qcm9wcycKICAgICAgICB9LAogICAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgICB0eXBlOiB7CiAgICAgICAgICBuYW1lOiAnc3RyaW5nJwogICAgICAgIH0KICAgICAgfSwKICAgICAgJ2FyaWEtbGFiZWwnOiB7CiAgICAgICAgZGVmYXVsdFZhbHVlOiBudWxsLAogICAgICAgIGRlc2NyaXB0aW9uOiAnJywKICAgICAgICBuYW1lOiAnYXJpYS1sYWJlbCcsCiAgICAgICAgcGFyZW50OiB7CiAgICAgICAgICBmaWxlTmFtZTogJ2V1aS9zcmMvY29tcG9uZW50cy9jb21tb24udHMnLAogICAgICAgICAgbmFtZTogJ0NvbW1vblByb3BzJwogICAgICAgIH0sCiAgICAgICAgcmVxdWlyZWQ6IGZhbHNlLAogICAgICAgIHR5cGU6IHsKICAgICAgICAgIG5hbWU6ICdzdHJpbmcnCiAgICAgICAgfQogICAgICB9LAogICAgICAnZGF0YS10ZXN0LXN1YmonOiB7CiAgICAgICAgZGVmYXVsdFZhbHVlOiBudWxsLAogICAgICAgIGRlc2NyaXB0aW9uOiAnJywKICAgICAgICBuYW1lOiAnZGF0YS10ZXN0LXN1YmonLAogICAgICAgIHBhcmVudDogewogICAgICAgICAgZmlsZU5hbWU6ICdldWkvc3JjL2NvbXBvbmVudHMvY29tbW9uLnRzJywKICAgICAgICAgIG5hbWU6ICdDb21tb25Qcm9wcycKICAgICAgICB9LAogICAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgICB0eXBlOiB7CiAgICAgICAgICBuYW1lOiAnc3RyaW5nJwogICAgICAgIH0KICAgICAgfSwKICAgICAgZWxlbWVudDogewogICAgICAgIGRlZmF1bHRWYWx1ZTogewogICAgICAgICAgdmFsdWU6ICdidXR0b24nCiAgICAgICAgfSwKICAgICAgICBkZXNjcmlwdGlvbjogJ0VsZW1lbnQgdG8gZGlzcGxheSBiYXNlZCBvbiBzaW5nbGUgb3IgbXVsdGknLAogICAgICAgIG5hbWU6ICdlbGVtZW50JywKICAgICAgICBwYXJlbnQ6IHVuZGVmaW5lZCwKICAgICAgICByZXF1aXJlZDogZmFsc2UsCiAgICAgICAgdHlwZTogewogICAgICAgICAgbmFtZTogJ2VudW0nLAogICAgICAgICAgcmF3OiAnImJ1dHRvbiIgfCAibGFiZWwiJywKICAgICAgICAgIHZhbHVlOiBbewogICAgICAgICAgICB2YWx1ZTogJyJidXR0b24iJwogICAgICAgICAgfSwgewogICAgICAgICAgICB2YWx1ZTogJyJsYWJlbCInCiAgICAgICAgICB9XQogICAgICAgIH0KICAgICAgfSwKICAgICAgaXNTZWxlY3RlZDogewogICAgICAgIGRlZmF1bHRWYWx1ZTogewogICAgICAgICAgdmFsdWU6ICdmYWxzZScKICAgICAgICB9LAogICAgICAgIGRlc2NyaXB0aW9uOiAnU3R5bGVzIHRoZSBzZWxlY3RlZCBidXR0b24gdG8gbG9vayBzZWxlY3RlZCAodXN1YWxseSB3aXRoIGBmaWxsYCknLAogICAgICAgIG5hbWU6ICdpc1NlbGVjdGVkJywKICAgICAgICBwYXJlbnQ6IHVuZGVmaW5lZCwKICAgICAgICByZXF1aXJlZDogZmFsc2UsCiAgICAgICAgdHlwZTogewogICAgICAgICAgbmFtZTogJ2Jvb2xlYW4nCiAgICAgICAgfQogICAgICB9LAogICAgICBuYW1lOiB7CiAgICAgICAgZGVmYXVsdFZhbHVlOiBudWxsLAogICAgICAgIGRlc2NyaXB0aW9uOiAiTmFtZSBvZiB0aGUgd2hvbGUgZ3JvdXAgZm9yICdzaW5nbGUnLiIsCiAgICAgICAgbmFtZTogJ25hbWUnLAogICAgICAgIHBhcmVudDogdW5kZWZpbmVkLAogICAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgICB0eXBlOiB7CiAgICAgICAgICBuYW1lOiAnc3RyaW5nJwogICAgICAgIH0KICAgICAgfSwKICAgICAgY29sb3I6IHsKICAgICAgICBkZWZhdWx0VmFsdWU6IG51bGwsCiAgICAgICAgZGVzY3JpcHRpb246ICdJbmhlcml0IGZyb20gRXVpQnV0dG9uR3JvdXAnLAogICAgICAgIG5hbWU6ICdjb2xvcicsCiAgICAgICAgcGFyZW50OiB1bmRlZmluZWQsCiAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgdHlwZTogewogICAgICAgICAgbmFtZTogJ2VudW0nLAogICAgICAgICAgcmF3OiAnQnV0dG9uQ29sb3InLAogICAgICAgICAgdmFsdWU6IFt7CiAgICAgICAgICAgIHZhbHVlOiAnInRleHQiJwogICAgICAgICAgfSwgewogICAgICAgICAgICB2YWx1ZTogJyJhY2NlbnQiJwogICAgICAgICAgfSwgewogICAgICAgICAgICB2YWx1ZTogJyJwcmltYXJ5IicKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgdmFsdWU6ICcic3VjY2VzcyInCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIHZhbHVlOiAnIndhcm5pbmciJwogICAgICAgICAgfSwgewogICAgICAgICAgICB2YWx1ZTogJyJkYW5nZXIiJwogICAgICAgICAgfSwgewogICAgICAgICAgICB2YWx1ZTogJyJzZWNvbmRhcnkiJwogICAgICAgICAgfSwgewogICAgICAgICAgICB2YWx1ZTogJyJnaG9zdCInCiAgICAgICAgICB9XQogICAgICAgIH0KICAgICAgfSwKICAgICAgc2l6ZTogewogICAgICAgIGRlZmF1bHRWYWx1ZTogbnVsbCwKICAgICAgICBkZXNjcmlwdGlvbjogJ0luaGVyaXQgZnJvbSBFdWlCdXR0b25Hcm91cCcsCiAgICAgICAgbmFtZTogJ3NpemUnLAogICAgICAgIHBhcmVudDogdW5kZWZpbmVkLAogICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgIHR5cGU6IHsKICAgICAgICAgIG5hbWU6ICdlbnVtJywKICAgICAgICAgIHJhdzogJyJzIiB8ICJtIiB8ICJjb21wcmVzc2VkIicsCiAgICAgICAgICB2YWx1ZTogW3sKICAgICAgICAgICAgdmFsdWU6ICcicyInCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIHZhbHVlOiAnIm0iJwogICAgICAgICAgfSwgewogICAgICAgICAgICB2YWx1ZTogJyJjb21wcmVzc2VkIicKICAgICAgICAgIH1dCiAgICAgICAgfQogICAgICB9LAogICAgICBpc0ljb25Pbmx5OiB7CiAgICAgICAgZGVmYXVsdFZhbHVlOiBudWxsLAogICAgICAgIGRlc2NyaXB0aW9uOiAnSW5oZXJpdCBmcm9tIEV1aUJ1dHRvbkdyb3VwJywKICAgICAgICBuYW1lOiAnaXNJY29uT25seScsCiAgICAgICAgcGFyZW50OiB1bmRlZmluZWQsCiAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgdHlwZTogewogICAgICAgICAgbmFtZTogJ2Jvb2xlYW4nCiAgICAgICAgfQogICAgICB9LAogICAgICBvbkNoYW5nZTogewogICAgICAgIGRlZmF1bHRWYWx1ZTogbnVsbCwKICAgICAgICBkZXNjcmlwdGlvbjogJ0luaGVyaXQgZnJvbSBFdWlCdXR0b25Hcm91cCcsCiAgICAgICAgbmFtZTogJ29uQ2hhbmdlJywKICAgICAgICBwYXJlbnQ6IHVuZGVmaW5lZCwKICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICB0eXBlOiB7CiAgICAgICAgICBuYW1lOiAnKChpZDogc3RyaW5nLCB2YWx1ZT86IGFueSkgPT4gdm9pZCkgfCAoKGlkOiBzdHJpbmcpID0+IHZvaWQpJwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIGV4dGVuZGVkSW50ZXJmYWNlczogWydFdWlCdXR0b25Hcm91cE9wdGlvblByb3BzJywgJ0V1aUJ1dHRvbkNvbnRlbnRQcm9wcycsICdDb21tb25Qcm9wcyddCiAgfTsKfSBjYXRjaCAoZSkge30="},{"version":3,"sources":["D:/work/eui/src/components/button/button_group/button_group_button.tsx"],"names":["classNames","React","useRef","EuiButtonDisplay","useInnerText","htmlIdGenerator","EuiButtonGroupButton","className","id","isDisabled","isIconOnly","isSelected","label","name","onChange","size","value","element","type","rest","el","newId","current","elementProps","singleInput","htmlFor","onClick","buttonClasses","buttonTextRef","innerText","ref","title"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport classNames from 'classnames';\nimport PropTypes from \"prop-types\";\nimport React, { useRef } from 'react';\nimport { EuiButtonDisplay } from '../button';\nimport { useInnerText } from '../../inner_text';\nimport { htmlIdGenerator } from '../../../services';\nexport var EuiButtonGroupButton = ({\n  className,\n  id,\n  isDisabled,\n  isIconOnly,\n  isSelected = false,\n  label,\n  name,\n  onChange,\n  size,\n  value,\n  element = 'button',\n  type = 'button',\n  ...rest\n}) => {\n  // Force element to be a button if disabled\n  const el = isDisabled ? 'button' : element;\n  const newId = useRef(htmlIdGenerator()()).current;\n  let elementProps = {};\n  let singleInput;\n\n  if (el === 'label') {\n    elementProps = { ...elementProps,\n      htmlFor: newId,\n      onClick: () => onChange(id, value)\n    };\n    singleInput = <input id={newId} className=\"euiScreenReaderOnly\" name={name} checked={isSelected} disabled={isDisabled} value={value} type=\"radio\" onChange={() => onChange(id, value)} data-test-subj={id} />;\n  } else {\n    elementProps = { ...elementProps,\n      id: newId,\n      'data-test-subj': id,\n      isSelected,\n      type,\n      onClick: () => onChange(id)\n    };\n  }\n\n  const buttonClasses = classNames({\n    'euiButtonGroupButton-isSelected': isSelected,\n    'euiButtonGroupButton-isIconOnly': isIconOnly\n  }, className);\n  /**\n   * Because the selected buttons also increase their text weight to 'bold',\n   * we don't want the whole button size to shift when selected, so we determine\n   * the base width of the button via the `euiTextShift()` method in SASS.\n   */\n\n  const [buttonTextRef, innerText] = useInnerText();\n  return <EuiButtonDisplay baseClassName=\"euiButtonGroupButton\" className={buttonClasses} element={el} fill={size !== 'compressed' && isSelected} isDisabled={isDisabled} size={size === 'compressed' ? 's' : size} textProps={{\n    className: isIconOnly ? 'euiScreenReaderOnly' : 'euiButtonGroupButton__textShift',\n    ref: buttonTextRef,\n    'data-text': innerText,\n    title: innerText\n  }} {...elementProps} {...rest}>\n      {singleInput}\n      {label}\n    </EuiButtonDisplay>;\n};\nEuiButtonGroupButton.propTypes = {\n  /**\n     * Each option must have a unique `id` for maintaining selection\n     */\n  id: PropTypes.string.isRequired,\n\n  /**\n     * Each option must have a `label` even for icons which will be applied as the `aria-label`\n     */\n  label: PropTypes.node.isRequired,\n  isDisabled: PropTypes.bool,\n\n  /**\n     * The value of the radio input for 'single'.\n     */\n\n  /**\n     * The value of the radio input.\n     */\n  value: PropTypes.oneOfType([PropTypes.any, PropTypes.string]),\n\n  /**\n     * The type of the underlying HTML button\n     */\n  type: PropTypes.oneOf([\"button\", \"submit\", \"reset\"]),\n\n  /**\n     * Any `type` accepted by EuiIcon\n     */\n  iconType: PropTypes.oneOfType([PropTypes.oneOf([\"accessibility\", \"addDataApp\", \"advancedSettingsApp\", \"aggregate\", \"alert\", \"analyzeEvent\", \"annotation\", \"apmApp\", \"apmTrace\", \"apps\", \"appSearchApp\", \"arrowDown\", \"arrowLeft\", \"arrowRight\", \"arrowUp\", \"asterisk\", \"auditbeatApp\", \"beaker\", \"bell\", \"bellSlash\", \"bolt\", \"boxesHorizontal\", \"boxesVertical\", \"branch\", \"broom\", \"brush\", \"bug\", \"bullseye\", \"calendar\", \"canvasApp\", \"codeApp\", \"check\", \"checkInCircleFilled\", \"cheer\", \"classificationJob\", \"clock\", \"cloudDrizzle\", \"cloudStormy\", \"cloudSunny\", \"color\", \"compute\", \"console\", \"consoleApp\", \"continuityAbove\", \"continuityAboveBelow\", \"continuityBelow\", \"continuityWithin\", \"controlsHorizontal\", \"controlsVertical\", \"copy\", \"copyClipboard\", \"createAdvancedJob\", \"createMultiMetricJob\", \"createPopulationJob\", \"createSingleMetricJob\", \"cross\", \"crossClusterReplicationApp\", \"crosshairs\", \"crossInACircleFilled\", \"currency\", \"cut\", \"dashboardApp\", \"database\", \"dataVisualizer\", \"devToolsApp\", \"discoverApp\", \"document\", \"documentation\", \"documentEdit\", \"documents\", \"dot\", \"download\", \"editorAlignCenter\", \"editorAlignLeft\", \"editorAlignRight\", \"editorBold\", \"editorCodeBlock\", \"editorComment\", \"editorDistributeHorizontal\", \"editorDistributeVertical\", \"editorHeading\", \"editorItalic\", \"editorItemAlignLeft\", \"editorItemAlignBottom\", \"editorItemAlignCenter\", \"editorItemAlignMiddle\", \"editorItemAlignRight\", \"editorItemAlignTop\", \"editorLink\", \"editorOrderedList\", \"editorPositionBottomLeft\", \"editorPositionBottomRight\", \"editorPositionTopLeft\", \"editorPositionTopRight\", \"editorRedo\", \"editorStrike\", \"editorTable\", \"editorUnderline\", \"editorUndo\", \"editorUnorderedList\", \"email\", \"empty\", \"emsApp\", \"eql\", \"eraser\", \"exit\", \"expand\", \"expandMini\", \"exportAction\", \"eye\", \"eyeClosed\", \"faceHappy\", \"faceNeutral\", \"faceSad\", \"filebeatApp\", \"filter\", \"flag\", \"fold\", \"folderCheck\", \"folderClosed\", \"folderExclamation\", \"folderOpen\", \"frameNext\", \"framePrevious\", \"fullScreen\", \"fullScreenExit\", \"function\", \"gear\", \"gisApp\", \"glasses\", \"globe\", \"grab\", \"grabHorizontal\", \"graphApp\", \"grid\", \"grokApp\", \"heart\", \"heartbeatApp\", \"heatmap\", \"help\", \"home\", \"iInCircle\", \"image\", \"importAction\", \"indexClose\", \"indexEdit\", \"indexFlush\", \"indexManagementApp\", \"indexMapping\", \"indexOpen\", \"indexPatternApp\", \"indexRollupApp\", \"indexRuntime\", \"indexSettings\", \"inputOutput\", \"inspect\", \"invert\", \"ip\", \"keyboardShortcut\", \"kqlField\", \"kqlFunction\", \"kqlOperand\", \"kqlSelector\", \"kqlValue\", \"layers\", \"lensApp\", \"link\", \"list\", \"listAdd\", \"lock\", \"lockOpen\", \"logsApp\", \"logoAerospike\", \"logoApache\", \"logoAppSearch\", \"logoAWS\", \"logoAWSMono\", \"logoAzure\", \"logoAzureMono\", \"logoBeats\", \"logoBusinessAnalytics\", \"logoCeph\", \"logoCloud\", \"logoCloudEnterprise\", \"logoCode\", \"logoCodesandbox\", \"logoCouchbase\", \"logoDocker\", \"logoDropwizard\", \"logoElastic\", \"logoElasticsearch\", \"logoElasticStack\", \"logoEnterpriseSearch\", \"logoEtcd\", \"logoGCP\", \"logoGCPMono\", \"logoGithub\", \"logoGmail\", \"logoGolang\", \"logoGoogleG\", \"logoHAproxy\", \"logoIBM\", \"logoIBMMono\", \"logoKafka\", \"logoKibana\", \"logoKubernetes\", \"logoLogging\", \"logoLogstash\", \"logoMaps\", \"logoMemcached\", \"logoMetrics\", \"logoMongodb\", \"logoMySQL\", \"logoNginx\", \"logoObservability\", \"logoOsquery\", \"logoPhp\", \"logoPostgres\", \"logoPrometheus\", \"logoRabbitmq\", \"logoRedis\", \"logoSecurity\", \"logoSiteSearch\", \"logoSketch\", \"logoSlack\", \"logoUptime\", \"logoWebhook\", \"logoWindows\", \"logoWorkplaceSearch\", \"logstashFilter\", \"logstashIf\", \"logstashInput\", \"logstashOutput\", \"logstashQueue\", \"machineLearningApp\", \"magnet\", \"magnifyWithMinus\", \"magnifyWithPlus\", \"managementApp\", \"mapMarker\", \"memory\", \"menu\", \"menuDown\", \"menuLeft\", \"menuRight\", \"menuUp\", \"merge\", \"metricbeatApp\", \"metricsApp\", \"minimize\", \"minus\", \"minusInCircle\", \"minusInCircleFilled\", \"mobile\", \"monitoringApp\", \"moon\", \"nested\", \"node\", \"notebookApp\", \"number\", \"offline\", \"online\", \"outlierDetectionJob\", \"package\", \"packetbeatApp\", \"pageSelect\", \"pagesSelect\", \"partial\", \"paperClip\", \"pause\", \"pencil\", \"percent\", \"pin\", \"pinFilled\", \"pipelineApp\", \"play\", \"playFilled\", \"plus\", \"plusInCircle\", \"plusInCircleFilled\", \"popout\", \"push\", \"questionInCircle\", \"quote\", \"recentlyViewedApp\", \"refresh\", \"regressionJob\", \"reporter\", \"reportingApp\", \"returnKey\", \"save\", \"savedObjectsApp\", \"scale\", \"search\", \"searchProfilerApp\", \"securityAnalyticsApp\", \"securityApp\", \"securitySignal\", \"securitySignalDetected\", \"securitySignalResolved\", \"shard\", \"share\", \"snowflake\", \"sortable\", \"sortDown\", \"sortLeft\", \"sortRight\", \"sortUp\", \"spacesApp\", \"sqlApp\", \"starEmpty\", \"starEmptySpace\", \"starFilled\", \"starFilledSpace\", \"starMinusEmpty\", \"starMinusFilled\", \"starPlusEmpty\", \"starPlusFilled\", \"stats\", \"stop\", \"stopFilled\", \"stopSlash\", \"storage\", \"string\", \"submodule\", \"swatchInput\", \"symlink\", \"tableOfContents\", \"tableDensityExpanded\", \"tableDensityCompact\", \"tableDensityNormal\", \"tag\", \"tear\", \"temperature\", \"timeline\", \"timelionApp\", \"timeslider\", \"training\", \"trash\", \"upgradeAssistantApp\", \"uptimeApp\", \"unfold\", \"unlink\", \"user\", \"users\", \"usersRolesApp\", \"vector\", \"videoPlayer\", \"visArea\", \"visAreaStacked\", \"visBarHorizontal\", \"visBarHorizontalStacked\", \"visBarVertical\", \"visBarVerticalStacked\", \"visGauge\", \"visGoal\", \"visLine\", \"visMapCoordinate\", \"visMapRegion\", \"visMetric\", \"visPie\", \"visTable\", \"visTagCloud\", \"visText\", \"visTimelion\", \"visualizeApp\", \"visVega\", \"visVisualBuilder\", \"watchesApp\", \"wordWrap\", \"wordWrapDisabled\", \"workplaceSearchApp\", \"wrench\", \"tokenClass\", \"tokenProperty\", \"tokenEnum\", \"tokenVariable\", \"tokenMethod\", \"tokenAnnotation\", \"tokenException\", \"tokenInterface\", \"tokenParameter\", \"tokenField\", \"tokenElement\", \"tokenFunction\", \"tokenBoolean\", \"tokenString\", \"tokenArray\", \"tokenNumber\", \"tokenConstant\", \"tokenObject\", \"tokenEvent\", \"tokenKey\", \"tokenNull\", \"tokenStruct\", \"tokenPackage\", \"tokenOperator\", \"tokenEnumMember\", \"tokenRepo\", \"tokenSymbol\", \"tokenFile\", \"tokenModule\", \"tokenNamespace\", \"tokenDate\", \"tokenIP\", \"tokenNested\", \"tokenAlias\", \"tokenShape\", \"tokenGeo\", \"tokenRange\", \"tokenBinary\", \"tokenJoin\", \"tokenPercolator\", \"tokenFlattened\", \"tokenRankFeature\", \"tokenRankFeatures\", \"tokenKeyword\", \"tokenCompletionSuggester\", \"tokenDenseVector\", \"tokenText\", \"tokenTokenCount\", \"tokenSearchType\", \"tokenHistogram\"]).isRequired, PropTypes.string.isRequired, PropTypes.elementType.isRequired]),\n\n  /**\n     * Can only be one side `left` or `right`\n     */\n  iconSide: PropTypes.oneOf([\"left\", \"right\"]),\n  isLoading: PropTypes.bool,\n\n  /**\n     * Object of props passed to the <span/> wrapping the content's text/children only (not icon)\n     */\n  textProps: PropTypes.shape({\n    className: PropTypes.string,\n    \"aria-label\": PropTypes.string,\n    \"data-test-subj\": PropTypes.string,\n    ref: PropTypes.any,\n    \"data-text\": PropTypes.string\n  }),\n  iconSize: PropTypes.oneOf([\"s\", \"m\"]),\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n\n  /**\n     * Element to display based on single or multi\n     */\n  element: PropTypes.oneOf([\"button\", \"label\"]).isRequired,\n\n  /**\n     * Styles the selected button to look selected (usually with `fill`)\n     */\n  isSelected: PropTypes.bool,\n\n  /**\n     * Name of the whole group for 'single'.\n     */\n  name: PropTypes.string,\n\n  /**\n     * Inherit from EuiButtonGroup\n     */\n  color: PropTypes.oneOf([\"primary\", \"accent\", \"secondary\", \"success\", \"warning\", \"danger\", \"ghost\", \"text\"]).isRequired,\n\n  /**\n     * Inherit from EuiButtonGroup\n     */\n  size: PropTypes.oneOf([\"s\", \"m\", \"compressed\"]).isRequired,\n\n  /**\n     * Inherit from EuiButtonGroup\n     */\n  isIconOnly: PropTypes.bool.isRequired,\n\n  /**\n     * Inherit from EuiButtonGroup\n     */\n  onChange: PropTypes.func.isRequired\n};\n\ntry {\n  EuiButtonGroupButton.__docgenInfo = {\n    description: '',\n    displayName: 'EuiButtonGroupButton',\n    methods: [],\n    props: {\n      id: {\n        defaultValue: null,\n        description: 'Each option must have a unique `id` for maintaining selection',\n        name: 'id',\n        parent: {\n          fileName: 'eui/src/components/button/button_group/button_group.tsx',\n          name: 'EuiButtonGroupOptionProps'\n        },\n        required: true,\n        type: {\n          name: 'string'\n        }\n      },\n      label: {\n        defaultValue: null,\n        description: 'Each option must have a `label` even for icons which will be applied as the `aria-label`',\n        name: 'label',\n        parent: {\n          fileName: 'eui/src/components/button/button_group/button_group.tsx',\n          name: 'EuiButtonGroupOptionProps'\n        },\n        required: true,\n        type: {\n          name: 'ReactNode'\n        }\n      },\n      isDisabled: {\n        defaultValue: null,\n        description: '',\n        name: 'isDisabled',\n        parent: {\n          fileName: 'eui/src/components/button/button_group/button_group.tsx',\n          name: 'EuiButtonGroupOptionProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      value: {\n        defaultValue: null,\n        description: 'The value of the radio input.\\n' + \"The value of the radio input for 'single'.\",\n        name: 'value',\n        parent: {\n          fileName: 'eui/src/components/button/button_group/button_group.tsx',\n          name: 'EuiButtonGroupOptionProps'\n        },\n        required: false,\n        type: {\n          name: 'any'\n        }\n      },\n      type: {\n        defaultValue: {\n          value: 'button'\n        },\n        description: 'The type of the underlying HTML button',\n        name: 'type',\n        parent: {\n          fileName: 'eui/src/components/button/button_group/button_group.tsx',\n          name: 'EuiButtonGroupOptionProps'\n        },\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"button\" | \"submit\" | \"reset\"',\n          value: [{\n            value: '\"button\"'\n          }, {\n            value: '\"submit\"'\n          }, {\n            value: '\"reset\"'\n          }]\n        }\n      },\n      iconType: {\n        defaultValue: null,\n        description: 'Any `type` accepted by EuiIcon',\n        name: 'iconType',\n        parent: {\n          fileName: 'eui/src/components/button/button_content.tsx',\n          name: 'EuiButtonContentProps'\n        },\n        required: false,\n        type: {\n          name: 'IconType'\n        }\n      },\n      iconSide: {\n        defaultValue: null,\n        description: 'Can only be one side `left` or `right`',\n        name: 'iconSide',\n        parent: {\n          fileName: 'eui/src/components/button/button_content.tsx',\n          name: 'EuiButtonContentProps'\n        },\n        required: false,\n        type: {\n          name: 'enum',\n          raw: 'ToastSide',\n          value: [{\n            value: '\"left\"'\n          }, {\n            value: '\"right\"'\n          }]\n        }\n      },\n      isLoading: {\n        defaultValue: null,\n        description: '',\n        name: 'isLoading',\n        parent: {\n          fileName: 'eui/src/components/button/button_content.tsx',\n          name: 'EuiButtonContentProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      textProps: {\n        defaultValue: null,\n        description: \"Object of props passed to the <span/> wrapping the content's text/children only (not icon)\",\n        name: 'textProps',\n        parent: {\n          fileName: 'eui/src/components/button/button_content.tsx',\n          name: 'EuiButtonContentProps'\n        },\n        required: false,\n        type: {\n          name: \"HTMLAttributes<HTMLSpanElement> & CommonProps & { ref?: Ref<HTMLSpanElement>; 'data-text'?: string; }\"\n        }\n      },\n      iconSize: {\n        defaultValue: null,\n        description: '',\n        name: 'iconSize',\n        parent: {\n          fileName: 'eui/src/components/button/button_content.tsx',\n          name: 'EuiButtonContentProps'\n        },\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"s\" | \"m\"',\n          value: [{\n            value: '\"s\"'\n          }, {\n            value: '\"m\"'\n          }]\n        }\n      },\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: '',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'data-test-subj': {\n        defaultValue: null,\n        description: '',\n        name: 'data-test-subj',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      element: {\n        defaultValue: {\n          value: 'button'\n        },\n        description: 'Element to display based on single or multi',\n        name: 'element',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"button\" | \"label\"',\n          value: [{\n            value: '\"button\"'\n          }, {\n            value: '\"label\"'\n          }]\n        }\n      },\n      isSelected: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: 'Styles the selected button to look selected (usually with `fill`)',\n        name: 'isSelected',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      name: {\n        defaultValue: null,\n        description: \"Name of the whole group for 'single'.\",\n        name: 'name',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      color: {\n        defaultValue: null,\n        description: 'Inherit from EuiButtonGroup',\n        name: 'color',\n        parent: undefined,\n        required: true,\n        type: {\n          name: 'enum',\n          raw: 'ButtonColor',\n          value: [{\n            value: '\"text\"'\n          }, {\n            value: '\"accent\"'\n          }, {\n            value: '\"primary\"'\n          }, {\n            value: '\"success\"'\n          }, {\n            value: '\"warning\"'\n          }, {\n            value: '\"danger\"'\n          }, {\n            value: '\"secondary\"'\n          }, {\n            value: '\"ghost\"'\n          }]\n        }\n      },\n      size: {\n        defaultValue: null,\n        description: 'Inherit from EuiButtonGroup',\n        name: 'size',\n        parent: undefined,\n        required: true,\n        type: {\n          name: 'enum',\n          raw: '\"s\" | \"m\" | \"compressed\"',\n          value: [{\n            value: '\"s\"'\n          }, {\n            value: '\"m\"'\n          }, {\n            value: '\"compressed\"'\n          }]\n        }\n      },\n      isIconOnly: {\n        defaultValue: null,\n        description: 'Inherit from EuiButtonGroup',\n        name: 'isIconOnly',\n        parent: undefined,\n        required: true,\n        type: {\n          name: 'boolean'\n        }\n      },\n      onChange: {\n        defaultValue: null,\n        description: 'Inherit from EuiButtonGroup',\n        name: 'onChange',\n        parent: undefined,\n        required: true,\n        type: {\n          name: '((id: string, value?: any) => void) | ((id: string) => void)'\n        }\n      }\n    },\n    extendedInterfaces: ['EuiButtonGroupOptionProps', 'EuiButtonContentProps', 'CommonProps']\n  };\n} catch (e) {}"]}]}