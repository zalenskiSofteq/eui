{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src-docs\\src\\views\\mutation_observer\\mutation_observer.js","dependencies":[{"path":"D:\\work\\eui\\src-docs\\src\\views\\mutation_observer\\mutation_observer.js","mtime":1649070093207},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKCmZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShhcnIpIHsgcmV0dXJuIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBfbm9uSXRlcmFibGVTcHJlYWQoKTsgfQoKZnVuY3Rpb24gX25vbkl0ZXJhYmxlU3ByZWFkKCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIGF0dGVtcHQgdG8gc3ByZWFkIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC4iKTsgfQoKZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheShpdGVyKSB7IGlmICh0eXBlb2YgU3ltYm9sICE9PSAidW5kZWZpbmVkIiAmJiBTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGl0ZXIpKSByZXR1cm4gQXJyYXkuZnJvbShpdGVyKTsgfQoKZnVuY3Rpb24gX2FycmF5V2l0aG91dEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkoYXJyKTsgfQoKZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7IHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7IH0KCmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuIik7IH0KCmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHsgaWYgKCFvKSByZXR1cm47IGlmICh0eXBlb2YgbyA9PT0gInN0cmluZyIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7IGlmIChuID09PSAiT2JqZWN0IiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lOyBpZiAobiA9PT0gIk1hcCIgfHwgbiA9PT0gIlNldCIpIHJldHVybiBBcnJheS5mcm9tKG8pOyBpZiAobiA9PT0gIkFyZ3VtZW50cyIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB9CgpmdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikgeyBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH0KCmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHsgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJ1bmRlZmluZWQiIHx8ICEoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChhcnIpKSkgcmV0dXJuOyB2YXIgX2FyciA9IFtdOyB2YXIgX24gPSB0cnVlOyB2YXIgX2QgPSBmYWxzZTsgdmFyIF9lID0gdW5kZWZpbmVkOyB0cnkgeyBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVsicmV0dXJuIl0gIT0gbnVsbCkgX2lbInJldHVybiJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfQoKZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOyB9CgppbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7CmltcG9ydCB7IEV1aUJ1dHRvbiwgRXVpQnV0dG9uRW1wdHksIEV1aUZsZXhJdGVtLCBFdWlGbGV4R3JvdXAsIEV1aU11dGF0aW9uT2JzZXJ2ZXIsIEV1aVBhbmVsLCBFdWlTcGFjZXIgfSBmcm9tICcuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cyc7CmV4cG9ydCB2YXIgTXV0YXRpb25PYnNlcnZlciA9IGZ1bmN0aW9uIE11dGF0aW9uT2JzZXJ2ZXIoKSB7CiAgdmFyIF91c2VTdGF0ZSA9IHVzZVN0YXRlKCdubyBjaGFuZ2VzIGRldGVjdGVkJyksCiAgICAgIF91c2VTdGF0ZTIgPSBfc2xpY2VkVG9BcnJheShfdXNlU3RhdGUsIDIpLAogICAgICBsYXN0TXV0YXRpb24gPSBfdXNlU3RhdGUyWzBdLAogICAgICBzZXRMYXN0TXV0YXRpb24gPSBfdXNlU3RhdGUyWzFdOwoKICB2YXIgX3VzZVN0YXRlMyA9IHVzZVN0YXRlKCdwcmltYXJ5JyksCiAgICAgIF91c2VTdGF0ZTQgPSBfc2xpY2VkVG9BcnJheShfdXNlU3RhdGUzLCAyKSwKICAgICAgYnV0dG9uQ29sb3IgPSBfdXNlU3RhdGU0WzBdLAogICAgICBzZXRCdXR0b25Db2xvciA9IF91c2VTdGF0ZTRbMV07CgogIHZhciBfdXNlU3RhdGU1ID0gdXNlU3RhdGUoWydJdGVtIDEnLCAnSXRlbSAyJywgJ0l0ZW0gMyddKSwKICAgICAgX3VzZVN0YXRlNiA9IF9zbGljZWRUb0FycmF5KF91c2VTdGF0ZTUsIDIpLAogICAgICBpdGVtcyA9IF91c2VTdGF0ZTZbMF0sCiAgICAgIHNldEl0ZW1zID0gX3VzZVN0YXRlNlsxXTsKCiAgdmFyIHRvZ2dsZUJ1dHRvbkNvbG9yID0gZnVuY3Rpb24gdG9nZ2xlQnV0dG9uQ29sb3IoKSB7CiAgICBzZXRCdXR0b25Db2xvcihidXR0b25Db2xvciA9PT0gJ3ByaW1hcnknID8gJ3dhcm5pbmcnIDogJ3ByaW1hcnknKTsKICB9OwoKICB2YXIgYWRkSXRlbSA9IGZ1bmN0aW9uIGFkZEl0ZW0oKSB7CiAgICBzZXRJdGVtcyhbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KGl0ZW1zKSwgWyJJdGVtICIuY29uY2F0KGl0ZW1zLmxlbmd0aCArIDEpXSkpOwogIH07CgogIHZhciBvbk11dGF0aW9uID0gZnVuY3Rpb24gb25NdXRhdGlvbihfcmVmKSB7CiAgICB2YXIgX3JlZjIgPSBfc2xpY2VkVG9BcnJheShfcmVmLCAxKSwKICAgICAgICB0eXBlID0gX3JlZjJbMF0udHlwZTsKCiAgICBzZXRMYXN0TXV0YXRpb24odHlwZSA9PT0gJ2F0dHJpYnV0ZXMnID8gJ2J1dHRvbiBjbGFzcyBuYW1lIGNoYW5nZWQnIDogJ0RPTSB0cmVlIGNoYW5nZWQnKTsKICB9OwoKICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJwIiwgbnVsbCwgbGFzdE11dGF0aW9uKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRXVpU3BhY2VyLCBudWxsKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRXVpTXV0YXRpb25PYnNlcnZlciwgewogICAgb2JzZXJ2ZXJPcHRpb25zOiB7CiAgICAgIHN1YnRyZWU6IHRydWUsCiAgICAgIGF0dHJpYnV0ZXM6IHRydWUsCiAgICAgIGNoaWxkTGlzdDogdHJ1ZQogICAgfSwKICAgIG9uTXV0YXRpb246IG9uTXV0YXRpb24KICB9LCBmdW5jdGlvbiAobXV0YXRpb25SZWYpIHsKICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgewogICAgICByZWY6IG11dGF0aW9uUmVmCiAgICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlCdXR0b24sIHsKICAgICAgY29sb3I6IGJ1dHRvbkNvbG9yLAogICAgICBmaWxsOiB0cnVlLAogICAgICBvbkNsaWNrOiB0b2dnbGVCdXR0b25Db2xvcgogICAgfSwgIlRvZ2dsZSBidXR0b24gY29sb3IiKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRXVpU3BhY2VyLCBudWxsKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRXVpRmxleEdyb3VwLCBudWxsLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlGbGV4SXRlbSwgewogICAgICBncm93OiBmYWxzZQogICAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRXVpUGFuZWwsIHsKICAgICAgZ3JvdzogZmFsc2UKICAgIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJ1bCIsIG51bGwsIGl0ZW1zLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImxpIiwgewogICAgICAgIGtleTogaXRlbQogICAgICB9LCBpdGVtKTsKICAgIH0pKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRXVpU3BhY2VyLCB7CiAgICAgIHNpemU6ICJzIgogICAgfSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEV1aUJ1dHRvbkVtcHR5LCB7CiAgICAgIG9uQ2xpY2s6IGFkZEl0ZW0KICAgIH0sICJhZGQgaXRlbSIpKSkpKTsKICB9KSk7Cn07"},{"version":3,"sources":["D:/work/eui/src-docs/src/views/mutation_observer/mutation_observer.js"],"names":["React","useState","EuiButton","EuiButtonEmpty","EuiFlexItem","EuiFlexGroup","EuiMutationObserver","EuiPanel","EuiSpacer","MutationObserver","lastMutation","setLastMutation","buttonColor","setButtonColor","items","setItems","toggleButtonColor","addItem","length","onMutation","type","subtree","attributes","childList","mutationRef","map","item"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SACEC,SADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,mBALF,EAMEC,QANF,EAOEC,SAPF,QAQO,4BARP;AAUA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA,kBACIR,QAAQ,CAAC,qBAAD,CADZ;AAAA;AAAA,MAC7BS,YAD6B;AAAA,MACfC,eADe;;AAAA,mBAEEV,QAAQ,CAAC,SAAD,CAFV;AAAA;AAAA,MAE7BW,WAF6B;AAAA,MAEhBC,cAFgB;;AAAA,mBAGVZ,QAAQ,CAAC,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,CAAD,CAHE;AAAA;AAAA,MAG7Ba,KAH6B;AAAA,MAGtBC,QAHsB;;AAKpC,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BH,IAAAA,cAAc,CAACD,WAAW,KAAK,SAAhB,GAA4B,SAA5B,GAAwC,SAAzC,CAAd;AACD,GAFD;;AAIA,MAAMK,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBF,IAAAA,QAAQ,8BAAKD,KAAL,mBAAoBA,KAAK,CAACI,MAAN,GAAe,CAAnC,IAAR;AACD,GAFD;;AAIA,MAAMC,UAAU,GAAG,SAAbA,UAAa,OAAgB;AAAA;AAAA,QAAZC,IAAY,YAAZA,IAAY;;AACjCT,IAAAA,eAAe,CACbS,IAAI,KAAK,YAAT,GAAwB,2BAAxB,GAAsD,kBADzC,CAAf;AAGD,GAJD;;AAMA,sBACE,8CACE,+BAAIV,YAAJ,CADF,eAGE,oBAAC,SAAD,OAHF,eAKE,oBAAC,mBAAD;AACE,IAAA,eAAe,EAAE;AAAEW,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,UAAU,EAAE,IAA7B;AAAmCC,MAAAA,SAAS,EAAE;AAA9C,KADnB;AAEE,IAAA,UAAU,EAAEJ;AAFd,KAGG,UAACK,WAAD;AAAA,wBACC;AAAK,MAAA,GAAG,EAAEA;AAAV,oBACE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAEZ,WADT;AAEE,MAAA,IAAI,EAAE,IAFR;AAGE,MAAA,OAAO,EAAEI;AAHX,6BADF,eAQE,oBAAC,SAAD,OARF,eAUE,oBAAC,YAAD,qBACE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAE;AAAnB,oBACE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE;AAAhB,oBACE,gCACGF,KAAK,CAACW,GAAN,CAAU,UAACC,IAAD;AAAA,0BACT;AAAI,QAAA,GAAG,EAAEA;AAAT,SAAgBA,IAAhB,CADS;AAAA,KAAV,CADH,CADF,eAME,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC;AAAhB,MANF,eAOE,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAET;AAAzB,kBAPF,CADF,CADF,CAVF,CADD;AAAA,GAHH,CALF,CADF;AAsCD,CAzDM","sourcesContent":["import React, { useState } from 'react';\n\nimport {\n  EuiButton,\n  EuiButtonEmpty,\n  EuiFlexItem,\n  EuiFlexGroup,\n  EuiMutationObserver,\n  EuiPanel,\n  EuiSpacer,\n} from '../../../../src/components';\n\nexport const MutationObserver = () => {\n  const [lastMutation, setLastMutation] = useState('no changes detected');\n  const [buttonColor, setButtonColor] = useState('primary');\n  const [items, setItems] = useState(['Item 1', 'Item 2', 'Item 3']);\n\n  const toggleButtonColor = () => {\n    setButtonColor(buttonColor === 'primary' ? 'warning' : 'primary');\n  };\n\n  const addItem = () => {\n    setItems([...items, `Item ${items.length + 1}`]);\n  };\n\n  const onMutation = ([{ type }]) => {\n    setLastMutation(\n      type === 'attributes' ? 'button class name changed' : 'DOM tree changed'\n    );\n  };\n\n  return (\n    <div>\n      <p>{lastMutation}</p>\n\n      <EuiSpacer />\n\n      <EuiMutationObserver\n        observerOptions={{ subtree: true, attributes: true, childList: true }}\n        onMutation={onMutation}>\n        {(mutationRef) => (\n          <div ref={mutationRef}>\n            <EuiButton\n              color={buttonColor}\n              fill={true}\n              onClick={toggleButtonColor}>\n              Toggle button color\n            </EuiButton>\n\n            <EuiSpacer />\n\n            <EuiFlexGroup>\n              <EuiFlexItem grow={false}>\n                <EuiPanel grow={false}>\n                  <ul>\n                    {items.map((item) => (\n                      <li key={item}>{item}</li>\n                    ))}\n                  </ul>\n                  <EuiSpacer size=\"s\" />\n                  <EuiButtonEmpty onClick={addItem}>add item</EuiButtonEmpty>\n                </EuiPanel>\n              </EuiFlexItem>\n            </EuiFlexGroup>\n          </div>\n        )}\n      </EuiMutationObserver>\n    </div>\n  );\n};\n"]}]}