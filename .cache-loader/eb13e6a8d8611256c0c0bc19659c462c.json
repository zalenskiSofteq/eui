{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\search_bar\\query\\operators.ts","dependencies":[{"path":"D:\\work\\eui\\src\\components\\search_bar\\query\\operators.ts","mtime":1649070093754},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/search_bar/query/operators.ts"],"names":["dateFormat","dateGranularity","isDateValue","isArray","isBoolean","isNumber","isString","isDateLike","isNil","moment","utc","resolveValueAsDate","value","isMoment","isDate","parse","String","defaultEqOptions","ignoreCase","eq","fieldValue","clauseValue","options","length","some","item","dateFieldValue","granularity","isSame","resolve","exactMatch","toLowerCase","toString","includes","Number","date","isValid","exact","greaterThen","inclusive","clauseDateValue","fieldValueAsMomentInput","isSameOrAfter","isAfter","start","startOfNext","str","number","every","gt","gte","lt","lte"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { dateFormat, dateGranularity } from './date_format';\nimport { isDateValue } from './date_value';\nimport {\n  isArray,\n  isBoolean,\n  isNumber,\n  isString,\n  isDateLike,\n  isNil,\n} from '../../../services/predicate';\nimport moment from 'moment';\nimport { Value } from './ast';\n\nexport type FieldValue =\n  | string\n  | number\n  | boolean\n  | any[]\n  | Date\n  | moment.Moment\n  | null\n  | undefined;\n\nexport type ClauseValue = Value | Date | moment.Moment | null | undefined;\n\nconst utc = moment.utc;\n\nconst resolveValueAsDate = (value: FieldValue) => {\n  if (moment.isMoment(value)) {\n    return value;\n  }\n  if (moment.isDate(value) || isNumber(value)) {\n    return moment(value);\n  }\n  return dateFormat.parse(String(value));\n};\n\ntype Options = Partial<{\n  exactMatch: boolean;\n  ignoreCase: boolean;\n}>;\n\nconst defaultEqOptions: Options = {\n  ignoreCase: true,\n};\n\nexport const eq = (\n  fieldValue: FieldValue,\n  clauseValue: ClauseValue,\n  options: Options = {}\n): boolean => {\n  options = { ...defaultEqOptions, ...options };\n\n  if (isNil(fieldValue) || isNil(clauseValue)) {\n    return fieldValue === clauseValue;\n  }\n\n  if (isBoolean(fieldValue)) {\n    return clauseValue === fieldValue;\n  }\n\n  if (isArray(fieldValue)) {\n    if (fieldValue.length > 0) {\n      return fieldValue.some((item) => eq(item, clauseValue, options));\n    } else {\n      return eq('', clauseValue, options);\n    }\n  }\n\n  if (isDateValue(clauseValue)) {\n    const dateFieldValue = resolveValueAsDate(fieldValue);\n    if (clauseValue.granularity) {\n      return clauseValue.granularity.isSame(\n        dateFieldValue,\n        clauseValue.resolve()\n      );\n    }\n    return dateFieldValue.isSame(clauseValue.resolve());\n  }\n\n  if (isString(fieldValue)) {\n    if (options.exactMatch === true) {\n      return options.ignoreCase\n        ? fieldValue.toLowerCase() === clauseValue.toString().toLowerCase()\n        : fieldValue === clauseValue.toString();\n    } else {\n      return options.ignoreCase\n        ? fieldValue\n            .toLowerCase()\n            .includes(clauseValue.toString().toLowerCase())\n        : fieldValue.includes(clauseValue.toString());\n    }\n  }\n\n  if (isNumber(fieldValue)) {\n    clauseValue = Number(clauseValue);\n    return fieldValue === clauseValue;\n  }\n\n  if (isDateLike(fieldValue)) {\n    const date = resolveValueAsDate(clauseValue);\n    if (!date.isValid()) {\n      return false;\n    }\n    const granularity = dateGranularity(date);\n    if (!granularity) {\n      return utc(fieldValue).isSame(date);\n    }\n    return granularity.isSame(fieldValue as moment.Moment, date);\n  }\n\n  return false; // unknown value type\n};\n\nexport const exact = (\n  fieldValue: FieldValue,\n  clauseValue: ClauseValue,\n  options = {}\n) => {\n  return eq(fieldValue, clauseValue, { ...options, exactMatch: true });\n};\n\nconst greaterThen = (\n  fieldValue: FieldValue,\n  clauseValue: ClauseValue,\n  inclusive = false\n): boolean => {\n  if (isDateValue(clauseValue)) {\n    const clauseDateValue = clauseValue.resolve();\n\n    const fieldValueAsMomentInput = fieldValue as moment.MomentInput;\n\n    if (!clauseValue.granularity) {\n      return inclusive\n        ? utc(fieldValueAsMomentInput).isSameOrAfter(clauseDateValue)\n        : utc(fieldValueAsMomentInput).isAfter(clauseDateValue);\n    }\n\n    if (inclusive) {\n      return utc(fieldValueAsMomentInput).isSameOrAfter(\n        clauseValue.granularity.start(clauseDateValue)\n      );\n    }\n    return utc(fieldValueAsMomentInput).isSameOrAfter(\n      clauseValue.granularity.startOfNext(clauseDateValue)\n    );\n  }\n\n  if (isString(fieldValue)) {\n    const str = String(clauseValue);\n    return inclusive ? fieldValue >= str : fieldValue > str;\n  }\n\n  if (isNumber(fieldValue)) {\n    const number = Number(clauseValue);\n    return inclusive ? fieldValue >= number : fieldValue > number;\n  }\n\n  if (isDateLike(fieldValue)) {\n    const date = resolveValueAsDate(clauseValue);\n    const granularity = dateGranularity(date);\n    if (!granularity) {\n      return inclusive\n        ? utc(fieldValue).isSameOrAfter(date)\n        : utc(fieldValue).isAfter(date);\n    }\n    if (inclusive) {\n      return utc(fieldValue).isSameOrAfter(granularity.start(date));\n    }\n    return utc(fieldValue).isSameOrAfter(granularity.startOfNext(date));\n  }\n\n  if (isArray(fieldValue)) {\n    return fieldValue.every((item) =>\n      greaterThen(item, clauseValue, inclusive)\n    );\n  }\n\n  return false; // unsupported value type\n};\n\nexport const gt = (fieldValue: FieldValue, clauseValue: ClauseValue) => {\n  if (isNil(fieldValue) || isNil(clauseValue)) {\n    return false;\n  }\n  return greaterThen(fieldValue, clauseValue);\n};\n\nexport const gte = (fieldValue: FieldValue, clauseValue: ClauseValue) => {\n  if (isNil(fieldValue) || isNil(clauseValue)) {\n    return fieldValue === clauseValue;\n  }\n  return greaterThen(fieldValue, clauseValue, true);\n};\n\nexport const lt = (fieldValue: FieldValue, clauseValue: ClauseValue) => {\n  if (isNil(fieldValue) || isNil(clauseValue)) {\n    return false;\n  }\n  return !greaterThen(fieldValue, clauseValue, true);\n};\n\nexport const lte = (fieldValue: FieldValue, clauseValue: ClauseValue) => {\n  if (isNil(fieldValue) || isNil(clauseValue)) {\n    return fieldValue === clauseValue;\n  }\n  return !greaterThen(fieldValue, clauseValue);\n};\n"]}]}