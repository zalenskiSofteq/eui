{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\notification\\notification_event_meta.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\notification\\notification_event_meta.tsx","mtime":1649070093713},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/notification/notification_event_meta.tsx"],"names":["React","useState","classNames","EuiIcon","EuiBadge","EuiPopover","EuiButtonIcon","EuiContextMenuPanel","EuiI18n","htmlIdGenerator","EuiNotificationEventMeta","id","iconType","type","time","badgeColor","severity","eventName","iconAriaLabel","onOpenContextMenu","isPopoverOpen","setIsPopoverOpen","classes","contextMenuItems","setContextMenuItems","randomPopoverId","ariaAttribute","onOpenPopover","contextMenuButton"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { EuiIcon } from '../icon';\nimport { EuiBadge } from '../badge';\nimport { EuiPopover } from '../popover';\nimport { EuiButtonIcon } from '../button';\nimport { EuiContextMenuPanel } from '../context_menu';\nimport { EuiI18n } from '../i18n';\nimport { htmlIdGenerator } from '../../services';\nexport var EuiNotificationEventMeta = ({\n  id,\n  iconType,\n  type,\n  time,\n  badgeColor = 'hollow',\n  severity,\n  eventName,\n  iconAriaLabel,\n  onOpenContextMenu\n}) => {\n  const [isPopoverOpen, setIsPopoverOpen] = useState(false);\n  const classes = classNames('euiNotificationEventMeta', {\n    'euiNotificationEventMeta--hasContextMenu': onOpenContextMenu\n  });\n  const [contextMenuItems, setContextMenuItems] = useState([]);\n  const randomPopoverId = htmlIdGenerator()();\n  const ariaAttribute = iconAriaLabel ? {\n    'aria-label': iconAriaLabel\n  } : {\n    'aria-hidden': true\n  };\n\n  const onOpenPopover = () => {\n    setIsPopoverOpen(!isPopoverOpen);\n\n    if (onOpenContextMenu) {\n      setContextMenuItems(onOpenContextMenu());\n    }\n  };\n\n  return <div className={classes}>\n      <div className=\"euiNotificationEventMeta__section\">\n        {iconType && <EuiIcon className=\"euiNotificationEventMeta__icon\" type={iconType} {...ariaAttribute} />}\n\n        {type && <EuiBadge className=\"euiNotificationEventMeta__badge\" color={badgeColor}>\n            {severity ? `${type}: ${severity}` : type}\n          </EuiBadge>}\n      </div>\n\n      <div className=\"euiNotificationEventMeta__section\">\n        <span className=\"euiNotificationEventMeta__time\">{time}</span>\n      </div>\n\n      {onOpenContextMenu && <div className=\"euiNotificationEventMeta__contextMenuWrapper\">\n          <EuiPopover id={randomPopoverId} ownFocus repositionOnScroll isOpen={isPopoverOpen} panelPaddingSize=\"none\" anchorPosition=\"leftUp\" button={<EuiI18n token=\"euiNotificationEventMeta.contextMenuButton\" default=\"Menu for {eventName}\" values={{\n        eventName\n      }}>\n                {contextMenuButton => <EuiButtonIcon aria-label={contextMenuButton} aria-controls={randomPopoverId} aria-expanded={isPopoverOpen} aria-haspopup=\"true\" iconType=\"boxesVertical\" color=\"subdued\" onClick={onOpenPopover} data-test-subj={`${id}-notificationEventMetaButton`} />}\n              </EuiI18n>} closePopover={() => setIsPopoverOpen(false)}>\n            {\n          /* The EuiContextMenu is wrapped with a div so it closes after an item is clicked */\n        }\n            <div onClick={() => setIsPopoverOpen(false)}>\n              <EuiContextMenuPanel items={contextMenuItems} />\n            </div>\n          </EuiPopover>\n        </div>}\n    </div>;\n};\nEuiNotificationEventMeta.propTypes = {\n  id: PropTypes.string.isRequired,\n\n  /**\n     * Type of event (e.g. \"Alert\", \"Cloud\", etc..). Shows inside a badge.\n     */\n  type: PropTypes.string.isRequired,\n\n  /**\n     * A unique, human-friendly name for the event to be used in aria attributes (e.g. \"alert-critical-01\", \"cloud-no-severity-12\", etc..).\n     */\n  eventName: PropTypes.string.isRequired,\n\n  /**\n     * Type of severity (e.g. \"Critical\", \"Warning\", etc..). Shows as a text after the `type` following the format \"Alert: Critical\".\n     */\n  severity: PropTypes.string,\n\n  /**\n     * Accepts either our palette colors (primary, success ..etc) or a hex value `#FFFFFF`, `#000`.\n     * **`secondary` color is DEPRECATED, use `success` instead**\n     */\n  badgeColor: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.oneOf([\"default\", \"primary\", \"secondary\", \"success\", \"accent\", \"warning\", \"danger\", \"text\", \"subdued\", \"ghost\", \"inherit\"]).isRequired]),\n\n  /**\n     * The icon used to visually represent this data type. Accepts any `EuiIcon IconType`.\n     */\n  iconType: PropTypes.oneOfType([PropTypes.oneOf([\"accessibility\", \"addDataApp\", \"advancedSettingsApp\", \"aggregate\", \"alert\", \"analyzeEvent\", \"annotation\", \"apmApp\", \"apmTrace\", \"apps\", \"appSearchApp\", \"arrowDown\", \"arrowLeft\", \"arrowRight\", \"arrowUp\", \"asterisk\", \"auditbeatApp\", \"beaker\", \"bell\", \"bellSlash\", \"bolt\", \"boxesHorizontal\", \"boxesVertical\", \"branch\", \"broom\", \"brush\", \"bug\", \"bullseye\", \"calendar\", \"canvasApp\", \"codeApp\", \"check\", \"checkInCircleFilled\", \"cheer\", \"classificationJob\", \"clock\", \"cloudDrizzle\", \"cloudStormy\", \"cloudSunny\", \"color\", \"compute\", \"console\", \"consoleApp\", \"continuityAbove\", \"continuityAboveBelow\", \"continuityBelow\", \"continuityWithin\", \"controlsHorizontal\", \"controlsVertical\", \"copy\", \"copyClipboard\", \"createAdvancedJob\", \"createMultiMetricJob\", \"createPopulationJob\", \"createSingleMetricJob\", \"cross\", \"crossClusterReplicationApp\", \"crosshairs\", \"crossInACircleFilled\", \"currency\", \"cut\", \"dashboardApp\", \"database\", \"dataVisualizer\", \"devToolsApp\", \"discoverApp\", \"document\", \"documentation\", \"documentEdit\", \"documents\", \"dot\", \"download\", \"editorAlignCenter\", \"editorAlignLeft\", \"editorAlignRight\", \"editorBold\", \"editorCodeBlock\", \"editorComment\", \"editorDistributeHorizontal\", \"editorDistributeVertical\", \"editorHeading\", \"editorItalic\", \"editorItemAlignLeft\", \"editorItemAlignBottom\", \"editorItemAlignCenter\", \"editorItemAlignMiddle\", \"editorItemAlignRight\", \"editorItemAlignTop\", \"editorLink\", \"editorOrderedList\", \"editorPositionBottomLeft\", \"editorPositionBottomRight\", \"editorPositionTopLeft\", \"editorPositionTopRight\", \"editorRedo\", \"editorStrike\", \"editorTable\", \"editorUnderline\", \"editorUndo\", \"editorUnorderedList\", \"email\", \"empty\", \"emsApp\", \"eql\", \"eraser\", \"exit\", \"expand\", \"expandMini\", \"exportAction\", \"eye\", \"eyeClosed\", \"faceHappy\", \"faceNeutral\", \"faceSad\", \"filebeatApp\", \"filter\", \"flag\", \"fold\", \"folderCheck\", \"folderClosed\", \"folderExclamation\", \"folderOpen\", \"frameNext\", \"framePrevious\", \"fullScreen\", \"fullScreenExit\", \"function\", \"gear\", \"gisApp\", \"glasses\", \"globe\", \"grab\", \"grabHorizontal\", \"graphApp\", \"grid\", \"grokApp\", \"heart\", \"heartbeatApp\", \"heatmap\", \"help\", \"home\", \"iInCircle\", \"image\", \"importAction\", \"indexClose\", \"indexEdit\", \"indexFlush\", \"indexManagementApp\", \"indexMapping\", \"indexOpen\", \"indexPatternApp\", \"indexRollupApp\", \"indexRuntime\", \"indexSettings\", \"inputOutput\", \"inspect\", \"invert\", \"ip\", \"keyboardShortcut\", \"kqlField\", \"kqlFunction\", \"kqlOperand\", \"kqlSelector\", \"kqlValue\", \"layers\", \"lensApp\", \"link\", \"list\", \"listAdd\", \"lock\", \"lockOpen\", \"logsApp\", \"logoAerospike\", \"logoApache\", \"logoAppSearch\", \"logoAWS\", \"logoAWSMono\", \"logoAzure\", \"logoAzureMono\", \"logoBeats\", \"logoBusinessAnalytics\", \"logoCeph\", \"logoCloud\", \"logoCloudEnterprise\", \"logoCode\", \"logoCodesandbox\", \"logoCouchbase\", \"logoDocker\", \"logoDropwizard\", \"logoElastic\", \"logoElasticsearch\", \"logoElasticStack\", \"logoEnterpriseSearch\", \"logoEtcd\", \"logoGCP\", \"logoGCPMono\", \"logoGithub\", \"logoGmail\", \"logoGolang\", \"logoGoogleG\", \"logoHAproxy\", \"logoIBM\", \"logoIBMMono\", \"logoKafka\", \"logoKibana\", \"logoKubernetes\", \"logoLogging\", \"logoLogstash\", \"logoMaps\", \"logoMemcached\", \"logoMetrics\", \"logoMongodb\", \"logoMySQL\", \"logoNginx\", \"logoObservability\", \"logoOsquery\", \"logoPhp\", \"logoPostgres\", \"logoPrometheus\", \"logoRabbitmq\", \"logoRedis\", \"logoSecurity\", \"logoSiteSearch\", \"logoSketch\", \"logoSlack\", \"logoUptime\", \"logoWebhook\", \"logoWindows\", \"logoWorkplaceSearch\", \"logstashFilter\", \"logstashIf\", \"logstashInput\", \"logstashOutput\", \"logstashQueue\", \"machineLearningApp\", \"magnet\", \"magnifyWithMinus\", \"magnifyWithPlus\", \"managementApp\", \"mapMarker\", \"memory\", \"menu\", \"menuDown\", \"menuLeft\", \"menuRight\", \"menuUp\", \"merge\", \"metricbeatApp\", \"metricsApp\", \"minimize\", \"minus\", \"minusInCircle\", \"minusInCircleFilled\", \"mobile\", \"monitoringApp\", \"moon\", \"nested\", \"node\", \"notebookApp\", \"number\", \"offline\", \"online\", \"outlierDetectionJob\", \"package\", \"packetbeatApp\", \"pageSelect\", \"pagesSelect\", \"partial\", \"paperClip\", \"pause\", \"pencil\", \"percent\", \"pin\", \"pinFilled\", \"pipelineApp\", \"play\", \"playFilled\", \"plus\", \"plusInCircle\", \"plusInCircleFilled\", \"popout\", \"push\", \"questionInCircle\", \"quote\", \"recentlyViewedApp\", \"refresh\", \"regressionJob\", \"reporter\", \"reportingApp\", \"returnKey\", \"save\", \"savedObjectsApp\", \"scale\", \"search\", \"searchProfilerApp\", \"securityAnalyticsApp\", \"securityApp\", \"securitySignal\", \"securitySignalDetected\", \"securitySignalResolved\", \"shard\", \"share\", \"snowflake\", \"sortable\", \"sortDown\", \"sortLeft\", \"sortRight\", \"sortUp\", \"spacesApp\", \"sqlApp\", \"starEmpty\", \"starEmptySpace\", \"starFilled\", \"starFilledSpace\", \"starMinusEmpty\", \"starMinusFilled\", \"starPlusEmpty\", \"starPlusFilled\", \"stats\", \"stop\", \"stopFilled\", \"stopSlash\", \"storage\", \"string\", \"submodule\", \"swatchInput\", \"symlink\", \"tableOfContents\", \"tableDensityExpanded\", \"tableDensityCompact\", \"tableDensityNormal\", \"tag\", \"tear\", \"temperature\", \"timeline\", \"timelionApp\", \"timeslider\", \"training\", \"trash\", \"upgradeAssistantApp\", \"uptimeApp\", \"unfold\", \"unlink\", \"user\", \"users\", \"usersRolesApp\", \"vector\", \"videoPlayer\", \"visArea\", \"visAreaStacked\", \"visBarHorizontal\", \"visBarHorizontalStacked\", \"visBarVertical\", \"visBarVerticalStacked\", \"visGauge\", \"visGoal\", \"visLine\", \"visMapCoordinate\", \"visMapRegion\", \"visMetric\", \"visPie\", \"visTable\", \"visTagCloud\", \"visText\", \"visTimelion\", \"visualizeApp\", \"visVega\", \"visVisualBuilder\", \"watchesApp\", \"wordWrap\", \"wordWrapDisabled\", \"workplaceSearchApp\", \"wrench\", \"tokenClass\", \"tokenProperty\", \"tokenEnum\", \"tokenVariable\", \"tokenMethod\", \"tokenAnnotation\", \"tokenException\", \"tokenInterface\", \"tokenParameter\", \"tokenField\", \"tokenElement\", \"tokenFunction\", \"tokenBoolean\", \"tokenString\", \"tokenArray\", \"tokenNumber\", \"tokenConstant\", \"tokenObject\", \"tokenEvent\", \"tokenKey\", \"tokenNull\", \"tokenStruct\", \"tokenPackage\", \"tokenOperator\", \"tokenEnumMember\", \"tokenRepo\", \"tokenSymbol\", \"tokenFile\", \"tokenModule\", \"tokenNamespace\", \"tokenDate\", \"tokenIP\", \"tokenNested\", \"tokenAlias\", \"tokenShape\", \"tokenGeo\", \"tokenRange\", \"tokenBinary\", \"tokenJoin\", \"tokenPercolator\", \"tokenFlattened\", \"tokenRankFeature\", \"tokenRankFeatures\", \"tokenKeyword\", \"tokenCompletionSuggester\", \"tokenDenseVector\", \"tokenText\", \"tokenTokenCount\", \"tokenSearchType\", \"tokenHistogram\"]).isRequired, PropTypes.string.isRequired, PropTypes.elementType.isRequired]),\n\n  /**\n     * Specify an `aria-label` for the icon.\n     * If no `aria-label` is passed we assume the icon is purely decorative.\n     */\n  iconAriaLabel: PropTypes.string,\n\n  /**\n     * Indicates when the event was received.\n     */\n  time: PropTypes.node.isRequired,\n\n  /**\n     * Necessary to trigger `onOpenContextMenu` from #EuiNotificationEvent\n     */\n  onOpenContextMenu: PropTypes.func\n};\n\ntry {\n  EuiNotificationEventMeta.__docgenInfo = {\n    description: '',\n    displayName: 'EuiNotificationEventMeta',\n    methods: [],\n    props: {\n      id: {\n        defaultValue: null,\n        description: '',\n        name: 'id',\n        parent: undefined,\n        required: true,\n        type: {\n          name: 'string'\n        }\n      },\n      type: {\n        defaultValue: null,\n        description: 'Type of event (e.g. \"Alert\", \"Cloud\", etc..). Shows inside a badge.',\n        name: 'type',\n        parent: undefined,\n        required: true,\n        type: {\n          name: 'string'\n        }\n      },\n      eventName: {\n        defaultValue: null,\n        description: 'A unique, human-friendly name for the event to be used in aria attributes (e.g. \"alert-critical-01\", \"cloud-no-severity-12\", etc..).',\n        name: 'eventName',\n        parent: undefined,\n        required: true,\n        type: {\n          name: 'string'\n        }\n      },\n      severity: {\n        defaultValue: null,\n        description: 'Type of severity (e.g. \"Critical\", \"Warning\", etc..). Shows as a text after the `type` following the format \"Alert: Critical\".',\n        name: 'severity',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      badgeColor: {\n        defaultValue: {\n          value: 'hollow'\n        },\n        description: 'Accepts either our palette colors (primary, success ..etc) or a hex value `#FFFFFF`, `#000`.\\n' + '**`secondary` color is DEPRECATED, use `success` instead**',\n        name: 'badgeColor',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      iconType: {\n        defaultValue: null,\n        description: 'The icon used to visually represent this data type. Accepts any `EuiIcon IconType`.',\n        name: 'iconType',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'IconType'\n        }\n      },\n      iconAriaLabel: {\n        defaultValue: null,\n        description: 'Specify an `aria-label` for the icon.\\n' + 'If no `aria-label` is passed we assume the icon is purely decorative.',\n        name: 'iconAriaLabel',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      time: {\n        defaultValue: null,\n        description: 'Indicates when the event was received.',\n        name: 'time',\n        parent: undefined,\n        required: true,\n        type: {\n          name: 'ReactNode'\n        }\n      },\n      onOpenContextMenu: {\n        defaultValue: null,\n        description: 'Necessary to trigger `onOpenContextMenu` from #EuiNotificationEvent',\n        name: 'onOpenContextMenu',\n        parent: undefined,\n        required: false,\n        type: {\n          name: '() => ReactElement<EuiContextMenuItemProps, typeof EuiContextMenuItem>[]'\n        }\n      }\n    },\n    extendedInterfaces: []\n  };\n} catch (e) {}"]}]}