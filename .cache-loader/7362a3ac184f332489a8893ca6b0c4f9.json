{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src-docs\\src\\views\\datagrid\\in_memory_enhancements.js","dependencies":[{"path":"D:\\work\\eui\\src-docs\\src\\views\\datagrid\\in_memory_enhancements.js","mtime":1649070093144},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src-docs/src/views/datagrid/in_memory_enhancements.js"],"names":["React","Fragment","useCallback","useMemo","useState","fake","EuiDataGrid","EuiLink","columns","id","raw_data","i","push","name","email","location","date","account","amount","phone","version","pageIndex","pageSize","pagination","setPagination","onChangeItemsPerPage","onChangePage","sortingColumns","setSortingColumns","onSort","data","sort","a","b","length","column","aValue","bValue","direction","rowStart","rowEnd","Math","min","slice","map","visibleColumns","setVisibleColumns","renderCellValue","rowIndex","columnId","adjustedRowIndex","hasOwnProperty","level","pageSizeOptions"],"mappings":"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","sourcesContent":["import React, { Fragment, useCallback, useMemo, useState } from 'react';\nimport { fake } from 'faker';\n\nimport { EuiDataGrid, EuiLink } from '../../../../src/components/';\n\nconst columns = [\n  {\n    id: 'name',\n  },\n  {\n    id: 'email',\n  },\n  {\n    id: 'location',\n  },\n  {\n    id: 'account',\n  },\n  {\n    id: 'date',\n  },\n  {\n    id: 'amount',\n  },\n  {\n    id: 'phone',\n  },\n  {\n    id: 'version',\n  },\n];\n\nconst raw_data = [];\n\nfor (let i = 1; i < 100; i++) {\n  raw_data.push({\n    name: fake('{{name.lastName}}, {{name.firstName}} {{name.suffix}}'),\n    email: <EuiLink href=\"\">{fake('{{internet.email}}')}</EuiLink>,\n    location: (\n      <Fragment>\n        {`${fake('{{address.city}}')}, `}\n        <EuiLink href=\"https://google.com\">\n          {fake('{{address.country}}')}\n        </EuiLink>\n      </Fragment>\n    ),\n    date: fake('{{date.past}}'),\n    account: fake('{{finance.account}}'),\n    amount: fake('${{commerce.price}}'),\n    phone: fake('{{phone.phoneNumber}}'),\n    version: fake('{{system.semver}}'),\n  });\n}\n\nexport default () => {\n  // ** Pagination config\n  const [pagination, setPagination] = useState({ pageIndex: 0, pageSize: 10 });\n  const onChangeItemsPerPage = useCallback(\n    (pageSize) =>\n      setPagination((pagination) => ({\n        ...pagination,\n        pageSize,\n        pageIndex: 0,\n      })),\n    [setPagination]\n  );\n  const onChangePage = useCallback(\n    (pageIndex) =>\n      setPagination((pagination) => ({ ...pagination, pageIndex })),\n    [setPagination]\n  );\n\n  // ** Sorting config\n  const [sortingColumns, setSortingColumns] = useState([]);\n  const onSort = useCallback(\n    (sortingColumns) => {\n      setSortingColumns(sortingColumns);\n    },\n    [setSortingColumns]\n  );\n\n  // Sort data\n  let data = useMemo(() => {\n    // the grid itself is responsible for sorting if inMemory is `sorting`\n\n    return [...raw_data].sort((a, b) => {\n      for (let i = 0; i < sortingColumns.length; i++) {\n        const column = sortingColumns[i];\n        const aValue = a[column.id];\n        const bValue = b[column.id];\n\n        if (aValue < bValue) return column.direction === 'asc' ? -1 : 1;\n        if (aValue > bValue) return column.direction === 'asc' ? 1 : -1;\n      }\n\n      return 0;\n    });\n  }, [sortingColumns]);\n\n  // Pagination\n  data = useMemo(() => {\n    const rowStart = pagination.pageIndex * pagination.pageSize;\n    const rowEnd = Math.min(rowStart + pagination.pageSize, data.length);\n    return data.slice(rowStart, rowEnd);\n  }, [data, pagination]);\n\n  // Column visibility\n  const [visibleColumns, setVisibleColumns] = useState(() =>\n    columns.map(({ id }) => id)\n  ); // initialize to the full set of columns\n\n  const renderCellValue = useMemo(() => {\n    return ({ rowIndex, columnId }) => {\n      // Because inMemory is not set for pagination, we need to manage it\n      // The row index must be adjusted as `data` has already been pruned to the page size\n      const adjustedRowIndex =\n        rowIndex - pagination.pageIndex * pagination.pageSize;\n\n      return data.hasOwnProperty(adjustedRowIndex)\n        ? data[adjustedRowIndex][columnId]\n        : null;\n    };\n  }, [data, pagination.pageIndex, pagination.pageSize]);\n\n  return (\n    <div>\n      <EuiDataGrid\n        aria-label=\"Data grid demo\"\n        columns={columns}\n        columnVisibility={{ visibleColumns, setVisibleColumns }}\n        rowCount={raw_data.length}\n        renderCellValue={renderCellValue}\n        inMemory={{ level: 'enhancements' }}\n        sorting={{ columns: sortingColumns, onSort }}\n        pagination={{\n          ...pagination,\n          pageSizeOptions: [10, 50, 100],\n          onChangeItemsPerPage: onChangeItemsPerPage,\n          onChangePage: onChangePage,\n        }}\n      />\n    </div>\n  );\n};\n"]}]}