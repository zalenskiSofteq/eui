{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\context_menu\\context_menu_panel.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\context_menu\\context_menu_panel.tsx","mtime":1649070093352},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/context_menu/context_menu_panel.tsx"],"names":["React","cloneElement","Component","classNames","tabbable","keysOf","EuiIcon","EuiResizeObserver","cascadingMenuKeys","EuiContextMenuItem","titleSizeToClassNameMap","s","m","SIZES","transitionDirectionAndTypeToClassNameMap","next","in","out","previous","EuiContextMenuPanel","props","amount","nextFocusedItemIndex","state","focusedItemIndex","undefined","menuItems","length","setState","event","items","showPreviousPanel","document","activeElement","backButton","panel","key","ARROW_LEFT","preventDefault","stopPropagation","onUseKeyboardToNavigate","TAB","indexOf","ARROW_UP","incrementFocusedItemIndex","ARROW_DOWN","ARROW_RIGHT","showNextPanel","onTransitionComplete","index","node","updateHeight","content","prevProps","initialFocusedItemIndex","currentHeight","requestAnimationFrame","_isMounted","hasFocus","contains","blur","transitionType","focus","tabbableItems","updateFocus","watchedItemProps","JSON","stringify","map","item","forEach","prop","prevItems","nextItems","getWatchedPropsForItems","nextProps","nextState","didItemsChange","children","clientHeight","height","onHeightChange","className","onClose","title","transitionDirection","size","rest","panelTitle","titleClasses","Boolean","classes","MenuItem","cloneProps","buttonRef","menuItemRef","type","panelRef","onKeyDown","contentRef","resizeRef","prevState","needsUpdate"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { cloneElement, Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport tabbable from 'tabbable';\nimport { keysOf } from '../common';\nimport { EuiIcon } from '../icon';\nimport { EuiResizeObserver } from '../observer/resize_observer';\nimport { cascadingMenuKeys } from '../../services';\nimport { EuiContextMenuItem } from './context_menu_item';\nvar titleSizeToClassNameMap = {\n  s: 'euiContextMenuPanelTitle--small',\n  m: null\n};\nexport var SIZES = keysOf(titleSizeToClassNameMap);\nvar transitionDirectionAndTypeToClassNameMap = {\n  next: {\n    in: 'euiContextMenuPanel-txInLeft',\n    out: 'euiContextMenuPanel-txOutLeft'\n  },\n  previous: {\n    in: 'euiContextMenuPanel-txInRight',\n    out: 'euiContextMenuPanel-txOutRight'\n  }\n};\nexport class EuiContextMenuPanel extends Component {\n  static defaultProps = {\n    hasFocus: true,\n    items: []\n  };\n  _isMounted = false;\n  backButton = null;\n  content = null;\n  panel = null;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      prevProps: {\n        items: this.props.items\n      },\n      menuItems: [],\n      focusedItemIndex: props.initialFocusedItemIndex,\n      currentHeight: undefined\n    };\n  }\n\n  incrementFocusedItemIndex = amount => {\n    let nextFocusedItemIndex;\n\n    if (this.state.focusedItemIndex === undefined) {\n      // If this is the beginning of the user's keyboard navigation of the menu, then we'll focus\n      // either the first or last item.\n      nextFocusedItemIndex = amount < 0 ? this.state.menuItems.length - 1 : 0;\n    } else {\n      nextFocusedItemIndex = this.state.focusedItemIndex + amount;\n\n      if (nextFocusedItemIndex < 0) {\n        nextFocusedItemIndex = this.state.menuItems.length - 1;\n      } else if (nextFocusedItemIndex === this.state.menuItems.length) {\n        nextFocusedItemIndex = 0;\n      }\n    }\n\n    this.setState({\n      focusedItemIndex: nextFocusedItemIndex\n    });\n  };\n  onKeyDown = event => {\n    // If this panel contains items you can use the left arrow key to go back at any time.\n    // But if it doesn't contain items, then you have to focus on the back button specifically,\n    // since there could be content inside the panel which requires use of the left arrow key,\n    // e.g. text inputs.\n    const {\n      items,\n      showPreviousPanel\n    } = this.props;\n\n    if (items && items.length || document.activeElement === this.backButton || document.activeElement === this.panel) {\n      if (event.key === cascadingMenuKeys.ARROW_LEFT) {\n        if (showPreviousPanel) {\n          event.preventDefault();\n          event.stopPropagation();\n          showPreviousPanel();\n\n          if (this.props.onUseKeyboardToNavigate) {\n            this.props.onUseKeyboardToNavigate();\n          }\n        }\n      }\n    }\n\n    if (this.props.items && this.props.items.length) {\n      switch (event.key) {\n        case cascadingMenuKeys.TAB:\n          // We need to sync up with the user if s/he is tabbing through the items.\n          const focusedItemIndex = this.state.menuItems.indexOf(document.activeElement);\n          this.setState({\n            focusedItemIndex: focusedItemIndex >= 0 && focusedItemIndex < this.state.menuItems.length ? focusedItemIndex : undefined\n          });\n          break;\n\n        case cascadingMenuKeys.ARROW_UP:\n          event.preventDefault();\n          this.incrementFocusedItemIndex(-1);\n\n          if (this.props.onUseKeyboardToNavigate) {\n            this.props.onUseKeyboardToNavigate();\n          }\n\n          break;\n\n        case cascadingMenuKeys.ARROW_DOWN:\n          event.preventDefault();\n          this.incrementFocusedItemIndex(1);\n\n          if (this.props.onUseKeyboardToNavigate) {\n            this.props.onUseKeyboardToNavigate();\n          }\n\n          break;\n\n        case cascadingMenuKeys.ARROW_RIGHT:\n          if (this.props.showNextPanel) {\n            event.preventDefault();\n            this.props.showNextPanel(this.state.focusedItemIndex);\n\n            if (this.props.onUseKeyboardToNavigate) {\n              this.props.onUseKeyboardToNavigate();\n            }\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    }\n  };\n\n  updateFocus() {\n    // Give positioning time to render before focus is applied. Otherwise page jumps.\n    requestAnimationFrame(() => {\n      if (!this._isMounted) {\n        return;\n      } // If this panel has lost focus, then none of its content should be focused.\n\n\n      if (!this.props.hasFocus) {\n        if (this.panel && this.panel.contains(document.activeElement)) {\n          document.activeElement.blur();\n        }\n\n        return;\n      } // Setting focus while transitioning causes the animation to glitch, so we have to wait\n      // until it's finished before we focus anything.\n\n\n      if (this.props.transitionType) {\n        return;\n      } // `focusedItemIndex={-1}` specifies that the panel itself should be focused.\n      // This should only be used when the panel does not have `item`s\n      // and preventing autofocus is desired, which is an uncommon case.\n\n\n      if (this.panel && this.state.focusedItemIndex === -1) {\n        this.panel.focus();\n        return;\n      } // If there aren't any items then this is probably a form or something.\n\n\n      if (!this.state.menuItems.length) {\n        // If we've already focused on something inside the panel, everything's fine.\n        if (this.panel && this.panel.contains(document.activeElement)) {\n          return;\n        } // Otherwise let's focus the first tabbable item and expedite input from the user.\n\n\n        if (this.content) {\n          const tabbableItems = tabbable(this.content);\n\n          if (tabbableItems.length) {\n            tabbableItems[0].focus();\n          }\n        }\n\n        return;\n      } // If an item is focused, focus it.\n\n\n      if (this.state.focusedItemIndex !== undefined) {\n        this.state.menuItems[this.state.focusedItemIndex].focus();\n        return;\n      } // Focus on the panel as a last resort.\n\n\n      if (this.panel && !this.panel.contains(document.activeElement)) {\n        this.panel.focus();\n      }\n    });\n  }\n\n  onTransitionComplete = () => {\n    if (this.props.onTransitionComplete) {\n      this.props.onTransitionComplete();\n    }\n  };\n\n  componentDidMount() {\n    this.updateFocus();\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let needsUpdate = false;\n    const nextState = {}; // Clear refs to menuItems if we're getting new ones.\n\n    if (nextProps.items !== prevState.prevProps.items) {\n      needsUpdate = true;\n      nextState.menuItems = [];\n      nextState.prevProps = {\n        items: nextProps.items\n      };\n    }\n\n    if (needsUpdate) {\n      return nextState;\n    }\n\n    return null;\n  }\n\n  getWatchedPropsForItems(items) {\n    // This lets us compare prevProps and nextProps among items so we can re-render if our items\n    // have changed.\n    const {\n      watchedItemProps\n    } = this.props; // Create fingerprint of all item's watched properties\n\n    if (items.length && watchedItemProps && watchedItemProps.length) {\n      return JSON.stringify(items.map(item => {\n        // Create object of item properties and values\n        const props = {\n          key: item.key\n        };\n        watchedItemProps.forEach(prop => {\n          props[prop] = item.props[prop];\n        });\n        return props;\n      }));\n    }\n\n    return null;\n  }\n\n  didItemsChange(prevItems, nextItems) {\n    // If the count of items has changed then update\n    if (prevItems.length !== nextItems.length) {\n      return true;\n    } // Check if any watched item properties changed by quick string comparison\n\n\n    if (this.getWatchedPropsForItems(nextItems) !== this.getWatchedPropsForItems(prevItems)) {\n      return true;\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // Prevent calling `this.updateFocus()` below if we don't have to.\n    if (nextProps.hasFocus !== this.props.hasFocus) {\n      return true;\n    }\n\n    if (nextProps.transitionType !== this.props.transitionType) {\n      return true;\n    }\n\n    if (nextState.focusedItemIndex !== this.state.focusedItemIndex) {\n      return true;\n    } // **\n    // this component should have either items or children,\n    // if there are items we can determine via `watchedItemProps` if we should update\n    // if there are children we can't know if they have changed so return true\n    // **\n\n\n    if (this.props.items && this.props.items.length > 0 || nextProps.items && nextProps.items.length > 0) {\n      if (this.didItemsChange(this.props.items, nextProps.items)) {\n        return true;\n      }\n    } // it's not possible (in any good way) to know if `children` has changed, assume they might have\n\n\n    if (this.props.children != null) {\n      return true;\n    }\n\n    return false;\n  }\n\n  updateHeight() {\n    const currentHeight = this.panel ? this.panel.clientHeight : 0;\n\n    if (this.state.height !== currentHeight) {\n      if (this.props.onHeightChange) {\n        this.props.onHeightChange(currentHeight);\n        this.setState({\n          height: currentHeight\n        });\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    this.updateFocus();\n  }\n\n  menuItemRef = (index, node) => {\n    // There's a weird bug where if you navigate to a panel without items, then this callback\n    // is still invoked, so we have to do a truthiness check.\n    if (node) {\n      // Store all menu items.\n      this.state.menuItems[index] = node;\n    }\n  };\n  panelRef = node => {\n    this.panel = node;\n    this.updateHeight();\n  };\n  contentRef = node => {\n    this.content = node;\n  };\n\n  render() {\n    const {\n      children,\n      className,\n      onClose,\n      title,\n      onHeightChange,\n      transitionType,\n      transitionDirection,\n      onTransitionComplete,\n      onUseKeyboardToNavigate,\n      hasFocus,\n      items,\n      watchedItemProps,\n      initialFocusedItemIndex,\n      showNextPanel,\n      showPreviousPanel,\n      size,\n      ...rest\n    } = this.props;\n    let panelTitle;\n\n    if (title) {\n      const titleClasses = classNames('euiContextMenuPanelTitle', size && titleSizeToClassNameMap[size]);\n\n      if (Boolean(onClose)) {\n        panelTitle = <button className={titleClasses} type=\"button\" onClick={onClose} ref={node => {\n          this.backButton = node;\n        }} data-test-subj=\"contextMenuPanelTitleButton\">\n            <span className=\"euiContextMenu__itemLayout\">\n              <EuiIcon type=\"arrowLeft\" size=\"m\" className=\"euiContextMenu__icon\" />\n\n              <span className=\"euiContextMenu__text\">{title}</span>\n            </span>\n          </button>;\n      } else {\n        panelTitle = <div className={titleClasses}>\n            <span className=\"euiContextMenu__itemLayout\">{title}</span>\n          </div>;\n      }\n    }\n\n    const classes = classNames('euiContextMenuPanel', className, transitionDirection && transitionType && transitionDirectionAndTypeToClassNameMap[transitionDirection] ? transitionDirectionAndTypeToClassNameMap[transitionDirection][transitionType] : undefined);\n    const content = items && items.length ? items.map((MenuItem, index) => {\n      const cloneProps = {\n        buttonRef: node => this.menuItemRef(index, node)\n      };\n\n      if (size) {\n        cloneProps.size = size;\n      }\n\n      return MenuItem.type === EuiContextMenuItem ? cloneElement(MenuItem, cloneProps) : MenuItem;\n    }) : children;\n    return <div ref={this.panelRef} className={classes} onKeyDown={this.onKeyDown} tabIndex={-1} onAnimationEnd={this.onTransitionComplete} {...rest}>\n        {panelTitle}\n\n        <div ref={this.contentRef}>\n          <EuiResizeObserver onResize={() => this.updateHeight()}>\n            {resizeRef => <div ref={resizeRef}>{content}</div>}\n          </EuiResizeObserver>\n        </div>\n      </div>;\n  }\n\n}\nEuiContextMenuPanel.propTypes = {\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n  hasFocus: PropTypes.bool,\n  initialFocusedItemIndex: PropTypes.number,\n  items: PropTypes.arrayOf(PropTypes.element.isRequired),\n  onClose: PropTypes.func,\n  onHeightChange: PropTypes.func,\n  onTransitionComplete: PropTypes.func,\n  onUseKeyboardToNavigate: PropTypes.func,\n  showNextPanel: PropTypes.func,\n  showPreviousPanel: PropTypes.func,\n  title: PropTypes.node,\n  transitionDirection: PropTypes.oneOf([\"next\", \"previous\"]),\n  transitionType: PropTypes.oneOf([\"in\", \"out\"]),\n  watchedItemProps: PropTypes.arrayOf(PropTypes.string.isRequired),\n\n  /**\n     * Alters the size of the items and the title\n     */\n  size: PropTypes.any\n};\n\ntry {\n  EuiContextMenuPanel.__docgenInfo = {\n    description: '',\n    displayName: 'EuiContextMenuPanel',\n    methods: [],\n    props: {\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: 'Defines a string value that labels the current element.\\n' + '@see aria-labelledby.',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'data-test-subj': {\n        defaultValue: null,\n        description: '',\n        name: 'data-test-subj',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      hasFocus: {\n        defaultValue: {\n          value: 'true'\n        },\n        description: '',\n        name: 'hasFocus',\n        parent: {\n          fileName: 'eui/src/components/context_menu/context_menu_panel.tsx',\n          name: 'EuiContextMenuPanelProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      initialFocusedItemIndex: {\n        defaultValue: null,\n        description: '',\n        name: 'initialFocusedItemIndex',\n        parent: {\n          fileName: 'eui/src/components/context_menu/context_menu_panel.tsx',\n          name: 'EuiContextMenuPanelProps'\n        },\n        required: false,\n        type: {\n          name: 'number'\n        }\n      },\n      items: {\n        defaultValue: {\n          value: '[]'\n        },\n        description: '',\n        name: 'items',\n        parent: {\n          fileName: 'eui/src/components/context_menu/context_menu_panel.tsx',\n          name: 'EuiContextMenuPanelProps'\n        },\n        required: false,\n        type: {\n          name: 'ReactElement[]'\n        }\n      },\n      onClose: {\n        defaultValue: null,\n        description: '',\n        name: 'onClose',\n        parent: {\n          fileName: 'eui/src/components/context_menu/context_menu_panel.tsx',\n          name: 'EuiContextMenuPanelProps'\n        },\n        required: false,\n        type: {\n          name: 'NoArgCallback<void>'\n        }\n      },\n      onHeightChange: {\n        defaultValue: null,\n        description: '',\n        name: 'onHeightChange',\n        parent: {\n          fileName: 'eui/src/components/context_menu/context_menu_panel.tsx',\n          name: 'EuiContextMenuPanelProps'\n        },\n        required: false,\n        type: {\n          name: 'EuiContextMenuPanelHeightChangeHandler'\n        }\n      },\n      onTransitionComplete: {\n        defaultValue: null,\n        description: '',\n        name: 'onTransitionComplete',\n        parent: {\n          fileName: 'eui/src/components/context_menu/context_menu_panel.tsx',\n          name: 'EuiContextMenuPanelProps'\n        },\n        required: false,\n        type: {\n          name: 'NoArgCallback<void>'\n        }\n      },\n      onUseKeyboardToNavigate: {\n        defaultValue: null,\n        description: '',\n        name: 'onUseKeyboardToNavigate',\n        parent: {\n          fileName: 'eui/src/components/context_menu/context_menu_panel.tsx',\n          name: 'EuiContextMenuPanelProps'\n        },\n        required: false,\n        type: {\n          name: 'NoArgCallback<void>'\n        }\n      },\n      showNextPanel: {\n        defaultValue: null,\n        description: '',\n        name: 'showNextPanel',\n        parent: {\n          fileName: 'eui/src/components/context_menu/context_menu_panel.tsx',\n          name: 'EuiContextMenuPanelProps'\n        },\n        required: false,\n        type: {\n          name: 'EuiContextMenuPanelShowPanelCallback'\n        }\n      },\n      showPreviousPanel: {\n        defaultValue: null,\n        description: '',\n        name: 'showPreviousPanel',\n        parent: {\n          fileName: 'eui/src/components/context_menu/context_menu_panel.tsx',\n          name: 'EuiContextMenuPanelProps'\n        },\n        required: false,\n        type: {\n          name: 'NoArgCallback<void>'\n        }\n      },\n      title: {\n        defaultValue: null,\n        description: '',\n        name: 'title',\n        parent: {\n          fileName: 'eui/src/components/context_menu/context_menu_panel.tsx',\n          name: 'EuiContextMenuPanelProps'\n        },\n        required: false,\n        type: {\n          name: 'ReactNode'\n        }\n      },\n      transitionDirection: {\n        defaultValue: null,\n        description: '',\n        name: 'transitionDirection',\n        parent: {\n          fileName: 'eui/src/components/context_menu/context_menu_panel.tsx',\n          name: 'EuiContextMenuPanelProps'\n        },\n        required: false,\n        type: {\n          name: 'enum',\n          raw: 'EuiContextMenuPanelTransitionDirection',\n          value: [{\n            value: '\"next\"'\n          }, {\n            value: '\"previous\"'\n          }]\n        }\n      },\n      transitionType: {\n        defaultValue: null,\n        description: '',\n        name: 'transitionType',\n        parent: {\n          fileName: 'eui/src/components/context_menu/context_menu_panel.tsx',\n          name: 'EuiContextMenuPanelProps'\n        },\n        required: false,\n        type: {\n          name: 'enum',\n          raw: 'EuiContextMenuPanelTransitionType',\n          value: [{\n            value: '\"in\"'\n          }, {\n            value: '\"out\"'\n          }]\n        }\n      },\n      watchedItemProps: {\n        defaultValue: null,\n        description: '',\n        name: 'watchedItemProps',\n        parent: {\n          fileName: 'eui/src/components/context_menu/context_menu_panel.tsx',\n          name: 'EuiContextMenuPanelProps'\n        },\n        required: false,\n        type: {\n          name: 'string[]'\n        }\n      },\n      size: {\n        defaultValue: null,\n        description: 'Alters the size of the items and the title',\n        name: 'size',\n        parent: {\n          fileName: 'eui/src/components/context_menu/context_menu_panel.tsx',\n          name: 'EuiContextMenuPanelProps'\n        },\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"s\" | \"m\"',\n          value: [{\n            value: '\"s\"'\n          }, {\n            value: '\"m\"'\n          }]\n        }\n      }\n    },\n    extendedInterfaces: ['CommonProps', 'HTMLAttributes', 'AriaAttributes', 'DOMAttributes', 'EuiContextMenuPanelProps']\n  };\n} catch (e) {}"]}]}