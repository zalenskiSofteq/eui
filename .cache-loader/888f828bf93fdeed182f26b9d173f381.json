{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\tour\\types.ts","dependencies":[{"path":"D:\\work\\eui\\src\\components\\tour\\types.ts","mtime":1649070093814},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":""},{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport interface EuiTourState {\n  currentTourStep: number;\n  isTourActive: boolean;\n  tourPopoverWidth: number;\n  tourSubtitle: string;\n}\n\ninterface ActionFinish {\n  type: 'EUI_TOUR_FINISH';\n  payload: { resetTour?: boolean };\n}\n\ninterface ActionReset {\n  type: 'EUI_TOUR_RESET';\n}\n\ninterface ActionDecrement {\n  type: 'EUI_TOUR_PREVIOUS';\n}\n\ninterface ActionIncrement {\n  type: 'EUI_TOUR_NEXT';\n}\n\ninterface ActionGotoStep {\n  type: 'EUI_TOUR_GOTO';\n  payload: { step: number; isTourActive?: boolean };\n}\n\nexport type EuiTourAction =\n  | ActionFinish\n  | ActionReset\n  | ActionDecrement\n  | ActionIncrement\n  | ActionGotoStep;\n\nexport interface EuiTourActions {\n  finishTour: (resetTour?: boolean) => void;\n  resetTour: () => void;\n  decrementStep: () => void;\n  incrementStep: () => void;\n  goToStep: (step: number, isTourActive?: boolean) => void;\n}\n"]}]}