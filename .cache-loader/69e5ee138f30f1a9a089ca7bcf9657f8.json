{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\markdown_editor\\markdown_actions.ts","dependencies":[{"path":"D:\\work\\eui\\src\\components\\markdown_editor\\markdown_actions.ts","mtime":1649070093699},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/markdown_editor/markdown_actions.ts"],"names":["isPluginWithImmediateFormatting","MarkdownActions","editorID","uiPlugins","styles","reduce","mappedPlugins","plugin","name","mdBold","button","label","iconType","formatting","prefix","suffix","trimFirst","mdItalic","mdQuote","multiline","surroundWithNewlines","mdCode","blockPrefix","blockSuffix","mdLink","replaceNext","scanFor","mdUl","mdOl","orderedList","mdTl","pluginName","applyStyle","incomingStyle","defaults","prefixSpace","outgoingStyle","editor","document","getElementById","focus","styleSelectedText","isMultipleLines","string","trim","split","length","repeat","n","Array","join","wordSelectionStart","text","i","index","match","wordSelectionEnd","breakpoint","MAX_TRIES","TRY_TIMEOUT","insertText","textarea","selectionStart","selectionEnd","originalSelectionStart","before","value","slice","after","tries","insertResult","execCommand","inputEvent","Event","bubbles","nativeInputValueSetter","Object","getOwnPropertyDescriptor","window","HTMLTextAreaElement","prototype","set","call","dispatchEvent","setSelectionRange","focusTextarea","activeElement","setTimeout","styleArgs","result","multilineStyle","blockStyle","expandSelectedText","prefixToUse","suffixToUse","expandedSelectionStart","expandedSelectionEnd","beginsWithPrefix","endsWithSuffix","newlinesToSurroundSelectedText","beforeSelection","afterSelection","breaksBefore","breaksAfter","newlinesBeforeSelection","newlinesAfterSelection","newlinesToAppend","newlinesToPrepend","arg","originalSelectionEnd","selectedText","hasReplaceNext","indexOf","ref","startsWith","endsWith","replacementText","position","Math","max","min","whitespaceEdges","leadingWhitespace","trailingWhitespace","replace","lines","undoStyle","every","line","map","orderedListRegex","noInitialSelection","textToUnstyle","startOfLine","endOfLine","linesBefore","linesToUnstyle","undoStyling","test","lengthDiff","len","results","push"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAGEA,+BAHF,QAIO,kBAJP;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;IACMC,e;AAGJ,2BAAmBC,QAAnB,EAAqCC,SAArC,EAA6E;AAAA;;AAAA,SAA1DD,QAA0D,GAA1DA,QAA0D;;AAAA;;AAC3E;AACJ;AACA;AACA;AACI,SAAKE,MAAL,mCACKD,SAAS,CAACE,MAAV,CACD,UAACC,aAAD,EAAgBC,MAAhB,EAA2B;AACzBD,MAAAA,aAAa,CAACC,MAAM,CAACC,IAAR,CAAb,GAA6BD,MAA7B;AACA,aAAOD,aAAP;AACD,KAJA,EAKD,EALC,CADL;AAQEG,MAAAA,MAAM,EAAE;AACND,QAAAA,IAAI,EAAE,QADA;AAENE,QAAAA,MAAM,EAAE;AAAEC,UAAAA,KAAK,EAAE,EAAT;AAAaC,UAAAA,QAAQ,EAAE;AAAvB,SAFF;AAGNC,QAAAA,UAAU,EAAE;AACVC,UAAAA,MAAM,EAAE,IADE;AAEVC,UAAAA,MAAM,EAAE,IAFE;AAGVC,UAAAA,SAAS,EAAE;AAHD;AAHN,OARV;AAiBEC,MAAAA,QAAQ,EAAE;AACRT,QAAAA,IAAI,EAAE,UADE;AAERE,QAAAA,MAAM,EAAE;AAAEC,UAAAA,KAAK,EAAE,EAAT;AAAaC,UAAAA,QAAQ,EAAE;AAAvB,SAFA;AAGRC,QAAAA,UAAU,EAAE;AACVC,UAAAA,MAAM,EAAE,GADE;AAEVC,UAAAA,MAAM,EAAE,GAFE;AAGVC,UAAAA,SAAS,EAAE;AAHD;AAHJ,OAjBZ;AA0BEE,MAAAA,OAAO,EAAE;AACPV,QAAAA,IAAI,EAAE,SADC;AAEPE,QAAAA,MAAM,EAAE;AAAEC,UAAAA,KAAK,EAAE,EAAT;AAAaC,UAAAA,QAAQ,EAAE;AAAvB,SAFD;AAGPC,QAAAA,UAAU,EAAE;AACVC,UAAAA,MAAM,EAAE,IADE;AAEVK,UAAAA,SAAS,EAAE,IAFD;AAGVC,UAAAA,oBAAoB,EAAE;AAHZ;AAHL,OA1BX;AAmCEC,MAAAA,MAAM,EAAE;AACNb,QAAAA,IAAI,EAAE,QADA;AAENE,QAAAA,MAAM,EAAE;AAAEC,UAAAA,KAAK,EAAE,EAAT;AAAaC,UAAAA,QAAQ,EAAE;AAAvB,SAFF;AAGNC,QAAAA,UAAU,EAAE;AACVC,UAAAA,MAAM,EAAE,GADE;AAEVC,UAAAA,MAAM,EAAE,GAFE;AAGVO,UAAAA,WAAW,EAAE,KAHH;AAIVC,UAAAA,WAAW,EAAE;AAJH;AAHN,OAnCV;AA6CEC,MAAAA,MAAM,EAAE;AACNhB,QAAAA,IAAI,EAAE,QADA;AAENE,QAAAA,MAAM,EAAE;AAAEC,UAAAA,KAAK,EAAE,EAAT;AAAaC,UAAAA,QAAQ,EAAE;AAAvB,SAFF;AAGNC,QAAAA,UAAU,EAAE;AACVC,UAAAA,MAAM,EAAE,GADE;AAEVC,UAAAA,MAAM,EAAE,QAFE;AAGVU,UAAAA,WAAW,EAAE,KAHH;AAIVC,UAAAA,OAAO,EAAE;AAJC;AAHN,OA7CV;AAuDEC,MAAAA,IAAI,EAAE;AACJnB,QAAAA,IAAI,EAAE,MADF;AAEJE,QAAAA,MAAM,EAAE;AAAEC,UAAAA,KAAK,EAAE,EAAT;AAAaC,UAAAA,QAAQ,EAAE;AAAvB,SAFJ;AAGJC,QAAAA,UAAU,EAAE;AACVC,UAAAA,MAAM,EAAE,IADE;AAEVK,UAAAA,SAAS,EAAE,IAFD;AAGVC,UAAAA,oBAAoB,EAAE;AAHZ;AAHR,OAvDR;AAgEEQ,MAAAA,IAAI,EAAE;AACJpB,QAAAA,IAAI,EAAE,MADF;AAEJE,QAAAA,MAAM,EAAE;AAAEC,UAAAA,KAAK,EAAE,EAAT;AAAaC,UAAAA,QAAQ,EAAE;AAAvB,SAFJ;AAGJC,QAAAA,UAAU,EAAE;AACVC,UAAAA,MAAM,EAAE,KADE;AAEVK,UAAAA,SAAS,EAAE,IAFD;AAGVU,UAAAA,WAAW,EAAE;AAHH;AAHR,OAhER;AAyEEC,MAAAA,IAAI,EAAE;AACJtB,QAAAA,IAAI,EAAE,MADF;AAEJE,QAAAA,MAAM,EAAE;AAAEC,UAAAA,KAAK,EAAE,EAAT;AAAaC,UAAAA,QAAQ,EAAE;AAAvB,SAFJ;AAGJC,QAAAA,UAAU,EAAE;AACVC,UAAAA,MAAM,EAAE,QADE;AAEVK,UAAAA,SAAS,EAAE,IAFD;AAGVC,UAAAA,oBAAoB,EAAE;AAHZ;AAHR;AAzER;AAmFD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;;;;wBACKW,U,EAAoB;AACrB,UAAMxB,MAAM,GAAG,KAAKH,MAAL,CAAY2B,UAAZ,CAAf;;AACA,UAAI/B,+BAA+B,CAACO,MAAD,CAAnC,EAA6C;AAC3C,aAAKyB,UAAL,CAAgBzB,MAAM,CAACM,UAAvB;AACA,eAAO,IAAP;AACD,OAHD,MAGO;AACL,eAAON,MAAP;AACD;AACF;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;;+BACa0B,a,EAAsC;AAC/C,UAAMC,QAAQ,GAAG;AACfpB,QAAAA,MAAM,EAAE,EADO;AAEfC,QAAAA,MAAM,EAAE,EAFO;AAGfO,QAAAA,WAAW,EAAE,EAHE;AAIfC,QAAAA,WAAW,EAAE,EAJE;AAKfJ,QAAAA,SAAS,EAAE,KALI;AAMfM,QAAAA,WAAW,EAAE,EANE;AAOfU,QAAAA,WAAW,EAAE,KAPE;AAQfT,QAAAA,OAAO,EAAE,EARM;AASfN,QAAAA,oBAAoB,EAAE,KATP;AAUfS,QAAAA,WAAW,EAAE,KAVE;AAWfb,QAAAA,SAAS,EAAE;AAXI,OAAjB;;AAcA,UAAMoB,aAAa,mCACdF,QADc,GAEdD,aAFc,CAAnB;;AAIA,UAAMI,MAAM,GAAGC,QAAQ,CAACC,cAAT,CACb,KAAKrC,QADQ,CAAf;;AAIA,UAAImC,MAAJ,EAAY;AACVA,QAAAA,MAAM,CAACG,KAAP;AACAC,QAAAA,iBAAiB,CAACJ,MAAD,EAASD,aAAT,CAAjB;AACD;AACF;;;;;AAGH;AACA;AACA;AACA;AACA;;;AA2BA,SAASM,eAAT,CAAyBC,MAAzB,EAAkD;AAChD,SAAOA,MAAM,CAACC,IAAP,GAAcC,KAAd,CAAoB,IAApB,EAA0BC,MAA1B,GAAmC,CAA1C;AACD;;AAED,SAASC,MAAT,CAAgBJ,MAAhB,EAAgCK,CAAhC,EAAmD;AACjD,SAAOC,KAAK,CAACD,CAAC,GAAG,CAAL,CAAL,CAAaE,IAAb,CAAkBP,MAAlB,CAAP;AACD;;AAED,SAASQ,kBAAT,CAA4BC,IAA5B,EAA0CC,CAA1C,EAA6D;AAC3D,MAAIC,KAAK,GAAGD,CAAZ;;AACA,SACED,IAAI,CAACE,KAAD,CAAJ,IACAF,IAAI,CAACE,KAAK,GAAG,CAAT,CAAJ,IAAmB,IADnB,IAEA,CAACF,IAAI,CAACE,KAAK,GAAG,CAAT,CAAJ,CAAgBC,KAAhB,CAAsB,IAAtB,CAHH,EAIE;AACAD,IAAAA,KAAK;AACN;;AACD,SAAOA,KAAP;AACD;;AAED,SAASE,gBAAT,CAA0BJ,IAA1B,EAAwCC,CAAxC,EAAmDlC,SAAnD,EAA+E;AAC7E,MAAImC,KAAK,GAAGD,CAAZ;AACA,MAAMI,UAAU,GAAGtC,SAAS,GAAG,IAAH,GAAU,IAAtC;;AACA,SAAOiC,IAAI,CAACE,KAAD,CAAJ,IAAe,CAACF,IAAI,CAACE,KAAD,CAAJ,CAAYC,KAAZ,CAAkBE,UAAlB,CAAvB,EAAsD;AACpDH,IAAAA,KAAK;AACN;;AACD,SAAOA,KAAP;AACD;;AAED,IAAMI,SAAS,GAAG,EAAlB;AACA,IAAMC,WAAW,GAAG,EAApB;AAAwB;AACxB;;AACA,OAAO,SAASC,UAAT,CACLC,QADK,QAGL;AAAA,MADET,IACF,QADEA,IACF;AAAA,MADQU,cACR,QADQA,cACR;AAAA,MADwBC,YACxB,QADwBA,YACxB;AACA,MAAMC,sBAAsB,GAAGH,QAAQ,CAACC,cAAxC;AACA,MAAMG,MAAM,GAAGJ,QAAQ,CAACK,KAAT,CAAeC,KAAf,CAAqB,CAArB,EAAwBH,sBAAxB,CAAf;AACA,MAAMI,KAAK,GAAGP,QAAQ,CAACK,KAAT,CAAeC,KAAf,CAAqBN,QAAQ,CAACE,YAA9B,CAAd,CAHA,CAKA;AACA;;AACA,MAAIM,KAAK,GAAG,CAAZ;;AAEA,MAAMT,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAMU,YAAY,GAAGhC,QAAQ,CAACiC,WAAT,CAAqB,YAArB,EAAmC,KAAnC,EAA0CnB,IAA1C,CAArB;;AAEA,QAAIkB,YAAY,KAAK,KAArB,EAA4B;AAC1B;AACN;AACA;AACA;AACA;AACA;AACA;AACM,UAAME,UAAU,GAAG,IAAIC,KAAJ,CAAU,OAAV,EAAmB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAnB,CAAnB;AACA,UAAMC,sBAAsB,GAAGC,MAAM,CAACC,wBAAP,CAC7BC,MAAM,CAACC,mBAAP,CAA2BC,SADE,EAE7B,OAF6B,EAG5BC,GAHH;AAIAN,MAAAA,sBAAsB,CAAEO,IAAxB,CAA6BrB,QAA7B,EAAuCI,MAAM,GAAGb,IAAT,GAAgBgB,KAAvD;AACAP,MAAAA,QAAQ,CAACsB,aAAT,CAAuBX,UAAvB;AACD;;AAED,QAAIV,cAAc,IAAI,IAAlB,IAA0BC,YAAY,IAAI,IAA9C,EAAoD;AAClDF,MAAAA,QAAQ,CAACuB,iBAAT,CAA2BtB,cAA3B,EAA2CC,YAA3C;AACD,KAFD,MAEO;AACLF,MAAAA,QAAQ,CAACuB,iBAAT,CAA2BpB,sBAA3B,EAAmDH,QAAQ,CAACE,YAA5D;AACD;AACF,GAzBD;;AA2BA,MAAMsB,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BxB,IAAAA,QAAQ,CAACrB,KAAT;;AACA,QAAIF,QAAQ,CAACgD,aAAT,KAA2BzB,QAA/B,EAAyC;AACvCD,MAAAA,UAAU;AACX,KAFD,MAEO,IAAI,EAAES,KAAF,KAAYX,SAAhB,EAA2B;AAChCE,MAAAA,UAAU;AACX,KAFM,MAEA;AACL2B,MAAAA,UAAU,CAACF,aAAD,EAAgB1B,WAAhB,CAAV;AACD;AACF,GATD;;AAWA0B,EAAAA,aAAa;AACd,C,CAED;;AACA,SAAS5C,iBAAT,CACEoB,QADF,EAEE2B,SAFF,EAGE;AACA,MAAMpC,IAAI,GAAGS,QAAQ,CAACK,KAAT,CAAeC,KAAf,CACXN,QAAQ,CAACC,cADE,EAEXD,QAAQ,CAACE,YAFE,CAAb;AAKA,MAAI0B,MAAJ;;AACA,MAAID,SAAS,CAAC3D,WAAd,EAA2B;AACzB4D,IAAAA,MAAM,GAAG5D,WAAW,CAACgC,QAAD,CAApB;AACD,GAFD,MAEO,IAAI2B,SAAS,CAACrE,SAAV,IAAuBuB,eAAe,CAACU,IAAD,CAA1C,EAAkD;AACvDqC,IAAAA,MAAM,GAAGC,cAAc,CAAC7B,QAAD,EAAW2B,SAAX,CAAvB;AACD,GAFM,MAEA;AACLC,IAAAA,MAAM,GAAGE,UAAU,CAAC9B,QAAD,EAAW2B,SAAX,CAAnB;AACD;;AAED5B,EAAAA,UAAU,CAACC,QAAD,EAAW4B,MAAX,CAAV;AACD;;AAED,SAASG,kBAAT,CACE/B,QADF,EAEEgC,WAFF,EAGEC,WAHF,EAKU;AAAA,MADR3E,SACQ,uEADa,KACb;;AACR,MAAI0C,QAAQ,CAACC,cAAT,KAA4BD,QAAQ,CAACE,YAAzC,EAAuD;AACrDF,IAAAA,QAAQ,CAACC,cAAT,GAA0BX,kBAAkB,CAC1CU,QAAQ,CAACK,KADiC,EAE1CL,QAAQ,CAACC,cAFiC,CAA5C;AAIAD,IAAAA,QAAQ,CAACE,YAAT,GAAwBP,gBAAgB,CACtCK,QAAQ,CAACK,KAD6B,EAEtCL,QAAQ,CAACE,YAF6B,EAGtC5C,SAHsC,CAAxC;AAKD,GAVD,MAUO;AACL,QAAM4E,sBAAsB,GAAGlC,QAAQ,CAACC,cAAT,GAA0B+B,WAAW,CAAC/C,MAArE;AACA,QAAMkD,oBAAoB,GAAGnC,QAAQ,CAACE,YAAT,GAAwB+B,WAAW,CAAChD,MAAjE;AACA,QAAMmD,gBAAgB,GACpBpC,QAAQ,CAACK,KAAT,CAAeC,KAAf,CAAqB4B,sBAArB,EAA6ClC,QAAQ,CAACC,cAAtD,MACA+B,WAFF;AAGA,QAAMK,cAAc,GAClBrC,QAAQ,CAACK,KAAT,CAAeC,KAAf,CAAqBN,QAAQ,CAACE,YAA9B,EAA4CiC,oBAA5C,MACAF,WAFF;;AAGA,QAAIG,gBAAgB,IAAIC,cAAxB,EAAwC;AACtCrC,MAAAA,QAAQ,CAACC,cAAT,GAA0BiC,sBAA1B;AACAlC,MAAAA,QAAQ,CAACE,YAAT,GAAwBiC,oBAAxB;AACD;AACF;;AACD,SAAOnC,QAAQ,CAACK,KAAT,CAAeC,KAAf,CAAqBN,QAAQ,CAACC,cAA9B,EAA8CD,QAAQ,CAACE,YAAvD,CAAP;AACD;;AAED,SAASoC,8BAAT,CACEtC,QADF,EAEY;AACV,MAAMuC,eAAe,GAAGvC,QAAQ,CAACK,KAAT,CAAeC,KAAf,CAAqB,CAArB,EAAwBN,QAAQ,CAACC,cAAjC,CAAxB;AACA,MAAMuC,cAAc,GAAGxC,QAAQ,CAACK,KAAT,CAAeC,KAAf,CAAqBN,QAAQ,CAACE,YAA9B,CAAvB;AAEA,MAAMuC,YAAY,GAAGF,eAAe,CAAC7C,KAAhB,CAAsB,MAAtB,CAArB;AACA,MAAMgD,WAAW,GAAGF,cAAc,CAAC9C,KAAf,CAAqB,MAArB,CAApB;AACA,MAAMiD,uBAAuB,GAAGF,YAAY,GAAGA,YAAY,CAAC,CAAD,CAAZ,CAAgBxD,MAAnB,GAA4B,CAAxE;AACA,MAAM2D,sBAAsB,GAAGF,WAAW,GAAGA,WAAW,CAAC,CAAD,CAAX,CAAezD,MAAlB,GAA2B,CAArE;AAEA,MAAI4D,gBAAJ;AACA,MAAIC,iBAAJ;;AAEA,MAAIP,eAAe,CAAC7C,KAAhB,CAAsB,IAAtB,KAA+BiD,uBAAuB,GAAG,CAA7D,EAAgE;AAC9DE,IAAAA,gBAAgB,GAAG3D,MAAM,CAAC,IAAD,EAAO,IAAIyD,uBAAX,CAAzB;AACD;;AAED,MAAIH,cAAc,CAAC9C,KAAf,CAAqB,IAArB,KAA8BkD,sBAAsB,GAAG,CAA3D,EAA8D;AAC5DE,IAAAA,iBAAiB,GAAG5D,MAAM,CAAC,IAAD,EAAO,IAAI0D,sBAAX,CAA1B;AACD;;AAED,MAAIC,gBAAgB,IAAI,IAAxB,EAA8B;AAC5BA,IAAAA,gBAAgB,GAAG,EAAnB;AACD;;AAED,MAAIC,iBAAiB,IAAI,IAAzB,EAA+B;AAC7BA,IAAAA,iBAAiB,GAAG,EAApB;AACD;;AAED,SAAO;AAAED,IAAAA,gBAAgB,EAAhBA,gBAAF;AAAoBC,IAAAA,iBAAiB,EAAjBA;AAApB,GAAP;AACD;;AAED,SAAShB,UAAT,CACE9B,QADF,EAEE+C,GAFF,EAGkB;AAChB,MAAIF,gBAAJ;AACA,MAAIC,iBAAJ;AAFgB,MAKd7F,MALc,GAaZ8F,GAbY,CAKd9F,MALc;AAAA,MAMdC,MANc,GAaZ6F,GAbY,CAMd7F,MANc;AAAA,MAOdO,WAPc,GAaZsF,GAbY,CAOdtF,WAPc;AAAA,MAQdC,WARc,GAaZqF,GAbY,CAQdrF,WARc;AAAA,MASdE,WATc,GAaZmF,GAbY,CASdnF,WATc;AAAA,MAUdU,WAVc,GAaZyE,GAbY,CAUdzE,WAVc;AAAA,MAWdT,OAXc,GAaZkF,GAbY,CAWdlF,OAXc;AAAA,MAYdN,oBAZc,GAaZwF,GAbY,CAYdxF,oBAZc;AAchB,MAAM4C,sBAAsB,GAAGH,QAAQ,CAACC,cAAxC;AACA,MAAM+C,oBAAoB,GAAGhD,QAAQ,CAACE,YAAtC;AAEA,MAAI+C,YAAY,GAAGjD,QAAQ,CAACK,KAAT,CAAeC,KAAf,CACjBN,QAAQ,CAACC,cADQ,EAEjBD,QAAQ,CAACE,YAFQ,CAAnB;AAIA,MAAI8B,WAAW,GACbnD,eAAe,CAACoE,YAAD,CAAf,IAAiCxF,WAAW,CAACwB,MAAZ,GAAqB,CAAtD,aACOxB,WADP,UAEIR,MAHN;AAIA,MAAIgF,WAAW,GACbpD,eAAe,CAACoE,YAAD,CAAf,IAAiCvF,WAAW,CAACuB,MAAZ,GAAqB,CAAtD,eACSvB,WADT,IAEIR,MAHN;;AAKA,MAAIoB,WAAJ,EAAiB;AACf,QAAMiE,eAAe,GAAGvC,QAAQ,CAACK,KAAT,CAAeL,QAAQ,CAACC,cAAT,GAA0B,CAAzC,CAAxB;;AACA,QACED,QAAQ,CAACC,cAAT,KAA4B,CAA5B,IACAsC,eAAe,IAAI,IADnB,IAEA,CAACA,eAAe,CAAC7C,KAAhB,CAAsB,IAAtB,CAHH,EAIE;AACAsC,MAAAA,WAAW,cAAOA,WAAP,CAAX;AACD;AACF;;AACDiB,EAAAA,YAAY,GAAGlB,kBAAkB,CAC/B/B,QAD+B,EAE/BgC,WAF+B,EAG/BC,WAH+B,EAI/Bc,GAAG,CAACzF,SAJ2B,CAAjC;AAMA,MAAI2C,cAAc,GAAGD,QAAQ,CAACC,cAA9B;AACA,MAAIC,YAAY,GAAGF,QAAQ,CAACE,YAA5B;AACA,MAAMgD,cAAc,GAClBtF,WAAW,CAACqB,MAAZ,GAAqB,CAArB,IACAgD,WAAW,CAACkB,OAAZ,CAAoBvF,WAApB,IAAmC,CAAC,CADpC,IAEAqF,YAAY,CAAChE,MAAb,GAAsB,CAHxB;;AAIA,MAAI1B,oBAAJ,EAA0B;AACxB,QAAM6F,GAAG,GAAGd,8BAA8B,CAACtC,QAAD,CAA1C;AACA6C,IAAAA,gBAAgB,GAAGO,GAAG,CAACP,gBAAvB;AACAC,IAAAA,iBAAiB,GAAGM,GAAG,CAACN,iBAAxB;AACAd,IAAAA,WAAW,GAAGa,gBAAgB,GAAG5F,MAAjC;AACAgF,IAAAA,WAAW,IAAIa,iBAAf;AACD;;AAED,MACEG,YAAY,CAACI,UAAb,CAAwBrB,WAAxB,KACAiB,YAAY,CAACK,QAAb,CAAsBrB,WAAtB,CAFF,EAGE;AACA,QAAMsB,eAAe,GAAGN,YAAY,CAAC3C,KAAb,CACtB0B,WAAW,CAAC/C,MADU,EAEtBgE,YAAY,CAAChE,MAAb,GAAsBgD,WAAW,CAAChD,MAFZ,CAAxB;;AAIA,QAAIkB,sBAAsB,KAAK6C,oBAA/B,EAAqD;AACnD,UAAIQ,QAAQ,GAAGrD,sBAAsB,GAAG6B,WAAW,CAAC/C,MAApD;AACAuE,MAAAA,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAASF,QAAT,EAAmBvD,cAAnB,CAAX;AACAuD,MAAAA,QAAQ,GAAGC,IAAI,CAACE,GAAL,CAASH,QAAT,EAAmBvD,cAAc,GAAGsD,eAAe,CAACtE,MAApD,CAAX;AACAgB,MAAAA,cAAc,GAAGC,YAAY,GAAGsD,QAAhC;AACD,KALD,MAKO;AACLtD,MAAAA,YAAY,GAAGD,cAAc,GAAGsD,eAAe,CAACtE,MAAhD;AACD;;AACD,WAAO;AAAEM,MAAAA,IAAI,EAAEgE,eAAR;AAAyBtD,MAAAA,cAAc,EAAdA,cAAzB;AAAyCC,MAAAA,YAAY,EAAZA;AAAzC,KAAP;AACD,GAjBD,MAiBO,IAAI,CAACgD,cAAL,EAAqB;AAC1B,QAAIK,gBAAe,GAAGvB,WAAW,GAAGiB,YAAd,GAA6BhB,WAAnD;;AACAhC,IAAAA,cAAc,GAAGE,sBAAsB,GAAG6B,WAAW,CAAC/C,MAAtD;AACAiB,IAAAA,YAAY,GAAG8C,oBAAoB,GAAGhB,WAAW,CAAC/C,MAAlD;AACA,QAAM2E,eAAe,GAAGX,YAAY,CAACvD,KAAb,CAAmB,YAAnB,CAAxB;;AACA,QAAIqD,GAAG,CAAC5F,SAAJ,IAAiByG,eAArB,EAAsC;AACpC,UAAMC,iBAAiB,GAAGD,eAAe,CAAC,CAAD,CAAf,IAAsB,EAAhD;AACA,UAAME,kBAAkB,GAAGF,eAAe,CAAC,CAAD,CAAf,IAAsB,EAAjD;AACAL,MAAAA,gBAAe,GACbM,iBAAiB,GACjB7B,WADA,GAEAiB,YAAY,CAAClE,IAAb,EAFA,GAGAkD,WAHA,GAIA6B,kBALF;AAMA7D,MAAAA,cAAc,IAAI4D,iBAAiB,CAAC5E,MAApC;AACAiB,MAAAA,YAAY,IAAI4D,kBAAkB,CAAC7E,MAAnC;AACD;;AACD,WAAO;AAAEM,MAAAA,IAAI,EAAEgE,gBAAR;AAAyBtD,MAAAA,cAAc,EAAdA,cAAzB;AAAyCC,MAAAA,YAAY,EAAZA;AAAzC,KAAP;AACD,GAlBM,MAkBA,IAAIrC,OAAO,CAACoB,MAAR,GAAiB,CAAjB,IAAsBgE,YAAY,CAACvD,KAAb,CAAmB7B,OAAnB,CAA1B,EAAuD;AAC5DoE,IAAAA,WAAW,GAAGA,WAAW,CAAC8B,OAAZ,CAAoBnG,WAApB,EAAiCqF,YAAjC,CAAd;;AACA,QAAMM,iBAAe,GAAGvB,WAAW,GAAGC,WAAtC;;AACAhC,IAAAA,cAAc,GAAGC,YAAY,GAAGD,cAAc,GAAG+B,WAAW,CAAC/C,MAA7D;AACA,WAAO;AAAEM,MAAAA,IAAI,EAAEgE,iBAAR;AAAyBtD,MAAAA,cAAc,EAAdA,cAAzB;AAAyCC,MAAAA,YAAY,EAAZA;AAAzC,KAAP;AACD,GALM,MAKA;AACL,QAAMqD,iBAAe,GAAGvB,WAAW,GAAGiB,YAAd,GAA6BhB,WAArD;;AACAhC,IAAAA,cAAc,GACZA,cAAc,GACd+B,WAAW,CAAC/C,MADZ,GAEAgE,YAAY,CAAChE,MAFb,GAGAgD,WAAW,CAACkB,OAAZ,CAAoBvF,WAApB,CAJF;AAKAsC,IAAAA,YAAY,GAAGD,cAAc,GAAGrC,WAAW,CAACqB,MAA5C;AACA,WAAO;AAAEM,MAAAA,IAAI,EAAEgE,iBAAR;AAAyBtD,MAAAA,cAAc,EAAdA,cAAzB;AAAyCC,MAAAA,YAAY,EAAZA;AAAzC,KAAP;AACD;AACF;;AAED,SAAS2B,cAAT,CAAwB7B,QAAxB,EAAuD+C,GAAvD,EAAuE;AAAA,MAC7D9F,MAD6D,GACpB8F,GADoB,CAC7D9F,MAD6D;AAAA,MACrDC,MADqD,GACpB6F,GADoB,CACrD7F,MADqD;AAAA,MAC7CK,oBAD6C,GACpBwF,GADoB,CAC7CxF,oBAD6C;AAErE,MAAIgC,IAAI,GAAGS,QAAQ,CAACK,KAAT,CAAeC,KAAf,CACTN,QAAQ,CAACC,cADA,EAETD,QAAQ,CAACE,YAFA,CAAX;AAIA,MAAID,cAAc,GAAGD,QAAQ,CAACC,cAA9B;AACA,MAAIC,YAAY,GAAGF,QAAQ,CAACE,YAA5B;AACA,MAAM8D,KAAK,GAAGzE,IAAI,CAACP,KAAL,CAAW,IAAX,CAAd;AACA,MAAMiF,SAAS,GAAGD,KAAK,CAACE,KAAN,CAChB,UAACC,IAAD;AAAA,WAAUA,IAAI,CAACd,UAAL,CAAgBpG,MAAhB,KAA2BkH,IAAI,CAACb,QAAL,CAAcpG,MAAd,CAArC;AAAA,GADgB,CAAlB;;AAIA,MAAI+G,SAAJ,EAAe;AACb1E,IAAAA,IAAI,GAAGyE,KAAK,CACTI,GADI,CACA,UAACD,IAAD;AAAA,aAAUA,IAAI,CAAC7D,KAAL,CAAWrD,MAAM,CAACgC,MAAlB,EAA0BkF,IAAI,CAAClF,MAAL,GAAc/B,MAAM,CAAC+B,MAA/C,CAAV;AAAA,KADA,EAEJI,IAFI,CAEC,IAFD,CAAP;AAGAa,IAAAA,YAAY,GAAGD,cAAc,GAAGV,IAAI,CAACN,MAArC;AACD,GALD,MAKO;AACLM,IAAAA,IAAI,GAAGyE,KAAK,CAACI,GAAN,CAAU,UAACD,IAAD;AAAA,aAAUlH,MAAM,GAAGkH,IAAT,GAAgBjH,MAA1B;AAAA,KAAV,EAA4CmC,IAA5C,CAAiD,IAAjD,CAAP;;AACA,QAAI9B,oBAAJ,EAA0B;AAAA,kCAIpB+E,8BAA8B,CAACtC,QAAD,CAJV;AAAA,UAEtB6C,gBAFsB,yBAEtBA,gBAFsB;AAAA,UAGtBC,iBAHsB,yBAGtBA,iBAHsB;;AAKxB7C,MAAAA,cAAc,IAAI4C,gBAAgB,CAAC5D,MAAnC;AACAiB,MAAAA,YAAY,GAAGD,cAAc,GAAGV,IAAI,CAACN,MAArC;AACAM,MAAAA,IAAI,GAAGsD,gBAAgB,GAAGtD,IAAnB,GAA0BuD,iBAAjC;AACD;AACF;;AAED,SAAO;AAAEvD,IAAAA,IAAI,EAAJA,IAAF;AAAQU,IAAAA,cAAc,EAAdA,cAAR;AAAwBC,IAAAA,YAAY,EAAZA;AAAxB,GAAP;AACD;;AAED,SAASlC,WAAT,CAAqBgC,QAArB,EAAoE;AAClE,MAAMqE,gBAAgB,GAAG,WAAzB;AACA,MAAMC,kBAAkB,GAAGtE,QAAQ,CAACC,cAAT,KAA4BD,QAAQ,CAACE,YAAhE;AACA,MAAIA,YAAJ;AACA,MAAID,cAAJ;AACA,MAAIV,IAAI,GAAGS,QAAQ,CAACK,KAAT,CAAeC,KAAf,CACTN,QAAQ,CAACC,cADA,EAETD,QAAQ,CAACE,YAFA,CAAX;AAIA,MAAIqE,aAAa,GAAGhF,IAApB;AACA,MAAIyE,KAAK,GAAGzE,IAAI,CAACP,KAAL,CAAW,IAAX,CAAZ;AACA,MAAIwF,WAAJ;AACA,MAAIC,SAAJ;;AACA,MAAIH,kBAAJ,EAAwB;AACtB,QAAMI,WAAW,GAAG1E,QAAQ,CAACK,KAAT,CACjBC,KADiB,CACX,CADW,EACRN,QAAQ,CAACC,cADD,EAEjBjB,KAFiB,CAEX,IAFW,CAApB;AAGAwF,IAAAA,WAAW,GACTxE,QAAQ,CAACC,cAAT,GAA0ByE,WAAW,CAACA,WAAW,CAACzF,MAAZ,GAAqB,CAAtB,CAAX,CAAoCA,MADhE;AAEAwF,IAAAA,SAAS,GAAG9E,gBAAgB,CAACK,QAAQ,CAACK,KAAV,EAAiBL,QAAQ,CAACC,cAA1B,EAA0C,IAA1C,CAA5B;AACAsE,IAAAA,aAAa,GAAGvE,QAAQ,CAACK,KAAT,CAAeC,KAAf,CAAqBkE,WAArB,EAAkCC,SAAlC,CAAhB;AACD;;AACD,MAAME,cAAc,GAAGJ,aAAa,CAACvF,KAAd,CAAoB,IAApB,CAAvB;AACA,MAAM4F,WAAW,GAAGD,cAAc,CAACT,KAAf,CAAqB,UAACC,IAAD;AAAA,WACvCE,gBAAgB,CAACQ,IAAjB,CAAsBV,IAAtB,CADuC;AAAA,GAArB,CAApB;;AAIA,MAAIS,WAAJ,EAAiB;AACfZ,IAAAA,KAAK,GAAGW,cAAc,CAACP,GAAf,CAAmB,UAACD,IAAD;AAAA,aAAUA,IAAI,CAACJ,OAAL,CAAaM,gBAAb,EAA+B,EAA/B,CAAV;AAAA,KAAnB,CAAR;AACA9E,IAAAA,IAAI,GAAGyE,KAAK,CAAC3E,IAAN,CAAW,IAAX,CAAP;;AACA,QAAIiF,kBAAkB,IAAIE,WAAtB,IAAqCC,SAAzC,EAAoD;AAClD,UAAMK,UAAU,GAAGH,cAAc,CAAC,CAAD,CAAd,CAAkB1F,MAAlB,GAA2B+E,KAAK,CAAC,CAAD,CAAL,CAAS/E,MAAvD;AACAgB,MAAAA,cAAc,GAAGC,YAAY,GAAGF,QAAQ,CAACC,cAAT,GAA0B6E,UAA1D;AACA9E,MAAAA,QAAQ,CAACC,cAAT,GAA0BuE,WAA1B;AACAxE,MAAAA,QAAQ,CAACE,YAAT,GAAwBuE,SAAxB;AACD;AACF,GATD,MASO;AACLT,IAAAA,KAAK,GAAI,YAAY;AACnB,UAAIxE,CAAJ;AACA,UAAIuF,GAAJ;AACA,UAAItF,KAAJ;AACA,UAAMuF,OAAO,GAAG,EAAhB;;AACA,WAAKvF,KAAK,GAAGD,CAAC,GAAG,CAAZ,EAAeuF,GAAG,GAAGf,KAAK,CAAC/E,MAAhC,EAAwCO,CAAC,GAAGuF,GAA5C,EAAiDtF,KAAK,GAAG,EAAED,CAA3D,EAA8D;AAC5D,YAAM2E,IAAI,GAAGH,KAAK,CAACvE,KAAD,CAAlB;AACAuF,QAAAA,OAAO,CAACC,IAAR,WAAgBxF,KAAK,GAAG,CAAxB,eAA8B0E,IAA9B;AACD;;AACD,aAAOa,OAAP;AACD,KAVO,EAAR;;AAWAzF,IAAAA,IAAI,GAAGyE,KAAK,CAAC3E,IAAN,CAAW,IAAX,CAAP;;AAZK,iCAgBDiD,8BAA8B,CAACtC,QAAD,CAhB7B;AAAA,QAcH6C,gBAdG,0BAcHA,gBAdG;AAAA,QAeHC,iBAfG,0BAeHA,iBAfG;;AAiBL7C,IAAAA,cAAc,GAAGD,QAAQ,CAACC,cAAT,GAA0B4C,gBAAgB,CAAC5D,MAA5D;AACAiB,IAAAA,YAAY,GAAGD,cAAc,GAAGV,IAAI,CAACN,MAArC;AACA,QAAIqF,kBAAJ,EAAwBrE,cAAc,GAAGC,YAAjB;AACxBX,IAAAA,IAAI,GAAGsD,gBAAgB,GAAGtD,IAAnB,GAA0BuD,iBAAjC;AACD;;AAED,SAAO;AAAEvD,IAAAA,IAAI,EAAJA,IAAF;AAAQU,IAAAA,cAAc,EAAdA,cAAR;AAAwBC,IAAAA,YAAY,EAAZA;AAAxB,GAAP;AACD;;AAED,eAAe9D,eAAf","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n// The text-formatting logic & code in this file come from\n// https://github.com/github/markdown-toolbar-element/blob/main/src/index.ts\n// under the following MIT license\n/*\nCopyright (c) 2017-2018 GitHub, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n */\n\nimport {\n  EuiMarkdownEditorUiPlugin,\n  EuiMarkdownFormatting,\n  isPluginWithImmediateFormatting,\n} from './markdown_types';\n\n/**\n * Class for applying styles to a text editor. Accepts the HTML ID for the textarea\n * desired, and exposes the `.do(ACTION)` method for manipulating the text.\n *\n * @class MarkdownActions\n * @param {string} editorID\n */\nclass MarkdownActions {\n  styles: Record<string, EuiMarkdownEditorUiPlugin>;\n\n  constructor(public editorID: string, uiPlugins: EuiMarkdownEditorUiPlugin[]) {\n    /**\n     * This object is in the format:\n     * [nameOfAction]: {[styles to apply]}\n     */\n    this.styles = {\n      ...uiPlugins.reduce<MarkdownActions['styles']>(\n        (mappedPlugins, plugin) => {\n          mappedPlugins[plugin.name] = plugin;\n          return mappedPlugins;\n        },\n        {}\n      ),\n      mdBold: {\n        name: 'mdBold',\n        button: { label: '', iconType: '' },\n        formatting: {\n          prefix: '**',\n          suffix: '**',\n          trimFirst: true,\n        },\n      },\n      mdItalic: {\n        name: 'mdItalic',\n        button: { label: '', iconType: '' },\n        formatting: {\n          prefix: '_',\n          suffix: '_',\n          trimFirst: true,\n        },\n      },\n      mdQuote: {\n        name: 'mdQuote',\n        button: { label: '', iconType: '' },\n        formatting: {\n          prefix: '> ',\n          multiline: true,\n          surroundWithNewlines: true,\n        },\n      },\n      mdCode: {\n        name: 'mdCode',\n        button: { label: '', iconType: '' },\n        formatting: {\n          prefix: '`',\n          suffix: '`',\n          blockPrefix: '```',\n          blockSuffix: '```',\n        },\n      },\n      mdLink: {\n        name: 'mdLink',\n        button: { label: '', iconType: '' },\n        formatting: {\n          prefix: '[',\n          suffix: '](url)',\n          replaceNext: 'url',\n          scanFor: 'https?://',\n        },\n      },\n      mdUl: {\n        name: 'mdUl',\n        button: { label: '', iconType: '' },\n        formatting: {\n          prefix: '- ',\n          multiline: true,\n          surroundWithNewlines: true,\n        },\n      },\n      mdOl: {\n        name: 'mdOl',\n        button: { label: '', iconType: '' },\n        formatting: {\n          prefix: '1. ',\n          multiline: true,\n          orderedList: true,\n        },\n      },\n      mdTl: {\n        name: 'mdTl',\n        button: { label: '', iconType: '' },\n        formatting: {\n          prefix: '- [ ] ',\n          multiline: true,\n          surroundWithNewlines: true,\n        },\n      },\n    };\n  }\n\n  /**\n   * .do() accepts a string and retrieves the correlating style object (defined in the\n   * constructor). It passes this to applyStyle() that does the text manipulation.\n   *\n   * @param {string} pluginName\n   * @memberof MarkdownActions\n   */\n  do(pluginName: string) {\n    const plugin = this.styles[pluginName];\n    if (isPluginWithImmediateFormatting(plugin)) {\n      this.applyStyle(plugin.formatting);\n      return true;\n    } else {\n      return plugin;\n    }\n  }\n\n  /**\n   * Sets the default styling object and then superimposes the changes to make on top of\n   * it. Calls the `styleSelectedText` helper function that does the heavy lifting.\n   * Adapted from https://github.com/github/markdown-toolbar-element/blob/main/src/index.ts\n   *\n   * @param {object} incomingStyle\n   * @memberof MarkdownActions\n   */\n  applyStyle(incomingStyle: EuiMarkdownFormatting) {\n    const defaults = {\n      prefix: '',\n      suffix: '',\n      blockPrefix: '',\n      blockSuffix: '',\n      multiline: false,\n      replaceNext: '',\n      prefixSpace: false,\n      scanFor: '',\n      surroundWithNewlines: false,\n      orderedList: false,\n      trimFirst: false,\n    };\n\n    const outgoingStyle = {\n      ...defaults,\n      ...incomingStyle,\n    };\n    const editor = document.getElementById(\n      this.editorID\n    ) as HTMLTextAreaElement;\n\n    if (editor) {\n      editor.focus();\n      styleSelectedText(editor, outgoingStyle);\n    }\n  }\n}\n\n/**\n * The following helper functions and types were copied from the GitHub Markdown Toolbar\n * Element project. The project is MIT-licensed. See it here:\n * https://github.com/github/markdown-toolbar-element\n */\n\ninterface Newlines {\n  newlinesToAppend: string;\n  newlinesToPrepend: string;\n}\n\ninterface SelectionRange {\n  text: string;\n  selectionStart?: number;\n  selectionEnd?: number;\n}\n\ninterface StyleArgs {\n  prefix: string;\n  suffix: string;\n  blockPrefix: string;\n  blockSuffix: string;\n  multiline: boolean;\n  replaceNext: string;\n  prefixSpace: boolean;\n  scanFor: string;\n  surroundWithNewlines: boolean;\n  orderedList: boolean;\n  trimFirst: boolean;\n}\n\nfunction isMultipleLines(string: string): boolean {\n  return string.trim().split('\\n').length > 1;\n}\n\nfunction repeat(string: string, n: number): string {\n  return Array(n + 1).join(string);\n}\n\nfunction wordSelectionStart(text: string, i: number): number {\n  let index = i;\n  while (\n    text[index] &&\n    text[index - 1] != null &&\n    !text[index - 1].match(/\\s/)\n  ) {\n    index--;\n  }\n  return index;\n}\n\nfunction wordSelectionEnd(text: string, i: number, multiline: boolean): number {\n  let index = i;\n  const breakpoint = multiline ? /\\n/ : /\\s/;\n  while (text[index] && !text[index].match(breakpoint)) {\n    index++;\n  }\n  return index;\n}\n\nconst MAX_TRIES = 10;\nconst TRY_TIMEOUT = 10; /*ms*/\n// modified from https://github.com/github/markdown-toolbar-element/blob/main/src/index.ts\nexport function insertText(\n  textarea: HTMLTextAreaElement,\n  { text, selectionStart, selectionEnd }: SelectionRange\n) {\n  const originalSelectionStart = textarea.selectionStart;\n  const before = textarea.value.slice(0, originalSelectionStart);\n  const after = textarea.value.slice(textarea.selectionEnd);\n\n  // configuration modal/dialog will continue intercepting focus in Safari\n  // need to wait until the textarea can receive focus\n  let tries = 0;\n\n  const insertText = () => {\n    const insertResult = document.execCommand('insertText', false, text);\n\n    if (insertResult === false) {\n      /**\n       * Fallback for Firefox; this kills undo/redo but at least updates the value\n       *\n       * Note that we're using the native HTMLTextAreaElement.set() method to play nicely with\n       * React's synthetic event system.\n       * https://hustle.bizongo.in/simulate-react-on-change-on-controlled-components-baa336920e04\n       */\n      const inputEvent = new Event('input', { bubbles: true });\n      const nativeInputValueSetter = Object.getOwnPropertyDescriptor(\n        window.HTMLTextAreaElement.prototype,\n        'value'\n      )!.set;\n      nativeInputValueSetter!.call(textarea, before + text + after);\n      textarea.dispatchEvent(inputEvent);\n    }\n\n    if (selectionStart != null && selectionEnd != null) {\n      textarea.setSelectionRange(selectionStart, selectionEnd);\n    } else {\n      textarea.setSelectionRange(originalSelectionStart, textarea.selectionEnd);\n    }\n  };\n\n  const focusTextarea = () => {\n    textarea.focus();\n    if (document.activeElement === textarea) {\n      insertText();\n    } else if (++tries === MAX_TRIES) {\n      insertText();\n    } else {\n      setTimeout(focusTextarea, TRY_TIMEOUT);\n    }\n  };\n\n  focusTextarea();\n}\n\n// from https://github.com/github/markdown-toolbar-element/blob/main/src/index.ts\nfunction styleSelectedText(\n  textarea: HTMLTextAreaElement,\n  styleArgs: StyleArgs\n) {\n  const text = textarea.value.slice(\n    textarea.selectionStart,\n    textarea.selectionEnd\n  );\n\n  let result;\n  if (styleArgs.orderedList) {\n    result = orderedList(textarea);\n  } else if (styleArgs.multiline && isMultipleLines(text)) {\n    result = multilineStyle(textarea, styleArgs);\n  } else {\n    result = blockStyle(textarea, styleArgs);\n  }\n\n  insertText(textarea, result);\n}\n\nfunction expandSelectedText(\n  textarea: HTMLTextAreaElement,\n  prefixToUse: string,\n  suffixToUse: string,\n  multiline: boolean = false\n): string {\n  if (textarea.selectionStart === textarea.selectionEnd) {\n    textarea.selectionStart = wordSelectionStart(\n      textarea.value,\n      textarea.selectionStart\n    );\n    textarea.selectionEnd = wordSelectionEnd(\n      textarea.value,\n      textarea.selectionEnd,\n      multiline\n    );\n  } else {\n    const expandedSelectionStart = textarea.selectionStart - prefixToUse.length;\n    const expandedSelectionEnd = textarea.selectionEnd + suffixToUse.length;\n    const beginsWithPrefix =\n      textarea.value.slice(expandedSelectionStart, textarea.selectionStart) ===\n      prefixToUse;\n    const endsWithSuffix =\n      textarea.value.slice(textarea.selectionEnd, expandedSelectionEnd) ===\n      suffixToUse;\n    if (beginsWithPrefix && endsWithSuffix) {\n      textarea.selectionStart = expandedSelectionStart;\n      textarea.selectionEnd = expandedSelectionEnd;\n    }\n  }\n  return textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);\n}\n\nfunction newlinesToSurroundSelectedText(\n  textarea: HTMLTextAreaElement\n): Newlines {\n  const beforeSelection = textarea.value.slice(0, textarea.selectionStart);\n  const afterSelection = textarea.value.slice(textarea.selectionEnd);\n\n  const breaksBefore = beforeSelection.match(/\\n*$/);\n  const breaksAfter = afterSelection.match(/^\\n*/);\n  const newlinesBeforeSelection = breaksBefore ? breaksBefore[0].length : 0;\n  const newlinesAfterSelection = breaksAfter ? breaksAfter[0].length : 0;\n\n  let newlinesToAppend;\n  let newlinesToPrepend;\n\n  if (beforeSelection.match(/\\S/) && newlinesBeforeSelection < 2) {\n    newlinesToAppend = repeat('\\n', 2 - newlinesBeforeSelection);\n  }\n\n  if (afterSelection.match(/\\S/) && newlinesAfterSelection < 2) {\n    newlinesToPrepend = repeat('\\n', 2 - newlinesAfterSelection);\n  }\n\n  if (newlinesToAppend == null) {\n    newlinesToAppend = '';\n  }\n\n  if (newlinesToPrepend == null) {\n    newlinesToPrepend = '';\n  }\n\n  return { newlinesToAppend, newlinesToPrepend };\n}\n\nfunction blockStyle(\n  textarea: HTMLTextAreaElement,\n  arg: StyleArgs\n): SelectionRange {\n  let newlinesToAppend;\n  let newlinesToPrepend;\n\n  const {\n    prefix,\n    suffix,\n    blockPrefix,\n    blockSuffix,\n    replaceNext,\n    prefixSpace,\n    scanFor,\n    surroundWithNewlines,\n  } = arg;\n  const originalSelectionStart = textarea.selectionStart;\n  const originalSelectionEnd = textarea.selectionEnd;\n\n  let selectedText = textarea.value.slice(\n    textarea.selectionStart,\n    textarea.selectionEnd\n  );\n  let prefixToUse =\n    isMultipleLines(selectedText) && blockPrefix.length > 0\n      ? `${blockPrefix}\\n`\n      : prefix;\n  let suffixToUse =\n    isMultipleLines(selectedText) && blockSuffix.length > 0\n      ? `\\n${blockSuffix}`\n      : suffix;\n\n  if (prefixSpace) {\n    const beforeSelection = textarea.value[textarea.selectionStart - 1];\n    if (\n      textarea.selectionStart !== 0 &&\n      beforeSelection != null &&\n      !beforeSelection.match(/\\s/)\n    ) {\n      prefixToUse = ` ${prefixToUse}`;\n    }\n  }\n  selectedText = expandSelectedText(\n    textarea,\n    prefixToUse,\n    suffixToUse,\n    arg.multiline\n  );\n  let selectionStart = textarea.selectionStart;\n  let selectionEnd = textarea.selectionEnd;\n  const hasReplaceNext =\n    replaceNext.length > 0 &&\n    suffixToUse.indexOf(replaceNext) > -1 &&\n    selectedText.length > 0;\n  if (surroundWithNewlines) {\n    const ref = newlinesToSurroundSelectedText(textarea);\n    newlinesToAppend = ref.newlinesToAppend;\n    newlinesToPrepend = ref.newlinesToPrepend;\n    prefixToUse = newlinesToAppend + prefix;\n    suffixToUse += newlinesToPrepend;\n  }\n\n  if (\n    selectedText.startsWith(prefixToUse) &&\n    selectedText.endsWith(suffixToUse)\n  ) {\n    const replacementText = selectedText.slice(\n      prefixToUse.length,\n      selectedText.length - suffixToUse.length\n    );\n    if (originalSelectionStart === originalSelectionEnd) {\n      let position = originalSelectionStart - prefixToUse.length;\n      position = Math.max(position, selectionStart);\n      position = Math.min(position, selectionStart + replacementText.length);\n      selectionStart = selectionEnd = position;\n    } else {\n      selectionEnd = selectionStart + replacementText.length;\n    }\n    return { text: replacementText, selectionStart, selectionEnd };\n  } else if (!hasReplaceNext) {\n    let replacementText = prefixToUse + selectedText + suffixToUse;\n    selectionStart = originalSelectionStart + prefixToUse.length;\n    selectionEnd = originalSelectionEnd + prefixToUse.length;\n    const whitespaceEdges = selectedText.match(/^\\s*|\\s*$/g);\n    if (arg.trimFirst && whitespaceEdges) {\n      const leadingWhitespace = whitespaceEdges[0] || '';\n      const trailingWhitespace = whitespaceEdges[1] || '';\n      replacementText =\n        leadingWhitespace +\n        prefixToUse +\n        selectedText.trim() +\n        suffixToUse +\n        trailingWhitespace;\n      selectionStart += leadingWhitespace.length;\n      selectionEnd -= trailingWhitespace.length;\n    }\n    return { text: replacementText, selectionStart, selectionEnd };\n  } else if (scanFor.length > 0 && selectedText.match(scanFor)) {\n    suffixToUse = suffixToUse.replace(replaceNext, selectedText);\n    const replacementText = prefixToUse + suffixToUse;\n    selectionStart = selectionEnd = selectionStart + prefixToUse.length;\n    return { text: replacementText, selectionStart, selectionEnd };\n  } else {\n    const replacementText = prefixToUse + selectedText + suffixToUse;\n    selectionStart =\n      selectionStart +\n      prefixToUse.length +\n      selectedText.length +\n      suffixToUse.indexOf(replaceNext);\n    selectionEnd = selectionStart + replaceNext.length;\n    return { text: replacementText, selectionStart, selectionEnd };\n  }\n}\n\nfunction multilineStyle(textarea: HTMLTextAreaElement, arg: StyleArgs) {\n  const { prefix, suffix, surroundWithNewlines } = arg;\n  let text = textarea.value.slice(\n    textarea.selectionStart,\n    textarea.selectionEnd\n  );\n  let selectionStart = textarea.selectionStart;\n  let selectionEnd = textarea.selectionEnd;\n  const lines = text.split('\\n');\n  const undoStyle = lines.every(\n    (line) => line.startsWith(prefix) && line.endsWith(suffix)\n  );\n\n  if (undoStyle) {\n    text = lines\n      .map((line) => line.slice(prefix.length, line.length - suffix.length))\n      .join('\\n');\n    selectionEnd = selectionStart + text.length;\n  } else {\n    text = lines.map((line) => prefix + line + suffix).join('\\n');\n    if (surroundWithNewlines) {\n      const {\n        newlinesToAppend,\n        newlinesToPrepend,\n      } = newlinesToSurroundSelectedText(textarea);\n      selectionStart += newlinesToAppend.length;\n      selectionEnd = selectionStart + text.length;\n      text = newlinesToAppend + text + newlinesToPrepend;\n    }\n  }\n\n  return { text, selectionStart, selectionEnd };\n}\n\nfunction orderedList(textarea: HTMLTextAreaElement): SelectionRange {\n  const orderedListRegex = /^\\d+\\.\\s+/;\n  const noInitialSelection = textarea.selectionStart === textarea.selectionEnd;\n  let selectionEnd;\n  let selectionStart;\n  let text = textarea.value.slice(\n    textarea.selectionStart,\n    textarea.selectionEnd\n  );\n  let textToUnstyle = text;\n  let lines = text.split('\\n');\n  let startOfLine;\n  let endOfLine;\n  if (noInitialSelection) {\n    const linesBefore = textarea.value\n      .slice(0, textarea.selectionStart)\n      .split(/\\n/);\n    startOfLine =\n      textarea.selectionStart - linesBefore[linesBefore.length - 1].length;\n    endOfLine = wordSelectionEnd(textarea.value, textarea.selectionStart, true);\n    textToUnstyle = textarea.value.slice(startOfLine, endOfLine);\n  }\n  const linesToUnstyle = textToUnstyle.split('\\n');\n  const undoStyling = linesToUnstyle.every((line) =>\n    orderedListRegex.test(line)\n  );\n\n  if (undoStyling) {\n    lines = linesToUnstyle.map((line) => line.replace(orderedListRegex, ''));\n    text = lines.join('\\n');\n    if (noInitialSelection && startOfLine && endOfLine) {\n      const lengthDiff = linesToUnstyle[0].length - lines[0].length;\n      selectionStart = selectionEnd = textarea.selectionStart - lengthDiff;\n      textarea.selectionStart = startOfLine;\n      textarea.selectionEnd = endOfLine;\n    }\n  } else {\n    lines = (function () {\n      let i;\n      let len;\n      let index;\n      const results = [];\n      for (index = i = 0, len = lines.length; i < len; index = ++i) {\n        const line = lines[index];\n        results.push(`${index + 1}. ${line}`);\n      }\n      return results;\n    })();\n    text = lines.join('\\n');\n    const {\n      newlinesToAppend,\n      newlinesToPrepend,\n    } = newlinesToSurroundSelectedText(textarea);\n    selectionStart = textarea.selectionStart + newlinesToAppend.length;\n    selectionEnd = selectionStart + text.length;\n    if (noInitialSelection) selectionStart = selectionEnd;\n    text = newlinesToAppend + text + newlinesToPrepend;\n  }\n\n  return { text, selectionStart, selectionEnd };\n}\n\nexport default MarkdownActions;\n"]}]}