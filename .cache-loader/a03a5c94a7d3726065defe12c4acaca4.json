{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\observer\\mutation_observer\\mutation_observer.ts","dependencies":[{"path":"D:\\work\\eui\\src\\components\\observer\\mutation_observer\\mutation_observer.ts","mtime":1649070093715},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/observer/mutation_observer/mutation_observer.ts"],"names":["useEffect","EuiObserver","EuiMutationObserver","records","observer","props","onMutation","childNode","makeMutationObserver","observerOptions","node","_observerOptions","callback","needsAttributes","hasOwnProperty","attributes","MutationObserver","observe","useMutationObserver","container","disconnect"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAoBA,SAApB,QAAqC,OAArC;AAEA,SAASC,WAAT,QAA4B,aAA5B;AAWA,WAAaC,mBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,2DACS,qBADT;;AAAA,iEAKiC,UAACC,OAAD,EAAUC,QAAV,EAAuB;AACpD,YAAKC,KAAL,CAAWC,UAAX,CAAsBH,OAAtB,EAA+BC,QAA/B;AACD,KAPH;;AAAA,mEASiB,YAAM;AACnB,UAAMG,SAAS,GAAG,MAAKA,SAAvB;AACA,YAAKH,QAAL,GAAgBI,oBAAoB,CAClCD,SADkC,EAElC,MAAKF,KAAL,CAAWI,eAFuB,EAGlC,MAAKH,UAH6B,CAApC;AAKD,KAhBH;;AAAA;AAAA;;AAAA;AAAA,EAAyCL,WAAzC;;AAmBA,IAAMO,oBAAoB,GAAG,SAAvBA,oBAAuB,CAC3BE,IAD2B,EAE3BC,gBAF2B,EAG3BC,QAH2B,EAIxB;AACH;AACA;AACA;AACA;AACA;AACA,MAAMH,eAAqC,qBACtCE,gBADsC,CAA3C;;AAGA,MAAME,eAAe,GACnBJ,eAAe,CAACK,cAAhB,CAA+B,mBAA/B,KACAL,eAAe,CAACK,cAAhB,CAA+B,iBAA/B,CAFF;;AAGA,MAAID,eAAe,IAAI,CAACJ,eAAe,CAACK,cAAhB,CAA+B,YAA/B,CAAxB,EAAsE;AACpEL,IAAAA,eAAe,CAACM,UAAhB,GAA6B,IAA7B;AACD;;AAED,MAAMX,QAAQ,GAAG,IAAIY,gBAAJ,CAAqBJ,QAArB,CAAjB;AACAR,EAAAA,QAAQ,CAACa,OAAT,CAAiBP,IAAjB,EAAuBD,eAAvB;AAEA,SAAOL,QAAP;AACD,CAxBD;;AA0BA,OAAO,IAAMc,mBAAmB,GAAG,SAAtBA,mBAAsB,CACjCC,SADiC,EAEjCP,QAFiC,EAGjCH,eAHiC,EAI9B;AACHT,EAAAA,SAAS,CACP,YAAM;AACJ,QAAImB,SAAS,IAAI,IAAjB,EAAuB;AACrB,UAAMf,QAAQ,GAAGI,oBAAoB,CACnCW,SADmC,EAEnCV,eAFmC,EAGnCG,QAHmC,CAArC;AAKA,aAAO;AAAA,eAAMR,QAAQ,CAACgB,UAAT,EAAN;AAAA,OAAP;AACD;AACF,GAVM,EAWP;AACA;AACA,GAACD,SAAD,EAAYP,QAAZ,CAbO,CAAT;AAeD,CApBM","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { ReactNode, useEffect } from 'react';\n\nimport { EuiObserver } from '../observer';\n\nexport interface EuiMutationObserverProps {\n  /**\n   * ReactNode to render as this component's content\n   */\n  children: (ref: (e: HTMLElement | null) => void) => ReactNode;\n  onMutation: MutationCallback;\n  observerOptions?: MutationObserverInit;\n}\n\nexport class EuiMutationObserver extends EuiObserver<EuiMutationObserverProps> {\n  name = 'EuiMutationObserver';\n\n  // the `onMutation` prop may change while the observer is bound, abstracting\n  // it out into a separate function means the current `onMutation` value is used\n  onMutation: MutationCallback = (records, observer) => {\n    this.props.onMutation(records, observer);\n  };\n\n  beginObserve = () => {\n    const childNode = this.childNode!;\n    this.observer = makeMutationObserver(\n      childNode,\n      this.props.observerOptions,\n      this.onMutation\n    );\n  };\n}\n\nconst makeMutationObserver = (\n  node: Element,\n  _observerOptions: MutationObserverInit | undefined,\n  callback: MutationCallback\n) => {\n  // IE11 and the MutationObserver polyfill used in Kibana (for Jest) implement\n  // an older spec in which specifying `attributeOldValue` or `attributeFilter`\n  // without specifying `attributes` results in a `SyntaxError`.\n  // The following logic patches the newer spec in which `attributes: true` can be\n  // implied when appropriate (`attributeOldValue` or `attributeFilter` is specified).\n  const observerOptions: MutationObserverInit = {\n    ..._observerOptions,\n  };\n  const needsAttributes =\n    observerOptions.hasOwnProperty('attributeOldValue') ||\n    observerOptions.hasOwnProperty('attributeFilter');\n  if (needsAttributes && !observerOptions.hasOwnProperty('attributes')) {\n    observerOptions.attributes = true;\n  }\n\n  const observer = new MutationObserver(callback);\n  observer.observe(node, observerOptions);\n\n  return observer;\n};\n\nexport const useMutationObserver = (\n  container: Element | null,\n  callback: MutationCallback,\n  observerOptions?: MutationObserverInit\n) => {\n  useEffect(\n    () => {\n      if (container != null) {\n        const observer = makeMutationObserver(\n          container,\n          observerOptions,\n          callback\n        );\n        return () => observer.disconnect();\n      }\n    },\n    // ignore changing observerOptions\n    // eslint-disable-next-line\n    [container, callback]\n  );\n};\n"]}]}