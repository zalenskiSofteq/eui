{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\code\\_code_block.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\code\\_code_block.tsx","mtime":1649070093319},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/code/_code_block.tsx"],"names":["React","useEffect","useMemo","useState","classNames","highlight","keys","useCombinedRefs","EuiButtonIcon","keysOf","EuiCopy","EuiFocusTrap","EuiI18n","useInnerText","useMutationObserver","useResizeObserver","EuiOverlayMask","isAstElement","node","hasOwnProperty","type","nodeToHtml","idx","nodes","depth","properties","tagName","children","createElement","key","className","map","el","i","value","addLineData","data","lineNumber","reduce","result","lineStart","match","lineEnd","push","lines","split","forEach","line","num","length","first","last","start","end","wrapLines","grouped","wrapped","highlightByLine","language","fontSizeToClassNameMap","s","m","l","FONT_SIZES","paddingSizeToClassNameMap","none","PADDING_SIZES","EuiCodeBlockImpl","transparentBackground","paddingSize","fontSize","isCopyable","whiteSpace","inline","overflowHeight","rest","isFullScreen","setIsFullScreen","wrapperRef","setWrapperRef","innerTextRef","_innerText","innerText","replace","tabIndex","setTabIndex","combinedRef","width","height","content","doesOverflow","clientWidth","clientHeight","scrollWidth","scrollHeight","subtree","childList","onKeyDown","event","ESCAPE","preventDefault","stopPropagation","closeFullScreen","toggleFullScreen","classes","prismjs","includes","codeClasses","preClasses","optionalStyles","maxHeight","codeSnippet","wrapperProps","style","getCopyButton","textToCopy","copyButton","copy","fullScreenButton","fullscreenCollapse","fullscreenExpand","getCodeBlockControls","codeBlockControls","getFullScreenDisplay","fullScreenDisplay","fullScreenClasses"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nimport PropTypes from \"prop-types\";\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nimport React, { useEffect, useMemo, useState } from 'react';\nimport classNames from 'classnames';\nimport { highlight } from 'refractor';\nimport { keys, useCombinedRefs } from '../../services';\nimport { EuiButtonIcon } from '../button';\nimport { keysOf } from '../common';\nimport { EuiCopy } from '../copy';\nimport { EuiFocusTrap } from '../focus_trap';\nimport { EuiI18n } from '../i18n';\nimport { useInnerText } from '../inner_text';\nimport { useMutationObserver } from '../observer/mutation_observer';\nimport { useResizeObserver } from '../observer/resize_observer';\nimport { EuiOverlayMask } from '../overlay_mask';\n\nvar isAstElement = function isAstElement(node) {\n  return node.hasOwnProperty('type') && node.type === 'element';\n};\n\nvar nodeToHtml = function nodeToHtml(node, idx, nodes) {\n  var depth = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (isAstElement(node)) {\n    var properties = node.properties,\n        tagName = node.tagName,\n        children = node.children;\n    return /*#__PURE__*/React.createElement(tagName, _objectSpread(_objectSpread({}, properties), {}, {\n      key: \"node-\".concat(depth, \"-\").concat(idx),\n      className: classNames(properties.className)\n    }), children && children.map(function (el, i) {\n      return nodeToHtml(el, i, nodes, depth + 1);\n    }));\n  }\n\n  return node.value;\n};\n\nvar addLineData = function addLineData(nodes) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    lineNumber: 1\n  };\n  return nodes.reduce(function (result, node) {\n    var lineStart = data.lineNumber;\n\n    if (node.type === 'text') {\n      if (!node.value.match(/\\r\\n?|\\n/)) {\n        node.lineStart = lineStart;\n        node.lineEnd = lineStart;\n        result.push(node);\n      } else {\n        var lines = node.value.split(/\\r\\n?|\\n/);\n        lines.forEach(function (line, i) {\n          var num = i === 0 ? data.lineNumber : ++data.lineNumber;\n          result.push({\n            type: 'text',\n            value: i === lines.length - 1 ? line : \"\".concat(line, \"\\n\"),\n            lineStart: num,\n            lineEnd: num\n          });\n        });\n      }\n\n      return result;\n    }\n\n    if (node.children && node.children.length) {\n      var _first$lineStart, _last$lineEnd;\n\n      var children = addLineData(node.children, data);\n      var first = children[0];\n      var last = children[children.length - 1];\n      var start = (_first$lineStart = first.lineStart) !== null && _first$lineStart !== void 0 ? _first$lineStart : lineStart;\n      var end = (_last$lineEnd = last.lineEnd) !== null && _last$lineEnd !== void 0 ? _last$lineEnd : lineStart;\n\n      if (start !== end) {\n        children.forEach(function (node) {\n          result.push(node);\n        });\n      } else {\n        node.lineStart = start;\n        node.lineEnd = end;\n        node.children = children;\n        result.push(node);\n      }\n\n      return result;\n    }\n\n    result.push(node);\n    return result;\n  }, []);\n};\n\nfunction wrapLines(nodes) {\n  var grouped = [];\n  nodes.forEach(function (node) {\n    var lineStart = node.lineStart - 1;\n\n    if (grouped[lineStart]) {\n      grouped[lineStart].push(node);\n    } else {\n      grouped[lineStart] = [node];\n    }\n  });\n  var wrapped = [];\n  grouped.forEach(function (node) {\n    wrapped.push({\n      type: 'element',\n      tagName: 'span',\n      properties: {\n        className: ['euiCodeBlock__line']\n      },\n      children: node\n    });\n  });\n  return wrapped;\n}\n\nvar highlightByLine = function highlightByLine(children, language) {\n  return wrapLines(addLineData(highlight(children, language)));\n};\n\nvar fontSizeToClassNameMap = {\n  s: 'euiCodeBlock--fontSmall',\n  m: 'euiCodeBlock--fontMedium',\n  l: 'euiCodeBlock--fontLarge'\n};\nexport var FONT_SIZES = keysOf(fontSizeToClassNameMap);\nvar paddingSizeToClassNameMap = {\n  none: '',\n  s: 'euiCodeBlock--paddingSmall',\n  m: 'euiCodeBlock--paddingMedium',\n  l: 'euiCodeBlock--paddingLarge'\n};\nexport var PADDING_SIZES = keysOf(paddingSizeToClassNameMap);\n/**\n * This is the base component extended by EuiCode and EuiCodeBlock.\n * These components share the same propTypes definition with EuiCodeBlockImpl.\n */\n\nexport var EuiCodeBlockImpl = ({\n  transparentBackground = false,\n  paddingSize = 'l',\n  fontSize = 's',\n  isCopyable = false,\n  whiteSpace = 'pre-wrap',\n  language,\n  inline,\n  children,\n  className,\n  overflowHeight,\n  ...rest\n}) => {\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  const [wrapperRef, setWrapperRef] = useState(null);\n  const [innerTextRef, _innerText] = useInnerText('');\n  const innerText = useMemo(() => _innerText?.replace(/[\\r\\n?]{2}|\\n\\n/g, '\\n'), [_innerText]);\n  const [tabIndex, setTabIndex] = useState(-1);\n  const combinedRef = useCombinedRefs([innerTextRef, setWrapperRef]);\n  const {\n    width,\n    height\n  } = useResizeObserver(wrapperRef);\n  const content = useMemo(() => {\n    if (!language || typeof children !== 'string') {\n      return children;\n    }\n\n    const nodes = inline ? highlight(children, language) : highlightByLine(children, language);\n    return nodes.length === 0 ? children : nodes.map(nodeToHtml);\n  }, [children, language, inline]);\n\n  const doesOverflow = () => {\n    if (!wrapperRef) return;\n    const {\n      clientWidth,\n      clientHeight,\n      scrollWidth,\n      scrollHeight\n    } = wrapperRef;\n    const doesOverflow = scrollHeight > clientHeight || scrollWidth > clientWidth;\n    setTabIndex(doesOverflow ? 0 : -1);\n  };\n\n  useMutationObserver(wrapperRef, doesOverflow, {\n    subtree: true,\n    childList: true\n  });\n  useEffect(doesOverflow, [width, height, wrapperRef]);\n\n  const onKeyDown = event => {\n    if (event.key === keys.ESCAPE) {\n      event.preventDefault();\n      event.stopPropagation();\n      closeFullScreen();\n    }\n  };\n\n  const toggleFullScreen = () => {\n    setIsFullScreen(!isFullScreen);\n  };\n\n  const closeFullScreen = () => {\n    setIsFullScreen(false);\n  };\n\n  const classes = classNames('euiCodeBlock', fontSizeToClassNameMap[fontSize], paddingSizeToClassNameMap[paddingSize], {\n    'euiCodeBlock--transparentBackground': transparentBackground,\n    'euiCodeBlock--inline': inline,\n    'euiCodeBlock--hasControls': isCopyable || overflowHeight\n  }, {\n    prismjs: !className?.includes('prismjs'),\n    [`language-${language || 'none'}`]: !className?.includes('language')\n  }, className);\n  const codeClasses = classNames('euiCodeBlock__code', language);\n  const preClasses = classNames('euiCodeBlock__pre', {\n    'euiCodeBlock__pre--whiteSpacePre': whiteSpace === 'pre',\n    'euiCodeBlock__pre--whiteSpacePreWrap': whiteSpace === 'pre-wrap'\n  });\n  const optionalStyles = {};\n\n  if (overflowHeight) {\n    optionalStyles.maxHeight = overflowHeight;\n  }\n\n  const codeSnippet = <code className={codeClasses} {...rest}>\n      {content}\n    </code>;\n  const wrapperProps = {\n    className: classes,\n    style: optionalStyles\n  };\n\n  if (inline) {\n    return <span {...wrapperProps}>{codeSnippet}</span>;\n  }\n\n  const getCopyButton = textToCopy => {\n    let copyButton;\n\n    if (isCopyable && textToCopy) {\n      copyButton = <div className=\"euiCodeBlock__copyButton\">\n          <EuiI18n token=\"euiCodeBlock.copyButton\" default=\"Copy\">\n            {copyButton => <EuiCopy textToCopy={textToCopy}>\n                {copy => <EuiButtonIcon onClick={copy} iconType=\"copy\" color=\"text\" aria-label={copyButton} />}\n              </EuiCopy>}\n          </EuiI18n>\n        </div>;\n    }\n\n    return copyButton;\n  };\n\n  let fullScreenButton;\n\n  if (!inline && overflowHeight) {\n    fullScreenButton = <EuiI18n tokens={['euiCodeBlock.fullscreenCollapse', 'euiCodeBlock.fullscreenExpand']} defaults={['Collapse', 'Expand']}>\n        {([fullscreenCollapse, fullscreenExpand]) => <EuiButtonIcon className=\"euiCodeBlock__fullScreenButton\" onClick={toggleFullScreen} iconType={isFullScreen ? 'cross' : 'fullScreen'} color=\"text\" aria-label={isFullScreen ? fullscreenCollapse : fullscreenExpand} />}\n      </EuiI18n>;\n  }\n\n  const getCodeBlockControls = textToCopy => {\n    let codeBlockControls;\n    const copyButton = getCopyButton(textToCopy);\n\n    if (copyButton || fullScreenButton) {\n      codeBlockControls = <div className=\"euiCodeBlock__controls\">\n          {fullScreenButton}\n          {copyButton}\n        </div>;\n    }\n\n    return codeBlockControls;\n  };\n\n  const getFullScreenDisplay = codeBlockControls => {\n    let fullScreenDisplay;\n\n    if (isFullScreen) {\n      // Force fullscreen to use large font and padding.\n      const fullScreenClasses = classNames('euiCodeBlock', fontSizeToClassNameMap[fontSize], 'euiCodeBlock-paddingLarge', 'euiCodeBlock-isFullScreen', className);\n      fullScreenDisplay = <EuiOverlayMask>\n          <EuiFocusTrap clickOutsideDisables={true}>\n            <div className={fullScreenClasses}>\n              <pre className={preClasses} tabIndex={0}>\n                <code className={codeClasses} onKeyDown={onKeyDown}>\n                  {content}\n                </code>\n              </pre>\n\n              {codeBlockControls}\n            </div>\n          </EuiFocusTrap>\n        </EuiOverlayMask>;\n    }\n\n    return fullScreenDisplay;\n  };\n\n  const codeBlockControls = getCodeBlockControls(innerText);\n  return <div {...wrapperProps}>\n      <pre ref={combinedRef} style={optionalStyles} className={preClasses} tabIndex={tabIndex}>\n        {codeSnippet}\n      </pre>\n      {\n      /*\n         If the below fullScreen code renders, it actually attaches to the body because of\n         EuiOverlayMask's React portal usage.\n       */\n    }\n      {codeBlockControls}\n      {getFullScreenDisplay(codeBlockControls)}\n    </div>;\n};\nEuiCodeBlockImpl.propTypes = {\n  className: PropTypes.string,\n  fontSize: PropTypes.oneOf([\"s\", \"m\", \"l\"]),\n\n  /**\n     * Displays the passed code in an inline format. Also removes any margins set.\n     */\n  inline: PropTypes.bool,\n\n  /**\n     * Displays an icon button to copy the code snippet to the clipboard.\n     */\n  isCopyable: PropTypes.bool,\n\n  /**\n     * Sets the syntax highlighting for a specific language\n     * @see https://github.com/wooorm/refractor#syntaxes\n     * for options\n     */\n  language: PropTypes.string,\n  overflowHeight: PropTypes.number,\n  paddingSize: PropTypes.oneOf([\"none\", \"s\", \"m\", \"l\"]),\n  transparentBackground: PropTypes.bool,\n\n  /**\n     * Specify how `white-space` inside the element is handled.\n     * `pre` respects line breaks/white space but doesn't force them to wrap the line\n     * `pre-wrap` respects line breaks/white space but does force them to wrap the line when necessary.\n     */\n  whiteSpace: PropTypes.oneOf([\"pre\", \"pre-wrap\"])\n};\n\ntry {\n  EuiCodeBlockImpl.__docgenInfo = {\n    description: 'This is the base component extended by EuiCode and EuiCodeBlock.\\n' + 'These components share the same propTypes definition with EuiCodeBlockImpl.',\n    displayName: 'EuiCodeBlockImpl',\n    methods: [],\n    props: {\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/src/components/code/_code_block.tsx',\n          name: 'EuiCodeBlockImplProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      fontSize: {\n        defaultValue: {\n          value: 's'\n        },\n        description: '',\n        name: 'fontSize',\n        parent: {\n          fileName: 'eui/src/components/code/_code_block.tsx',\n          name: 'EuiCodeBlockImplProps'\n        },\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"s\" | \"m\" | \"l\"',\n          value: [{\n            value: '\"s\"'\n          }, {\n            value: '\"m\"'\n          }, {\n            value: '\"l\"'\n          }]\n        }\n      },\n      inline: {\n        defaultValue: null,\n        description: 'Displays the passed code in an inline format. Also removes any margins set.',\n        name: 'inline',\n        parent: {\n          fileName: 'eui/src/components/code/_code_block.tsx',\n          name: 'EuiCodeBlockImplProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      isCopyable: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: 'Displays an icon button to copy the code snippet to the clipboard.',\n        name: 'isCopyable',\n        parent: {\n          fileName: 'eui/src/components/code/_code_block.tsx',\n          name: 'EuiCodeBlockImplProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      language: {\n        defaultValue: null,\n        description: 'Sets the syntax highlighting for a specific language\\n' + '@see https://github.com/wooorm/refractor#syntaxes\\n' + 'for options',\n        name: 'language',\n        parent: {\n          fileName: 'eui/src/components/code/_code_block.tsx',\n          name: 'EuiCodeBlockImplProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      overflowHeight: {\n        defaultValue: null,\n        description: '',\n        name: 'overflowHeight',\n        parent: {\n          fileName: 'eui/src/components/code/_code_block.tsx',\n          name: 'EuiCodeBlockImplProps'\n        },\n        required: false,\n        type: {\n          name: 'number'\n        }\n      },\n      paddingSize: {\n        defaultValue: {\n          value: 'l'\n        },\n        description: '',\n        name: 'paddingSize',\n        parent: {\n          fileName: 'eui/src/components/code/_code_block.tsx',\n          name: 'EuiCodeBlockImplProps'\n        },\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"s\" | \"m\" | \"l\" | \"none\"',\n          value: [{\n            value: '\"s\"'\n          }, {\n            value: '\"m\"'\n          }, {\n            value: '\"l\"'\n          }, {\n            value: '\"none\"'\n          }]\n        }\n      },\n      transparentBackground: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: '',\n        name: 'transparentBackground',\n        parent: {\n          fileName: 'eui/src/components/code/_code_block.tsx',\n          name: 'EuiCodeBlockImplProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      whiteSpace: {\n        defaultValue: {\n          value: 'pre-wrap'\n        },\n        description: 'Specify how `white-space` inside the element is handled.\\n' + \"`pre` respects line breaks/white space but doesn't force them to wrap the line\\n\" + '`pre-wrap` respects line breaks/white space but does force them to wrap the line when necessary.',\n        name: 'whiteSpace',\n        parent: {\n          fileName: 'eui/src/components/code/_code_block.tsx',\n          name: 'EuiCodeBlockImplProps'\n        },\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"pre\" | \"pre-wrap\"',\n          value: [{\n            value: '\"pre\"'\n          }, {\n            value: '\"pre-wrap\"'\n          }]\n        }\n      }\n    },\n    extendedInterfaces: ['EuiCodeBlockImplProps']\n  };\n} catch (e) {}"]}]}