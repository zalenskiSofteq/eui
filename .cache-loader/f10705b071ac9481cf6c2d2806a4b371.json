{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\form\\range\\dual_range.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\form\\range\\dual_range.tsx","mtime":1649070093440},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/form/range/dual_range.tsx"],"names":["React","Component","classNames","keys","isWithinRange","EuiInputPopover","EuiFormControlLayoutDelimited","htmlIdGenerator","EuiRangeDraggable","EuiRangeHighlight","EuiRangeInput","EuiRangeLabel","EuiRangeSlider","EuiRangeThumb","EuiRangeTrack","EuiRangeWrapper","calculateThumbPosition","EuiDualRange","id","props","hasFocus","rangeSliderRefAvailable","isPopoverOpen","rangeWidth","undefined","isVisible","ref","rangeSliderRef","setState","clientWidth","newVal","lower","upper","e","lowerHalf","Math","abs","max","min","newValIsLow","upperValueIsValid","lowerValueIsValid","_handleOnChange","isValid","_determineInvalidThumbMovement","lowerValue","upperValue","_determineValidThumbMovement","onChange","_determineThumbMovement","Number","currentTarget","value","event","ARROW_UP","ARROW_RIGHT","ARROW_DOWN","ARROW_LEFT","indexOf","key","_isDirectionalKeyPress","preventDefault","_resetToRangeEnds","target","stepRemainder","step","TAB","_handleKeyDown","width","trackWidth","showInput","position","left","shouldFocused","state","onFocus","toggleHasFocus","onBlur","preventPopoverClose","setTimeout","closePopover","steps","approx","round","bound","nearest","toPrecision","x","isFirstInteraction","leftPosition","dragAcc","delta","percentageOfArea","percentageOfRange","newLower","getNearestStep","newUpper","noMovement","isMin","isMax","isOutOfRange","className","compressed","disabled","fullWidth","readOnly","propsId","name","showLabels","showTicks","tickInterval","ticks","levels","showRange","style","isInvalid","append","prepend","minInputProps","maxInputProps","isDraggable","rest","digitTolerance","String","length","showInputOnly","canShowDropdown","minInput","handleLowerInputChange","handleInputKeyDown","onInputFocus","onInputBlur","maxInput","handleUpperInputChange","classes","leftThumbPosition","calculateThumbPositionStyle","rightThumbPosition","theRange","handleSliderChange","handleRangeSliderRefUpdate","handleDrag","onThumbFocus","onThumbBlur","handleDraggableKeyDown","handleLowerKeyDown","handleUpperKeyDown","thePopover","onResize"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { keys } from '../../../services';\nimport { isWithinRange } from '../../../services/number';\nimport { EuiInputPopover } from '../../popover';\nimport { EuiFormControlLayoutDelimited } from '../form_control_layout';\nimport { htmlIdGenerator } from '../../../services/accessibility';\nimport { EuiRangeDraggable } from './range_draggable';\nimport { EuiRangeHighlight } from './range_highlight';\nimport { EuiRangeInput } from './range_input';\nimport { EuiRangeLabel } from './range_label';\nimport { EuiRangeSlider } from './range_slider';\nimport { EuiRangeThumb } from './range_thumb';\nimport { EuiRangeTrack } from './range_track';\nimport { EuiRangeWrapper } from './range_wrapper';\nimport { calculateThumbPosition } from './utils';\nexport class EuiDualRange extends Component {\n  static defaultProps = {\n    min: 0,\n    max: 100,\n    step: 1,\n    fullWidth: false,\n    compressed: false,\n    showLabels: false,\n    showInput: false,\n    showRange: true,\n    showTicks: false,\n    levels: []\n  };\n  state = {\n    id: this.props.id || htmlIdGenerator()(),\n    hasFocus: false,\n    rangeSliderRefAvailable: false,\n    isPopoverOpen: false,\n    rangeWidth: undefined,\n    isVisible: true // used to trigger a rerender if initial element width is 0\n\n  };\n  preventPopoverClose = false;\n  rangeSliderRef = null;\n  handleRangeSliderRefUpdate = ref => {\n    this.rangeSliderRef = ref;\n    this.setState({\n      rangeSliderRefAvailable: !!ref,\n      rangeWidth: !!ref ? ref.clientWidth : null\n    });\n  };\n  leftPosition = 0;\n  dragAcc = 0;\n\n  get lowerValue() {\n    return this.props.value ? this.props.value[0] : this.props.min;\n  }\n\n  get upperValue() {\n    return this.props.value ? this.props.value[1] : this.props.max;\n  }\n\n  get lowerValueIsValid() {\n    return isWithinRange(this.props.min, this.upperValue, this.lowerValue);\n  }\n\n  get upperValueIsValid() {\n    return isWithinRange(this.lowerValue, this.props.max, this.upperValue);\n  }\n\n  get isValid() {\n    return this.lowerValueIsValid && this.upperValueIsValid;\n  }\n\n  componentDidMount() {\n    if (this.rangeSliderRef && this.rangeSliderRef.clientWidth === 0) {\n      // Safe to call `setState` inside conditional\n      // https://reactjs.org/docs/react-component.html#componentdidmount\n      // eslint-disable-next-line react/no-did-mount-set-state\n      this.setState({\n        isVisible: false\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.rangeSliderRef?.clientWidth && !this.state.isVisible) {\n      // Safe to call `setState` inside conditional\n      // https://reactjs.org/docs/react-component.html#componentdidupdate\n      // eslint-disable-next-line  react/no-did-update-set-state\n      this.setState({\n        isVisible: true\n      });\n    }\n  }\n\n  _determineInvalidThumbMovement = (newVal, lower, upper, e) => {\n    // If the values are invalid, find whether the new value is in the upper\n    // or lower half and move the appropriate handle to the new value,\n    // while the other handle gets moved to the opposite bound (if invalid)\n    const lowerHalf = Math.abs(this.props.max - this.props.min) / 2 + this.props.min;\n    const newValIsLow = isWithinRange(this.props.min, lowerHalf, newVal);\n\n    if (newValIsLow) {\n      lower = newVal;\n      upper = !this.upperValueIsValid ? this.props.max : upper;\n    } else {\n      lower = !this.lowerValueIsValid ? this.props.min : lower;\n      upper = newVal;\n    }\n\n    this._handleOnChange(lower, upper, e);\n  };\n  _determineValidThumbMovement = (newVal, lower, upper, e) => {\n    // Lower thumb targeted or right-moving swap has occurred\n    if (Math.abs(lower - newVal) < Math.abs(upper - newVal)) {\n      lower = newVal;\n    } // Upper thumb targeted or left-moving swap has occurred\n    else {\n        upper = newVal;\n      }\n\n    this._handleOnChange(lower, upper, e);\n  };\n  _determineThumbMovement = (newVal, e) => {\n    // Determine thumb movement based on slider interaction\n    if (!this.isValid) {\n      // Non-standard positioning follows\n      this._determineInvalidThumbMovement(newVal, this.lowerValue, this.upperValue, e);\n    } else {\n      // Standard positioning based on click event proximity to thumb locations\n      this._determineValidThumbMovement(newVal, this.lowerValue, this.upperValue, e);\n    }\n  };\n  _handleOnChange = (lower, upper, e) => {\n    const isValid = isWithinRange(this.props.min, upper, lower) && isWithinRange(lower, this.props.max, upper);\n    this.props.onChange([lower, upper], isValid, e);\n  };\n  handleSliderChange = e => {\n    this._determineThumbMovement(Number(e.currentTarget.value), e);\n  };\n  _resetToRangeEnds = e => {\n    // Arbitrary decision to pass `min` instead of `max`. Result is the same.\n    this._determineInvalidThumbMovement(this.props.min, this.lowerValue, this.upperValue, e);\n  };\n  _isDirectionalKeyPress = event => {\n    return [keys.ARROW_UP, keys.ARROW_RIGHT, keys.ARROW_DOWN, keys.ARROW_LEFT].indexOf(event.key) > -1;\n  };\n  handleInputKeyDown = e => {\n    // Relevant only when initial values are both `''` and `showInput` is set\n    if (this._isDirectionalKeyPress(e) && !this.isValid) {\n      e.preventDefault();\n\n      this._resetToRangeEnds(e);\n    }\n  };\n  handleLowerInputChange = e => {\n    this._handleOnChange(e.target.value, this.upperValue, e);\n  };\n  handleUpperInputChange = e => {\n    this._handleOnChange(this.lowerValue, e.target.value, e);\n  };\n  _handleKeyDown = (value, event) => {\n    let newVal = Number(value);\n    let stepRemainder = 0;\n    const step = this.props.step || 1;\n\n    switch (event.key) {\n      case keys.ARROW_UP:\n      case keys.ARROW_RIGHT:\n        event.preventDefault();\n        newVal += step;\n        stepRemainder = (newVal - this.props.min) % step;\n\n        if (step !== 1 && stepRemainder > 0) {\n          newVal = newVal - stepRemainder;\n        }\n\n        break;\n\n      case keys.ARROW_DOWN:\n      case keys.ARROW_LEFT:\n        event.preventDefault();\n        newVal -= step;\n        stepRemainder = (newVal - this.props.min) % step;\n\n        if (step !== 1 && stepRemainder > 0) {\n          newVal = newVal + (step - stepRemainder);\n        }\n\n        break;\n    }\n\n    return newVal;\n  };\n  handleLowerKeyDown = event => {\n    let lower = this.lowerValue;\n\n    switch (event.key) {\n      case keys.TAB:\n        return;\n\n      default:\n        if (!this.lowerValueIsValid) {\n          // Relevant only when initial value is `''` and `showInput` is not set\n          event.preventDefault();\n\n          this._resetToRangeEnds(event);\n\n          return;\n        }\n\n        lower = this._handleKeyDown(lower, event);\n    }\n\n    if (lower >= this.upperValue || lower < this.props.min) return;\n\n    this._handleOnChange(lower, this.upperValue, event);\n  };\n  handleUpperKeyDown = event => {\n    let upper = this.upperValue;\n\n    switch (event.key) {\n      case keys.TAB:\n        return;\n\n      default:\n        if (!this.upperValueIsValid) {\n          // Relevant only when initial value is `''` and `showInput` is not set\n          event.preventDefault();\n\n          this._resetToRangeEnds(event);\n\n          return;\n        }\n\n        upper = this._handleKeyDown(upper, event);\n    }\n\n    if (upper <= this.lowerValue || upper > this.props.max) return;\n\n    this._handleOnChange(this.lowerValue, upper, event);\n  };\n  handleDraggableKeyDown = event => {\n    let lower = this.lowerValue;\n    let upper = this.upperValue;\n\n    switch (event.key) {\n      case keys.TAB:\n        return;\n\n      default:\n        lower = this._handleKeyDown(lower, event);\n        upper = this._handleKeyDown(upper, event);\n    }\n\n    if (lower >= this.upperValue || lower < this.props.min) return;\n    if (upper <= this.lowerValue || upper > this.props.max) return;\n\n    this._handleOnChange(lower, upper, event);\n  };\n  calculateThumbPositionStyle = (value, width) => {\n    const trackWidth = this.props.showInput === 'inputWithPopover' && !!width ? width : this.rangeSliderRef.clientWidth;\n    const position = calculateThumbPosition(value, this.props.min, this.props.max, trackWidth);\n    return {\n      left: `${position}%`\n    };\n  };\n  toggleHasFocus = (shouldFocused = !this.state.hasFocus) => {\n    this.setState({\n      hasFocus: shouldFocused\n    });\n  };\n  onThumbFocus = e => {\n    if (this.props.onFocus) {\n      this.props.onFocus(e);\n    }\n\n    this.toggleHasFocus(true);\n  };\n  onThumbBlur = e => {\n    if (this.props.onBlur) {\n      this.props.onBlur(e);\n    }\n\n    this.toggleHasFocus(false);\n  };\n  onInputFocus = e => {\n    if (this.props.onFocus) {\n      this.props.onFocus(e);\n    }\n\n    this.preventPopoverClose = true;\n    this.setState({\n      isPopoverOpen: true\n    });\n  };\n  onInputBlur = e => setTimeout(() => {\n    // Safari does not recognize any focus-related eventing for input[type=range]\n    // making it impossible to capture its state using active/focus/relatedTarget\n    // Instead, a prevention flag is set on mousedown, with a waiting period here.\n    // Mousedown is viable because in the popover case, it is inaccessible via keyboard (intentionally)\n    if (this.preventPopoverClose) {\n      this.preventPopoverClose = false;\n      return;\n    }\n\n    if (this.props.onBlur) {\n      this.props.onBlur(e);\n    }\n\n    this.closePopover();\n  }, 200);\n  closePopover = () => {\n    this.preventPopoverClose = false;\n    this.setState({\n      isPopoverOpen: false\n    });\n  };\n  onResize = width => {\n    this.setState({\n      rangeWidth: width\n    });\n  };\n  getNearestStep = value => {\n    const steps = (this.props.max - this.props.min) / this.props.step;\n    const approx = Math.round((value - this.props.min) * steps / (this.props.max - this.props.min)) / steps;\n    const bound = Math.min(Math.max(approx, 0), 1);\n    const nearest = bound * (this.props.max - this.props.min) + this.props.min;\n    return Number(nearest.toPrecision(10)) * 100 / 100;\n  };\n  handleDrag = (x, isFirstInteraction) => {\n    if (isFirstInteraction) {\n      this.leftPosition = x;\n      this.dragAcc = 0;\n    }\n\n    const {\n      min,\n      max\n    } = this.props;\n    const lowerValue = Number(this.lowerValue);\n    const upperValue = Number(this.upperValue);\n    const delta = this.leftPosition - x;\n    this.leftPosition = x;\n    this.dragAcc = this.dragAcc + delta;\n    const percentageOfArea = this.dragAcc / this.rangeSliderRef.clientWidth;\n    const percentageOfRange = percentageOfArea * (max - min);\n    const newLower = this.getNearestStep(lowerValue - percentageOfRange);\n    const newUpper = this.getNearestStep(upperValue - percentageOfRange);\n    const noMovement = newLower === lowerValue;\n    const isMin = min === lowerValue && min === newLower;\n    const isMax = max === upperValue && max === newUpper;\n    const isOutOfRange = newLower < min || newUpper > max;\n    if (noMovement || isMin || isMax || isOutOfRange) return;\n\n    this._handleOnChange(newLower, newUpper);\n\n    this.dragAcc = 0;\n  };\n\n  render() {\n    const {\n      className,\n      compressed,\n      disabled,\n      fullWidth,\n      readOnly,\n      id: propsId,\n      max,\n      min,\n      name,\n      step,\n      showLabels,\n      showInput,\n      showTicks,\n      tickInterval,\n      ticks,\n      levels,\n      onBlur,\n      onChange,\n      onFocus,\n      showRange,\n      value,\n      style,\n      isInvalid,\n      append,\n      prepend,\n      minInputProps,\n      maxInputProps,\n      isDraggable,\n      ...rest\n    } = this.props;\n    const {\n      id\n    } = this.state;\n    const digitTolerance = Math.max(String(min).length, String(max).length);\n    const showInputOnly = showInput === 'inputWithPopover';\n    const canShowDropdown = showInputOnly && !readOnly && !disabled;\n    const minInput = !!showInput ? <EuiRangeInput // Overridable props\n    aria-describedby={this.props['aria-describedby']} aria-label={this.props['aria-label']} {...minInputProps} // Non-overridable props\n    digitTolerance={digitTolerance} side=\"min\" min={min} max={Number(this.upperValue)} step={step} value={this.lowerValue} disabled={disabled} compressed={compressed} onChange={this.handleLowerInputChange} onKeyDown={this.handleInputKeyDown} name={`${name}-minValue`} onFocus={canShowDropdown ? this.onInputFocus : onFocus} onBlur={canShowDropdown ? this.onInputBlur : onBlur} readOnly={readOnly} autoSize={!showInputOnly} fullWidth={!!showInputOnly && fullWidth} isInvalid={isInvalid} controlOnly={showInputOnly} onMouseDown={showInputOnly ? () => this.preventPopoverClose = true : undefined} /> : undefined;\n    const maxInput = !!showInput ? <EuiRangeInput // Overridable props\n    aria-describedby={this.props['aria-describedby']} aria-label={this.props['aria-label']} {...maxInputProps} // Non-overridable props\n    digitTolerance={digitTolerance} side=\"max\" min={Number(this.lowerValue)} max={max} step={step} value={this.upperValue} disabled={disabled} compressed={compressed} onChange={this.handleUpperInputChange} onKeyDown={this.handleInputKeyDown} name={`${name}-maxValue`} onFocus={canShowDropdown ? this.onInputFocus : onFocus} onBlur={canShowDropdown ? this.onInputBlur : onBlur} readOnly={readOnly} autoSize={!showInputOnly} fullWidth={!!showInputOnly && fullWidth} controlOnly={showInputOnly} isInvalid={isInvalid} onMouseDown={showInputOnly ? () => this.preventPopoverClose = true : undefined} /> : undefined;\n    const classes = classNames('euiDualRange', className);\n    const leftThumbPosition = this.state.rangeSliderRefAvailable ? this.calculateThumbPositionStyle(Number(this.lowerValue) || min, this.state.rangeWidth) : {\n      left: '0'\n    };\n    const rightThumbPosition = this.state.rangeSliderRefAvailable ? this.calculateThumbPositionStyle(Number(this.upperValue) || max, this.state.rangeWidth) : {\n      left: '0'\n    };\n    const theRange = <EuiRangeWrapper className={classes} fullWidth={fullWidth} compressed={compressed}>\n        {showInput && !showInputOnly && <>\n            {minInput}\n            <div className={showTicks || ticks ? 'euiRange__slimHorizontalSpacer' : 'euiRange__horizontalSpacer'} />\n          </>}\n        {showLabels && <EuiRangeLabel side=\"min\" disabled={disabled}>\n            {min}\n          </EuiRangeLabel>}\n        <EuiRangeTrack compressed={compressed} disabled={disabled} max={max} min={min} step={step} showTicks={showTicks} tickInterval={tickInterval} ticks={ticks} levels={levels} onChange={this.handleSliderChange} value={value} aria-hidden={showInput === true}>\n          <EuiRangeSlider className=\"euiDualRange__slider\" ref={this.handleRangeSliderRefUpdate} id={id} name={name} min={min} max={max} step={step} disabled={disabled} compressed={compressed} onChange={this.handleSliderChange} style={style} showTicks={showTicks} hasFocus={this.state.hasFocus} aria-hidden={true} tabIndex={-1} showRange={showRange} onFocus={onFocus} onBlur={onBlur} {...rest} />\n\n          {showRange && this.isValid && <EuiRangeHighlight compressed={compressed} hasFocus={this.state.hasFocus} showTicks={showTicks} min={Number(min)} max={Number(max)} lowerValue={Number(this.lowerValue)} upperValue={Number(this.upperValue)} />}\n\n          {this.state.rangeSliderRefAvailable && <React.Fragment>\n              {isDraggable && this.isValid && <EuiRangeDraggable min={min} max={max} value={[Number(this.lowerValue), Number(this.upperValue)]} disabled={disabled} lowerPosition={leftThumbPosition.left} upperPosition={rightThumbPosition.left} showTicks={showTicks} compressed={compressed} onChange={this.handleDrag} onFocus={this.onThumbFocus} onBlur={this.onThumbBlur} onKeyDown={this.handleDraggableKeyDown} aria-describedby={this.props['aria-describedby']} aria-label={this.props['aria-label']} />}\n\n              <EuiRangeThumb min={min} max={Number(this.upperValue)} value={this.lowerValue} disabled={disabled} showTicks={showTicks} showInput={!!showInput} onKeyDown={this.handleLowerKeyDown} onFocus={this.onThumbFocus} onBlur={this.onThumbBlur} style={leftThumbPosition} aria-describedby={this.props['aria-describedby']} aria-label={this.props['aria-label']} />\n\n              <EuiRangeThumb min={Number(this.lowerValue)} max={max} value={this.upperValue} disabled={disabled} showTicks={showTicks} showInput={!!showInput} onKeyDown={this.handleUpperKeyDown} onFocus={this.onThumbFocus} onBlur={this.onThumbBlur} style={rightThumbPosition} aria-describedby={this.props['aria-describedby']} aria-label={this.props['aria-label']} />\n            </React.Fragment>}\n        </EuiRangeTrack>\n        {showLabels && <EuiRangeLabel disabled={disabled}>{max}</EuiRangeLabel>}\n        {showInput && !showInputOnly && <>\n            <div className={showTicks || ticks ? 'euiRange__slimHorizontalSpacer' : 'euiRange__horizontalSpacer'} />\n            {maxInput}\n          </>}\n      </EuiRangeWrapper>;\n    const thePopover = showInputOnly ? <EuiInputPopover className=\"euiRange__popover\" input={<EuiFormControlLayoutDelimited startControl={minInput} endControl={maxInput} isDisabled={disabled} fullWidth={fullWidth} compressed={compressed} readOnly={readOnly} append={append} prepend={prepend} />} fullWidth={fullWidth} isOpen={this.state.isPopoverOpen} closePopover={this.closePopover} disableFocusTrap={true} onPanelResize={this.onResize}>\n        {theRange}\n      </EuiInputPopover> : undefined;\n    return thePopover || theRange;\n  }\n\n}\nEuiDualRange.propTypes = {\n  value: PropTypes.any.isRequired,\n  onBlur: PropTypes.func,\n  onFocus: PropTypes.func,\n  onChange: PropTypes.func.isRequired,\n  fullWidth: PropTypes.bool,\n  isInvalid: PropTypes.bool,\n\n  /**\n     * Create colored indicators for certain intervals\n     */\n  levels: PropTypes.arrayOf(PropTypes.shape({\n    min: PropTypes.number.isRequired,\n    max: PropTypes.number.isRequired,\n    color: PropTypes.oneOf([\"primary\", \"success\", \"warning\", \"danger\"]).isRequired\n  }).isRequired),\n\n  /**\n     * Shows static min/max labels on the sides of the range slider\n     */\n  showLabels: PropTypes.bool,\n\n  /**\n     * Pass `true` to displays an extra input control for direct manipulation.\n     * Pass `'inputWithPopover'` to only show the input but show the range in a dropdown.\n     */\n  showInput: PropTypes.oneOfType([PropTypes.bool.isRequired, PropTypes.oneOf([\"inputWithPopover\"])]),\n\n  /**\n     * Modifies the number of tick marks and at what interval\n     */\n  tickInterval: PropTypes.number,\n\n  /**\n     * Specified ticks at specified values\n     */\n  ticks: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.number.isRequired,\n    label: PropTypes.node.isRequired\n  }).isRequired),\n\n  /**\n     * Creates an input group with element(s) coming before input.  Will only show if `showInput = inputWithPopover`.\n     * `string` | `ReactElement` or an array of these\n     */\n  prepend: PropTypes.oneOfType([PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.element.isRequired]).isRequired, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.element.isRequired]).isRequired).isRequired]),\n\n  /**\n     * Creates an input group with element(s) coming after input. Will only show if `showInput = inputWithPopover`.\n     * `string` | `ReactElement` or an array of these\n     */\n  append: PropTypes.oneOfType([PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.element.isRequired]).isRequired, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.element.isRequired]).isRequired).isRequired]),\n\n  /**\n     *  Intended to be uses with aria attributes. Some attributes may be overwritten.\n     */\n  minInputProps: PropTypes.any,\n\n  /**\n     *  Intended to be uses with aria attributes. Some attributes may be overwritten.\n     */\n  maxInputProps: PropTypes.any,\n\n  /**\n     *  Creates a draggble highlighted range area\n     */\n  isDraggable: PropTypes.bool\n};\n\ntry {\n  EuiDualRange.__docgenInfo = {\n    description: '',\n    displayName: 'EuiDualRange',\n    methods: [],\n    props: {\n      value: {\n        defaultValue: null,\n        description: '',\n        name: 'value',\n        parent: {\n          fileName: 'eui/src/components/form/range/dual_range.tsx',\n          name: 'EuiDualRangeProps'\n        },\n        required: true,\n        type: {\n          name: '[ReactText, ReactText]'\n        }\n      },\n      onBlur: {\n        defaultValue: null,\n        description: '',\n        name: 'onBlur',\n        parent: {\n          fileName: 'eui/src/components/form/range/dual_range.tsx',\n          name: 'EuiDualRangeProps'\n        },\n        required: false,\n        type: {\n          name: '(event: any) => void'\n        }\n      },\n      onFocus: {\n        defaultValue: null,\n        description: '',\n        name: 'onFocus',\n        parent: {\n          fileName: 'eui/src/components/form/range/dual_range.tsx',\n          name: 'EuiDualRangeProps'\n        },\n        required: false,\n        type: {\n          name: '(event: any) => void'\n        }\n      },\n      onChange: {\n        defaultValue: null,\n        description: '',\n        name: 'onChange',\n        parent: {\n          fileName: 'eui/src/components/form/range/dual_range.tsx',\n          name: 'EuiDualRangeProps'\n        },\n        required: true,\n        type: {\n          name: '(values: [ReactText, ReactText], isValid: boolean, event?: any) => void'\n        }\n      },\n      fullWidth: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: '',\n        name: 'fullWidth',\n        parent: {\n          fileName: 'eui/src/components/form/range/dual_range.tsx',\n          name: 'EuiDualRangeProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      isInvalid: {\n        defaultValue: null,\n        description: '',\n        name: 'isInvalid',\n        parent: {\n          fileName: 'eui/src/components/form/range/dual_range.tsx',\n          name: 'EuiDualRangeProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      levels: {\n        defaultValue: {\n          value: '[]'\n        },\n        description: 'Create colored indicators for certain intervals',\n        name: 'levels',\n        parent: {\n          fileName: 'eui/src/components/form/range/dual_range.tsx',\n          name: 'EuiDualRangeProps'\n        },\n        required: false,\n        type: {\n          name: 'EuiRangeLevel[]'\n        }\n      },\n      showLabels: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: 'Shows static min/max labels on the sides of the range slider',\n        name: 'showLabels',\n        parent: {\n          fileName: 'eui/src/components/form/range/dual_range.tsx',\n          name: 'EuiDualRangeProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      showInput: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: 'Pass `true` to displays an extra input control for direct manipulation.\\n' + \"Pass `'inputWithPopover'` to only show the input but show the range in a dropdown.\",\n        name: 'showInput',\n        parent: {\n          fileName: 'eui/src/components/form/range/dual_range.tsx',\n          name: 'EuiDualRangeProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean | \"inputWithPopover\"'\n        }\n      },\n      tickInterval: {\n        defaultValue: null,\n        description: 'Modifies the number of tick marks and at what interval',\n        name: 'tickInterval',\n        parent: {\n          fileName: 'eui/src/components/form/range/dual_range.tsx',\n          name: 'EuiDualRangeProps'\n        },\n        required: false,\n        type: {\n          name: 'number'\n        }\n      },\n      ticks: {\n        defaultValue: null,\n        description: 'Specified ticks at specified values',\n        name: 'ticks',\n        parent: {\n          fileName: 'eui/src/components/form/range/dual_range.tsx',\n          name: 'EuiDualRangeProps'\n        },\n        required: false,\n        type: {\n          name: 'EuiRangeTick[]'\n        }\n      },\n      prepend: {\n        defaultValue: null,\n        description: 'Creates an input group with element(s) coming before input.  Will only show if `showInput = inputWithPopover`.\\n' + '`string` | `ReactElement` or an array of these',\n        name: 'prepend',\n        parent: {\n          fileName: 'eui/src/components/form/range/dual_range.tsx',\n          name: 'EuiDualRangeProps'\n        },\n        required: false,\n        type: {\n          name: 'PrependAppendType'\n        }\n      },\n      append: {\n        defaultValue: null,\n        description: 'Creates an input group with element(s) coming after input. Will only show if `showInput = inputWithPopover`.\\n' + '`string` | `ReactElement` or an array of these',\n        name: 'append',\n        parent: {\n          fileName: 'eui/src/components/form/range/dual_range.tsx',\n          name: 'EuiDualRangeProps'\n        },\n        required: false,\n        type: {\n          name: 'PrependAppendType'\n        }\n      },\n      minInputProps: {\n        defaultValue: null,\n        description: 'Intended to be uses with aria attributes. Some attributes may be overwritten.',\n        name: 'minInputProps',\n        parent: {\n          fileName: 'eui/src/components/form/range/dual_range.tsx',\n          name: 'EuiDualRangeProps'\n        },\n        required: false,\n        type: {\n          name: 'Partial<EuiRangeInputProps>'\n        }\n      },\n      maxInputProps: {\n        defaultValue: null,\n        description: 'Intended to be uses with aria attributes. Some attributes may be overwritten.',\n        name: 'maxInputProps',\n        parent: {\n          fileName: 'eui/src/components/form/range/dual_range.tsx',\n          name: 'EuiDualRangeProps'\n        },\n        required: false,\n        type: {\n          name: 'Partial<EuiRangeInputProps>'\n        }\n      },\n      isDraggable: {\n        defaultValue: null,\n        description: 'Creates a draggble highlighted range area',\n        name: 'isDraggable',\n        parent: {\n          fileName: 'eui/src/components/form/range/dual_range.tsx',\n          name: 'EuiDualRangeProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/node_modules/@types/react/index.d.ts',\n          name: 'HTMLAttributes'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: 'Defines a string value that labels the current element.\\n' + '@see aria-labelledby.',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/node_modules/@types/react/index.d.ts',\n          name: 'AriaAttributes'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'data-test-subj': {\n        defaultValue: null,\n        description: '',\n        name: 'data-test-subj',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      compressed: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: '',\n        name: 'compressed',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      hasFocus: {\n        defaultValue: null,\n        description: '',\n        name: 'hasFocus',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      showRange: {\n        defaultValue: {\n          value: 'true'\n        },\n        description: '',\n        name: 'showRange',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      showTicks: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: '',\n        name: 'showTicks',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      }\n    },\n    extendedInterfaces: ['EuiDualRangeProps', 'HTMLAttributes', 'InputHTMLAttributes', 'AriaAttributes', 'DOMAttributes', 'CommonProps']\n  };\n} catch (e) {}"]}]}