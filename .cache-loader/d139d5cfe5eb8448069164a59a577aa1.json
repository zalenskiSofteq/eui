{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\datagrid\\column_selector.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\datagrid\\column_selector.tsx","mtime":1649070093360},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/datagrid/column_selector.tsx"],"names":["React","Fragment","useState","useMemo","useCallback","classNames","EuiPopover","EuiPopoverFooter","EuiPopoverTitle","EuiI18n","EuiButtonEmpty","EuiFlexGroup","EuiFlexItem","EuiSwitch","EuiFieldText","EuiDragDropContext","EuiDraggable","EuiDroppable","euiDragDropReorder","EuiIcon","useDependentState","getShowColumnSelectorValue","showColumnSelector","valueName","useDataGridColumnSelector","availableColumns","columnVisibility","displayValues","allowColumnHiding","allowColumnReorder","map","id","sortedColumns","setSortedColumns","visibleColumns","setVisibleColumns","visibleColumnIds","Set","isOpen","setIsOpen","setColumns","nextColumns","nextVisibleColumns","filter","has","onDragEnd","sourceIndex","source","index","destination","destinationIndex","nextSortedColumns","numberOfHiddenFields","length","columnSearchText","setColumnSearchText","controlBtnClasses","filteredColumns","toLowerCase","indexOf","isDragEnabled","buttonText","columnSelector","search","searchcolumns","e","currentTarget","value","provided","state","isDragging","event","checked","target","columnId","orderedVisibleColumns","find","column","switchColumnPos","fromColId","toColId","moveFromIdx","moveToIdx","splice"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {\n  Fragment,\n  useState,\n  useMemo,\n  useCallback,\n  ReactElement,\n  ChangeEvent,\n} from 'react';\nimport classNames from 'classnames';\nimport {\n  EuiDataGridColumn,\n  EuiDataGridColumnVisibility,\n  EuiDataGridToolBarVisibilityColumnSelectorOptions,\n  EuiDataGridToolBarVisibilityOptions,\n} from './data_grid_types';\nimport { EuiPopover, EuiPopoverFooter, EuiPopoverTitle } from '../popover';\nimport { EuiI18n } from '../i18n';\nimport { EuiButtonEmpty } from '../button';\nimport { EuiFlexGroup, EuiFlexItem } from '../flex';\nimport { EuiSwitch, EuiFieldText } from '../form';\nimport {\n  EuiDragDropContext,\n  EuiDraggable,\n  EuiDroppable,\n  euiDragDropReorder,\n} from '../drag_and_drop';\nimport { DropResult } from 'react-beautiful-dnd';\nimport { EuiIcon } from '../icon';\nimport { useDependentState } from '../../services';\n\nconst getShowColumnSelectorValue = (\n  showColumnSelector: EuiDataGridToolBarVisibilityOptions['showColumnSelector'],\n  valueName: keyof EuiDataGridToolBarVisibilityColumnSelectorOptions\n) => {\n  if (showColumnSelector === false) return false;\n  if (showColumnSelector == null) return true;\n  if (showColumnSelector === true) return true;\n  return showColumnSelector[valueName] !== false;\n};\n\nexport const useDataGridColumnSelector = (\n  availableColumns: EuiDataGridColumn[],\n  columnVisibility: EuiDataGridColumnVisibility,\n  showColumnSelector: EuiDataGridToolBarVisibilityOptions['showColumnSelector'],\n  displayValues: { [key: string]: string }\n): [\n  ReactElement,\n  EuiDataGridColumn[],\n  (columns: string[]) => void,\n  (colFrom: string, colTo: string) => void\n] => {\n  const allowColumnHiding = getShowColumnSelectorValue(\n    showColumnSelector,\n    'allowHide'\n  );\n  const allowColumnReorder = getShowColumnSelectorValue(\n    showColumnSelector,\n    'allowReorder'\n  );\n\n  const [sortedColumns, setSortedColumns] = useDependentState(\n    () => availableColumns.map(({ id }) => id),\n    [availableColumns]\n  );\n\n  const { visibleColumns, setVisibleColumns } = columnVisibility;\n  const visibleColumnIds = useMemo(() => new Set(visibleColumns), [\n    visibleColumns,\n  ]);\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const setColumns = useCallback(\n    (nextColumns: string[]) => {\n      setSortedColumns(nextColumns);\n\n      const nextVisibleColumns = nextColumns.filter((id) =>\n        visibleColumnIds.has(id)\n      );\n      setVisibleColumns(nextVisibleColumns);\n    },\n    [setSortedColumns, setVisibleColumns, visibleColumnIds]\n  );\n\n  function onDragEnd({\n    source: { index: sourceIndex },\n    destination,\n  }: DropResult) {\n    const destinationIndex = destination!.index;\n    const nextSortedColumns = euiDragDropReorder(\n      sortedColumns,\n      sourceIndex,\n      destinationIndex\n    );\n    setColumns(nextSortedColumns);\n  }\n\n  const numberOfHiddenFields = availableColumns.length - visibleColumns.length;\n\n  const [columnSearchText, setColumnSearchText] = useState('');\n\n  const controlBtnClasses = classNames('euiDataGrid__controlBtn', {\n    'euiDataGrid__controlBtn--active': numberOfHiddenFields > 0,\n  });\n\n  const filteredColumns = sortedColumns.filter(\n    (id) =>\n      (displayValues[id] || id)\n        .toLowerCase()\n        .indexOf(columnSearchText.toLowerCase()) !== -1\n  );\n\n  const isDragEnabled = allowColumnReorder && columnSearchText.length === 0; // only allow drag-and-drop when not filtering columns\n\n  let buttonText = (\n    <EuiI18n token=\"euiColumnSelector.button\" default=\"Columns\" />\n  );\n\n  if (numberOfHiddenFields === 1) {\n    buttonText = (\n      <EuiI18n\n        token=\"euiColumnSelector.buttonActiveSingular\"\n        default=\"{numberOfHiddenFields} column hidden\"\n        values={{ numberOfHiddenFields }}\n      />\n    );\n  } else if (numberOfHiddenFields > 1) {\n    buttonText = (\n      <EuiI18n\n        token=\"euiColumnSelector.buttonActivePlural\"\n        default=\"{numberOfHiddenFields} columns hidden\"\n        values={{ numberOfHiddenFields }}\n      />\n    );\n  }\n\n  const columnSelector = (\n    <EuiPopover\n      data-test-subj=\"dataGridColumnSelectorPopover\"\n      isOpen={isOpen}\n      closePopover={() => setIsOpen(false)}\n      anchorPosition=\"downLeft\"\n      panelPaddingSize=\"s\"\n      panelClassName=\"euiDataGridColumnSelectorPopover\"\n      button={\n        <EuiButtonEmpty\n          size=\"xs\"\n          iconType={allowColumnHiding ? 'listAdd' : 'list'}\n          color=\"text\"\n          className={controlBtnClasses}\n          data-test-subj=\"dataGridColumnSelectorButton\"\n          onClick={() => setIsOpen(!isOpen)}>\n          {buttonText}\n        </EuiButtonEmpty>\n      }>\n      <div>\n        {allowColumnHiding && (\n          <EuiPopoverTitle>\n            <EuiI18n\n              tokens={[\n                'euiColumnSelector.search',\n                'euiColumnSelector.searchcolumns',\n              ]}\n              defaults={['Search', 'Search columns']}>\n              {([search, searchcolumns]: string[]) => (\n                <EuiFieldText\n                  compressed\n                  placeholder={search}\n                  aria-label={searchcolumns}\n                  value={columnSearchText}\n                  onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                    setColumnSearchText(e.currentTarget.value)\n                  }\n                />\n              )}\n            </EuiI18n>\n          </EuiPopoverTitle>\n        )}\n        <div className=\"euiDataGrid__controlScroll\">\n          <EuiDragDropContext onDragEnd={onDragEnd}>\n            <EuiDroppable\n              droppableId=\"columnOrder\"\n              isDropDisabled={!isDragEnabled}>\n              <Fragment>\n                {filteredColumns.map((id, index) => (\n                  <EuiDraggable\n                    key={id}\n                    draggableId={id}\n                    index={index}\n                    isDragDisabled={!isDragEnabled}>\n                    {(provided, state) => (\n                      <div\n                        className={`euiDataGridColumnSelector__item ${\n                          state.isDragging &&\n                          'euiDataGridColumnSelector__item-isDragging'\n                        }`}>\n                        <EuiFlexGroup\n                          responsive={false}\n                          gutterSize=\"m\"\n                          alignItems=\"center\">\n                          <EuiFlexItem>\n                            {allowColumnHiding ? (\n                              <EuiSwitch\n                                name={id}\n                                label={displayValues[id] || id}\n                                checked={visibleColumnIds.has(id)}\n                                compressed\n                                className=\"euiSwitch--mini\"\n                                onChange={(event) => {\n                                  const {\n                                    target: { checked },\n                                  } = event;\n                                  const nextVisibleColumns = sortedColumns.filter(\n                                    (columnId) =>\n                                      checked\n                                        ? visibleColumnIds.has(columnId) ||\n                                          id === columnId\n                                        : visibleColumnIds.has(columnId) &&\n                                          id !== columnId\n                                  );\n                                  setVisibleColumns(nextVisibleColumns);\n                                }}\n                              />\n                            ) : (\n                              <span className=\"euiDataGridColumnSelector__itemLabel\">\n                                {id}\n                              </span>\n                            )}\n                          </EuiFlexItem>\n                          {isDragEnabled && (\n                            <EuiFlexItem grow={false}>\n                              <EuiIcon type=\"grab\" color=\"subdued\" />\n                            </EuiFlexItem>\n                          )}\n                        </EuiFlexGroup>\n                      </div>\n                    )}\n                  </EuiDraggable>\n                ))}\n              </Fragment>\n            </EuiDroppable>\n          </EuiDragDropContext>\n        </div>\n      </div>\n      {allowColumnHiding && (\n        <EuiPopoverFooter>\n          <EuiFlexGroup\n            gutterSize=\"s\"\n            responsive={false}\n            justifyContent=\"spaceBetween\">\n            <EuiFlexItem grow={false}>\n              <EuiButtonEmpty\n                size=\"xs\"\n                flush=\"left\"\n                onClick={() => setVisibleColumns(sortedColumns)}>\n                <EuiI18n\n                  token=\"euiColumnSelector.selectAll\"\n                  default=\"Show all\"\n                />\n              </EuiButtonEmpty>\n            </EuiFlexItem>\n            <EuiFlexItem grow={false}>\n              <EuiButtonEmpty\n                size=\"xs\"\n                flush=\"right\"\n                onClick={() => setVisibleColumns([])}>\n                <EuiI18n token=\"euiColumnSelector.hideAll\" default=\"Hide all\" />\n              </EuiButtonEmpty>\n            </EuiFlexItem>\n          </EuiFlexGroup>\n        </EuiPopoverFooter>\n      )}\n    </EuiPopover>\n  );\n\n  const orderedVisibleColumns = useMemo(\n    () =>\n      visibleColumns\n        .map<EuiDataGridColumn>(\n          (columnId) =>\n            availableColumns.find(\n              ({ id }) => id === columnId\n            ) as EuiDataGridColumn // cast to avoid `undefined`, it filters those out next\n        )\n        .filter((column) => column != null),\n    [availableColumns, visibleColumns]\n  );\n  /**\n   * Used for moving columns left/right, available in the headers actions menu\n   */\n  const switchColumnPos = useCallback(\n    (fromColId: string, toColId: string) => {\n      const moveFromIdx = sortedColumns.indexOf(fromColId);\n      const moveToIdx = sortedColumns.indexOf(toColId);\n      if (moveFromIdx === -1 || moveToIdx === -1) {\n        return;\n      }\n      const nextSortedColumns = [...sortedColumns];\n      nextSortedColumns.splice(moveFromIdx, 1);\n      nextSortedColumns.splice(moveToIdx, 0, fromColId);\n      setColumns(nextSortedColumns);\n    },\n    [setColumns, sortedColumns]\n  );\n\n  return [\n    columnSelector,\n    orderedVisibleColumns,\n    setVisibleColumns,\n    switchColumnPos,\n  ];\n};\n"]}]}