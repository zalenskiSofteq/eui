{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src-docs\\src\\views\\markdown_editor\\markdown_editor_with_plugins.js","dependencies":[{"path":"D:\\work\\eui\\src-docs\\src\\views\\markdown_editor\\markdown_editor_with_plugins.js","mtime":1649070093203},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnBhcnNlLWludCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zdGFydHMtd2l0aCI7CgpmdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsgaWYgKGVudW1lcmFibGVPbmx5KSBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSk7IGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsgfSByZXR1cm4ga2V5czsgfQoKZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307IGlmIChpICUgMikgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pOyB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7IH0gZWxzZSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gfSByZXR1cm4gdGFyZ2V0OyB9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfQoKZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7IHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7IH0KCmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuIik7IH0KCmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHsgaWYgKCFvKSByZXR1cm47IGlmICh0eXBlb2YgbyA9PT0gInN0cmluZyIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7IGlmIChuID09PSAiT2JqZWN0IiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lOyBpZiAobiA9PT0gIk1hcCIgfHwgbiA9PT0gIlNldCIpIHJldHVybiBBcnJheS5mcm9tKG8pOyBpZiAobiA9PT0gIkFyZ3VtZW50cyIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB9CgpmdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikgeyBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH0KCmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHsgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJ1bmRlZmluZWQiIHx8ICEoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChhcnIpKSkgcmV0dXJuOyB2YXIgX2FyciA9IFtdOyB2YXIgX24gPSB0cnVlOyB2YXIgX2QgPSBmYWxzZTsgdmFyIF9lID0gdW5kZWZpbmVkOyB0cnkgeyBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVsicmV0dXJuIl0gIT0gbnVsbCkgX2lbInJldHVybiJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfQoKZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOyB9CgppbXBvcnQgUmVhY3QsIHsgdXNlQ2FsbGJhY2ssIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnOwppbXBvcnQgeyBDaGFydCwgU2V0dGluZ3MsIEF4aXMsIEJhclNlcmllcywgRGF0YUdlbmVyYXRvciB9IGZyb20gJ0BlbGFzdGljL2NoYXJ0cyc7CmltcG9ydCB7IEVVSV9DSEFSVFNfVEhFTUVfTElHSFQgfSBmcm9tICcuLi8uLi8uLi8uLi9zcmMvdGhlbWVzL2NoYXJ0cy90aGVtZXMnOwppbXBvcnQgeyBnZXREZWZhdWx0RXVpTWFya2Rvd25QYXJzaW5nUGx1Z2lucywgZ2V0RGVmYXVsdEV1aU1hcmtkb3duUHJvY2Vzc2luZ1BsdWdpbnMsIEV1aU1hcmtkb3duRWRpdG9yLCBFdWlNYXJrZG93bkZvcm1hdCwgRXVpU3BhY2VyLCBFdWlDb2RlQmxvY2ssIEV1aU1vZGFsSGVhZGVyLCBFdWlNb2RhbEhlYWRlclRpdGxlLCBFdWlNb2RhbEJvZHksIEV1aU1vZGFsRm9vdGVyLCBFdWlCdXR0b24sIEV1aUJ1dHRvbkVtcHR5LCBFdWlGb3JtLCBFdWlGb3JtUm93LCBFdWlDb2xvclBhbGV0dGVQaWNrZXIsIEV1aVJhbmdlLCBFdWlUZXh0LCBFdWlGbGV4R3JvdXAsIEV1aUZsZXhJdGVtIH0gZnJvbSAnLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMnOwppbXBvcnQgeyBldWlQYWxldHRlQ29tcGxpbWVudGFyeSwgZXVpUGFsZXR0ZUNvb2wsIGV1aVBhbGV0dGVGb3JTdGF0dXMsIGV1aVBhbGV0dGVGb3JUZW1wZXJhdHVyZSwgZXVpUGFsZXR0ZUdyYXksIGV1aVBhbGV0dGVOZWdhdGl2ZSwgZXVpUGFsZXR0ZVBvc2l0aXZlLCBldWlQYWxldHRlV2FybSB9IGZyb20gJy4uLy4uLy4uLy4uL3NyYy9zZXJ2aWNlcy9jb2xvcic7CmltcG9ydCB7IGdldERlZmF1bHRFdWlNYXJrZG93blVpUGx1Z2lucyB9IGZyb20gJy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL21hcmtkb3duX2VkaXRvcic7CnZhciBwYWxldHRlRGF0YSA9IHsKICBldWlQYWxldHRlRm9yU3RhdHVzOiBldWlQYWxldHRlRm9yU3RhdHVzLAogIGV1aVBhbGV0dGVGb3JUZW1wZXJhdHVyZTogZXVpUGFsZXR0ZUZvclRlbXBlcmF0dXJlLAogIGV1aVBhbGV0dGVDb21wbGltZW50YXJ5OiBldWlQYWxldHRlQ29tcGxpbWVudGFyeSwKICBldWlQYWxldHRlTmVnYXRpdmU6IGV1aVBhbGV0dGVOZWdhdGl2ZSwKICBldWlQYWxldHRlUG9zaXRpdmU6IGV1aVBhbGV0dGVQb3NpdGl2ZSwKICBldWlQYWxldHRlQ29vbDogZXVpUGFsZXR0ZUNvb2wsCiAgZXVpUGFsZXR0ZVdhcm06IGV1aVBhbGV0dGVXYXJtLAogIGV1aVBhbGV0dGVHcmF5OiBldWlQYWxldHRlR3JheQp9Owp2YXIgcGFsZXR0ZU5hbWVzID0gT2JqZWN0LmtleXMocGFsZXR0ZURhdGEpOwp2YXIgZGcgPSBuZXcgRGF0YUdlbmVyYXRvcigpOwoKdmFyIGdlbmVyYXRlRGF0YSA9IGZ1bmN0aW9uIGdlbmVyYXRlRGF0YShjYXRlZ29yaWVzKSB7CiAgcmV0dXJuIGRnLmdlbmVyYXRlR3JvdXBlZFNlcmllcygxMCwgY2F0ZWdvcmllcyk7Cn07Cgp2YXIgY2hhcnREZW1vUGx1Z2luID0gewogIG5hbWU6ICdjaGFydERlbW9QbHVnaW4nLAogIGJ1dHRvbjogewogICAgbGFiZWw6ICdDaGFydCcsCiAgICBpY29uVHlwZTogJ3Zpc0JhclZlcnRpY2FsU3RhY2tlZCcKICB9LAogIGhlbHBUZXh0OiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgbnVsbCwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRXVpQ29kZUJsb2NrLCB7CiAgICBsYW5ndWFnZTogIm1kIiwKICAgIGZvbnRTaXplOiAibCIsCiAgICBwYWRkaW5nU2l6ZTogInMiLAogICAgaXNDb3B5YWJsZTogdHJ1ZQogIH0sICche2NoYXJ0e29wdGlvbnN9fScpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlTcGFjZXIsIHsKICAgIHNpemU6ICJzIgogIH0pLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlUZXh0LCB7CiAgICBzaXplOiAieHMiLAogICAgc3R5bGU6IHsKICAgICAgbWFyZ2luTGVmdDogMTYKICAgIH0KICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgicCIsIG51bGwsICJXaGVyZSBvcHRpb25zIGNhbiBjb250YWluOiIpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgidWwiLCBudWxsLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgibGkiLCBudWxsLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgic3Ryb25nIiwgbnVsbCwgInBhbGV0dGU6ICIpLCAiQSBudW1iZXIgYmV0d2VlbiAxLTggZm9yIGVhY2ggcGFsZXR0ZS4iKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImxpIiwgbnVsbCwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoInN0cm9uZyIsIG51bGwsICJjYXRlZ29yaWVzOiAiKSwgIlRoZSBudW1iZXIgb2YgY2F0ZWdvcmllcyBwZXIgY29sdW1uIikpKSksCiAgZWRpdG9yOiBmdW5jdGlvbiBDaGFydEVkaXRvcihfcmVmKSB7CiAgICB2YXIgbm9kZSA9IF9yZWYubm9kZSwKICAgICAgICBvblNhdmUgPSBfcmVmLm9uU2F2ZSwKICAgICAgICBvbkNhbmNlbCA9IF9yZWYub25DYW5jZWw7CgogICAgdmFyIF91c2VTdGF0ZSA9IHVzZVN0YXRlKG5vZGUgJiYgbm9kZS5wYWxldHRlIHx8ICcxJyksCiAgICAgICAgX3VzZVN0YXRlMiA9IF9zbGljZWRUb0FycmF5KF91c2VTdGF0ZSwgMiksCiAgICAgICAgcGFsZXR0ZSA9IF91c2VTdGF0ZTJbMF0sCiAgICAgICAgc2V0UGFsZXR0ZSA9IF91c2VTdGF0ZTJbMV07CgogICAgdmFyIF91c2VTdGF0ZTMgPSB1c2VTdGF0ZSg1KSwKICAgICAgICBfdXNlU3RhdGU0ID0gX3NsaWNlZFRvQXJyYXkoX3VzZVN0YXRlMywgMiksCiAgICAgICAgY2F0ZWdvcmllcyA9IF91c2VTdGF0ZTRbMF0sCiAgICAgICAgc2V0Q2F0ZWdvcmllcyA9IF91c2VTdGF0ZTRbMV07CgogICAgdmFyIG9uQ2hhbmdlID0gZnVuY3Rpb24gb25DaGFuZ2UoZSkgewogICAgICBzZXRDYXRlZ29yaWVzKHBhcnNlSW50KGUudGFyZ2V0LnZhbHVlKSk7CiAgICB9OwoKICAgIHZhciBwYWxldHRlcyA9IHBhbGV0dGVOYW1lcy5tYXAoZnVuY3Rpb24gKHBhbGV0dGVOYW1lLCBpbmRleCkgewogICAgICByZXR1cm4gewogICAgICAgIHZhbHVlOiBTdHJpbmcoaW5kZXggKyAxKSwKICAgICAgICB0aXRsZTogcGFsZXR0ZU5hbWUsCiAgICAgICAgcGFsZXR0ZTogcGFsZXR0ZURhdGFbcGFsZXR0ZU5hbWVzW2luZGV4XV0oY2F0ZWdvcmllcyksCiAgICAgICAgdHlwZTogJ2ZpeGVkJwogICAgICB9OwogICAgfSk7CiAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEV1aU1vZGFsSGVhZGVyLCBudWxsLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlNb2RhbEhlYWRlclRpdGxlLCBudWxsLCAiQWRkIGNoYXJ0IikpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlNb2RhbEJvZHksIG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LCBudWxsLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlGb3JtLCB7CiAgICAgIGNvbXBvbmVudDogImZvcm0iCiAgICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlGbGV4R3JvdXAsIHsKICAgICAgZ3V0dGVyU2l6ZTogIm0iLAogICAgICBzdHlsZTogewogICAgICAgIHdpZHRoOiA2MDAKICAgICAgfQogICAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRXVpRmxleEl0ZW0sIG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEV1aUZvcm1Sb3csIHsKICAgICAgbGFiZWw6ICJQYWxldHRlIgogICAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRXVpQ29sb3JQYWxldHRlUGlja2VyLCB7CiAgICAgIHBhbGV0dGVzOiBwYWxldHRlcywKICAgICAgb25DaGFuZ2U6IHNldFBhbGV0dGUsCiAgICAgIHZhbHVlOiBwYWxldHRlLAogICAgICBjb21wcmVzc2VkOiB0cnVlCiAgICB9KSkpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlGbGV4SXRlbSwgbnVsbCwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRXVpRm9ybVJvdywgewogICAgICBsYWJlbDogIkNhdGVnb3JpZXMiCiAgICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlSYW5nZSwgewogICAgICB2YWx1ZTogY2F0ZWdvcmllcywKICAgICAgb25DaGFuZ2U6IG9uQ2hhbmdlLAogICAgICBtaW46IDEsCiAgICAgIG1heDogMTAsCiAgICAgIGNvbXByZXNzZWQ6IHRydWUsCiAgICAgIHNob3dWYWx1ZTogdHJ1ZQogICAgfSkpKSkpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFdWlTcGFjZXIsIG51bGwpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDaGFydE1hcmtkb3duUmVuZGVyZXIsIHsKICAgICAgcGFsZXR0ZTogcGFsZXR0ZSwKICAgICAgY2F0ZWdvcmllczogY2F0ZWdvcmllcwogICAgfSkpKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRXVpTW9kYWxGb290ZXIsIG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEV1aUJ1dHRvbkVtcHR5LCB7CiAgICAgIG9uQ2xpY2s6IG9uQ2FuY2VsCiAgICB9LCAiQ2FuY2VsIiksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEV1aUJ1dHRvbiwgewogICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKCkgewogICAgICAgIHJldHVybiBvblNhdmUoIiF7Y2hhcnQiLmNvbmNhdChKU09OLnN0cmluZ2lmeSh7CiAgICAgICAgICBwYWxldHRlOiBwYWxldHRlLAogICAgICAgICAgY2F0ZWdvcmllczogY2F0ZWdvcmllcwogICAgICAgIH0pLCAifSIpLCB7CiAgICAgICAgICBibG9jazogdHJ1ZQogICAgICAgIH0pOwogICAgICB9LAogICAgICBmaWxsOiB0cnVlCiAgICB9LCAiU2F2ZSIpKSk7CiAgfQp9OwoKZnVuY3Rpb24gQ2hhcnRNYXJrZG93blBhcnNlcigpIHsKICB2YXIgUGFyc2VyID0gdGhpcy5QYXJzZXI7CiAgdmFyIHRva2VuaXplcnMgPSBQYXJzZXIucHJvdG90eXBlLmJsb2NrVG9rZW5pemVyczsKICB2YXIgbWV0aG9kcyA9IFBhcnNlci5wcm90b3R5cGUuYmxvY2tNZXRob2RzOwoKICBmdW5jdGlvbiB0b2tlbml6ZUNoYXJ0KGVhdCwgdmFsdWUsIHNpbGVudCkgewogICAgaWYgKHZhbHVlLnN0YXJ0c1dpdGgoJyF7Y2hhcnQnKSA9PT0gZmFsc2UpIHJldHVybiBmYWxzZTsKICAgIHZhciBuZXh0Q2hhciA9IHZhbHVlWzddOwogICAgaWYgKG5leHRDaGFyICE9PSAneycgJiYgbmV4dENoYXIgIT09ICd9JykgcmV0dXJuIGZhbHNlOyAvLyB0aGlzIGlzbid0IGFjdHVhbGx5IGEgY2hhcnQKCiAgICBpZiAoc2lsZW50KSB7CiAgICAgIHJldHVybiB0cnVlOwogICAgfSAvLyBpcyB0aGVyZSBhIGNvbmZpZ3VyYXRpb24/CgoKICAgIHZhciBoYXNDb25maWd1cmF0aW9uID0gbmV4dENoYXIgPT09ICd7JzsKICAgIHZhciBtYXRjaCA9ICche2NoYXJ0JzsKICAgIHZhciBjb25maWd1cmF0aW9uID0ge307CgogICAgaWYgKGhhc0NvbmZpZ3VyYXRpb24pIHsKICAgICAgdmFyIGNvbmZpZ3VyYXRpb25TdHJpbmcgPSAnJzsKICAgICAgdmFyIG9wZW5PYmplY3RzID0gMDsKCiAgICAgIGZvciAodmFyIGkgPSA3OyBpIDwgdmFsdWUubGVuZ3RoOyBpKyspIHsKICAgICAgICB2YXIgY2hhciA9IHZhbHVlW2ldOwoKICAgICAgICBpZiAoY2hhciA9PT0gJ3snKSB7CiAgICAgICAgICBvcGVuT2JqZWN0cysrOwogICAgICAgICAgY29uZmlndXJhdGlvblN0cmluZyArPSBjaGFyOwogICAgICAgIH0gZWxzZSBpZiAoY2hhciA9PT0gJ30nKSB7CiAgICAgICAgICBvcGVuT2JqZWN0cy0tOwoKICAgICAgICAgIGlmIChvcGVuT2JqZWN0cyA9PT0gLTEpIHsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CgogICAgICAgICAgY29uZmlndXJhdGlvblN0cmluZyArPSBjaGFyOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBjb25maWd1cmF0aW9uU3RyaW5nICs9IGNoYXI7CiAgICAgICAgfQogICAgICB9CgogICAgICBtYXRjaCArPSBjb25maWd1cmF0aW9uU3RyaW5nOwoKICAgICAgdHJ5IHsKICAgICAgICBjb25maWd1cmF0aW9uID0gSlNPTi5wYXJzZShjb25maWd1cmF0aW9uU3RyaW5nKTsKICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgIHZhciBub3cgPSBlYXQubm93KCk7CiAgICAgICAgdGhpcy5maWxlLmZhaWwoIlVuYWJsZSB0byBwYXJzZSBjaGFydCBKU09OIGNvbmZpZ3VyYXRpb246ICIuY29uY2F0KGUpLCB7CiAgICAgICAgICBsaW5lOiBub3cubGluZSwKICAgICAgICAgIGNvbHVtbjogbm93LmNvbHVtbiArIDcKICAgICAgICB9KTsKICAgICAgfQogICAgfQoKICAgIG1hdGNoICs9ICd9JzsKICAgIHJldHVybiBlYXQobWF0Y2gpKF9vYmplY3RTcHJlYWQoewogICAgICB0eXBlOiAnY2hhcnREZW1vUGx1Z2luJwogICAgfSwgY29uZmlndXJhdGlvbikpOwogIH0KCiAgdG9rZW5pemVycy5jaGFydCA9IHRva2VuaXplQ2hhcnQ7CiAgbWV0aG9kcy5zcGxpY2UobWV0aG9kcy5pbmRleE9mKCd0ZXh0JyksIDAsICdjaGFydCcpOwp9IC8vIHJlY2VpdmVzIHRoZSBjb25maWd1cmF0aW9uIGZyb20gdGhlIHBhcnNlciBhbmQgcmVuZGVycwoKCnZhciBDaGFydE1hcmtkb3duUmVuZGVyZXIgPSBmdW5jdGlvbiBDaGFydE1hcmtkb3duUmVuZGVyZXIoX3JlZjIpIHsKICB2YXIgcGFsZXR0ZSA9IF9yZWYyLnBhbGV0dGUsCiAgICAgIGNhdGVnb3JpZXMgPSBfcmVmMi5jYXRlZ29yaWVzOwogIHZhciBjdXN0b21Db2xvcnMgPSB7CiAgICBjb2xvcnM6IHsKICAgICAgdml6Q29sb3JzOiBwYWxldHRlRGF0YVtwYWxldHRlTmFtZXNbcGFsZXR0ZSAtIDFdXShjYXRlZ29yaWVzKQogICAgfQogIH07CiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KENoYXJ0LCB7CiAgICBzaXplOiB7CiAgICAgIGhlaWdodDogMzIwCiAgICB9CiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoU2V0dGluZ3MsIHsKICAgIHRoZW1lOiBbY3VzdG9tQ29sb3JzLCBFVUlfQ0hBUlRTX1RIRU1FX0xJR0hUXSwKICAgIHNob3dMZWdlbmQ6IGZhbHNlLAogICAgc2hvd0xlZ2VuZERpc3BsYXlWYWx1ZTogZmFsc2UKICB9KSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQmFyU2VyaWVzLCB7CiAgICBpZDogInN0YXR1cyIsCiAgICBuYW1lOiAiU3RhdHVzIiwKICAgIGRhdGE6IGdlbmVyYXRlRGF0YShjYXRlZ29yaWVzKSwKICAgIHhBY2Nlc3NvcjogJ3gnLAogICAgeUFjY2Vzc29yczogWyd5J10sCiAgICBzcGxpdFNlcmllc0FjY2Vzc29yczogWydnJ10sCiAgICBzdGFja0FjY2Vzc29yczogWydnJ10KICB9KSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQXhpcywgewogICAgaWQ6ICJib3R0b20tYXhpcyIsCiAgICBwb3NpdGlvbjogImJvdHRvbSIsCiAgICBzaG93R3JpZExpbmVzOiB0cnVlCiAgfSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEF4aXMsIHsKICAgIGlkOiAibGVmdC1heGlzIiwKICAgIHBvc2l0aW9uOiAibGVmdCIsCiAgICBzaG93R3JpZExpbmVzOiB0cnVlCiAgfSkpOwp9OwoKdmFyIGV4YW1wbGVQYXJzaW5nTGlzdCA9IGdldERlZmF1bHRFdWlNYXJrZG93blBhcnNpbmdQbHVnaW5zKCk7CmV4YW1wbGVQYXJzaW5nTGlzdC5wdXNoKENoYXJ0TWFya2Rvd25QYXJzZXIpOwp2YXIgZXhhbXBsZVByb2Nlc3NpbmdMaXN0ID0gZ2V0RGVmYXVsdEV1aU1hcmtkb3duUHJvY2Vzc2luZ1BsdWdpbnMoKTsKZXhhbXBsZVByb2Nlc3NpbmdMaXN0WzFdWzFdLmNvbXBvbmVudHMuY2hhcnREZW1vUGx1Z2luID0gQ2hhcnRNYXJrZG93blJlbmRlcmVyOwp2YXIgZXhhbXBsZVVpUGx1Z2lucyA9IGdldERlZmF1bHRFdWlNYXJrZG93blVpUGx1Z2lucygpOwpleGFtcGxlVWlQbHVnaW5zLnB1c2goY2hhcnREZW1vUGx1Z2luKTsKdmFyIGluaXRpYWxFeGFtcGxlID0gIiMjIENoYXJ0IHBsdWdpblxuXG5Ob3RpY2UgdGhlIHRvb2xiYXIgYWJvdmUgaGFzIGEgbmV3IGNoYXJ0IGJ1dHRvbi4gQ2xpY2sgaXQgdG8gYWRkIGEgY2hhcnQuXG5cbk9uY2UgeW91IGZpbmlzaCBpdCdsbCBhZGQgc29tZSBzeW50YXggdGhhdCBsb29rcyBsaWtlIHRoZSBiZWxvdy5cblxuIXtjaGFydHtcInBhbGV0dGVcIjpcIjJcIixcImNhdGVnb3JpZXNcIjo1fX1cbiI7CmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiAoKSB7CiAgdmFyIF91c2VTdGF0ZTUgPSB1c2VTdGF0ZShpbml0aWFsRXhhbXBsZSksCiAgICAgIF91c2VTdGF0ZTYgPSBfc2xpY2VkVG9BcnJheShfdXNlU3RhdGU1LCAyKSwKICAgICAgdmFsdWUgPSBfdXNlU3RhdGU2WzBdLAogICAgICBzZXRWYWx1ZSA9IF91c2VTdGF0ZTZbMV07CgogIHZhciBfdXNlU3RhdGU3ID0gdXNlU3RhdGUoW10pLAogICAgICBfdXNlU3RhdGU4ID0gX3NsaWNlZFRvQXJyYXkoX3VzZVN0YXRlNywgMiksCiAgICAgIG1lc3NhZ2VzID0gX3VzZVN0YXRlOFswXSwKICAgICAgc2V0TWVzc2FnZXMgPSBfdXNlU3RhdGU4WzFdOwoKICB2YXIgX3VzZVN0YXRlOSA9IHVzZVN0YXRlKG51bGwpLAogICAgICBfdXNlU3RhdGUxMCA9IF9zbGljZWRUb0FycmF5KF91c2VTdGF0ZTksIDIpLAogICAgICBhc3QgPSBfdXNlU3RhdGUxMFswXSwKICAgICAgc2V0QXN0ID0gX3VzZVN0YXRlMTBbMV07CgogIHZhciBfdXNlU3RhdGUxMSA9IHVzZVN0YXRlKGZhbHNlKSwKICAgICAgX3VzZVN0YXRlMTIgPSBfc2xpY2VkVG9BcnJheShfdXNlU3RhdGUxMSwgMiksCiAgICAgIGlzQXN0U2hvd2luZyA9IF91c2VTdGF0ZTEyWzBdLAogICAgICBzZXRJc0FzdFNob3dpbmcgPSBfdXNlU3RhdGUxMlsxXTsKCiAgdmFyIG9uUGFyc2UgPSB1c2VDYWxsYmFjayhmdW5jdGlvbiAoZXJyLCBfcmVmMykgewogICAgdmFyIG1lc3NhZ2VzID0gX3JlZjMubWVzc2FnZXMsCiAgICAgICAgYXN0ID0gX3JlZjMuYXN0OwogICAgc2V0TWVzc2FnZXMoZXJyID8gW2Vycl0gOiBtZXNzYWdlcyk7CiAgICBzZXRBc3QoSlNPTi5zdHJpbmdpZnkoYXN0LCBudWxsLCAyKSk7CiAgfSwgW10pOwogIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChSZWFjdC5GcmFnbWVudCwgbnVsbCwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRXVpTWFya2Rvd25FZGl0b3IsIHsKICAgICJhcmlhLWxhYmVsIjogIkVVSSBtYXJrZG93biBlZGl0b3Igd2l0aCBwbHVnaW5zIGRlbW8iLAogICAgdmFsdWU6IHZhbHVlLAogICAgb25DaGFuZ2U6IHNldFZhbHVlLAogICAgaGVpZ2h0OiA0MDAsCiAgICB1aVBsdWdpbnM6IGV4YW1wbGVVaVBsdWdpbnMsCiAgICBwYXJzaW5nUGx1Z2luTGlzdDogZXhhbXBsZVBhcnNpbmdMaXN0LAogICAgcHJvY2Vzc2luZ1BsdWdpbkxpc3Q6IGV4YW1wbGVQcm9jZXNzaW5nTGlzdCwKICAgIG9uUGFyc2U6IG9uUGFyc2UsCiAgICBlcnJvcnM6IG1lc3NhZ2VzCiAgfSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEV1aVNwYWNlciwgewogICAgc2l6ZTogInMiCiAgfSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICBjbGFzc05hbWU6ICJldWktdGV4dFJpZ2h0IgogIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEV1aUJ1dHRvbiwgewogICAgc2l6ZTogInMiLAogICAgaWNvblR5cGU6IGlzQXN0U2hvd2luZyA/ICdleWVDbG9zZWQnIDogJ2V5ZScsCiAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKCkgewogICAgICByZXR1cm4gc2V0SXNBc3RTaG93aW5nKCFpc0FzdFNob3dpbmcpOwogICAgfSwKICAgIGZpbGw6IGlzQXN0U2hvd2luZwogIH0sIGlzQXN0U2hvd2luZyA/ICdIaWRlIGVkaXRvciBBU1QnIDogJ1Nob3cgZWRpdG9yIEFTVCcpKSwgaXNBc3RTaG93aW5nICYmIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEV1aUNvZGVCbG9jaywgewogICAgbGFuZ3VhZ2U6ICJqc29uIgogIH0sIGFzdCksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEV1aU1hcmtkb3duRm9ybWF0LCB7CiAgICBwYXJzaW5nUGx1Z2luTGlzdDogZXhhbXBsZVBhcnNpbmdMaXN0LAogICAgcHJvY2Vzc2luZ1BsdWdpbkxpc3Q6IGV4YW1wbGVQcm9jZXNzaW5nTGlzdAogIH0sIHZhbHVlKSk7Cn0pOw=="},{"version":3,"sources":["D:/work/eui/src-docs/src/views/markdown_editor/markdown_editor_with_plugins.js"],"names":["React","useCallback","useState","Chart","Settings","Axis","BarSeries","DataGenerator","EUI_CHARTS_THEME_LIGHT","getDefaultEuiMarkdownParsingPlugins","getDefaultEuiMarkdownProcessingPlugins","EuiMarkdownEditor","EuiMarkdownFormat","EuiSpacer","EuiCodeBlock","EuiModalHeader","EuiModalHeaderTitle","EuiModalBody","EuiModalFooter","EuiButton","EuiButtonEmpty","EuiForm","EuiFormRow","EuiColorPalettePicker","EuiRange","EuiText","EuiFlexGroup","EuiFlexItem","euiPaletteComplimentary","euiPaletteCool","euiPaletteForStatus","euiPaletteForTemperature","euiPaletteGray","euiPaletteNegative","euiPalettePositive","euiPaletteWarm","getDefaultEuiMarkdownUiPlugins","paletteData","paletteNames","Object","keys","dg","generateData","categories","generateGroupedSeries","chartDemoPlugin","name","button","label","iconType","helpText","marginLeft","editor","ChartEditor","node","onSave","onCancel","palette","setPalette","setCategories","onChange","e","parseInt","target","value","palettes","map","paletteName","index","String","title","type","width","JSON","stringify","block","ChartMarkdownParser","Parser","tokenizers","prototype","blockTokenizers","methods","blockMethods","tokenizeChart","eat","silent","startsWith","nextChar","hasConfiguration","match","configuration","configurationString","openObjects","i","length","char","parse","now","file","fail","line","column","chart","splice","indexOf","ChartMarkdownRenderer","customColors","colors","vizColors","height","exampleParsingList","push","exampleProcessingList","components","exampleUiPlugins","initialExample","setValue","messages","setMessages","ast","setAst","isAstShowing","setIsAstShowing","onParse","err"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\n\nimport {\n  Chart,\n  Settings,\n  Axis,\n  BarSeries,\n  DataGenerator,\n} from '@elastic/charts';\n\nimport { EUI_CHARTS_THEME_LIGHT } from '../../../../src/themes/charts/themes';\n\nimport {\n  getDefaultEuiMarkdownParsingPlugins,\n  getDefaultEuiMarkdownProcessingPlugins,\n  EuiMarkdownEditor,\n  EuiMarkdownFormat,\n  EuiSpacer,\n  EuiCodeBlock,\n  EuiModalHeader,\n  EuiModalHeaderTitle,\n  EuiModalBody,\n  EuiModalFooter,\n  EuiButton,\n  EuiButtonEmpty,\n  EuiForm,\n  EuiFormRow,\n  EuiColorPalettePicker,\n  EuiRange,\n  EuiText,\n  EuiFlexGroup,\n  EuiFlexItem,\n} from '../../../../src/components';\n\nimport {\n  euiPaletteComplimentary,\n  euiPaletteCool,\n  euiPaletteForStatus,\n  euiPaletteForTemperature,\n  euiPaletteGray,\n  euiPaletteNegative,\n  euiPalettePositive,\n  euiPaletteWarm,\n} from '../../../../src/services/color';\nimport { getDefaultEuiMarkdownUiPlugins } from '../../../../src/components/markdown_editor';\n\nconst paletteData = {\n  euiPaletteForStatus,\n  euiPaletteForTemperature,\n  euiPaletteComplimentary,\n  euiPaletteNegative,\n  euiPalettePositive,\n  euiPaletteCool,\n  euiPaletteWarm,\n  euiPaletteGray,\n};\n\nconst paletteNames = Object.keys(paletteData);\n\nconst dg = new DataGenerator();\nconst generateData = (categories) => dg.generateGroupedSeries(10, categories);\n\nconst chartDemoPlugin = {\n  name: 'chartDemoPlugin',\n  button: {\n    label: 'Chart',\n    iconType: 'visBarVerticalStacked',\n  },\n  helpText: (\n    <div>\n      <EuiCodeBlock language=\"md\" fontSize=\"l\" paddingSize=\"s\" isCopyable>\n        {'!{chart{options}}'}\n      </EuiCodeBlock>\n      <EuiSpacer size=\"s\" />\n      <EuiText size=\"xs\" style={{ marginLeft: 16 }}>\n        <p>Where options can contain:</p>\n        <ul>\n          <li>\n            <strong>palette: </strong>A number between 1-8 for each palette.\n          </li>\n          <li>\n            <strong>categories: </strong>\n            The number of categories per column\n          </li>\n        </ul>\n      </EuiText>\n    </div>\n  ),\n  editor: function ChartEditor({ node, onSave, onCancel }) {\n    const [palette, setPalette] = useState((node && node.palette) || '1');\n    const [categories, setCategories] = useState(5);\n\n    const onChange = (e) => {\n      setCategories(parseInt(e.target.value));\n    };\n\n    const palettes = paletteNames.map((paletteName, index) => {\n      return {\n        value: String(index + 1),\n        title: paletteName,\n        palette: paletteData[paletteNames[index]](categories),\n        type: 'fixed',\n      };\n    });\n\n    return (\n      <>\n        <EuiModalHeader>\n          <EuiModalHeaderTitle>Add chart</EuiModalHeaderTitle>\n        </EuiModalHeader>\n\n        <EuiModalBody>\n          <>\n            <EuiForm component=\"form\">\n              <EuiFlexGroup gutterSize=\"m\" style={{ width: 600 }}>\n                <EuiFlexItem>\n                  <EuiFormRow label=\"Palette\">\n                    <EuiColorPalettePicker\n                      palettes={palettes}\n                      onChange={setPalette}\n                      value={palette}\n                      compressed\n                    />\n                  </EuiFormRow>\n                </EuiFlexItem>\n                <EuiFlexItem>\n                  <EuiFormRow label=\"Categories\">\n                    <EuiRange\n                      value={categories}\n                      onChange={onChange}\n                      min={1}\n                      max={10}\n                      compressed\n                      showValue\n                    />\n                  </EuiFormRow>\n                </EuiFlexItem>\n              </EuiFlexGroup>\n            </EuiForm>\n            <EuiSpacer />\n            <ChartMarkdownRenderer palette={palette} categories={categories} />\n          </>\n        </EuiModalBody>\n\n        <EuiModalFooter>\n          <EuiButtonEmpty onClick={onCancel}>Cancel</EuiButtonEmpty>\n\n          <EuiButton\n            onClick={() =>\n              onSave(`!{chart${JSON.stringify({ palette, categories })}}`, {\n                block: true,\n              })\n            }\n            fill>\n            Save\n          </EuiButton>\n        </EuiModalFooter>\n      </>\n    );\n  },\n};\n\nfunction ChartMarkdownParser() {\n  const Parser = this.Parser;\n  const tokenizers = Parser.prototype.blockTokenizers;\n  const methods = Parser.prototype.blockMethods;\n\n  function tokenizeChart(eat, value, silent) {\n    if (value.startsWith('!{chart') === false) return false;\n\n    const nextChar = value[7];\n\n    if (nextChar !== '{' && nextChar !== '}') return false; // this isn't actually a chart\n\n    if (silent) {\n      return true;\n    }\n\n    // is there a configuration?\n    const hasConfiguration = nextChar === '{';\n\n    let match = '!{chart';\n    let configuration = {};\n\n    if (hasConfiguration) {\n      let configurationString = '';\n\n      let openObjects = 0;\n\n      for (let i = 7; i < value.length; i++) {\n        const char = value[i];\n        if (char === '{') {\n          openObjects++;\n          configurationString += char;\n        } else if (char === '}') {\n          openObjects--;\n          if (openObjects === -1) {\n            break;\n          }\n          configurationString += char;\n        } else {\n          configurationString += char;\n        }\n      }\n\n      match += configurationString;\n      try {\n        configuration = JSON.parse(configurationString);\n      } catch (e) {\n        const now = eat.now();\n        this.file.fail(`Unable to parse chart JSON configuration: ${e}`, {\n          line: now.line,\n          column: now.column + 7,\n        });\n      }\n    }\n\n    match += '}';\n\n    return eat(match)({\n      type: 'chartDemoPlugin',\n      ...configuration,\n    });\n  }\n\n  tokenizers.chart = tokenizeChart;\n  methods.splice(methods.indexOf('text'), 0, 'chart');\n}\n\n// receives the configuration from the parser and renders\nconst ChartMarkdownRenderer = ({ palette, categories }) => {\n  const customColors = {\n    colors: {\n      vizColors: paletteData[paletteNames[palette - 1]](categories),\n    },\n  };\n  return (\n    <Chart size={{ height: 320 }}>\n      <Settings\n        theme={[customColors, EUI_CHARTS_THEME_LIGHT]}\n        showLegend={false}\n        showLegendDisplayValue={false}\n      />\n      <BarSeries\n        id=\"status\"\n        name=\"Status\"\n        data={generateData(categories)}\n        xAccessor={'x'}\n        yAccessors={['y']}\n        splitSeriesAccessors={['g']}\n        stackAccessors={['g']}\n      />\n      <Axis id=\"bottom-axis\" position=\"bottom\" showGridLines />\n      <Axis id=\"left-axis\" position=\"left\" showGridLines />\n    </Chart>\n  );\n};\n\nconst exampleParsingList = getDefaultEuiMarkdownParsingPlugins();\nexampleParsingList.push(ChartMarkdownParser);\n\nconst exampleProcessingList = getDefaultEuiMarkdownProcessingPlugins();\nexampleProcessingList[1][1].components.chartDemoPlugin = ChartMarkdownRenderer;\n\nconst exampleUiPlugins = getDefaultEuiMarkdownUiPlugins();\nexampleUiPlugins.push(chartDemoPlugin);\n\nconst initialExample = `## Chart plugin\n\nNotice the toolbar above has a new chart button. Click it to add a chart.\n\nOnce you finish it'll add some syntax that looks like the below.\n\n!{chart{\"palette\":\"2\",\"categories\":5}}\n`;\n\nexport default () => {\n  const [value, setValue] = useState(initialExample);\n  const [messages, setMessages] = useState([]);\n  const [ast, setAst] = useState(null);\n  const [isAstShowing, setIsAstShowing] = useState(false);\n  const onParse = useCallback((err, { messages, ast }) => {\n    setMessages(err ? [err] : messages);\n    setAst(JSON.stringify(ast, null, 2));\n  }, []);\n  return (\n    <>\n      <EuiMarkdownEditor\n        aria-label=\"EUI markdown editor with plugins demo\"\n        value={value}\n        onChange={setValue}\n        height={400}\n        uiPlugins={exampleUiPlugins}\n        parsingPluginList={exampleParsingList}\n        processingPluginList={exampleProcessingList}\n        onParse={onParse}\n        errors={messages}\n      />\n      <EuiSpacer size=\"s\" />\n      <div className=\"eui-textRight\">\n        <EuiButton\n          size=\"s\"\n          iconType={isAstShowing ? 'eyeClosed' : 'eye'}\n          onClick={() => setIsAstShowing(!isAstShowing)}\n          fill={isAstShowing}>\n          {isAstShowing ? 'Hide editor AST' : 'Show editor AST'}\n        </EuiButton>\n      </div>\n      {isAstShowing && <EuiCodeBlock language=\"json\">{ast}</EuiCodeBlock>}\n\n      <EuiMarkdownFormat\n        parsingPluginList={exampleParsingList}\n        processingPluginList={exampleProcessingList}>\n        {value}\n      </EuiMarkdownFormat>\n    </>\n  );\n};\n"]}]}