{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\accordion\\accordion.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\accordion\\accordion.tsx","mtime":1649070093281},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/accordion/accordion.tsx"],"names":["React","Component","classNames","keysOf","EuiIcon","EuiLoadingSpinner","EuiResizeObserver","EuiI18n","htmlIdGenerator","paddingSizeToClassNameMap","none","xs","s","m","l","xl","PADDING_SIZES","EuiAccordion","isOpen","props","forceState","initialIsOpen","requestAnimationFrame","height","childContent","state","clientHeight","childWrapper","setAttribute","onToggle","setState","prevState","focus","node","setChildContentHeight","children","buttonContent","className","id","buttonClassName","buttonContentClassName","extraAction","paddingSize","arrowDisplay","isLoading","isLoadingMessage","buttonProps","rest","classes","paddingClass","undefined","childrenClasses","buttonClasses","euiAccordion__buttonReverse","iconClasses","iconWrapperClasses","euiAccordion__iconButton","baseIcon","icon","iconButton","buttonId","optionalAction","childrenContent","resizeRef","ref","setChildContentRef"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { keysOf } from '../common';\nimport { EuiIcon } from '../icon';\nimport { EuiLoadingSpinner } from '../loading';\nimport { EuiResizeObserver } from '../observer/resize_observer';\nimport { EuiI18n } from '../i18n';\nimport { htmlIdGenerator } from '../../services';\nvar paddingSizeToClassNameMap = {\n  none: '',\n  xs: 'euiAccordion__padding--xs',\n  s: 'euiAccordion__padding--s',\n  m: 'euiAccordion__padding--m',\n  l: 'euiAccordion__padding--l',\n  xl: 'euiAccordion__padding--xl'\n};\nexport var PADDING_SIZES = keysOf(paddingSizeToClassNameMap);\nexport class EuiAccordion extends Component {\n  static defaultProps = {\n    initialIsOpen: false,\n    paddingSize: 'none',\n    arrowDisplay: 'left',\n    isLoading: false,\n    isLoadingMessage: false\n  };\n  childContent = null;\n  childWrapper = null;\n  state = {\n    isOpen: this.props.forceState ? this.props.forceState === 'open' : this.props.initialIsOpen\n  };\n  setChildContentHeight = () => {\n    const {\n      forceState\n    } = this.props;\n    requestAnimationFrame(() => {\n      const height = this.childContent && (forceState ? forceState === 'open' : this.state.isOpen) ? this.childContent.clientHeight : 0;\n      this.childWrapper && this.childWrapper.setAttribute('style', `height: ${height}px`);\n    });\n  };\n\n  componentDidMount() {\n    this.setChildContentHeight();\n  }\n\n  componentDidUpdate() {\n    this.setChildContentHeight();\n  }\n\n  onToggle = () => {\n    const {\n      forceState\n    } = this.props;\n\n    if (forceState) {\n      this.props.onToggle && this.props.onToggle(forceState === 'open' ? false : true);\n    } else {\n      this.setState(prevState => ({\n        isOpen: !prevState.isOpen\n      }), () => {\n        if (this.state.isOpen && this.childWrapper) {\n          this.childWrapper.focus();\n        }\n\n        this.props.onToggle && this.props.onToggle(this.state.isOpen);\n      });\n    }\n  };\n  setChildContentRef = node => {\n    this.childContent = node;\n  };\n\n  render() {\n    const {\n      children,\n      buttonContent,\n      className,\n      id,\n      buttonClassName,\n      buttonContentClassName,\n      extraAction,\n      paddingSize,\n      initialIsOpen,\n      arrowDisplay,\n      forceState,\n      isLoading,\n      isLoadingMessage,\n      buttonProps,\n      ...rest\n    } = this.props;\n    const isOpen = forceState ? forceState === 'open' : this.state.isOpen;\n    const classes = classNames('euiAccordion', {\n      'euiAccordion-isOpen': isOpen\n    }, className);\n    const paddingClass = paddingSize ? classNames(paddingSizeToClassNameMap[paddingSize]) : undefined;\n    const childrenClasses = classNames(paddingClass, {\n      'euiAccordion__children-isLoading': isLoading\n    });\n    const buttonClasses = classNames('euiAccordion__button', {\n      euiAccordion__buttonReverse: !extraAction && arrowDisplay === 'right'\n    }, buttonClassName, buttonProps?.className);\n    const iconClasses = classNames('euiAccordion__icon', {\n      'euiAccordion__icon-isOpen': isOpen\n    });\n    const iconWrapperClasses = classNames('euiAccordion__iconWrapper', {\n      euiAccordion__iconButton: extraAction && arrowDisplay === 'right'\n    });\n    let baseIcon;\n\n    if (arrowDisplay !== 'none') {\n      baseIcon = <EuiIcon className={iconClasses} type=\"arrowRight\" size=\"m\" />;\n    }\n\n    let icon;\n    let iconButton;\n    const buttonId = buttonProps?.id ?? htmlIdGenerator()();\n\n    if (extraAction && arrowDisplay === 'right') {\n      iconButton = <button aria-controls={id} aria-expanded={isOpen} aria-labelledby={buttonId} tabIndex={-1} className={iconWrapperClasses} onClick={this.onToggle}>\n          {baseIcon}\n        </button>;\n    } else if (arrowDisplay !== 'none') {\n      icon = <span className={iconWrapperClasses}>{baseIcon}</span>;\n    }\n\n    let optionalAction = null;\n\n    if (extraAction && !isLoading) {\n      optionalAction = <div className=\"euiAccordion__optionalAction\">{extraAction}</div>;\n    } else if (isLoading) {\n      optionalAction = <div className=\"euiAccordion__optionalAction\">\n          <EuiLoadingSpinner />\n        </div>;\n    }\n\n    let childrenContent;\n\n    if (isLoading && isLoadingMessage) {\n      childrenContent = <>\n          <EuiLoadingSpinner className=\"euiAccordion__spinner\" />\n          <span>\n            {isLoadingMessage && isLoadingMessage !== true ? isLoadingMessage : <EuiI18n token=\"euiAccordion.isLoading\" default=\"Loading\" />}\n          </span>\n        </>;\n    } else {\n      childrenContent = children;\n    }\n\n    return <div className={classes} {...rest}>\n        <div className=\"euiAccordion__triggerWrapper\">\n          <button {...buttonProps} id={buttonId} aria-controls={id} aria-expanded={isOpen} onClick={this.onToggle} className={buttonClasses} type=\"button\">\n            {icon}\n            <span className={classNames('euiIEFlexWrapFix', buttonContentClassName)}>\n              {buttonContent}\n            </span>\n          </button>\n          {optionalAction}\n          {iconButton}\n        </div>\n\n        <div className=\"euiAccordion__childWrapper\" ref={node => {\n        this.childWrapper = node;\n      }} tabIndex={-1} role=\"region\" aria-labelledby={buttonId} id={id}>\n          <EuiResizeObserver onResize={this.setChildContentHeight}>\n            {resizeRef => <div ref={ref => {\n            this.setChildContentRef(ref);\n            resizeRef(ref);\n          }}>\n                <div className={childrenClasses}>{childrenContent}</div>\n              </div>}\n          </EuiResizeObserver>\n        </div>\n      </div>;\n  }\n\n}\nEuiAccordion.propTypes = {\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n  id: PropTypes.string.isRequired,\n\n  /**\n       * Class that will apply to the trigger for the accordion.\n       */\n  buttonClassName: PropTypes.string,\n\n  /**\n       * Apply more props to the triggering button\n       */\n  buttonProps: PropTypes.shape({\n    className: PropTypes.string,\n    \"aria-label\": PropTypes.string,\n    \"data-test-subj\": PropTypes.string\n  }),\n\n  /**\n       * Class that will apply to the trigger content for the accordion.\n       */\n  buttonContentClassName: PropTypes.string,\n\n  /**\n       * The content of the clickable trigger\n       */\n  buttonContent: PropTypes.node,\n\n  /**\n       * Will appear right aligned against the button. Useful for separate actions like deletions.\n       */\n  extraAction: PropTypes.node,\n\n  /**\n       * The accordion will start in the open state.\n       */\n  initialIsOpen: PropTypes.bool.isRequired,\n\n  /**\n       * Optional callback method called on open and close with a single `isOpen` parameter\n       */\n  onToggle: PropTypes.func,\n\n  /**\n       * The padding around the exposed accordion content.\n       */\n  paddingSize: PropTypes.oneOf([\"none\", \"xs\", \"s\", \"m\", \"l\", \"xl\"]),\n\n  /**\n       * Placement of the arrow indicator, or 'none' to hide it.\n       */\n  arrowDisplay: PropTypes.oneOf([\"left\", \"right\", \"none\"]),\n\n  /**\n       * Control the opening of accordion via prop\n       */\n  forceState: PropTypes.oneOf([\"closed\", \"open\"]),\n\n  /**\n       * Change `extraAction` and children into a loading spinner\n       */\n  isLoading: PropTypes.bool,\n\n  /**\n       * Choose whether the loading message replaces the content. Customize the message by passing a node\n       */\n  isLoadingMessage: PropTypes.oneOfType([PropTypes.bool.isRequired, PropTypes.node.isRequired])\n};\n\ntry {\n  EuiAccordion.__docgenInfo = {\n    description: '',\n    displayName: 'EuiAccordion',\n    methods: [],\n    props: {\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: 'Defines a string value that labels the current element.\\n' + '@see aria-labelledby.',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'data-test-subj': {\n        defaultValue: null,\n        description: '',\n        name: 'data-test-subj',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      id: {\n        defaultValue: null,\n        description: '',\n        name: 'id',\n        parent: undefined,\n        required: true,\n        type: {\n          name: 'string'\n        }\n      },\n      buttonClassName: {\n        defaultValue: null,\n        description: 'Class that will apply to the trigger for the accordion.',\n        name: 'buttonClassName',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      buttonProps: {\n        defaultValue: null,\n        description: 'Apply more props to the triggering button',\n        name: 'buttonProps',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'CommonProps & HTMLAttributes<HTMLButtonElement>'\n        }\n      },\n      buttonContentClassName: {\n        defaultValue: null,\n        description: 'Class that will apply to the trigger content for the accordion.',\n        name: 'buttonContentClassName',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      buttonContent: {\n        defaultValue: null,\n        description: 'The content of the clickable trigger',\n        name: 'buttonContent',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'ReactNode'\n        }\n      },\n      extraAction: {\n        defaultValue: null,\n        description: 'Will appear right aligned against the button. Useful for separate actions like deletions.',\n        name: 'extraAction',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'ReactNode'\n        }\n      },\n      initialIsOpen: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: 'The accordion will start in the open state.',\n        name: 'initialIsOpen',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      onToggle: {\n        defaultValue: null,\n        description: 'Optional callback method called on open and close with a single `isOpen` parameter',\n        name: 'onToggle',\n        parent: undefined,\n        required: false,\n        type: {\n          name: '(isOpen: boolean) => void'\n        }\n      },\n      paddingSize: {\n        defaultValue: {\n          value: 'none'\n        },\n        description: 'The padding around the exposed accordion content.',\n        name: 'paddingSize',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"xs\" | \"s\" | \"m\" | \"l\" | \"xl\" | \"none\"',\n          value: [{\n            value: '\"xs\"'\n          }, {\n            value: '\"s\"'\n          }, {\n            value: '\"m\"'\n          }, {\n            value: '\"l\"'\n          }, {\n            value: '\"xl\"'\n          }, {\n            value: '\"none\"'\n          }]\n        }\n      },\n      arrowDisplay: {\n        defaultValue: {\n          value: 'left'\n        },\n        description: \"Placement of the arrow indicator, or 'none' to hide it.\",\n        name: 'arrowDisplay',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"left\" | \"right\" | \"none\"',\n          value: [{\n            value: '\"left\"'\n          }, {\n            value: '\"right\"'\n          }, {\n            value: '\"none\"'\n          }]\n        }\n      },\n      forceState: {\n        defaultValue: null,\n        description: 'Control the opening of accordion via prop',\n        name: 'forceState',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"closed\" | \"open\"',\n          value: [{\n            value: '\"closed\"'\n          }, {\n            value: '\"open\"'\n          }]\n        }\n      },\n      isLoading: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: 'Change `extraAction` and children into a loading spinner',\n        name: 'isLoading',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      isLoadingMessage: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: 'Choose whether the loading message replaces the content. Customize the message by passing a node',\n        name: 'isLoadingMessage',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'ReactNode'\n        }\n      }\n    },\n    extendedInterfaces: ['CommonProps', 'HTMLAttributes', 'AriaAttributes', 'DOMAttributes']\n  };\n} catch (e) {}"]}]}