{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src-docs\\src\\views\\tables\\data_store.js","dependencies":[{"path":"D:\\work\\eui\\src-docs\\src\\views\\tables\\data_store.js","mtime":1649070001146},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src-docs/src/views/tables/data_store.js"],"names":["Comparators","Random","times","random","createCountries","code","name","flag","firstNames","undefined","lastNames","github","dob","Date","createUsers","countries","index","id","firstName","lastName","dateOfBirth","nationality","oneToOne","map","country","online","createDataStore","users","findUsers","pageIndex","pageSize","sortField","sortDirection","items","slice","sort","property","default","pageOfItems","startIndex","Math","min","length","totalItemCount","deleteUsers","ids","forEach","findIndex","user","splice","cloneUser","getCountry","find"],"mappings":"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","sourcesContent":["import { Comparators } from '../../../../src/services/sort';\nimport { Random } from '../../../../src/services/random';\nimport { times } from '../../../../src/services/utils';\n\nconst random = new Random();\n\nconst createCountries = () => [\n  { code: 'NL', name: 'Netherlands', flag: '🇳🇱' },\n  { code: 'CZ', name: 'Czech Republic', flag: '🇨🇿' },\n  { code: 'ZA', name: 'South Africa', flag: '🇿🇦' },\n  { code: 'US', name: 'United States', flag: '🇺🇲' },\n  { code: 'AU', name: 'Australia', flag: '🇦🇺' },\n  { code: 'IL', name: 'Israel', flag: '🇮🇱' },\n  { code: 'NO', name: 'Norway', flag: '🇳🇴' },\n  { code: 'IT', name: 'Italy', flag: '🇮🇹' },\n  { code: 'CA', name: 'Canada', flag: '🇨🇦' },\n  { code: 'CG', name: 'Congo', flag: '🇨🇬' },\n  { code: 'CL', name: 'Chile', flag: '🇨🇱' },\n  { code: 'FJ', name: 'Fiji', flag: '🇫🇯' },\n  { code: 'GB', name: 'United Kingdom', flag: '🇬🇧' },\n  { code: 'GR', name: 'Greece', flag: '🇬🇷' },\n  { code: 'HT', name: 'Haiti', flag: '🇭🇹' },\n  { code: 'LB', name: 'Lebanon', flag: '🇱🇧' },\n  { code: 'MM', name: 'Myanmar', flag: '🇲🇲' },\n  { code: 'MX', name: 'Mexico', flag: '🇲🇽' },\n  { code: 'NG', name: 'Nigeria', flag: '🇳🇬' },\n  { code: 'SG', name: 'Singapore', flag: '🇸🇬' },\n  { code: 'SO', name: 'Somalia', flag: '🇸🇴' },\n  { code: 'TN', name: 'Tunisia', flag: '🇹🇳' },\n  { code: 'VE', name: 'Venezuela', flag: '🇻🇪' },\n  { code: 'ZM', name: 'Zambia', flag: '🇿🇲' },\n];\n\nconst firstNames = [\n  'Very long first name that will wrap or be truncated',\n  'Another very long first name which will wrap or be truncated',\n  'Clinton',\n  'Igor',\n  undefined,\n  'Drew',\n  null,\n  'Rashid',\n  undefined,\n  'John',\n];\n\nconst lastNames = [\n  'Very long last name that will wrap or be truncated',\n  'Another very long last name which will wrap or be truncated',\n  'Gormley',\n  'Motov',\n  'Minarik',\n  'Raines',\n  'Král',\n  'Khan',\n  'Sissel',\n  'Dorlus',\n];\n\nconst github = [\n  'martijnvg',\n  'elissaw',\n  'clintongormley',\n  'imotov',\n  'karmi',\n  'drewr',\n  'HonzaKral',\n  'rashidkpc',\n  'jordansissel',\n  'silne30',\n];\n\nconst dob = new Date(1980, 1, 1);\n\nconst createUsers = (countries) => {\n  return times(20, (index) => {\n    return {\n      id: index,\n      firstName: index < 10 ? firstNames[index] : firstNames[index - 10],\n      lastName: index < 10 ? lastNames[index] : lastNames[index - 10],\n      github: index < 10 ? github[index] : github[index - 10],\n      dateOfBirth: dob,\n      nationality: random.oneToOne(\n        countries.map((country) => country.code),\n        index\n      ),\n      online: index % 2 === 0,\n    };\n  });\n};\n\nexport const createDataStore = () => {\n  const countries = createCountries();\n  const users = createUsers(countries);\n\n  return {\n    countries,\n    users,\n\n    findUsers: (pageIndex, pageSize, sortField, sortDirection) => {\n      let items;\n\n      if (sortField) {\n        items = users\n          .slice(0)\n          .sort(\n            Comparators.property(sortField, Comparators.default(sortDirection))\n          );\n      } else {\n        items = users;\n      }\n\n      let pageOfItems;\n\n      if (!pageIndex && !pageSize) {\n        pageOfItems = items;\n      } else {\n        const startIndex = pageIndex * pageSize;\n        pageOfItems = items.slice(\n          startIndex,\n          Math.min(startIndex + pageSize, items.length)\n        );\n      }\n\n      return {\n        pageOfItems,\n        totalItemCount: items.length,\n      };\n    },\n\n    deleteUsers: (...ids) => {\n      ids.forEach((id) => {\n        const index = users.findIndex((user) => user.id === id);\n        if (index >= 0) {\n          users.splice(index, 1);\n        }\n      });\n    },\n\n    cloneUser: (id) => {\n      const index = users.findIndex((user) => user.id === id);\n      if (index >= 0) {\n        const user = users[index];\n        users.splice(index, 0, { ...user, id: users.length });\n      }\n    },\n\n    getCountry: (code) => countries.find((country) => country.code === code),\n  };\n};\n"]}]}