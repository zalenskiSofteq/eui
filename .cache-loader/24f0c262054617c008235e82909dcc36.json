{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\code_editor\\code_editor.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\code_editor\\code_editor.tsx","mtime":1649070093323},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/code_editor/code_editor.tsx"],"names":["React","Component","classNames","AceEditor","keysOf","htmlIdGenerator","keys","EuiI18n","DEFAULT_MODE","DEFAULT_THEME","setOrRemoveAttribute","element","attributeName","value","undefined","removeAttribute","setAttribute","EuiCodeEditor","isHintActive","isEditing","name","aceEditor","textbox","editor","textInput","getElement","tabIndex","addEventListener","onKeydownAce","props","stopEditing","editorHint","focus","event","key","ESCAPE","preventDefault","stopPropagation","completer","state","onEscToExit","setState","onFocus","onBlur","mode","getSession","setMode","isCustomMode","setCustomMode","isReadOnly","id","textareaProps","readOnly","el","document","getElementById","textarea","querySelector","forEach","toString","prevProps","width","height","setOptions","cursorStart","dataTestSubj","theme","commands","rest","classes","promptClasses","filteredCursorStart","options","Object","assign","highlightActiveLine","highlightGutterLine","prompt","idGenerator","hint","startEditing","aceEditorRef","onFocusAce","onBlurAce","$blockScrolling","Infinity","bindKey","win","mac","exec"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport AceEditor from 'react-ace';\nimport { keysOf } from '../common';\nimport { htmlIdGenerator, keys } from '../../services';\nimport { EuiI18n } from '../i18n';\nvar DEFAULT_MODE = 'text';\nvar DEFAULT_THEME = 'textmate';\n\nfunction setOrRemoveAttribute(element, attributeName, value) {\n  if (value === null || value === undefined) {\n    element.removeAttribute(attributeName);\n  } else {\n    element.setAttribute(attributeName, value);\n  }\n}\n\nexport class EuiCodeEditor extends Component {\n  static defaultProps = {\n    setOptions: {}\n  };\n  state = {\n    isHintActive: true,\n    isEditing: false,\n    name: htmlIdGenerator()()\n  };\n  idGenerator = htmlIdGenerator();\n  aceEditor = null;\n  editorHint = null;\n  aceEditorRef = aceEditor => {\n    if (aceEditor) {\n      this.aceEditor = aceEditor;\n      const textbox = aceEditor.editor.textInput.getElement();\n      textbox.tabIndex = -1;\n      textbox.addEventListener('keydown', this.onKeydownAce);\n      setOrRemoveAttribute(textbox, 'aria-label', this.props['aria-label']);\n      setOrRemoveAttribute(textbox, 'aria-labelledby', this.props['aria-labelledby']);\n      setOrRemoveAttribute(textbox, 'aria-describedby', this.props['aria-describedby']);\n    }\n  };\n  onEscToExit = () => {\n    this.stopEditing();\n\n    if (this.editorHint) {\n      this.editorHint.focus();\n    }\n  };\n  onKeydownAce = event => {\n    if (event.key === keys.ESCAPE) {\n      event.preventDefault();\n      event.stopPropagation(); // Handles exiting edit mode when `isReadOnly` is set.\n      // Other 'esc' cases handled by `stopEditingOnEsc` command.\n      // Would run after `stopEditingOnEsc`.\n\n      if (this.aceEditor !== null && !this.aceEditor.editor.completer && this.state.isEditing) {\n        this.onEscToExit();\n      }\n    }\n  };\n  onFocusAce = (event, editor) => {\n    this.setState({\n      isEditing: true\n    });\n\n    if (this.props.onFocus) {\n      this.props.onFocus(event, editor);\n    }\n  };\n  onBlurAce = (event, editor) => {\n    this.stopEditing();\n\n    if (this.props.onBlur) {\n      this.props.onBlur(event, editor);\n    }\n  };\n  startEditing = () => {\n    this.setState({\n      isHintActive: false\n    });\n\n    if (this.aceEditor !== null) {\n      this.aceEditor.editor.textInput.focus();\n    }\n  };\n\n  stopEditing() {\n    this.setState({\n      isHintActive: true,\n      isEditing: false\n    });\n  }\n\n  isCustomMode() {\n    return typeof this.props.mode === 'object';\n  }\n\n  setCustomMode() {\n    if (this.aceEditor !== null) {\n      this.aceEditor.editor.getSession().setMode(this.props.mode);\n    }\n  }\n\n  componentDidMount() {\n    if (this.isCustomMode()) {\n      this.setCustomMode();\n    }\n\n    const {\n      isReadOnly,\n      id\n    } = this.props;\n    const textareaProps = {\n      id,\n      readOnly: isReadOnly\n    };\n    const el = document.getElementById(this.state.name);\n\n    if (el) {\n      const textarea = el.querySelector('textarea');\n      if (textarea) keysOf(textareaProps).forEach(key => {\n        if (textareaProps[key]) textarea.setAttribute(`${key}`, textareaProps[key].toString());\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.mode !== prevProps.mode && this.isCustomMode()) {\n      this.setCustomMode();\n    }\n  }\n\n  render() {\n    const {\n      width,\n      height,\n      onBlur,\n      isReadOnly,\n      setOptions,\n      cursorStart,\n      mode = DEFAULT_MODE,\n      'data-test-subj': dataTestSubj = 'codeEditorContainer',\n      theme = DEFAULT_THEME,\n      commands = [],\n      ...rest\n    } = this.props;\n    const classes = classNames('euiCodeEditorWrapper', {\n      'euiCodeEditorWrapper-isEditing': this.state.isEditing\n    });\n    const promptClasses = classNames('euiCodeEditorKeyboardHint', {\n      'euiCodeEditorKeyboardHint-isInactive': !this.state.isHintActive\n    });\n    let filteredCursorStart;\n    const options = { ...setOptions\n    };\n\n    if (isReadOnly) {\n      // Put the cursor at the beginning of the editor, so that it doesn't look like\n      // a prompt to begin typing.\n      filteredCursorStart = -1;\n      Object.assign(options, {\n        readOnly: true,\n        highlightActiveLine: false,\n        highlightGutterLine: false\n      });\n    } else {\n      filteredCursorStart = cursorStart;\n    }\n\n    const prompt = <button className={promptClasses} id={this.idGenerator('codeEditor')} ref={hint => {\n      this.editorHint = hint;\n    }} onClick={this.startEditing} data-test-subj=\"codeEditorHint\">\n        <p className=\"euiText\">\n          {isReadOnly ? <EuiI18n token=\"euiCodeEditor.startInteracting\" default=\"Press Enter to start interacting with the code.\" /> : <EuiI18n token=\"euiCodeEditor.startEditing\" default=\"Press Enter to start editing.\" />}\n        </p>\n\n        <p className=\"euiText\">\n          {isReadOnly ? <EuiI18n token=\"euiCodeEditor.stopInteracting\" default=\"When you're done, press Escape to stop interacting with the code.\" /> : <EuiI18n token=\"euiCodeEditor.stopEditing\" default=\"When you're done, press Escape to stop editing.\" />}\n        </p>\n      </button>;\n    return <div className={classes} style={{\n      width,\n      height\n    }} data-test-subj={dataTestSubj}>\n        {prompt}\n\n        <AceEditor // Setting a default, existing `mode` is necessary to properly initialize the editor\n      // prior to dynamically setting a custom mode (https://github.com/elastic/eui/pull/2616)\n      mode={this.isCustomMode() ? DEFAULT_MODE : mode} // https://github.com/securingsincity/react-ace/pull/771\n      name={this.state.name} theme={theme} ref={this.aceEditorRef} width={width} height={height} onFocus={this.onFocusAce} onBlur={this.onBlurAce} setOptions={options} editorProps={{\n        $blockScrolling: Infinity\n      }} cursorStart={filteredCursorStart} commands={[// Handles exiting edit mode in all cases except `isReadOnly`\n      // Runs before `onKeydownAce`.\n      {\n        name: 'stopEditingOnEsc',\n        bindKey: {\n          win: 'Esc',\n          mac: 'Esc'\n        },\n        exec: this.onEscToExit\n      }, ...commands]} {...rest} />\n      </div>;\n  }\n\n}\nEuiCodeEditor.propTypes = {\n  width: PropTypes.string,\n  height: PropTypes.string,\n  onBlur: PropTypes.any,\n  onFocus: PropTypes.any,\n  isReadOnly: PropTypes.bool,\n  setOptions: PropTypes.any.isRequired,\n  cursorStart: PropTypes.number,\n  \"data-test-subj\": PropTypes.string,\n\n  /**\n     * Select the `brace` theme\n     * The matching theme file must also be imported from `brace` (e.g., `import 'brace/theme/github';`)\n     */\n  theme: PropTypes.any,\n\n  /**\n     * Use string for a built-in mode or object for a custom mode\n     */\n  mode: PropTypes.oneOfType([PropTypes.any.isRequired, PropTypes.any.isRequired]),\n  id: PropTypes.string\n};\n\ntry {\n  EuiCodeEditor.__docgenInfo = {\n    description: '',\n    displayName: 'EuiCodeEditor',\n    methods: [],\n    props: {\n      width: {\n        defaultValue: null,\n        description: '',\n        name: 'width',\n        parent: {\n          fileName: 'eui/src/components/code_editor/code_editor.tsx',\n          name: 'EuiCodeEditorProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      height: {\n        defaultValue: null,\n        description: '',\n        name: 'height',\n        parent: {\n          fileName: 'eui/src/components/code_editor/code_editor.tsx',\n          name: 'EuiCodeEditorProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      onBlur: {\n        defaultValue: null,\n        description: '',\n        name: 'onBlur',\n        parent: {\n          fileName: 'eui/src/components/code_editor/code_editor.tsx',\n          name: 'EuiCodeEditorProps'\n        },\n        required: false,\n        type: {\n          name: '(event: any, editor?: AceEditorClass) => void'\n        }\n      },\n      onFocus: {\n        defaultValue: null,\n        description: '',\n        name: 'onFocus',\n        parent: {\n          fileName: 'eui/src/components/code_editor/code_editor.tsx',\n          name: 'EuiCodeEditorProps'\n        },\n        required: false,\n        type: {\n          name: '(event: any, editor?: AceEditorClass) => void'\n        }\n      },\n      isReadOnly: {\n        defaultValue: null,\n        description: '',\n        name: 'isReadOnly',\n        parent: {\n          fileName: 'eui/src/components/code_editor/code_editor.tsx',\n          name: 'EuiCodeEditorProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      setOptions: {\n        defaultValue: {\n          value: '{}'\n        },\n        description: '',\n        name: 'setOptions',\n        parent: {\n          fileName: 'eui/src/components/code_editor/code_editor.tsx',\n          name: 'EuiCodeEditorProps'\n        },\n        required: false,\n        type: {\n          name: 'IAceOptions'\n        }\n      },\n      cursorStart: {\n        defaultValue: null,\n        description: '',\n        name: 'cursorStart',\n        parent: {\n          fileName: 'eui/src/components/code_editor/code_editor.tsx',\n          name: 'EuiCodeEditorProps'\n        },\n        required: false,\n        type: {\n          name: 'number'\n        }\n      },\n      'data-test-subj': {\n        defaultValue: null,\n        description: '',\n        name: 'data-test-subj',\n        parent: {\n          fileName: 'eui/src/components/code_editor/code_editor.tsx',\n          name: 'EuiCodeEditorProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      theme: {\n        defaultValue: null,\n        description: 'Select the `brace` theme\\n' + \"The matching theme file must also be imported from `brace` (e.g., `import 'brace/theme/github';`)\",\n        name: 'theme',\n        parent: {\n          fileName: 'eui/src/components/code_editor/code_editor.tsx',\n          name: 'EuiCodeEditorProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      mode: {\n        defaultValue: null,\n        description: 'Use string for a built-in mode or object for a custom mode',\n        name: 'mode',\n        parent: {\n          fileName: 'eui/src/components/code_editor/code_editor.tsx',\n          name: 'EuiCodeEditorProps'\n        },\n        required: false,\n        type: {\n          name: 'string | object'\n        }\n      },\n      id: {\n        defaultValue: null,\n        description: '',\n        name: 'id',\n        parent: {\n          fileName: 'eui/src/components/code_editor/code_editor.tsx',\n          name: 'EuiCodeEditorProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: 'Defines a string value that labels the current element.\\n' + '@see aria-labelledby.',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/node_modules/@types/react/index.d.ts',\n          name: 'AriaAttributes'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/node_modules/react-ace/lib/ace.d.ts',\n          name: 'IAceEditorProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      }\n    },\n    extendedInterfaces: ['EuiCodeEditorProps', 'AriaAttributes', 'IAceEditorProps']\n  };\n} catch (e) {}"]}]}