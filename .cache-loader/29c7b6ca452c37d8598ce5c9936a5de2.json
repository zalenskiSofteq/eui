{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\date_picker\\types.ts","dependencies":[{"path":"D:\\work\\eui\\src\\components\\date_picker\\types.ts","mtime":1649070093380},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":""},{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { ReactElement } from 'react';\n\nexport interface DurationRange {\n  end: ShortDate;\n  label?: string;\n  start: ShortDate;\n}\n\nexport type TimeUnitId = 's' | 'm' | 'h' | 'd' | 'w' | 'M' | 'y';\nexport type TimeUnitFromNowId = 's+' | 'm+' | 'h+' | 'd+' | 'w+' | 'M+' | 'y+';\nexport type TimeUnitLabel =\n  | 'second'\n  | 'minute'\n  | 'hour'\n  | 'day'\n  | 'week'\n  | 'month'\n  | 'year';\nexport type TimeUnitLabelPlural =\n  | 'seconds'\n  | 'minutes'\n  | 'hours'\n  | 'days'\n  | 'weeks'\n  | 'months'\n  | 'years';\nexport type AbsoluteDateMode = 'absolute';\nexport type RelativeDateMode = 'relative';\nexport type NowDateMode = 'now';\nexport type DateMode = AbsoluteDateMode | RelativeDateMode | NowDateMode;\n\n/**\n * String as either datemath (e.g.: now, now-15m, now-15m/m) or\n * absolute date in the format 'YYYY-MM-DDTHH:mm:ss.SSSZ'\n */\nexport type ShortDate = NowDateMode | string;\n\nexport type Milliseconds = number;\n\nexport interface RelativeParts {\n  count: number;\n  round: boolean;\n  roundUnit?: TimeUnitId;\n  unit: string;\n}\n\nexport interface RelativeOption {\n  text: string;\n  value: TimeUnitId | TimeUnitFromNowId;\n}\n\nexport type OnRefreshChangeProps = {\n  isPaused: boolean;\n  refreshInterval: number;\n};\n\nexport type ApplyRefreshInterval = (args: OnRefreshChangeProps) => void;\n\nexport interface QuickSelect {\n  timeTense: string;\n  timeValue: number;\n  timeUnits: TimeUnitId;\n}\n\ninterface ApplyTimeArgs extends DurationRange {\n  keepPopoverOpen?: boolean;\n  quickSelect?: QuickSelect;\n}\nexport type ApplyTime = (args: ApplyTimeArgs) => void;\n\nexport interface QuickSelectPanel {\n  title: string;\n  content: ReactElement;\n}\n"]}]}