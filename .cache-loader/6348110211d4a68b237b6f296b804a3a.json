{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\side_nav\\side_nav.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\side_nav\\side_nav.tsx","mtime":1649070093767},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/side_nav/side_nav.tsx"],"names":["React","Component","classNames","EuiSideNavItem","EuiButtonEmpty","EuiTitle","EuiScreenReaderOnly","htmlIdGenerator","EuiHideFor","EuiShowFor","EuiSideNav","item","forceOpen","isSelected","items","some","isItemOpen","depth","props","renderItem","truncate","map","id","name","childItems","icon","onClick","href","rest","isOpen","renderedItems","renderTree","childrenOnly","className","toggleOpenOnMobile","isOpenOnMobile","mobileTitle","mobileBreakpoints","heading","headingProps","classes","contentClasses","breakpointName","sideNavContentId","navContent","screenReaderOnly","headingScreenReaderOnly","element","HeadingElement","titleProps","hasMobileVersion","length","hasHeader","headingNode","sharedHeadingProps","mobileNode","breakpoints","undefined"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { EuiSideNavItem } from './side_nav_item';\nimport { EuiButtonEmpty } from '../button';\nimport { EuiTitle } from '../title';\nimport { EuiScreenReaderOnly } from '../accessibility';\nimport { htmlIdGenerator } from '../../services';\nimport { EuiHideFor, EuiShowFor } from '../responsive';\nexport class EuiSideNav extends Component {\n  static defaultProps = {\n    items: [],\n    mobileBreakpoints: ['xs', 's']\n  };\n  isItemOpen = item => {\n    // The developer can force the item to be open.\n    if (item.forceOpen) {\n      return true;\n    } // Of course a selected item is open.\n\n\n    if (item.isSelected) {\n      return true;\n    } // The item has to be open if it has a child that's open.\n\n\n    if (item.items) {\n      return item.items.some(this.isItemOpen);\n    }\n\n    return false;\n  };\n  renderTree = (items, depth = 0) => {\n    const {\n      renderItem,\n      truncate\n    } = this.props;\n    return items.map(item => {\n      const {\n        id,\n        name,\n        isSelected,\n        items: childItems,\n        icon,\n        onClick,\n        href,\n        forceOpen,\n        ...rest\n      } = item; // Root items are always open.\n\n      const isOpen = depth === 0 ? true : this.isItemOpen(item);\n      let renderedItems;\n\n      if (childItems) {\n        renderedItems = this.renderTree(childItems, depth + 1);\n      } // Act as an accordion only if item is not linked but has children (and not the root)\n\n\n      const childrenOnly = depth > 0 && !onClick && !href && !!childItems;\n      return <EuiSideNavItem isOpen={isOpen} isSelected={!childrenOnly && isSelected} isParent={!!childItems} icon={icon} onClick={onClick} href={href} items={renderedItems} key={id} depth={depth} renderItem={renderItem} truncate={truncate} childrenOnly={childrenOnly} {...rest}>\n          {name}\n        </EuiSideNavItem>;\n    });\n  };\n\n  render() {\n    const {\n      className,\n      items,\n      toggleOpenOnMobile,\n      isOpenOnMobile,\n      mobileTitle,\n      mobileBreakpoints,\n      // Extract this one out so it isn't passed to <nav>\n      renderItem,\n      truncate,\n      heading,\n      headingProps = {},\n      ...rest\n    } = this.props;\n    const classes = classNames('euiSideNav', className, {\n      'euiSideNav-isOpenMobile': isOpenOnMobile\n    }); // To support the extra CSS needed to show/hide/animate the content,\n    // We add a className for every breakpoint supported\n\n    const contentClasses = classNames('euiSideNav__content', mobileBreakpoints?.map(breakpointName => `euiSideNav__contentMobile-${breakpointName}`));\n    const sideNavContentId = htmlIdGenerator('euiSideNavContent')();\n    const navContent = <div id={sideNavContentId} className={contentClasses}>\n        {this.renderTree(items)}\n      </div>;\n    const {\n      screenReaderOnly: headingScreenReaderOnly = false,\n      element: HeadingElement = 'h2',\n      ...titleProps\n    } = headingProps;\n    const hasMobileVersion = mobileBreakpoints && mobileBreakpoints.length > 0;\n    const hasHeader = !!heading;\n    let headingNode;\n    const sharedHeadingProps = {\n      id: headingProps?.id || htmlIdGenerator('euiSideNavHeading')(),\n      className: headingProps?.className,\n      'data-test-subj': headingProps?.['data-test-subj'],\n      'aria-label': headingProps?.['aria-label']\n    };\n\n    if (hasHeader) {\n      headingNode = <HeadingElement {...sharedHeadingProps}>{heading}</HeadingElement>;\n\n      if (headingScreenReaderOnly) {\n        headingNode = <EuiScreenReaderOnly>{headingNode}</EuiScreenReaderOnly>;\n      } else {\n        headingNode = <EuiTitle size=\"xs\" {...titleProps} className={classNames('euiSideNav__heading', headingProps?.className)}>\n            <HeadingElement {...sharedHeadingProps}>{heading}</HeadingElement>\n          </EuiTitle>;\n      }\n    }\n\n    let mobileNode;\n    const breakpoints = mobileBreakpoints;\n\n    if (hasMobileVersion) {\n      mobileNode = <EuiShowFor sizes={breakpoints || 'none'}>\n          <nav aria-labelledby={sharedHeadingProps.id} className={classes} {...rest}>\n            <HeadingElement {...sharedHeadingProps}>\n              <EuiButtonEmpty className=\"euiSideNav__mobileToggle\" textProps={{\n              className: 'euiSideNav__mobileToggleText'\n            }} contentProps={{\n              className: 'euiSideNav__mobileToggleContent'\n            }} onClick={toggleOpenOnMobile} iconType=\"apps\" iconSide=\"right\" aria-controls={sideNavContentId} aria-expanded={isOpenOnMobile}>\n                {mobileTitle || heading}\n              </EuiButtonEmpty>\n            </HeadingElement>\n            {navContent}\n          </nav>\n        </EuiShowFor>;\n    }\n\n    return <>\n        {mobileNode}\n        <EuiHideFor sizes={breakpoints || 'none'}>\n          <nav aria-labelledby={headingNode ? sharedHeadingProps.id : undefined} className={classes} {...rest}>\n            {headingNode}\n            {navContent}\n          </nav>\n        </EuiHideFor>\n      </>;\n  }\n\n}\nEuiSideNav.propTypes = {\n  /**\n       * Class names to be merged into the final `className` property.\n       */\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n\n  /**\n       * Creates an associated heading element and uses the same node as default for `mobileTitle`\n       */\n  heading: PropTypes.node,\n\n  /**\n       * Adds a couple extra #EuiSideNavHeading props and extends the props of EuiTitle that wraps the `heading`\n       */\n  headingProps: PropTypes.shape({\n    /**\n       * The actual HTML heading element to wrap the `heading`.\n       * Default is `h2`\n       */\n    element: PropTypes.oneOf([\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"span\"]),\n\n    /**\n       * For best accessibility, `<nav>` elements should have a nested heading. But you can hide this element if it's redundent from something else (except on mobile).\n       */\n    screenReaderOnly: PropTypes.bool\n  }),\n\n  /**\n       * When called, toggles visibility of the navigation menu at mobile responsive widths. The callback should set the `isOpenOnMobile` prop to actually toggle navigation visibility.\n       */\n  toggleOpenOnMobile: PropTypes.func,\n\n  /**\n       * If `true`, the navigation menu will be open at mobile device widths. Use in conjunction with the `toggleOpenOnMobile` prop.\n       */\n  isOpenOnMobile: PropTypes.bool,\n\n  /**\n       * A React node to render at mobile responsive widths, representing the title of this navigation menu.\n       */\n  mobileTitle: PropTypes.node,\n\n  /**\n       * Array of breakpoint names for when to show the mobile version.\n       * Set to `undefined` to remove responsive behavior\n       */\n  mobileBreakpoints: PropTypes.arrayOf(PropTypes.oneOf([\"xs\", \"s\", \"m\", \"l\", \"xl\"]).isRequired),\n\n  /**\n       *  An array of #EuiSideNavItem objects. Lists navigation menu items.\n       */\n  items: PropTypes.arrayOf(PropTypes.shape({\n    /**\n       * A value that is passed to React as the `key` for this item\n       */\n    id: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.number.isRequired]).isRequired,\n\n    /**\n       * If set to true it will force the item to display in an \"open\" state at all times.\n       */\n    forceOpen: PropTypes.bool,\n\n    /**\n       * Array containing additional item objects, representing nested children of this navigation item.\n       */\n    items: PropTypes.arrayOf(PropTypes.shape({\n      /**\n         * A value that is passed to React as the `key` for this item\n         */\n      id: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.number.isRequired]).isRequired,\n\n      /**\n         * If set to true it will force the item to display in an \"open\" state at all times.\n         */\n      forceOpen: PropTypes.bool,\n\n      /**\n         * Array containing additional item objects, representing nested children of this navigation item.\n         */\n      items: PropTypes.arrayOf(PropTypes.any.isRequired),\n\n      /**\n         * React node representing the text to render for this item (usually a string will suffice).\n         */\n      name: PropTypes.node.isRequired,\n\n      /**\n         * Function overriding default rendering for this navigation item — when called, it should return a React node representing a replacement navigation item.\n         */\n      renderItem: PropTypes.func\n    }).isRequired),\n\n    /**\n       * React node representing the text to render for this item (usually a string will suffice).\n       */\n    name: PropTypes.node.isRequired,\n\n    /**\n       * Function overriding default rendering for this navigation item — when called, it should return a React node representing a replacement navigation item.\n       */\n    renderItem: PropTypes.func\n  }).isRequired).isRequired,\n\n  /**\n       * Overrides default navigation menu item rendering. When called, it should return a React node representing a replacement navigation item.\n       */\n  renderItem: PropTypes.func,\n\n  /**\n       * Truncates the text of all items to stick to a single line\n       */\n  truncate: PropTypes.bool\n};\n\ntry {\n  EuiSideNav.__docgenInfo = {\n    description: '',\n    displayName: 'EuiSideNav',\n    methods: [],\n    props: {\n      className: {\n        defaultValue: null,\n        description: 'Class names to be merged into the final `className` property.',\n        name: 'className',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'EuiSideNavProps<T>[\"className\"]'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: '',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'EuiSideNavProps<T>[\"aria-label\"]'\n        }\n      },\n      'data-test-subj': {\n        defaultValue: null,\n        description: '',\n        name: 'data-test-subj',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'EuiSideNavProps<T>[\"data-test-subj\"]'\n        }\n      },\n      children: {\n        defaultValue: null,\n        description: '`children` are not rendered. Use `items` to specify navigation items instead.',\n        name: 'children',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'never'\n        }\n      },\n      heading: {\n        defaultValue: null,\n        description: 'Creates an associated heading element and uses the same node as default for `mobileTitle`',\n        name: 'heading',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'EuiSideNavProps<T>[\"heading\"]'\n        }\n      },\n      headingProps: {\n        defaultValue: null,\n        description: 'Adds a couple extra #EuiSideNavHeading props and extends the props of EuiTitle that wraps the `heading`',\n        name: 'headingProps',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'EuiSideNavProps<T>[\"headingProps\"]'\n        }\n      },\n      toggleOpenOnMobile: {\n        defaultValue: null,\n        description: 'When called, toggles visibility of the navigation menu at mobile responsive widths. The callback should set the `isOpenOnMobile` prop to actually toggle navigation visibility.',\n        name: 'toggleOpenOnMobile',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'EuiSideNavProps<T>[\"toggleOpenOnMobile\"]'\n        }\n      },\n      isOpenOnMobile: {\n        defaultValue: null,\n        description: 'If `true`, the navigation menu will be open at mobile device widths. Use in conjunction with the `toggleOpenOnMobile` prop.',\n        name: 'isOpenOnMobile',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'EuiSideNavProps<T>[\"isOpenOnMobile\"]'\n        }\n      },\n      mobileTitle: {\n        defaultValue: null,\n        description: 'A React node to render at mobile responsive widths, representing the title of this navigation menu.',\n        name: 'mobileTitle',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'EuiSideNavProps<T>[\"mobileTitle\"]'\n        }\n      },\n      mobileBreakpoints: {\n        defaultValue: {\n          value: \"['xs', 's']\"\n        },\n        description: 'Array of breakpoint names for when to show the mobile version.\\n' + 'Set to `undefined` to remove responsive behavior',\n        name: 'mobileBreakpoints',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'EuiSideNavProps<T>[\"mobileBreakpoints\"]'\n        }\n      },\n      items: {\n        defaultValue: {\n          value: '[]'\n        },\n        description: 'An array of #EuiSideNavItem objects. Lists navigation menu items.',\n        name: 'items',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'EuiSideNavProps<T>[\"items\"]'\n        }\n      },\n      renderItem: {\n        defaultValue: null,\n        description: 'Overrides default navigation menu item rendering. When called, it should return a React node representing a replacement navigation item.',\n        name: 'renderItem',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'EuiSideNavProps<T>[\"renderItem\"]'\n        }\n      },\n      truncate: {\n        defaultValue: null,\n        description: 'Truncates the text of all items to stick to a single line',\n        name: 'truncate',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'EuiSideNavProps<T>[\"truncate\"]'\n        }\n      }\n    },\n    extendedInterfaces: ['CommonProps']\n  };\n} catch (e) {}"]}]}