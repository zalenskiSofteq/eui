{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\popover\\popover.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\popover\\popover.tsx","mtime":1649070093735},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/popover/popover.tsx"],"names":["React","Component","classNames","tabbable","EuiFocusTrap","cascadingMenuKeys","getTransitionTimings","getWaitDuration","performOnFrame","htmlIdGenerator","EuiScreenReaderOnly","EuiPanel","EuiPortal","EuiMutationObserver","findPopoverPosition","getElementZIndex","EuiI18n","EuiOutsideClickDetector","generateId","anchorPositionToPopoverPositionMap","up","right","down","left","getPopoverPositionFromAnchorPosition","anchorPosition","match","primaryPosition","getPopoverAlignFromAnchorPosition","align","toLowerCase","anchorPositionToClassNameMap","upCenter","upLeft","upRight","downCenter","downLeft","downRight","leftCenter","leftUp","leftDown","rightCenter","rightUp","rightDown","ANCHOR_POSITIONS","Object","keys","displayToClassNameMap","inlineBlock","undefined","block","DISPLAY","DEFAULT_POPOVER_STYLES","top","getElementFromInitialFocus","initialFocus","initialFocusType","document","querySelector","returnFocusConfig","preventScroll","EuiPopover","nextProps","prevState","prevProps","isOpen","isClosing","isOpening","props","closePopover","event","preventDefault","stopPropagation","key","ESCAPE","onEscapeKey","button","contains","target","clearTimeout","closingTransitionTimeout","closingTransitionAnimationFrame","cancelAnimationFrame","window","requestAnimationFrame","setState","Array","prototype","slice","call","panel","from","children","reduce","element","durationMatch","delayMatch","transitionTimings","Math","max","respositionTimeout","setTimeout","isOpenStable","positionPopoverFixed","updateFocus","records","waitDuration","allowEnforcePosition","position","forcePosition","state","openPosition","container","anchor","popover","offset","attachToAnchor","hasArrow","arrowConfig","arrowWidth","arrowBuffer","returnBoundingBox","buffer","foundPosition","arrow","anchorBoundingBox","zIndexProp","zIndex","popoverStyles","panelStyle","willRenderArrow","arrowStyles","arrowPosition","positionPopover","node","panelRef","removeEventListener","positionPopoverFluid","addEventListener","buttonRef","suppressingPopover","updateFocusAnimationFrame","ownFocus","hasSetInitialFocus","activeElement","focusTarget","tabbableItems","length","panelVisibility","getComputedStyle","visibility","focus","onOpenPopover","repositionOnScroll","anchorClassName","insert","className","panelClassName","panelPaddingSize","panelProps","popoverRef","arrowChildren","display","onTrapDeactivation","ariaLabel","ariaLabelledBy","focusTrapProps","rest","descriptionId","classes","anchorClasses","panelClasses","tabIndex","ariaDescribedby","ariaLive","focusTrapScreenReaderText","arrowClassNames","returnFocus","onClickOutside","willChange","attributes","childList","characterData","subtree","onMutation","mutationRef","HTMLElement","onKeyDown"],"mappings":"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AAAA;AAAA,EAAgCzF,SAAhC;;gBAAa4D,U,kBACuC;AAChDI,EAAAA,MAAM,EAAE,KADwC;AAEhD6E,EAAAA,QAAQ,EAAE,IAFsC;AAGhDrH,EAAAA,cAAc,EAAE,YAHgC;AAIhDqI,EAAAA,gBAAgB,EAAE,GAJ8B;AAKhDzC,EAAAA,QAAQ,EAAE,IALsC;AAMhD6C,EAAAA,OAAO,EAAE;AANuC,C;;;;;;AAlUpD;AACA;;;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;AACA;AACA;;;;AAHA;AACA;;;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AANA;AACA;AACA;;;;;;;AAFA;AACA;;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;;;;AADA;AACA;;;;;;AADA;AACA;AACA;;;;AAFA;AACA;AACA;;;;AAFA;AACA;;;;AADA;AACA;;;;AADA;AACA;AACA;AACA;;;;AAHA;AACA;AACA;;;;AAFA;AACA;AACA","sourcesContent":["function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nimport PropTypes from \"prop-types\";\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport tabbable from 'tabbable';\nimport { EuiFocusTrap } from '../focus_trap';\nimport { cascadingMenuKeys, getTransitionTimings, getWaitDuration, performOnFrame, htmlIdGenerator } from '../../services';\nimport { EuiScreenReaderOnly } from '../accessibility';\nimport { EuiPanel } from '../panel';\nimport { EuiPortal } from '../portal';\nimport { EuiMutationObserver } from '../observer/mutation_observer';\nimport { findPopoverPosition, getElementZIndex } from '../../services/popover';\nimport { EuiI18n } from '../i18n';\nimport { EuiOutsideClickDetector } from '../outside_click_detector';\nvar generateId = htmlIdGenerator();\nvar anchorPositionToPopoverPositionMap = {\n  up: 'top',\n  right: 'right',\n  down: 'bottom',\n  left: 'left'\n};\nexport function getPopoverPositionFromAnchorPosition(anchorPosition) {\n  // maps the anchor position to the matching popover position\n  // e.g. \"upLeft\" -> \"top\", \"downRight\" -> \"bottom\"\n  // extract the first positional word from anchorPosition:\n  // starts at the beginning (\" ^ \") of anchorPosition and\n  // captures all of the characters (\" (.*?) \") until the\n  // first capital letter (\" [A-Z] \") is encountered\n  var _ref = anchorPosition.match(/^(.*?)[A-Z]/),\n      _ref2 = _slicedToArray(_ref, 2),\n      primaryPosition = _ref2[1];\n\n  return anchorPositionToPopoverPositionMap[primaryPosition];\n}\nexport function getPopoverAlignFromAnchorPosition(anchorPosition) {\n  // maps the gravity to the matching popover position\n  // e.g. \"upLeft\" -> \"left\", \"rightDown\" -> \"bottom\"\n  // extract the second positional word from anchorPosition:\n  // starts a capture group at the first capital letter\n  // and includes everything after it\n  var _ref3 = anchorPosition.match(/([A-Z].*)/),\n      _ref4 = _slicedToArray(_ref3, 2),\n      align = _ref4[1]; // this performs two tasks:\n  // 1. normalizes the align position by lowercasing it\n  // 2. `center` doesn't exist in the lookup map which converts it to `undefined` meaning no align\n\n\n  return anchorPositionToPopoverPositionMap[align.toLowerCase()];\n}\nvar anchorPositionToClassNameMap = {\n  upCenter: 'euiPopover--anchorUpCenter',\n  upLeft: 'euiPopover--anchorUpLeft',\n  upRight: 'euiPopover--anchorUpRight',\n  downCenter: 'euiPopover--anchorDownCenter',\n  downLeft: 'euiPopover--anchorDownLeft',\n  downRight: 'euiPopover--anchorDownRight',\n  leftCenter: 'euiPopover--anchorLeftCenter',\n  leftUp: 'euiPopover--anchorLeftUp',\n  leftDown: 'euiPopover--anchorLeftDown',\n  rightCenter: 'euiPopover--anchorRightCenter',\n  rightUp: 'euiPopover--anchorRightUp',\n  rightDown: 'euiPopover--anchorRightDown'\n};\nexport var ANCHOR_POSITIONS = Object.keys(anchorPositionToClassNameMap);\nvar displayToClassNameMap = {\n  inlineBlock: undefined,\n  block: 'euiPopover--displayBlock'\n};\nexport var DISPLAY = Object.keys(displayToClassNameMap);\nvar DEFAULT_POPOVER_STYLES = {\n  top: 50,\n  left: 50\n};\n\nfunction getElementFromInitialFocus(initialFocus) {\n  var initialFocusType = _typeof(initialFocus);\n\n  if (initialFocusType === 'string') {\n    return document.querySelector(initialFocus);\n  }\n\n  if (initialFocusType === 'function') {\n    return initialFocus();\n  }\n\n  return initialFocus;\n}\n\nvar returnFocusConfig = {\n  preventScroll: true\n};\nexport class EuiPopover extends Component {\n  static defaultProps = {\n    isOpen: false,\n    ownFocus: true,\n    anchorPosition: 'downCenter',\n    panelPaddingSize: 'm',\n    hasArrow: true,\n    display: 'inlineBlock'\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.prevProps.isOpen && !nextProps.isOpen) {\n      return {\n        prevProps: {\n          isOpen: nextProps.isOpen\n        },\n        isClosing: true,\n        isOpening: false\n      };\n    }\n\n    if (prevState.prevProps.isOpen !== nextProps.isOpen) {\n      return {\n        prevProps: {\n          isOpen: nextProps.isOpen\n        }\n      };\n    }\n\n    return null;\n  }\n\n  button = null;\n  panel = null;\n  hasSetInitialFocus = false;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      prevProps: {\n        isOpen: props.isOpen\n      },\n      suppressingPopover: props.isOpen,\n      // only suppress if created with isOpen=true\n      isClosing: false,\n      isOpening: false,\n      popoverStyles: DEFAULT_POPOVER_STYLES,\n      arrowStyles: {},\n      arrowPosition: null,\n      openPosition: null,\n      // once a stable position has been found, keep the contents on that side\n      isOpenStable: false // wait for any initial opening transitions to finish before marking as stable\n\n    };\n  }\n\n  closePopover = () => {\n    if (this.props.isOpen) {\n      this.props.closePopover();\n    }\n  };\n  onEscapeKey = event => {\n    if (this.props.isOpen) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.closePopover();\n    }\n  };\n  onKeyDown = event => {\n    if (event.key === cascadingMenuKeys.ESCAPE) {\n      this.onEscapeKey(event);\n    }\n  };\n  onClickOutside = event => {\n    // only close the popover if the event source isn't the anchor button\n    // otherwise, it is up to the anchor to toggle the popover's open status\n    if (this.button && this.button.contains(event.target) === false) {\n      this.closePopover();\n    }\n  };\n\n  updateFocus() {\n    // Wait for the DOM to update.\n    this.updateFocusAnimationFrame = window.requestAnimationFrame(() => {\n      if (!this.props.ownFocus || !this.panel || this.props.initialFocus === false) {\n        return;\n      } // If we've already focused on something inside the panel, everything's fine.\n\n\n      if (this.hasSetInitialFocus && this.panel.contains(document.activeElement)) {\n        return;\n      } // Otherwise let's focus the first tabbable item and expedite input from the user.\n\n\n      let focusTarget;\n\n      if (this.props.initialFocus != null) {\n        focusTarget = getElementFromInitialFocus(this.props.initialFocus);\n      } else {\n        const tabbableItems = tabbable(this.panel);\n\n        if (tabbableItems.length) {\n          focusTarget = tabbableItems[0];\n        }\n      } // there's a race condition between the popover content becoming visible and this function call\n      // if the element isn't visible yet (due to css styling) then it can't accept focus\n      // so wait for another render and try again\n\n\n      if (focusTarget == null) {\n        // there isn't a focus target, one of two reasons:\n        // #1 is the whole panel hidden? If so, schedule another check\n        // #2 panel is visible but no tabbables exist, move focus to the panel\n        const panelVisibility = window.getComputedStyle(this.panel).visibility;\n\n        if (panelVisibility === 'hidden') {\n          // #1\n          this.updateFocus();\n        } else {\n          // #2\n          focusTarget = this.panel;\n        }\n      } else {\n        // found an element to focus, but is it visible?\n        const visibility = window.getComputedStyle(focusTarget).visibility;\n\n        if (visibility === 'hidden') {\n          // not visible, check again next render frame\n          this.updateFocus();\n        }\n      }\n\n      if (focusTarget != null) {\n        this.hasSetInitialFocus = true;\n        focusTarget.focus();\n      }\n    });\n  }\n\n  onOpenPopover = () => {\n    clearTimeout(this.closingTransitionTimeout);\n\n    if (this.closingTransitionAnimationFrame) {\n      cancelAnimationFrame(this.closingTransitionAnimationFrame);\n    } // We need to set this state a beat after the render takes place, so that the CSS\n    // transition can take effect.\n\n\n    this.closingTransitionAnimationFrame = window.requestAnimationFrame(() => {\n      this.setState({\n        isOpening: true\n      });\n    }); // for each child element of `this.panel`, find any transition duration we should wait for before stabilizing\n\n    const {\n      durationMatch,\n      delayMatch\n    } = Array.prototype.slice.call(this.panel ? [this.panel, ...Array.from(this.panel.children)] : []).reduce(({\n      durationMatch,\n      delayMatch\n    }, element) => {\n      const transitionTimings = getTransitionTimings(element);\n      return {\n        durationMatch: Math.max(durationMatch, transitionTimings.durationMatch),\n        delayMatch: Math.max(delayMatch, transitionTimings.delayMatch)\n      };\n    }, {\n      durationMatch: 0,\n      delayMatch: 0\n    });\n    clearTimeout(this.respositionTimeout);\n    this.respositionTimeout = window.setTimeout(() => {\n      this.setState({\n        isOpenStable: true\n      }, () => {\n        this.positionPopoverFixed();\n        this.updateFocus();\n      });\n    }, durationMatch + delayMatch);\n  };\n\n  componentDidMount() {\n    if (this.state.suppressingPopover) {\n      // component was created with isOpen=true; now that it's mounted\n      // stop suppressing and start opening\n      // eslint-disable-next-line react/no-did-mount-set-state\n      this.setState({\n        suppressingPopover: false,\n        isOpening: true\n      }, () => {\n        this.onOpenPopover();\n      });\n    }\n\n    if (this.props.repositionOnScroll) {\n      window.addEventListener('scroll', this.positionPopoverFixed);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    // The popover is being opened.\n    if (!prevProps.isOpen && this.props.isOpen) {\n      this.onOpenPopover();\n    } // update scroll listener\n\n\n    if (prevProps.repositionOnScroll !== this.props.repositionOnScroll) {\n      if (this.props.repositionOnScroll) {\n        window.addEventListener('scroll', this.positionPopoverFixed);\n      } else {\n        window.removeEventListener('scroll', this.positionPopoverFixed);\n      }\n    } // The popover is being closed.\n\n\n    if (prevProps.isOpen && !this.props.isOpen) {\n      // If the user has just closed the popover, queue up the removal of the content after the\n      // transition is complete.\n      this.closingTransitionTimeout = window.setTimeout(() => {\n        this.hasSetInitialFocus = false;\n        this.setState({\n          isClosing: false\n        });\n      }, 250);\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.positionPopoverFixed);\n    clearTimeout(this.respositionTimeout);\n    clearTimeout(this.closingTransitionTimeout);\n    cancelAnimationFrame(this.closingTransitionAnimationFrame);\n    cancelAnimationFrame(this.updateFocusAnimationFrame);\n  }\n\n  onMutation = records => {\n    const waitDuration = getWaitDuration(records);\n    this.positionPopoverFixed();\n    performOnFrame(waitDuration, this.positionPopoverFixed);\n  };\n  positionPopover = allowEnforcePosition => {\n    if (this.button == null || this.panel == null) return;\n    const {\n      anchorPosition\n    } = this.props;\n    let position = getPopoverPositionFromAnchorPosition(anchorPosition);\n    let forcePosition = undefined;\n\n    if (allowEnforcePosition && this.state.isOpenStable && this.state.openPosition != null) {\n      position = this.state.openPosition;\n      forcePosition = true;\n    }\n\n    const {\n      top,\n      left,\n      position: foundPosition,\n      arrow,\n      anchorBoundingBox\n    } = findPopoverPosition({\n      container: this.props.container,\n      position,\n      forcePosition,\n      align: getPopoverAlignFromAnchorPosition(anchorPosition),\n      anchor: this.button,\n      popover: this.panel,\n      offset: !this.props.attachToAnchor && this.props.hasArrow ? 16 + (this.props.offset || 0) : 8 + (this.props.offset || 0),\n      arrowConfig: {\n        arrowWidth: 24,\n        arrowBuffer: 10\n      },\n      returnBoundingBox: this.props.attachToAnchor,\n      buffer: this.props.buffer\n    }); // the popover's z-index must inherit from the button\n    // this keeps a button's popover under a flyout that would cover the button\n    // but a popover triggered inside a flyout will appear over that flyout\n\n    const {\n      zIndex: zIndexProp\n    } = this.props;\n    const zIndex = zIndexProp == null ? getElementZIndex(this.button, this.panel) + 2000 : zIndexProp;\n    const popoverStyles = { ...this.props.panelStyle,\n      top,\n      left: this.props.attachToAnchor && anchorBoundingBox ? anchorBoundingBox.left : left,\n      zIndex\n    };\n    const willRenderArrow = !this.props.attachToAnchor && this.props.hasArrow;\n    const arrowStyles = willRenderArrow ? arrow : undefined;\n    const arrowPosition = foundPosition;\n    this.setState({\n      popoverStyles,\n      arrowStyles,\n      arrowPosition,\n      openPosition: foundPosition\n    });\n  };\n  positionPopoverFixed = () => {\n    this.positionPopover(true);\n  };\n  positionPopoverFluid = () => {\n    this.positionPopover(false);\n  };\n  panelRef = node => {\n    this.panel = node;\n    this.props.panelRef && this.props.panelRef(node);\n\n    if (node == null) {\n      // panel has unmounted, restore the state defaults\n      this.setState({\n        popoverStyles: DEFAULT_POPOVER_STYLES,\n        arrowStyles: {},\n        arrowPosition: null,\n        openPosition: null,\n        isOpenStable: false\n      });\n      window.removeEventListener('resize', this.positionPopoverFluid);\n    } else {\n      // panel is coming into existence\n      this.positionPopoverFluid();\n      window.addEventListener('resize', this.positionPopoverFluid);\n    }\n  };\n  buttonRef = node => {\n    this.button = node;\n    this.props.buttonRef && this.props.buttonRef(node);\n  };\n\n  render() {\n    const {\n      anchorClassName,\n      anchorPosition,\n      button,\n      buttonRef,\n      insert,\n      isOpen,\n      ownFocus,\n      children,\n      className,\n      closePopover,\n      panelClassName,\n      panelPaddingSize,\n      panelProps,\n      panelRef,\n      panelStyle,\n      popoverRef,\n      hasArrow,\n      arrowChildren,\n      repositionOnScroll,\n      zIndex,\n      initialFocus,\n      attachToAnchor,\n      display,\n      onTrapDeactivation,\n      buffer,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      container,\n      focusTrapProps,\n      ...rest\n    } = this.props;\n    const descriptionId = generateId();\n    const classes = classNames('euiPopover', anchorPosition ? anchorPositionToClassNameMap[anchorPosition] : null, display ? displayToClassNameMap[display] : null, {\n      'euiPopover-isOpen': this.state.isOpening\n    }, className);\n    const anchorClasses = classNames('euiPopover__anchor', anchorClassName);\n    const panelClasses = classNames('euiPopover__panel', `euiPopover__panel--${this.state.arrowPosition}`, {\n      'euiPopover__panel-isOpen': this.state.isOpening\n    }, {\n      'euiPopover__panel-noArrow': !hasArrow || attachToAnchor\n    }, {\n      'euiPopover__panel-isAttached': attachToAnchor\n    }, panelClassName, panelProps?.className);\n    let panel;\n\n    if (!this.state.suppressingPopover && (isOpen || this.state.isClosing)) {\n      let tabIndex;\n      let initialFocus;\n      let ariaDescribedby;\n      let ariaLive;\n\n      if (ownFocus) {\n        tabIndex = 0;\n        ariaLive = 'off';\n\n        initialFocus = () => this.panel;\n      } else {\n        ariaLive = 'assertive';\n      }\n\n      let focusTrapScreenReaderText;\n\n      if (ownFocus) {\n        ariaDescribedby = descriptionId;\n        focusTrapScreenReaderText = <EuiScreenReaderOnly>\n            <p id={descriptionId}>\n              <EuiI18n token=\"euiPopover.screenReaderAnnouncement\" default=\"You are in a dialog. To close this dialog, hit escape.\" />\n            </p>\n          </EuiScreenReaderOnly>;\n      }\n\n      const arrowClassNames = classNames('euiPopover__panelArrow', `euiPopover__panelArrow--${this.state.arrowPosition}`);\n      const returnFocus = this.state.isOpenStable ? returnFocusConfig : false;\n      panel = <EuiPortal insert={insert}>\n          <EuiFocusTrap clickOutsideDisables={true} {...focusTrapProps} returnFocus={returnFocus} // Ignore temporary state of indecisive focus\n        initialFocus={initialFocus} onDeactivation={onTrapDeactivation} onClickOutside={this.onClickOutside} onEscapeKey={this.onEscapeKey} disabled={!ownFocus || !this.state.isOpenStable || this.state.isClosing}>\n            <EuiPanel {...panelProps} panelRef={this.panelRef} className={panelClasses} hasShadow={false} paddingSize={panelPaddingSize} tabIndex={tabIndex} aria-live={ariaLive} role=\"dialog\" aria-label={ariaLabel} aria-labelledby={ariaLabelledBy} aria-modal=\"true\" aria-describedby={ariaDescribedby} style={{ ...this.state.popoverStyles,\n            // Adding `will-change` to reduce risk of a blurry animation in Chrome 86+\n            willChange: !this.state.isOpenStable ? 'transform, opacity' : undefined\n          }}>\n              <div className={arrowClassNames} style={this.state.arrowStyles}>\n                {arrowChildren}\n              </div>\n              {focusTrapScreenReaderText}\n              <EuiMutationObserver observerOptions={{\n              attributes: true,\n              // element attribute changes\n              childList: true,\n              // added/removed elements\n              characterData: true,\n              // text changes\n              subtree: true // watch all child elements\n\n            }} onMutation={this.onMutation}>\n                {mutationRef => <div ref={mutationRef}>{children}</div>}\n              </EuiMutationObserver>\n            </EuiPanel>\n          </EuiFocusTrap>\n        </EuiPortal>;\n    } // react-focus-on and relataed do not register outside click detection\n    // when disabled, so we still need to conditionally check for that ourselves\n\n\n    if (ownFocus) {\n      return <div className={classes} ref={popoverRef} {...rest}>\n          <div className={anchorClasses} ref={this.buttonRef}>\n            {button instanceof HTMLElement ? null : button}\n          </div>\n          {panel}\n        </div>;\n    } else {\n      return <EuiOutsideClickDetector onOutsideClick={this.closePopover}>\n          <div className={classes} ref={popoverRef} onKeyDown={this.onKeyDown} {...rest}>\n            <div className={anchorClasses} ref={this.buttonRef}>\n              {button instanceof HTMLElement ? null : button}\n            </div>\n            {panel}\n          </div>\n        </EuiOutsideClickDetector>;\n    }\n  }\n\n}\nEuiPopover.propTypes = {\n  className: PropTypes.string,\n\n  /**\n     * Provide a name to the popover panel\n     */\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n\n  /**\n     * Class name passed to the direct parent of the button\n     */\n  anchorClassName: PropTypes.string,\n\n  /**\n     * Alignment of the popover and arrow relative to the button\n     */\n  anchorPosition: PropTypes.oneOf([\"upCenter\", \"upLeft\", \"upRight\", \"downCenter\", \"downLeft\", \"downRight\", \"leftCenter\", \"leftUp\", \"leftDown\", \"rightCenter\", \"rightUp\", \"rightDown\"]),\n\n  /**\n     * Style and position alteration for arrow-less, left-aligned\n     * attachment. Intended for use with inputs as anchors, e.g.\n     * EuiInputPopover\n     */\n  attachToAnchor: PropTypes.bool,\n\n  /**\n     * Triggering element for which to align the popover to\n     */\n  button: PropTypes.any.isRequired,\n  buttonRef: PropTypes.any,\n\n  /**\n     * Callback to handle hiding of the popover\n     */\n  closePopover: PropTypes.func.isRequired,\n\n  /**\n     * Restrict the popover's position within this element\n     */\n  container: PropTypes.any,\n\n  /**\n     * CSS display type for both the popover and anchor\n     */\n  display: PropTypes.oneOf([\"inlineBlock\", \"block\"]),\n\n  /**\n     * Object of props passed to EuiFocusTrap\n     */\n  focusTrapProps: PropTypes.any,\n\n  /**\n     * Show arrow indicating to originating button\n     */\n  hasArrow: PropTypes.bool,\n\n  /**\n     * Specifies what element should initially have focus; Can be a DOM\n     * node, or a selector string (which will be passed to\n     * document.querySelector() to find the DOM node), or a function that\n     * returns a DOM node\n     * Set to `false` to prevent initial auto-focus. Use only\n     * when your app handles setting initial focus state.\n     */\n  initialFocus: PropTypes.oneOfType([PropTypes.oneOfType([PropTypes.any.isRequired, PropTypes.string.isRequired, PropTypes.func.isRequired]).isRequired, PropTypes.oneOf([false])]),\n\n  /**\n     * Passed directly to EuiPortal for DOM positioning. Both properties are\n     * required if prop is specified\n     */\n  insert: PropTypes.shape({\n    sibling: PropTypes.any.isRequired,\n    position: PropTypes.oneOf([\"before\", \"after\"]).isRequired\n  }),\n\n  /**\n     * Visibility state of the popover\n     */\n  isOpen: PropTypes.bool,\n\n  /**\n     * Traps tab focus within the popover contents\n     */\n  ownFocus: PropTypes.bool,\n\n  /**\n     * Custom class added to the EuiPanel containing the popover contents\n     */\n  panelClassName: PropTypes.string,\n\n  /**\n     * EuiPanel padding on all sides\n     */\n  panelPaddingSize: PropTypes.any,\n\n  /**\n     * Standard DOM `style` attribute. Passed to the EuiPanel\n     */\n  panelStyle: PropTypes.any,\n\n  /**\n     * Object of props passed to EuiPanel\n     */\n  panelProps: PropTypes.any,\n  panelRef: PropTypes.any,\n  popoverRef: PropTypes.any,\n\n  /**\n     * When `true`, the popover's position is re-calculated when the user\n     * scrolls, this supports having fixed-position popover anchors\n     */\n  repositionOnScroll: PropTypes.bool,\n\n  /**\n     * By default, popover content inherits the z-index of the anchor\n     * component; pass `zIndex` to override\n     */\n  zIndex: PropTypes.number,\n\n  /**\n     * Function callback for when the focus trap is deactivated\n     */\n  onTrapDeactivation: PropTypes.any,\n\n  /**\n     * Distance away from the anchor that the popover will render\n     */\n  offset: PropTypes.number,\n\n  /**\n     * Minimum distance between the popover and the bounding container;\n     * Pass an array of 4 values to adjust each side differently: `[top, right, bottom, left]`\n     * Default is 16\n     */\n  buffer: PropTypes.oneOfType([PropTypes.number.isRequired, PropTypes.any.isRequired]),\n\n  /**\n     * Element to pass as the child element of the arrow;\n     * Use case is typically limited to an accompanying `EuiBeacon`\n     */\n  arrowChildren: PropTypes.node,\n\n  /**\n     * Alternative option to `aria-label` that takes an `id`.\n     * Usually takes the `id` of the popover title\n     */\n  \"aria-labelledby\": PropTypes.string\n};\n\ntry {\n  getPopoverPositionFromAnchorPosition.__docgenInfo = {\n    description: '',\n    displayName: 'getPopoverPositionFromAnchorPosition',\n    methods: [],\n    props: {},\n    extendedInterfaces: ['String', 'CommonProps', 'HTMLAttributes', 'AriaAttributes', 'DOMAttributes', 'EuiPopoverProps']\n  };\n} catch (e) {}\n\ntry {\n  getPopoverAlignFromAnchorPosition.__docgenInfo = {\n    description: '',\n    displayName: 'getPopoverAlignFromAnchorPosition',\n    methods: [],\n    props: {},\n    extendedInterfaces: ['String', 'CommonProps', 'HTMLAttributes', 'AriaAttributes', 'DOMAttributes', 'EuiPopoverProps']\n  };\n} catch (e) {}\n\ntry {\n  EuiPopover.__docgenInfo = {\n    description: '',\n    displayName: 'EuiPopover',\n    methods: [],\n    props: {\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: 'Defines a string value that labels the current element.\\n' + 'Provide a name to the popover panel\\n' + '@see aria-labelledby.',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'data-test-subj': {\n        defaultValue: null,\n        description: '',\n        name: 'data-test-subj',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      anchorClassName: {\n        defaultValue: null,\n        description: 'Class name passed to the direct parent of the button',\n        name: 'anchorClassName',\n        parent: {\n          fileName: 'eui/src/components/popover/popover.tsx',\n          name: 'EuiPopoverProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      anchorPosition: {\n        defaultValue: {\n          value: 'downCenter'\n        },\n        description: 'Alignment of the popover and arrow relative to the button',\n        name: 'anchorPosition',\n        parent: {\n          fileName: 'eui/src/components/popover/popover.tsx',\n          name: 'EuiPopoverProps'\n        },\n        required: false,\n        type: {\n          name: 'enum',\n          raw: 'PopoverAnchorPosition',\n          value: [{\n            value: '\"upCenter\"'\n          }, {\n            value: '\"upLeft\"'\n          }, {\n            value: '\"upRight\"'\n          }, {\n            value: '\"downCenter\"'\n          }, {\n            value: '\"downLeft\"'\n          }, {\n            value: '\"downRight\"'\n          }, {\n            value: '\"leftCenter\"'\n          }, {\n            value: '\"leftUp\"'\n          }, {\n            value: '\"leftDown\"'\n          }, {\n            value: '\"rightCenter\"'\n          }, {\n            value: '\"rightUp\"'\n          }, {\n            value: '\"rightDown\"'\n          }]\n        }\n      },\n      attachToAnchor: {\n        defaultValue: null,\n        description: 'Style and position alteration for arrow-less, left-aligned\\n' + 'attachment. Intended for use with inputs as anchors, e.g.\\n' + 'EuiInputPopover',\n        name: 'attachToAnchor',\n        parent: {\n          fileName: 'eui/src/components/popover/popover.tsx',\n          name: 'EuiPopoverProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      button: {\n        defaultValue: null,\n        description: 'Triggering element for which to align the popover to',\n        name: 'button',\n        parent: {\n          fileName: 'eui/src/components/popover/popover.tsx',\n          name: 'EuiPopoverProps'\n        },\n        required: true,\n        type: {\n          name: 'ReactNode'\n        }\n      },\n      buttonRef: {\n        defaultValue: null,\n        description: '',\n        name: 'buttonRef',\n        parent: {\n          fileName: 'eui/src/components/popover/popover.tsx',\n          name: 'EuiPopoverProps'\n        },\n        required: false,\n        type: {\n          name: '(instance: HTMLDivElement) => void'\n        }\n      },\n      closePopover: {\n        defaultValue: null,\n        description: 'Callback to handle hiding of the popover',\n        name: 'closePopover',\n        parent: {\n          fileName: 'eui/src/components/popover/popover.tsx',\n          name: 'EuiPopoverProps'\n        },\n        required: true,\n        type: {\n          name: 'NoArgCallback<void>'\n        }\n      },\n      container: {\n        defaultValue: null,\n        description: \"Restrict the popover's position within this element\",\n        name: 'container',\n        parent: {\n          fileName: 'eui/src/components/popover/popover.tsx',\n          name: 'EuiPopoverProps'\n        },\n        required: false,\n        type: {\n          name: 'HTMLElement'\n        }\n      },\n      display: {\n        defaultValue: {\n          value: 'inlineBlock'\n        },\n        description: 'CSS display type for both the popover and anchor',\n        name: 'display',\n        parent: {\n          fileName: 'eui/src/components/popover/popover.tsx',\n          name: 'EuiPopoverProps'\n        },\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"inlineBlock\" | \"block\"',\n          value: [{\n            value: '\"inlineBlock\"'\n          }, {\n            value: '\"block\"'\n          }]\n        }\n      },\n      focusTrapProps: {\n        defaultValue: null,\n        description: 'Object of props passed to EuiFocusTrap',\n        name: 'focusTrapProps',\n        parent: {\n          fileName: 'eui/src/components/popover/popover.tsx',\n          name: 'EuiPopoverProps'\n        },\n        required: false,\n        type: {\n          name: 'Pick<EuiFocusTrapProps, \"clickOutsideDisables\" | \"noIsolation\" | \"scrollLock\">'\n        }\n      },\n      hasArrow: {\n        defaultValue: {\n          value: 'true'\n        },\n        description: 'Show arrow indicating to originating button',\n        name: 'hasArrow',\n        parent: {\n          fileName: 'eui/src/components/popover/popover.tsx',\n          name: 'EuiPopoverProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      initialFocus: {\n        defaultValue: null,\n        description: 'Specifies what element should initially have focus; Can be a DOM\\n' + 'node, or a selector string (which will be passed to\\n' + 'document.querySelector() to find the DOM node), or a function that\\n' + 'returns a DOM node\\n' + 'Set to `false` to prevent initial auto-focus. Use only\\n' + 'when your app handles setting initial focus state.',\n        name: 'initialFocus',\n        parent: {\n          fileName: 'eui/src/components/popover/popover.tsx',\n          name: 'EuiPopoverProps'\n        },\n        required: false,\n        type: {\n          name: 'string | false | HTMLElement | (() => HTMLElement)'\n        }\n      },\n      insert: {\n        defaultValue: null,\n        description: 'Passed directly to EuiPortal for DOM positioning. Both properties are\\n' + 'required if prop is specified',\n        name: 'insert',\n        parent: {\n          fileName: 'eui/src/components/popover/popover.tsx',\n          name: 'EuiPopoverProps'\n        },\n        required: false,\n        type: {\n          name: '{ sibling: HTMLElement; position: \"before\" | \"after\"; }'\n        }\n      },\n      isOpen: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: 'Visibility state of the popover',\n        name: 'isOpen',\n        parent: {\n          fileName: 'eui/src/components/popover/popover.tsx',\n          name: 'EuiPopoverProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      ownFocus: {\n        defaultValue: {\n          value: 'true'\n        },\n        description: 'Traps tab focus within the popover contents',\n        name: 'ownFocus',\n        parent: {\n          fileName: 'eui/src/components/popover/popover.tsx',\n          name: 'EuiPopoverProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      panelClassName: {\n        defaultValue: null,\n        description: 'Custom class added to the EuiPanel containing the popover contents',\n        name: 'panelClassName',\n        parent: {\n          fileName: 'eui/src/components/popover/popover.tsx',\n          name: 'EuiPopoverProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      panelPaddingSize: {\n        defaultValue: {\n          value: 'm'\n        },\n        description: 'EuiPanel padding on all sides',\n        name: 'panelPaddingSize',\n        parent: {\n          fileName: 'eui/src/components/popover/popover.tsx',\n          name: 'EuiPopoverProps'\n        },\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"s\" | \"m\" | \"l\" | \"none\"',\n          value: [{\n            value: '\"s\"'\n          }, {\n            value: '\"m\"'\n          }, {\n            value: '\"l\"'\n          }, {\n            value: '\"none\"'\n          }]\n        }\n      },\n      panelStyle: {\n        defaultValue: null,\n        description: 'Standard DOM `style` attribute. Passed to the EuiPanel',\n        name: 'panelStyle',\n        parent: {\n          fileName: 'eui/src/components/popover/popover.tsx',\n          name: 'EuiPopoverProps'\n        },\n        required: false,\n        type: {\n          name: 'CSSProperties'\n        }\n      },\n      panelProps: {\n        defaultValue: null,\n        description: 'Object of props passed to EuiPanel',\n        name: 'panelProps',\n        parent: {\n          fileName: 'eui/src/components/popover/popover.tsx',\n          name: 'EuiPopoverProps'\n        },\n        required: false,\n        type: {\n          name: 'Pick<(DisambiguateSet<_EuiPanelButtonlike, _EuiPanelDivlike> & _EuiPanelDivlike) | (DisambiguateSet<_EuiPanelDivlike, _EuiPanelButtonlike> & _EuiPanelButtonlike), \"value\" | ... 270 more ... | \"element\">'\n        }\n      },\n      panelRef: {\n        defaultValue: null,\n        description: '',\n        name: 'panelRef',\n        parent: {\n          fileName: 'eui/src/components/popover/popover.tsx',\n          name: 'EuiPopoverProps'\n        },\n        required: false,\n        type: {\n          name: '(instance: HTMLElement) => void'\n        }\n      },\n      popoverRef: {\n        defaultValue: null,\n        description: '',\n        name: 'popoverRef',\n        parent: {\n          fileName: 'eui/src/components/popover/popover.tsx',\n          name: 'EuiPopoverProps'\n        },\n        required: false,\n        type: {\n          name: 'Ref<HTMLDivElement>'\n        }\n      },\n      repositionOnScroll: {\n        defaultValue: null,\n        description: \"When `true`, the popover's position is re-calculated when the user\\n\" + 'scrolls, this supports having fixed-position popover anchors',\n        name: 'repositionOnScroll',\n        parent: {\n          fileName: 'eui/src/components/popover/popover.tsx',\n          name: 'EuiPopoverProps'\n        },\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      zIndex: {\n        defaultValue: null,\n        description: 'By default, popover content inherits the z-index of the anchor\\n' + 'component; pass `zIndex` to override',\n        name: 'zIndex',\n        parent: {\n          fileName: 'eui/src/components/popover/popover.tsx',\n          name: 'EuiPopoverProps'\n        },\n        required: false,\n        type: {\n          name: 'number'\n        }\n      },\n      onTrapDeactivation: {\n        defaultValue: null,\n        description: 'Function callback for when the focus trap is deactivated',\n        name: 'onTrapDeactivation',\n        parent: {\n          fileName: 'eui/src/components/popover/popover.tsx',\n          name: 'EuiPopoverProps'\n        },\n        required: false,\n        type: {\n          name: '() => void'\n        }\n      },\n      offset: {\n        defaultValue: null,\n        description: 'Distance away from the anchor that the popover will render',\n        name: 'offset',\n        parent: {\n          fileName: 'eui/src/components/popover/popover.tsx',\n          name: 'EuiPopoverProps'\n        },\n        required: false,\n        type: {\n          name: 'number'\n        }\n      },\n      buffer: {\n        defaultValue: null,\n        description: 'Minimum distance between the popover and the bounding container;\\n' + 'Pass an array of 4 values to adjust each side differently: `[top, right, bottom, left]`\\n' + 'Default is 16',\n        name: 'buffer',\n        parent: {\n          fileName: 'eui/src/components/popover/popover.tsx',\n          name: 'EuiPopoverProps'\n        },\n        required: false,\n        type: {\n          name: 'number | [number, number, number, number]'\n        }\n      },\n      arrowChildren: {\n        defaultValue: null,\n        description: 'Element to pass as the child element of the arrow;\\n' + 'Use case is typically limited to an accompanying `EuiBeacon`',\n        name: 'arrowChildren',\n        parent: {\n          fileName: 'eui/src/components/popover/popover.tsx',\n          name: 'EuiPopoverProps'\n        },\n        required: false,\n        type: {\n          name: 'ReactNode'\n        }\n      }\n    },\n    extendedInterfaces: ['String', 'CommonProps', 'HTMLAttributes', 'AriaAttributes', 'DOMAttributes', 'EuiPopoverProps']\n  };\n} catch (e) {}"]}]}