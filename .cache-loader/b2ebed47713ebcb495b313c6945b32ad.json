{"remainingRequest":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!D:\\work\\eui\\src\\components\\button\\button_group\\button_group.tsx","dependencies":[{"path":"D:\\work\\eui\\src\\components\\button\\button_group\\button_group.tsx","mtime":1649070093308},{"path":"D:\\work\\eui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636976621750},{"path":"D:\\work\\eui\\node_modules\\babel-loader\\lib\\index.js","mtime":1649070120649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/work/eui/src/components/button/button_group/button_group.tsx"],"names":["classNames","React","EuiScreenReaderOnly","EuiButtonGroupButton","colorToClassNameMap","htmlIdGenerator","groupSizeToClassNameMap","s","m","compressed","EuiButtonGroup","className","buttonSize","color","idSelected","idToSelectedMap","isDisabled","isFullWidth","isIconOnly","legend","name","onChange","options","type","rest","badColorCombo","resolvedColor","console","warn","classes","typeIsSingle","nameIfSingle","map","option","index","id"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport classNames from 'classnames';\nimport PropTypes from \"prop-types\";\nimport React from 'react';\nimport { EuiScreenReaderOnly } from '../../accessibility';\nimport { EuiButtonGroupButton } from './button_group_button';\nimport { colorToClassNameMap } from '../button';\nimport { htmlIdGenerator } from '../../../services';\nvar groupSizeToClassNameMap = {\n  s: '--small',\n  m: '--medium',\n  compressed: '--compressed'\n};\nexport var EuiButtonGroup = ({\n  className,\n  buttonSize = 's',\n  color = 'text',\n  idSelected = '',\n  idToSelectedMap = {},\n  isDisabled = false,\n  isFullWidth = false,\n  isIconOnly = false,\n  legend,\n  name,\n  onChange,\n  options = [],\n  type = 'single',\n  ...rest\n}) => {\n  // Compressed style can't support `ghost` color because it's more like a form field than a button\n  const badColorCombo = buttonSize === 'compressed' && color === 'ghost';\n  const resolvedColor = badColorCombo ? 'text' : color;\n\n  if (badColorCombo) {\n    console.warn('EuiButtonGroup of compressed size does not support the ghost color. It will render as text instead.');\n  }\n\n  const classes = classNames('euiButtonGroup', `euiButtonGroup${groupSizeToClassNameMap[buttonSize]}`, `euiButtonGroup${colorToClassNameMap[resolvedColor]}`, {\n    'euiButtonGroup--fullWidth': isFullWidth,\n    'euiButtonGroup--isDisabled': isDisabled\n  }, className);\n  const typeIsSingle = type === 'single';\n  const nameIfSingle = name || htmlIdGenerator()();\n  return <fieldset className={classes} {...rest} disabled={isDisabled}>\n      <EuiScreenReaderOnly>\n        <legend>{legend}</legend>\n      </EuiScreenReaderOnly>\n\n      <div className=\"euiButtonGroup__buttons\">\n        {options.map((option, index) => {\n        return <EuiButtonGroupButton key={index} name={nameIfSingle} isDisabled={isDisabled} {...option} element={typeIsSingle ? 'label' : 'button'} isSelected={typeIsSingle ? option.id === idSelected : idToSelectedMap[option.id]} color={resolvedColor} size={buttonSize} isIconOnly={isIconOnly} onChange={onChange} />;\n      })}\n      </div>\n    </fieldset>;\n};\nEuiButtonGroup.propTypes = {\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string,\n\n  /**\n     * Typical sizing is `s`. Medium `m` size should be reserved for major features.\n     * `compressed` is meant to be used alongside and within compressed forms.\n     */\n  buttonSize: PropTypes.oneOf([\"s\", \"m\", \"compressed\"]),\n  isDisabled: PropTypes.bool,\n\n  /**\n     * Expands the whole group to the full width of the container.\n     * Each button gets equal widths no matter the content\n     */\n  isFullWidth: PropTypes.bool,\n\n  /**\n     * Hides the label to only show the `iconType` provided by the `option`\n     */\n  isIconOnly: PropTypes.bool,\n\n  /**\n     * A hidden group title (required for accessibility)\n     */\n  legend: PropTypes.string.isRequired,\n\n  /**\n     * Compressed styles don't support `ghost` color (Color will be changed to \"text\")\n     */\n  color: PropTypes.oneOf([\"primary\", \"accent\", \"secondary\", \"success\", \"warning\", \"danger\", \"ghost\", \"text\"]),\n\n  /**\n           * Default for `type` is single so it can also be excluded\n           */\n\n  /**\n     * Actual type is `'single' | 'multi'`.\n     * Determines how the selection of the group should be handled.\n     * With `'single'` only one option can be selected at a time (similar to radio group).\n     * With `'multi'` multiple options selected (similar to checkbox group).\n     */\n  type: PropTypes.oneOfType([PropTypes.oneOfType([PropTypes.oneOf([\"single\", \"multi\"]), PropTypes.oneOf([\"single\"])]), PropTypes.oneOf([\"multi\"])]),\n\n  /**\n     * An array of #EuiButtonGroupOptionProps\n     */\n  options: PropTypes.arrayOf(PropTypes.shape({\n    /**\n       * Each option must have a unique `id` for maintaining selection\n       */\n    id: PropTypes.string.isRequired,\n\n    /**\n       * Each option must have a `label` even for icons which will be applied as the `aria-label`\n       */\n    label: PropTypes.node.isRequired,\n    isDisabled: PropTypes.bool,\n\n    /**\n       * The value of the radio input.\n       */\n    value: PropTypes.any,\n\n    /**\n       * The type of the underlying HTML button\n       */\n    type: PropTypes.oneOf([\"button\", \"submit\", \"reset\"]),\n\n    /**\n       * Any `type` accepted by EuiIcon\n       */\n    iconType: PropTypes.oneOfType([PropTypes.oneOf([\"accessibility\", \"addDataApp\", \"advancedSettingsApp\", \"aggregate\", \"alert\", \"analyzeEvent\", \"annotation\", \"apmApp\", \"apmTrace\", \"apps\", \"appSearchApp\", \"arrowDown\", \"arrowLeft\", \"arrowRight\", \"arrowUp\", \"asterisk\", \"auditbeatApp\", \"beaker\", \"bell\", \"bellSlash\", \"bolt\", \"boxesHorizontal\", \"boxesVertical\", \"branch\", \"broom\", \"brush\", \"bug\", \"bullseye\", \"calendar\", \"canvasApp\", \"codeApp\", \"check\", \"checkInCircleFilled\", \"cheer\", \"classificationJob\", \"clock\", \"cloudDrizzle\", \"cloudStormy\", \"cloudSunny\", \"color\", \"compute\", \"console\", \"consoleApp\", \"continuityAbove\", \"continuityAboveBelow\", \"continuityBelow\", \"continuityWithin\", \"controlsHorizontal\", \"controlsVertical\", \"copy\", \"copyClipboard\", \"createAdvancedJob\", \"createMultiMetricJob\", \"createPopulationJob\", \"createSingleMetricJob\", \"cross\", \"crossClusterReplicationApp\", \"crosshairs\", \"crossInACircleFilled\", \"currency\", \"cut\", \"dashboardApp\", \"database\", \"dataVisualizer\", \"devToolsApp\", \"discoverApp\", \"document\", \"documentation\", \"documentEdit\", \"documents\", \"dot\", \"download\", \"editorAlignCenter\", \"editorAlignLeft\", \"editorAlignRight\", \"editorBold\", \"editorCodeBlock\", \"editorComment\", \"editorDistributeHorizontal\", \"editorDistributeVertical\", \"editorHeading\", \"editorItalic\", \"editorItemAlignLeft\", \"editorItemAlignBottom\", \"editorItemAlignCenter\", \"editorItemAlignMiddle\", \"editorItemAlignRight\", \"editorItemAlignTop\", \"editorLink\", \"editorOrderedList\", \"editorPositionBottomLeft\", \"editorPositionBottomRight\", \"editorPositionTopLeft\", \"editorPositionTopRight\", \"editorRedo\", \"editorStrike\", \"editorTable\", \"editorUnderline\", \"editorUndo\", \"editorUnorderedList\", \"email\", \"empty\", \"emsApp\", \"eql\", \"eraser\", \"exit\", \"expand\", \"expandMini\", \"exportAction\", \"eye\", \"eyeClosed\", \"faceHappy\", \"faceNeutral\", \"faceSad\", \"filebeatApp\", \"filter\", \"flag\", \"fold\", \"folderCheck\", \"folderClosed\", \"folderExclamation\", \"folderOpen\", \"frameNext\", \"framePrevious\", \"fullScreen\", \"fullScreenExit\", \"function\", \"gear\", \"gisApp\", \"glasses\", \"globe\", \"grab\", \"grabHorizontal\", \"graphApp\", \"grid\", \"grokApp\", \"heart\", \"heartbeatApp\", \"heatmap\", \"help\", \"home\", \"iInCircle\", \"image\", \"importAction\", \"indexClose\", \"indexEdit\", \"indexFlush\", \"indexManagementApp\", \"indexMapping\", \"indexOpen\", \"indexPatternApp\", \"indexRollupApp\", \"indexRuntime\", \"indexSettings\", \"inputOutput\", \"inspect\", \"invert\", \"ip\", \"keyboardShortcut\", \"kqlField\", \"kqlFunction\", \"kqlOperand\", \"kqlSelector\", \"kqlValue\", \"layers\", \"lensApp\", \"link\", \"list\", \"listAdd\", \"lock\", \"lockOpen\", \"logsApp\", \"logoAerospike\", \"logoApache\", \"logoAppSearch\", \"logoAWS\", \"logoAWSMono\", \"logoAzure\", \"logoAzureMono\", \"logoBeats\", \"logoBusinessAnalytics\", \"logoCeph\", \"logoCloud\", \"logoCloudEnterprise\", \"logoCode\", \"logoCodesandbox\", \"logoCouchbase\", \"logoDocker\", \"logoDropwizard\", \"logoElastic\", \"logoElasticsearch\", \"logoElasticStack\", \"logoEnterpriseSearch\", \"logoEtcd\", \"logoGCP\", \"logoGCPMono\", \"logoGithub\", \"logoGmail\", \"logoGolang\", \"logoGoogleG\", \"logoHAproxy\", \"logoIBM\", \"logoIBMMono\", \"logoKafka\", \"logoKibana\", \"logoKubernetes\", \"logoLogging\", \"logoLogstash\", \"logoMaps\", \"logoMemcached\", \"logoMetrics\", \"logoMongodb\", \"logoMySQL\", \"logoNginx\", \"logoObservability\", \"logoOsquery\", \"logoPhp\", \"logoPostgres\", \"logoPrometheus\", \"logoRabbitmq\", \"logoRedis\", \"logoSecurity\", \"logoSiteSearch\", \"logoSketch\", \"logoSlack\", \"logoUptime\", \"logoWebhook\", \"logoWindows\", \"logoWorkplaceSearch\", \"logstashFilter\", \"logstashIf\", \"logstashInput\", \"logstashOutput\", \"logstashQueue\", \"machineLearningApp\", \"magnet\", \"magnifyWithMinus\", \"magnifyWithPlus\", \"managementApp\", \"mapMarker\", \"memory\", \"menu\", \"menuDown\", \"menuLeft\", \"menuRight\", \"menuUp\", \"merge\", \"metricbeatApp\", \"metricsApp\", \"minimize\", \"minus\", \"minusInCircle\", \"minusInCircleFilled\", \"mobile\", \"monitoringApp\", \"moon\", \"nested\", \"node\", \"notebookApp\", \"number\", \"offline\", \"online\", \"outlierDetectionJob\", \"package\", \"packetbeatApp\", \"pageSelect\", \"pagesSelect\", \"partial\", \"paperClip\", \"pause\", \"pencil\", \"percent\", \"pin\", \"pinFilled\", \"pipelineApp\", \"play\", \"playFilled\", \"plus\", \"plusInCircle\", \"plusInCircleFilled\", \"popout\", \"push\", \"questionInCircle\", \"quote\", \"recentlyViewedApp\", \"refresh\", \"regressionJob\", \"reporter\", \"reportingApp\", \"returnKey\", \"save\", \"savedObjectsApp\", \"scale\", \"search\", \"searchProfilerApp\", \"securityAnalyticsApp\", \"securityApp\", \"securitySignal\", \"securitySignalDetected\", \"securitySignalResolved\", \"shard\", \"share\", \"snowflake\", \"sortable\", \"sortDown\", \"sortLeft\", \"sortRight\", \"sortUp\", \"spacesApp\", \"sqlApp\", \"starEmpty\", \"starEmptySpace\", \"starFilled\", \"starFilledSpace\", \"starMinusEmpty\", \"starMinusFilled\", \"starPlusEmpty\", \"starPlusFilled\", \"stats\", \"stop\", \"stopFilled\", \"stopSlash\", \"storage\", \"string\", \"submodule\", \"swatchInput\", \"symlink\", \"tableOfContents\", \"tableDensityExpanded\", \"tableDensityCompact\", \"tableDensityNormal\", \"tag\", \"tear\", \"temperature\", \"timeline\", \"timelionApp\", \"timeslider\", \"training\", \"trash\", \"upgradeAssistantApp\", \"uptimeApp\", \"unfold\", \"unlink\", \"user\", \"users\", \"usersRolesApp\", \"vector\", \"videoPlayer\", \"visArea\", \"visAreaStacked\", \"visBarHorizontal\", \"visBarHorizontalStacked\", \"visBarVertical\", \"visBarVerticalStacked\", \"visGauge\", \"visGoal\", \"visLine\", \"visMapCoordinate\", \"visMapRegion\", \"visMetric\", \"visPie\", \"visTable\", \"visTagCloud\", \"visText\", \"visTimelion\", \"visualizeApp\", \"visVega\", \"visVisualBuilder\", \"watchesApp\", \"wordWrap\", \"wordWrapDisabled\", \"workplaceSearchApp\", \"wrench\", \"tokenClass\", \"tokenProperty\", \"tokenEnum\", \"tokenVariable\", \"tokenMethod\", \"tokenAnnotation\", \"tokenException\", \"tokenInterface\", \"tokenParameter\", \"tokenField\", \"tokenElement\", \"tokenFunction\", \"tokenBoolean\", \"tokenString\", \"tokenArray\", \"tokenNumber\", \"tokenConstant\", \"tokenObject\", \"tokenEvent\", \"tokenKey\", \"tokenNull\", \"tokenStruct\", \"tokenPackage\", \"tokenOperator\", \"tokenEnumMember\", \"tokenRepo\", \"tokenSymbol\", \"tokenFile\", \"tokenModule\", \"tokenNamespace\", \"tokenDate\", \"tokenIP\", \"tokenNested\", \"tokenAlias\", \"tokenShape\", \"tokenGeo\", \"tokenRange\", \"tokenBinary\", \"tokenJoin\", \"tokenPercolator\", \"tokenFlattened\", \"tokenRankFeature\", \"tokenRankFeatures\", \"tokenKeyword\", \"tokenCompletionSuggester\", \"tokenDenseVector\", \"tokenText\", \"tokenTokenCount\", \"tokenSearchType\", \"tokenHistogram\"]).isRequired, PropTypes.string.isRequired, PropTypes.elementType.isRequired]),\n\n    /**\n       * Can only be one side `left` or `right`\n       */\n    iconSide: PropTypes.oneOf([\"left\", \"right\"]),\n    isLoading: PropTypes.bool,\n\n    /**\n       * Object of props passed to the <span/> wrapping the content's text/children only (not icon)\n       */\n    textProps: PropTypes.shape({\n      className: PropTypes.string,\n      \"aria-label\": PropTypes.string,\n      \"data-test-subj\": PropTypes.string,\n      ref: PropTypes.any,\n      \"data-text\": PropTypes.string\n    }),\n    iconSize: PropTypes.oneOf([\"s\", \"m\"]),\n    className: PropTypes.string,\n    \"aria-label\": PropTypes.string,\n    \"data-test-subj\": PropTypes.string\n  }).isRequired).isRequired,\n\n  /**\n           * The `name` attribute for radio inputs;\n           * Defaults to a random string\n           */\n  name: PropTypes.string,\n\n  /**\n           * Styles the selected option to look selected (usually with `fill`)\n           * Required by and only used in `type='single'`.\n           */\n  idSelected: PropTypes.string,\n\n  /**\n           * Multi: Returns the `id` of the clicked option\n           */\n\n  /**\n           * Single: Returns the `id` of the clicked option and the `value`\n           */\n  onChange: PropTypes.func,\n\n  /**\n           * A map of `id`s as keys with the selected boolean values.\n           * Required by and only used in `type='multi'`.\n           */\n  idToSelectedMap: PropTypes.shape({})\n};\n\ntry {\n  EuiButtonGroup.__docgenInfo = {\n    description: '',\n    displayName: 'EuiButtonGroup',\n    methods: [],\n    props: {\n      className: {\n        defaultValue: null,\n        description: '',\n        name: 'className',\n        parent: {\n          fileName: 'eui/node_modules/@types/react/index.d.ts',\n          name: 'HTMLAttributes'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'aria-label': {\n        defaultValue: null,\n        description: 'Defines a string value that labels the current element.\\n' + '@see aria-labelledby.',\n        name: 'aria-label',\n        parent: {\n          fileName: 'eui/node_modules/@types/react/index.d.ts',\n          name: 'AriaAttributes'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      'data-test-subj': {\n        defaultValue: null,\n        description: '',\n        name: 'data-test-subj',\n        parent: {\n          fileName: 'eui/src/components/common.ts',\n          name: 'CommonProps'\n        },\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      buttonSize: {\n        defaultValue: {\n          value: 's'\n        },\n        description: 'Typical sizing is `s`. Medium `m` size should be reserved for major features.\\n' + '`compressed` is meant to be used alongside and within compressed forms.',\n        name: 'buttonSize',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"s\" | \"m\" | \"compressed\"',\n          value: [{\n            value: '\"s\"'\n          }, {\n            value: '\"m\"'\n          }, {\n            value: '\"compressed\"'\n          }]\n        }\n      },\n      isDisabled: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: '',\n        name: 'isDisabled',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      isFullWidth: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: 'Expands the whole group to the full width of the container.\\n' + 'Each button gets equal widths no matter the content',\n        name: 'isFullWidth',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      isIconOnly: {\n        defaultValue: {\n          value: 'false'\n        },\n        description: 'Hides the label to only show the `iconType` provided by the `option`',\n        name: 'isIconOnly',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'boolean'\n        }\n      },\n      legend: {\n        defaultValue: null,\n        description: 'A hidden group title (required for accessibility)',\n        name: 'legend',\n        parent: undefined,\n        required: true,\n        type: {\n          name: 'string'\n        }\n      },\n      color: {\n        defaultValue: {\n          value: 'text'\n        },\n        description: 'Compressed styles don\\'t support `ghost` color (Color will be changed to \"text\")',\n        name: 'color',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'enum',\n          raw: 'ButtonColor',\n          value: [{\n            value: '\"text\"'\n          }, {\n            value: '\"accent\"'\n          }, {\n            value: '\"primary\"'\n          }, {\n            value: '\"success\"'\n          }, {\n            value: '\"warning\"'\n          }, {\n            value: '\"danger\"'\n          }, {\n            value: '\"secondary\"'\n          }, {\n            value: '\"ghost\"'\n          }]\n        }\n      },\n      type: {\n        defaultValue: {\n          value: 'single'\n        },\n        description: \"Actual type is `'single' | 'multi'`.\\n\" + 'Determines how the selection of the group should be handled.\\n' + \"With `'single'` only one option can be selected at a time (similar to radio group).\\n\" + \"With `'multi'` multiple options selected (similar to checkbox group).\\n\" + 'Default for `type` is single so it can also be excluded',\n        name: 'type',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'enum',\n          raw: '\"single\" | \"multi\"',\n          value: [{\n            value: '\"single\"'\n          }, {\n            value: '\"multi\"'\n          }]\n        }\n      },\n      options: {\n        defaultValue: {\n          value: '[]'\n        },\n        description: 'An array of #EuiButtonGroupOptionProps',\n        name: 'options',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'EuiButtonGroupOptionProps[]'\n        }\n      },\n      name: {\n        defaultValue: null,\n        description: 'The `name` attribute for radio inputs;\\nDefaults to a random string',\n        name: 'name',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      idSelected: {\n        defaultValue: {\n          value: ''\n        },\n        description: 'Styles the selected option to look selected (usually with `fill`)\\n' + \"Required by and only used in `type='single'`.\",\n        name: 'idSelected',\n        parent: undefined,\n        required: false,\n        type: {\n          name: 'string'\n        }\n      },\n      onChange: {\n        defaultValue: null,\n        description: 'Single: Returns the `id` of the clicked option and the `value`\\n' + 'Multi: Returns the `id` of the clicked option',\n        name: 'onChange',\n        parent: undefined,\n        required: true,\n        type: {\n          name: '((id: string, value?: any) => void) | ((id: string) => void)'\n        }\n      },\n      idToSelectedMap: {\n        defaultValue: {\n          value: '{}'\n        },\n        description: 'A map of `id`s as keys with the selected boolean values.\\n' + \"Required by and only used in `type='multi'`.\",\n        name: 'idToSelectedMap',\n        parent: undefined,\n        required: false,\n        type: {\n          name: '{ [id: string]: boolean; }'\n        }\n      }\n    },\n    extendedInterfaces: ['HTMLAttributes', 'AriaAttributes', 'DOMAttributes', 'CommonProps']\n  };\n} catch (e) {}"]}]}